Index: app/src/main/java/com/nas/alreem/activity/canteen/PreOrderActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.nas.alreem.activity.canteen\n\nimport android.app.Dialog\nimport android.content.Context\nimport android.content.Intent\nimport android.graphics.Color\nimport android.graphics.drawable.ColorDrawable\nimport android.os.Build\nimport android.os.Bundle\nimport android.util.Log\nimport android.view.View\nimport android.view.Window\nimport android.view.animation.Animation\nimport android.widget.*\nimport androidx.annotation.RequiresApi\nimport androidx.appcompat.app.AppCompatActivity\nimport androidx.recyclerview.widget.LinearLayoutManager\nimport androidx.recyclerview.widget.RecyclerView\nimport com.bumptech.glide.Glide\nimport com.bumptech.glide.load.engine.DiskCacheStrategy\nimport com.bumptech.glide.load.resource.bitmap.CircleCrop\nimport com.nas.alreem.R\nimport com.nas.alreem.activity.canteen.model.DateModel\nimport com.nas.alreem.activity.home.HomeActivity\nimport com.nas.alreem.activity.payments.adapter.StudentListAdapter\nimport com.nas.alreem.activity.payments.model.StudentList\nimport com.nas.alreem.activity.payments.model.StudentListModel\nimport com.nas.alreem.rest.ApiClient\nimport retrofit2.Call\nimport retrofit2.Callback\nimport retrofit2.Response\nimport com.applandeo.materialcalendarview.CalendarView\nimport com.nas.alreem.activity.canteen.model.TimeExceedModel\nimport com.nas.alreem.constants.*\nimport java.text.ParseException\nimport java.text.SimpleDateFormat\nimport java.util.*\nimport kotlin.collections.ArrayList\n\n\nclass PreOrderActivity : AppCompatActivity(){\n    lateinit var nContext: Context\n    private lateinit var logoClickImg: ImageView\n    lateinit var recyclerview: RecyclerView\n    lateinit var back: ImageView\n    lateinit var studImg: ImageView\n    lateinit var studentNameTxt: TextView\n    lateinit var studentSpinner: LinearLayout\n    lateinit var buttonLinear: LinearLayout\n    lateinit var studentName: String\n    lateinit var studentId: String\n    lateinit var studentImg: String\n    lateinit var studentClass: String\n    var studentListArrayList = ArrayList<StudentList>()\n    lateinit var studentlist: ArrayList<String>\n    lateinit var studentname: TextView\n    lateinit var dropdown: LinearLayout\n    lateinit var title: TextView\n    lateinit var add_order: RelativeLayout\n    lateinit var my_orders: RelativeLayout\n    lateinit var order_history: RelativeLayout\n    lateinit var progressDialog: ProgressBar\n    lateinit var progressDialogAdd: ProgressBar\n    var time_exeed: String = \"\"\n    var datetime: String = \"\"\n    var apiCall:Int=0\n    var mDateArrayList = ArrayList<DateModel>()\n    @RequiresApi(Build.VERSION_CODES.N)\n    override fun onCreate(savedInstanceState: Bundle?) {\n        super.onCreate(savedInstanceState)\n        setContentView(R.layout.canteen_preorder)\n        initfn()\n        callStudentListApi()\n\n        onclick()\n    }\n    private fun initfn() {\n        nContext = this\n        logoClickImg=findViewById(R.id.logoclick)\n        back = findViewById(R.id.back)\n        studImg = findViewById<ImageView>(R.id.imagicon)\n        studentNameTxt = findViewById<TextView>(R.id.studentName)\n        studentSpinner = findViewById<LinearLayout>(R.id.studentSpinner)\n        studentlist = ArrayList()\n        dropdown = findViewById(R.id.studentSpinner)\n        progressDialog = findViewById(R.id.progressDialog)\n        progressDialogAdd = findViewById(R.id.progressDialogAdd)\n        add_order = findViewById(R.id.addOrderRelative)\n        my_orders = findViewById(R.id.myOrderRelative)\n        order_history = findViewById(R.id.orderHistoryRelative)\n        buttonLinear = findViewById(R.id.buttonLinear)\n        title = findViewById(R.id.textViewtitle)\n        title.text = \"Pre-Order\"\n        back.setOnClickListener {\n            finish()\n        }\n        logoClickImg.setOnClickListener {\n            val intent = Intent(nContext, HomeActivity::class.java)\n            intent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP)\n            startActivity(intent)\n        }\n//        val aniRotate: Animation =\n//            AnimationUtils.loadAnimation(nContext, R.anim.linear_interpolator)\n//        progressDialog.startAnimation(aniRotate)\n        studentSpinner.setOnClickListener(object : View.OnClickListener {\n            override fun onClick(v: View?) {\n\n                showStudentList(nContext,studentListArrayList)\n\n            }\n        })\n\n    }\n    private fun onclick() {\n        add_order.setOnClickListener {\n            progressDialogAdd.visibility=View.VISIBLE\n            time_exeed()\n\n        }\n        my_orders.setOnClickListener {\n            val intent = Intent(nContext, MyorderActivity::class.java)\n            intent.putExtra(\"StudentId\",studentId)\n            nContext.startActivity(intent)\n        }\n        order_history.setOnClickListener {\n            val intent = Intent(nContext, OrderhistoryActivity::class.java)\n            intent.putExtra(\"StudentId\",studentId)\n            nContext.startActivity(intent)\n        }\n    }\n    fun showStudentList(context: Context ,mStudentList : ArrayList<StudentList>)\n    {\n        val dialog = Dialog(context)\n        dialog.requestWindowFeature(Window.FEATURE_NO_TITLE)\n        dialog.window!!.setBackgroundDrawable(ColorDrawable(Color.TRANSPARENT))\n        dialog.setCancelable(false)\n        dialog.setContentView(R.layout.dialogue_student_list)\n        var iconImageView = dialog.findViewById(R.id.iconImageView) as ImageView\n        var btn_dismiss = dialog.findViewById(R.id.btn_dismiss) as Button\n        var studentListRecycler = dialog.findViewById(R.id.studentListRecycler) as RecyclerView\n        iconImageView.setImageResource(R.drawable.boy)\n        //if(mSocialMediaArray.get())\n        val sdk = Build.VERSION.SDK_INT\n        if (sdk < Build.VERSION_CODES.JELLY_BEAN) {\n            btn_dismiss.setBackgroundDrawable(\n                nContext.resources.getDrawable(R.drawable.button_new)\n            )\n        } else {\n            btn_dismiss.background = nContext.resources.getDrawable(R.drawable.button_new)\n        }\n\n        studentListRecycler.setHasFixedSize(true)\n        val llm = LinearLayoutManager(nContext)\n        llm.orientation = LinearLayoutManager.VERTICAL\n        studentListRecycler.layoutManager = llm\n        if(mStudentList.size>0)\n        {\n            val studentAdapter = StudentListAdapter(nContext,mStudentList)\n            studentListRecycler.adapter = studentAdapter\n        }\n\n        btn_dismiss.setOnClickListener()\n        {\n            dialog.dismiss()\n        }\n        studentListRecycler.addOnItemClickListener(object: OnItemClickListener {\n            override fun onItemClicked(position: Int, view: View) {\n                // Your logic\n                progressDialog.visibility=View.VISIBLE\n\n\n                studentName=studentListArrayList.get(position).name\n                studentImg=studentListArrayList.get(position).photo\n                studentId=studentListArrayList.get(position).id\n                studentClass=studentListArrayList.get(position).section\n                PreferenceManager.setStudentID(nContext,studentId)\n                PreferenceManager.setStudentName(nContext,studentName)\n                PreferenceManager.setStudentPhoto(nContext,studentImg)\n                PreferenceManager.setStudentClass(nContext,studentClass)\n                studentNameTxt.text=studentName\n                //studentInfoArrayList.clear()\n                if(!studentImg.equals(\"\"))\n                {\n                    Glide.with(nContext) //1\n                        .load(studentImg)\n                        .placeholder(R.drawable.student)\n                        .error(R.drawable.student)\n                        .skipMemoryCache(true) //2\n                        .diskCacheStrategy(DiskCacheStrategy.NONE) //3\n                        .transform(CircleCrop()) //4\n                        .into(studImg)\n                }\n                else\n                {\n                    studImg.setImageResource(R.drawable.student)\n                }\n                add_order.visibility=View.VISIBLE\n                buttonLinear.visibility=View.VISIBLE\n                progressDialog.visibility = View.VISIBLE\n\n                //  Toast.makeText(activity, mStudentList.get(position).name, Toast.LENGTH_SHORT).show()\n                dialog.dismiss()\n            }\n        })\n        dialog.show()\n    }\n    fun callStudentListApi()\n    {\n        progressDialog.visibility = View.VISIBLE\n        val token = PreferenceManager.getaccesstoken(nContext)\n        val call: Call<StudentListModel> = ApiClient.getClient.studentList(\"Bearer \"+token)\n        call.enqueue(object : Callback<StudentListModel> {\n            override fun onFailure(call: Call<StudentListModel>, t: Throwable) {\n                Log.e(\"Error\", t.localizedMessage)\n                progressDialog.visibility = View.GONE\n            }\n            override fun onResponse(call: Call<StudentListModel>, response: Response<StudentListModel>) {\n                progressDialog.visibility = View.GONE\n                //val arraySize :Int = response.body()!!.responseArray.studentList.size\n                if (response.body()!!.status==100)\n                {\n                    studentListArrayList.addAll(response.body()!!.responseArray.studentList)\n                    if (PreferenceManager.getStudentID(nContext).equals(\"\"))\n                    {\n                        studentName=studentListArrayList.get(0).name\n                        studentImg=studentListArrayList.get(0).photo\n                        studentId=studentListArrayList.get(0).id\n                        studentClass=studentListArrayList.get(0).section\n                        PreferenceManager.setStudentID(nContext,studentId)\n                        PreferenceManager.setStudentName(nContext,studentName)\n                        PreferenceManager.setStudentPhoto(nContext,studentImg)\n                        PreferenceManager.setStudentClass(nContext,studentClass)\n                        studentNameTxt.text=studentName\n                        if(!studentImg.equals(\"\"))\n                        {\n                            Glide.with(nContext) //1\n                                .load(studentImg)\n                                .placeholder(R.drawable.student)\n                                .error(R.drawable.student)\n                                .skipMemoryCache(true) //2\n                                .diskCacheStrategy(DiskCacheStrategy.NONE) //3\n                                .transform(CircleCrop()) //4\n                                .into(studImg)\n                        }\n                        else{\n                            studImg.setImageResource(R.drawable.student)\n                        }\n\n                    }\n                    else{\n                        studentName= PreferenceManager.getStudentName(nContext)!!\n                        studentImg= PreferenceManager.getStudentPhoto(nContext)!!\n                        studentId= PreferenceManager.getStudentID(nContext)!!\n                        studentClass= PreferenceManager.getStudentClass(nContext)!!\n                        studentNameTxt.text=studentName\n                        if(!studentImg.equals(\"\"))\n                        {\n                            Glide.with(nContext) //1\n                                .load(studentImg)\n                                .placeholder(R.drawable.student)\n                                .error(R.drawable.student)\n                                .skipMemoryCache(true) //2\n                                .diskCacheStrategy(DiskCacheStrategy.NONE) //3\n                                .transform(CircleCrop()) //4\n                                .into(studImg)\n                        }\n                        else{\n                            studImg.setImageResource(R.drawable.student)\n                        }\n                    }\n                    add_order.visibility=View.VISIBLE\n                    buttonLinear.visibility=View.VISIBLE\n//                    var internetCheck = InternetCheckClass.isInternetAvailable(nContext)\n//                    if (internetCheck)\n//                    {\n//                        //callStudentLeaveInfo()\n//                    }\n//                    else{\n//                        InternetCheckClass.showSuccessInternetAlert(com.mobatia.bisad.fragment.home.mContext)\n//                    }\n\n                    //callStudentInfoApi()\n                }\n\n\n            }\n\n        })\n    }\n    private fun calendarpopup() {\n        mDateArrayList= ArrayList()\n        val dialog = Dialog(nContext)\n        dialog.requestWindowFeature(Window.FEATURE_NO_TITLE)\n        dialog.window!!.setBackgroundDrawable(ColorDrawable(Color.TRANSPARENT))\n        dialog.setCancelable(false)\n        dialog.setContentView(R.layout.calendar_canteen_popup)\n        var close_img = dialog.findViewById(R.id.imgClose) as? ImageView\n        var dummyClose = dialog.findViewById(R.id.dummyClose) as? ImageView\n        var btn_submit = dialog.findViewById(R.id.GetDate) as Button\n        val calendarView = dialog.findViewById<CalendarView>(R.id.MCalendar)\n        close_img!!.setOnClickListener {\n            dialog.dismiss()\n        }\n        dummyClose!!.setOnClickListener()\n        {\n            dialog.dismiss()\n        }\n        if (time_exeed.equals(\"1\")) {\n            val c = Calendar.getInstance()\n            calendarView.setMinimumDate(c)\n        } else {\n            val c = Calendar.getInstance()\n            c.add(Calendar.DATE, -1)\n            calendarView.setMinimumDate(c)\n        }\n        calendarView.setPreviousButtonImage(\n            nContext.resources.getDrawable(R.drawable.arrow_list_back)\n        )\n        calendarView.setForwardButtonImage(\n            nContext.resources.getDrawable(R.drawable.arrow_list)\n        )\n\n\n\n        btn_submit.setOnClickListener()\n        {\n            for (calendar in calendarView.selectedDates) {\n                /* println(\"GetDate: \" + calendar.time.toString())\n                 println(\"GetDate: \" + calendar.timeInMillis)*/\n                val DateF: String = calendar.get(Calendar.DATE).toString()\n                val Day: String = calendar.time.toString()\n                var strCurrentDate = \"\"\n                var format = SimpleDateFormat(\"EEE MMM dd HH:mm:ss zzzz yyyy\", Locale.ENGLISH)\n                var newDate: Date? = null\n                try {\n                    newDate = format.parse(calendar.time.toString())\n                } catch (e: ParseException) {\n                    e.printStackTrace()\n                }\n                format = SimpleDateFormat(\"EEE\", Locale.ENGLISH)\n                strCurrentDate = format.format(newDate)\n                val DayF:String=strCurrentDate\n                //val DayF: String = CommonMethods.dateParsingToEEE(calendar.time.toString()).toString()\n\n                var strCurrentMonth = \"\"\n                var format2 = SimpleDateFormat(\"EEE MMM dd HH:mm:ss zzzz yyyy\", Locale.ENGLISH)\n                var newDate2: Date? = null\n                try {\n                    newDate2 = format2.parse(calendar.time.toString())\n                } catch (e: ParseException) {\n                    e.printStackTrace()\n                }\n                format2 = SimpleDateFormat(\"MMM\", Locale.ENGLISH)\n                strCurrentMonth = format2.format(newDate2)\n\n                val MonthF:String=strCurrentMonth\n               // val MonthF: String = CommonMethods.dateParsingTomm(calendar.time.toString()).toString()\n\n                val Year: String = calendar.time.toString()\n                var strCurrentYear = \"\"\n                var format3 = SimpleDateFormat(\"EEE MMM dd HH:mm:ss zzzz yyyy\", Locale.ENGLISH)\n                var newDate3: Date? = null\n                try {\n                    newDate3 = format3.parse(calendar.time.toString())\n                } catch (e: ParseException) {\n                    e.printStackTrace()\n                }\n                format3 = SimpleDateFormat(\"yyyy\", Locale.ENGLISH)\n                strCurrentYear = format3.format(newDate)\n                val YearF:String=strCurrentYear\n                //val YearF: String = CommonMethods.dateParsingToyyy(calendar.time.toString()).toString()\n\n                var strCurrentMmyear = \"\"\n                var format4 = SimpleDateFormat(\"EEE MMM dd HH:mm:ss zzzz yyyy\", Locale.ENGLISH)\n                var newDate4: Date? = null\n                try {\n                    newDate4 = format4.parse(calendar.time.toString())\n                } catch (e: ParseException) {\n                    e.printStackTrace()\n                }\n                format4 = SimpleDateFormat(\"yyyy-MM-dd\", Locale.ENGLISH)\n                strCurrentMmyear = format4.format(newDate)\n                val numberDate:String=strCurrentMmyear\n               // val numberDate: String = CommonMethods.dateParsingToyymmdd(calendar.time.toString()).toString()\n                val model = DateModel(DateF, DayF, MonthF, YearF, numberDate, false, false)\n\n                mDateArrayList.add(model)\n                // PreferenceManager().setdate_list(nContext,mDateArrayList)\n            }\n            if (mDateArrayList.size == 0) {\n                alert_validemail(nContext,\"Alert\",\"Please select any date\")\n            } else {\n                var isFound = false\n                var foundPosition = -1\n                for (i in mDateArrayList.indices) {\n                    if (datetime.equals(mDateArrayList.get(i).date)\n                    ) {\n                        // val timeExceed: String = time_exeed()\n                        if (time_exeed.equals(\"1\")) {\n                            isFound = true\n                            foundPosition = i\n                        }\n                    }\n                }\n                if (isFound) {\n                    Log.e(\n                        \"timexeed\",\n                        \"Sorry pre-ordering for the day closes at 7.30am .Please remove todays date\"\n                    )\n\n                } else {\n                    dialog.dismiss()\n                    val intent = Intent(nContext, Addorder_Activity::class.java)\n                    intent.putExtra(\"date_list\",mDateArrayList)\n                    startActivity(intent)\n                }\n            }\n\n\n\n        }\n\n        dialog.dismiss()\n\n        close_img.setOnClickListener()\n        {\n            dialog.dismiss()\n        }\n\n        dialog.show()\n    }\n    private fun time_exeed() {\n        val token =PreferenceManager.getaccesstoken(nContext)\n        progressDialogAdd.visibility=View.VISIBLE\n        val call: Call<TimeExceedModel> = ApiClient.getClient.time_exceed_status(\"Bearer \"+token)\n        call.enqueue(object : Callback<TimeExceedModel> {\n            override fun onFailure(call: Call<TimeExceedModel>, t: Throwable) {\n                Log.e(\"Failed\", t.localizedMessage)\n                progressDialogAdd.visibility=View.GONE\n            }\n            override fun onResponse(call: Call<TimeExceedModel>, response: Response<TimeExceedModel>) {\n                val responsedata = response.body()\n                if (responsedata!!.status==100) {\n\n                    time_exeed=response!!.body()!!.responseArray.time_exceed.toString()\n                    progressDialogAdd.visibility=View.GONE\n                    calendarpopup()\n\n                } else\n                {\n\n                    DialogFunctions.commonErrorAlertDialog(nContext.resources.getString(R.string.alert), ConstantFunctions.commonErrorString(response.body()!!.status), nContext)\n                }\n            }\n\n        })\n\n\n\n    }\n    fun showSuccessAlertnew(context: Context, message: String, msgHead: String) {\n        val dialog = Dialog(context)\n        dialog.requestWindowFeature(Window.FEATURE_NO_TITLE)\n        dialog.window!!.setBackgroundDrawable(ColorDrawable(Color.TRANSPARENT))\n        dialog.setCancelable(false)\n        dialog.setContentView(R.layout.dialog_common_error_alert)\n        var iconImageView = dialog.findViewById(R.id.iconImageView) as ImageView\n        var alertHead = dialog.findViewById(R.id.alertHead) as TextView\n        var text_dialog = dialog.findViewById(R.id.text_dialog) as TextView\n        var btn_Ok = dialog.findViewById(R.id.btn_Ok) as Button\n        text_dialog.text = message\n        alertHead.text = msgHead\n        iconImageView.setImageResource(R.drawable.exclamationicon)\n        btn_Ok.setOnClickListener()\n        {\n            dialog.dismiss()\n        }\n        dialog.show()\n    }\n    fun alert_validemail(context: Context, title: String, description: String) {\n        val dialog = Dialog(context)\n        dialog.requestWindowFeature(Window.FEATURE_NO_TITLE)\n        dialog.setCancelable(true)\n        dialog.setContentView(R.layout.dialog_common_error_alert)\n        dialog.window!!.setBackgroundDrawableResource(android.R.color.transparent)\n        val btn_Ok = dialog.findViewById<Button>(R.id.btn_Ok)\n        val descriptionTxt = dialog.findViewById<TextView>(R.id.text_dialog)\n        val titleTxt = dialog.findViewById<TextView>(R.id.alertHead)\n        titleTxt.text = title\n        descriptionTxt.text = description\n        btn_Ok.setOnClickListener(View.OnClickListener {\n            dialog.dismiss()\n        })\n        dialog.show()\n\n\n    }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/nas/alreem/activity/canteen/PreOrderActivity.kt b/app/src/main/java/com/nas/alreem/activity/canteen/PreOrderActivity.kt
--- a/app/src/main/java/com/nas/alreem/activity/canteen/PreOrderActivity.kt	(revision 29dbbedb1ce8c3fe2a8032d242fcce101acbc7b5)
+++ b/app/src/main/java/com/nas/alreem/activity/canteen/PreOrderActivity.kt	(date 1691043123899)
@@ -484,7 +484,7 @@
         dialog.setContentView(R.layout.dialog_common_error_alert)
         dialog.window!!.setBackgroundDrawableResource(android.R.color.transparent)
         val btn_Ok = dialog.findViewById<Button>(R.id.btn_Ok)
-        val descriptionTxt = dialog.findViewById<TextView>(R.id.text_dialog)
+        val descriptionTxt = dialog.findViewById<TextView>(R.id.messageTxt)
         val titleTxt = dialog.findViewById<TextView>(R.id.alertHead)
         titleTxt.text = title
         descriptionTxt.text = description
Index: app/src/main/java/com/nas/alreem/activity/canteen/adapter/OrderHistoryPreorderDetailsAdapter.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.nas.alreem.activity.canteen.adapter\n\nimport android.content.Context\nimport android.os.Build\nimport android.util.Log\nimport android.view.LayoutInflater\nimport android.view.View\nimport android.view.ViewGroup\nimport android.widget.TextView\nimport androidx.annotation.RequiresApi\nimport androidx.recyclerview.widget.RecyclerView\nimport com.nas.alreem.R\nimport com.nas.alreem.activity.canteen.model.order_history.OrderCanteenPreOrderItems\n\n\nclass OrderHistoryPreorderDetailsAdapter (val preorderhis_list: ArrayList<OrderCanteenPreOrderItems>, var mcontext: Context) :\n    RecyclerView.Adapter<OrderHistoryPreorderDetailsAdapter.ViewHolder>() {\n\n    override fun onCreateViewHolder(viewGroup: ViewGroup, viewType: Int): ViewHolder {\n        val view: View = LayoutInflater.from(viewGroup.context)\n            .inflate(R.layout.adapter_order_history_item_details, viewGroup, false)\n        return ViewHolder(view)\n    }\n\n    @RequiresApi(Build.VERSION_CODES.O)\n    override fun onBindViewHolder(viewHolder: ViewHolder, position: Int) {\n\n\n        viewHolder.itemNameTxt.text=preorderhis_list.get(position).item_name\n        viewHolder.itemDescription.text=preorderhis_list.get(position).item_description\n        viewHolder.amountTxt.text=preorderhis_list.get(position).item_total.toString() +\".00 AED\"\n        if (preorderhis_list.get(position).quantity==1)\n        {\n            viewHolder.itemsCount.text=preorderhis_list.get(position).quantity.toString()+\" item\"\n        }\n        else\n        {\n            viewHolder.itemsCount.text=preorderhis_list.get(position).quantity.toString()+\" items\"\n        }\n        if (preorderhis_list.get(position).item_status==2)\n        {\n            viewHolder.status.setText(\"Delivered\")\n            viewHolder.status.setTextColor(mcontext.getResources().getColor(R.color.canteen_red))\n        }\n        else{\n            viewHolder.status.setText(\"Cancelled\")\n            viewHolder.status.setTextColor(mcontext.getResources().getColor(R.color.red))\n        }\n\n\n    }\n\n    override fun getItemCount(): Int {\n\n        return preorderhis_list.size\n    }\n\n    inner class ViewHolder(itemView: View) : RecyclerView.ViewHolder(itemView) {\n\n        var itemNameTxt: TextView\n        var itemDescription: TextView\n        var amountTxt: TextView\n        var itemsCount: TextView\n        var status: TextView\n\n        init {\n            itemNameTxt = itemView.findViewById(R.id.itemNameTxt)\n            itemDescription = itemView.findViewById(R.id.itemDescription)\n            amountTxt = itemView.findViewById(R.id.amountTxt)\n            itemsCount = itemView.findViewById(R.id.itemsCount)\n            status = itemView.findViewById(R.id.status)\n\n        }\n    }\n\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/nas/alreem/activity/canteen/adapter/OrderHistoryPreorderDetailsAdapter.kt b/app/src/main/java/com/nas/alreem/activity/canteen/adapter/OrderHistoryPreorderDetailsAdapter.kt
--- a/app/src/main/java/com/nas/alreem/activity/canteen/adapter/OrderHistoryPreorderDetailsAdapter.kt	(revision 29dbbedb1ce8c3fe2a8032d242fcce101acbc7b5)
+++ b/app/src/main/java/com/nas/alreem/activity/canteen/adapter/OrderHistoryPreorderDetailsAdapter.kt	(date 1691045380453)
@@ -13,7 +13,7 @@
 import com.nas.alreem.activity.canteen.model.order_history.OrderCanteenPreOrderItems
 
 
-class OrderHistoryPreorderDetailsAdapter (val preorderhis_list: ArrayList<OrderCanteenPreOrderItems>, var mcontext: Context) :
+class OrderHistoryPreorderDetailsAdapter (val type:String,val preorderhis_list: ArrayList<OrderCanteenPreOrderItems>, var mcontext: Context) :
     RecyclerView.Adapter<OrderHistoryPreorderDetailsAdapter.ViewHolder>() {
 
     override fun onCreateViewHolder(viewGroup: ViewGroup, viewType: Int): ViewHolder {
@@ -28,6 +28,7 @@
 
         viewHolder.itemNameTxt.text=preorderhis_list.get(position).item_name
         viewHolder.itemDescription.text=preorderhis_list.get(position).item_description
+        viewHolder.orderbadge.text=type
         viewHolder.amountTxt.text=preorderhis_list.get(position).item_total.toString() +".00 AED"
         if (preorderhis_list.get(position).quantity==1)
         {
@@ -62,14 +63,14 @@
         var amountTxt: TextView
         var itemsCount: TextView
         var status: TextView
-
+         var orderbadge:TextView
         init {
             itemNameTxt = itemView.findViewById(R.id.itemNameTxt)
             itemDescription = itemView.findViewById(R.id.itemDescription)
             amountTxt = itemView.findViewById(R.id.amountTxt)
             itemsCount = itemView.findViewById(R.id.itemsCount)
             status = itemView.findViewById(R.id.status)
-
+            orderbadge=itemView.findViewById(R.id.orderbadge)
         }
     }
 
Index: app/src/main/java/com/nas/alreem/activity/canteen/adapter/PreorderDatesAdapter.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.nas.alreem.activity.canteen.adapter\n\nimport android.content.Context\nimport android.os.Build\nimport android.util.Log\nimport android.view.LayoutInflater\nimport android.view.View\nimport android.view.ViewGroup\nimport android.widget.TextView\nimport androidx.annotation.RequiresApi\nimport androidx.recyclerview.widget.LinearLayoutManager\nimport androidx.recyclerview.widget.RecyclerView\nimport com.nas.alreem.R\nimport com.nas.alreem.activity.canteen.model.order_history.OrderHistoryDataModel\nimport com.nas.alreem.constants.ConstantFunctions\nimport com.nas.alreem.constants.ConstantWords\n\n\nclass PreorderDatesAdapter(val preorderhis_list: ArrayList<OrderHistoryDataModel>, var mcontext: Context) :\n    RecyclerView.Adapter<PreorderDatesAdapter.ViewHolder>() {\n\n    override fun onCreateViewHolder(viewGroup: ViewGroup, viewType: Int): ViewHolder {\n        val view: View = LayoutInflater.from(viewGroup.context)\n            .inflate(R.layout.orderhistory_adapter, viewGroup, false)\n        return ViewHolder(view)\n    }\n\n    @RequiresApi(Build.VERSION_CODES.O)\n    override fun onBindViewHolder(viewHolder: ViewHolder, position: Int) {\n\n\n        viewHolder.date.text=ConstantFunctions.dateParsingToddMMMyyyyBasket(preorderhis_list.get(position).delivery_date)\n        viewHolder.recyclerview.layoutManager = LinearLayoutManager(mcontext)\n        var adapter = OrderHistoryPreorderDetailsAdapter(preorderhis_list.get(position).canteen_preordered_items, mcontext)\n        viewHolder.recyclerview.adapter=adapter\n\n    }\n\n    override fun getItemCount(): Int {\n        return preorderhis_list.size\n    }\n\n    inner class ViewHolder(itemView: View) : RecyclerView.ViewHolder(itemView) {\n\n        var date: TextView\n        var recyclerview: RecyclerView\n        lateinit var itemlist:ArrayList<String>\n        init {\n            date = itemView.findViewById(R.id.date)\n            recyclerview=itemView.findViewById(R.id.dates_rec)\n            itemlist= ArrayList()\n        }\n    }\n\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/nas/alreem/activity/canteen/adapter/PreorderDatesAdapter.kt b/app/src/main/java/com/nas/alreem/activity/canteen/adapter/PreorderDatesAdapter.kt
--- a/app/src/main/java/com/nas/alreem/activity/canteen/adapter/PreorderDatesAdapter.kt	(revision 29dbbedb1ce8c3fe2a8032d242fcce101acbc7b5)
+++ b/app/src/main/java/com/nas/alreem/activity/canteen/adapter/PreorderDatesAdapter.kt	(date 1691045380461)
@@ -31,7 +31,7 @@
 
         viewHolder.date.text=ConstantFunctions.dateParsingToddMMMyyyyBasket(preorderhis_list.get(position).delivery_date)
         viewHolder.recyclerview.layoutManager = LinearLayoutManager(mcontext)
-        var adapter = OrderHistoryPreorderDetailsAdapter(preorderhis_list.get(position).canteen_preordered_items, mcontext)
+        var adapter = OrderHistoryPreorderDetailsAdapter(preorderhis_list.get(position).type_status,preorderhis_list.get(position).canteen_preordered_items, mcontext)
         viewHolder.recyclerview.adapter=adapter
 
     }
Index: app/src/main/java/com/nas/alreem/activity/canteen/model/order_history/OrderCanteenPreOrderItems.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.nas.alreem.activity.canteen.model.order_history\n\nimport com.google.gson.annotations.SerializedName\n\nclass OrderCanteenPreOrderItems (\n    @SerializedName(\"id\") var id:Int,\n    @SerializedName(\"item_id\") var item_id:Int,\n    @SerializedName(\"quantity\") var quantity:Int,\n    @SerializedName(\"item_status\") var item_status:Int,\n    @SerializedName(\"item_total\") var item_total:Int,\n    @SerializedName(\"total_amount\") var total_amount:String,\n    @SerializedName(\"item_name\") var item_name:String,\n    @SerializedName(\"price\") var price:String,\n    @SerializedName(\"item_description\") var item_description:String\n        )
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/nas/alreem/activity/canteen/model/order_history/OrderCanteenPreOrderItems.kt b/app/src/main/java/com/nas/alreem/activity/canteen/model/order_history/OrderCanteenPreOrderItems.kt
--- a/app/src/main/java/com/nas/alreem/activity/canteen/model/order_history/OrderCanteenPreOrderItems.kt	(revision 29dbbedb1ce8c3fe2a8032d242fcce101acbc7b5)
+++ b/app/src/main/java/com/nas/alreem/activity/canteen/model/order_history/OrderCanteenPreOrderItems.kt	(date 1691045380479)
@@ -12,4 +12,5 @@
     @SerializedName("item_name") var item_name:String,
     @SerializedName("price") var price:String,
     @SerializedName("item_description") var item_description:String
+
         )
\ No newline at end of file
Index: app/src/main/java/com/nas/alreem/activity/canteen/model/order_history/OrderHistoryDataModel.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.nas.alreem.activity.canteen.model.order_history\n\nimport com.google.gson.annotations.SerializedName\n\nclass OrderHistoryDataModel (\n\n    @SerializedName(\"id\") var id:Int,\n    @SerializedName(\"delivery_date\") var delivery_date:String,\n    @SerializedName(\"total_amount\") var total_amount:String,\n    @SerializedName(\"status\") var status:String,\n    @SerializedName(\"section\") var section:String,\n    @SerializedName(\"canteen_preordered_items\") var canteen_preordered_items:ArrayList<OrderCanteenPreOrderItems>\n\n\n)
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/nas/alreem/activity/canteen/model/order_history/OrderHistoryDataModel.kt b/app/src/main/java/com/nas/alreem/activity/canteen/model/order_history/OrderHistoryDataModel.kt
--- a/app/src/main/java/com/nas/alreem/activity/canteen/model/order_history/OrderHistoryDataModel.kt	(revision 29dbbedb1ce8c3fe2a8032d242fcce101acbc7b5)
+++ b/app/src/main/java/com/nas/alreem/activity/canteen/model/order_history/OrderHistoryDataModel.kt	(date 1691045380470)
@@ -5,6 +5,7 @@
 class OrderHistoryDataModel (
 
     @SerializedName("id") var id:Int,
+    @SerializedName("type_status") var type_status:String,
     @SerializedName("delivery_date") var delivery_date:String,
     @SerializedName("total_amount") var total_amount:String,
     @SerializedName("status") var status:String,
Index: app/src/main/res/layout/activity_parent_meeting_detail.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\n<RelativeLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    android:background=\"@android:color/white\">\n\n    <include\n        android:id=\"@+id/includeRel\"\n        layout=\"@layout/layout_activity_header\" />\n\n    <LinearLayout\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"match_parent\"\n        android:layout_above=\"@+id/imageViewSlotInfo\"\n        android:layout_below=\"@+id/includeRel\"\n        android:orientation=\"vertical\"\n        android:weightSum=\"100\">\n\n        <com.nas.alreem.commonviews.CustomFontSansProTextBlack\n            android:id=\"@+id/dateTextView\"\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"wrap_content\"\n            android:layout_marginTop=\"10dp\"\n            android:gravity=\"center\"\n            android:paddingBottom=\"2dp\"\n            android:paddingTop=\"2dp\"\n\n            android:singleLine=\"true\"\n            android:text=\"Select a date:\"\n            android:textSize=\"18sp\" />\n\n        <LinearLayout\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"wrap_content\"\n            android:orientation=\"horizontal\"\n            android:paddingBottom=\"2dp\"\n            android:paddingTop=\"2dp\"\n            android:weightSum=\"100\">\n\n            <com.nas.alreem.commonviews.CustomFontSansProTextBlack\n                android:id=\"@+id/listTxtClass\"\n                android:layout_width=\"0dp\"\n                android:layout_height=\"wrap_content\"\n                android:layout_marginLeft=\"10dp\"\n                android:layout_marginTop=\"5dp\"\n                android:layout_weight=\"20\"\n                android:singleLine=\"true\"\n                android:text=\"Student   :\"\n                android:textSize=\"15sp\" />\n\n            <com.nas.alreem.commonviews.CustomFontSansProTextBlackSemiBold\n                android:id=\"@+id/studentNameTV\"\n                android:layout_width=\"0dp\"\n                android:layout_height=\"wrap_content\"\n                android:layout_marginRight=\"10dp\"\n                android:layout_marginTop=\"5dp\"\n                android:layout_weight=\"80\"\n                android:text=\"Select a date:\"\n                android:textSize=\"15sp\" />\n\n        </LinearLayout>\n\n        <LinearLayout\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"wrap_content\"\n            android:orientation=\"horizontal\"\n            android:paddingBottom=\"2dp\"\n            android:paddingTop=\"2dp\"\n            android:weightSum=\"100\">\n\n            <com.nas.alreem.commonviews.CustomFontSansProTextBlack\n                android:id=\"@+id/studentClass\"\n                android:layout_width=\"0dp\"\n                android:layout_height=\"wrap_content\"\n                android:layout_marginLeft=\"10dp\"\n                android:layout_weight=\"20\"\n                android:singleLine=\"true\"\n                android:text=\"Class        :\"\n                android:textSize=\"15sp\" />\n\n            <com.nas.alreem.commonviews.CustomFontSansProTextBlackSemiBold\n                android:id=\"@+id/studentClassTV\"\n                android:layout_width=\"0dp\"\n                android:layout_height=\"wrap_content\"\n                android:layout_marginRight=\"10dp\"\n                android:layout_weight=\"80\"\n                android:singleLine=\"true\"\n                android:text=\"Select a date:\"\n                android:textSize=\"15sp\" />\n\n        </LinearLayout>\n\n        <LinearLayout\n            android:id=\"@+id/staffLinear\"\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"wrap_content\"\n            android:orientation=\"horizontal\"\n            android:paddingBottom=\"2dp\"\n            android:paddingTop=\"2dp\"\n            android:weightSum=\"100\">\n\n            <com.nas.alreem.commonviews.CustomFontSansProTextBlack\n                android:id=\"@+id/staff\"\n                android:layout_width=\"0dp\"\n                android:layout_height=\"wrap_content\"\n                android:layout_marginLeft=\"10dp\"\n                android:layout_weight=\"20\"\n                android:singleLine=\"true\"\n                android:text=\"Staff           :\" />\n\n            <RelativeLayout\n                android:layout_width=\"0dp\"\n                android:layout_height=\"wrap_content\"\n                android:layout_marginRight=\"10dp\"\n                android:layout_weight=\"80\">\n\n                <com.nas.alreem.commonviews.CustomFontSansProTextBlackSemiBold\n                    android:id=\"@+id/staffTV\"\n                    android:layout_width=\"wrap_content\"\n                    android:layout_height=\"wrap_content\"\n                    android:layout_alignParentLeft=\"true\"\n                    android:layout_toLeftOf=\"@+id/cancelTextView\"\n                    android:text=\"Select a date:\"\n                    android:textSize=\"15sp\" />\n\n                <com.nas.alreem.commonviews.CustomTextViewRegular\n                    android:id=\"@+id/cancelTextView\"\n                    android:layout_width=\"wrap_content\"\n                    android:layout_height=\"wrap_content\"\n                    android:layout_alignParentRight=\"true\"\n                    android:background=\"@drawable/slotcancelbyuser_curved_rel_layout\"\n                    android:gravity=\"center\"\n                    android:paddingBottom=\"2dp\"\n                    android:paddingLeft=\"25dp\"\n                    android:paddingRight=\"25dp\"\n                    android:paddingTop=\"2dp\"\n                    android:singleLine=\"true\"\n                    android:text=\"Cancel\"\n                    android:textColor=\"@color/white\"\n                    android:textSize=\"15sp\"\n                    android:visibility=\"invisible\" />\n            </RelativeLayout>\n        </LinearLayout>\n        <Button\n            android:id=\"@+id/vpmlBtn\"\n            android:layout_width=\"250dp\"\n            android:layout_height=\"30dp\"\n            android:layout_marginLeft=\"10dp\"\n            android:layout_marginRight=\"10dp\"\n            android:text=\"Click here for VPM Link\"\n            android:textColor=\"@color/white\"\n            android:visibility=\"gone\"\n            android:background=\"@drawable/button_blue\"/>\n\n        <RelativeLayout\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"wrap_content\">\n\n            <com.nas.alreem.commonviews.CustomFontSansProTextBlack\n                android:id=\"@+id/choose\"\n                android:layout_width=\"wrap_content\"\n                android:layout_height=\"wrap_content\"\n                android:layout_marginLeft=\"10dp\"\n                android:layout_marginRight=\"10dp\"\n                android:paddingBottom=\"2dp\"\n                android:paddingTop=\"2dp\"\n                android:singleLine=\"true\"\n                android:text=\"Choose a time slot\" />\n\n            <com.nas.alreem.commonviews.CustomTextViewRegular\n                android:id=\"@+id/reviewConfirmTextView\"\n                android:layout_width=\"wrap_content\"\n                android:layout_height=\"wrap_content\"\n                android:layout_alignParentRight=\"true\"\n                android:layout_centerVertical=\"true\"\n                android:layout_marginRight=\"10dp\"\n                android:background=\"@drawable/slotbookedbyuser_curved_rel_layout\"\n                android:gravity=\"center\"\n                android:paddingBottom=\"3dp\"\n                android:paddingLeft=\"15dp\"\n                android:paddingRight=\"15dp\"\n                android:paddingTop=\"3dp\"\n                android:layout_marginTop=\"5dp\"\n                android:singleLine=\"true\"\n                android:text=\"REVIEW &amp; CONFIRM\"\n                android:textColor=\"@color/white\"\n                android:textSize=\"15sp\"\n                android:visibility=\"gone\" />\n\n        </RelativeLayout>\n\n        <androidx.recyclerview.widget.RecyclerView\n            android:id=\"@+id/recycler_view_alloted_time\"\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"match_parent\"\n            android:layout_marginBottom=\"10dp\"\n            android:layout_marginLeft=\"10dp\"\n            android:layout_marginRight=\"10dp\"\n            android:layout_marginTop=\"5dp\"\n            android:overScrollMode=\"never\"\n            android:scrollbars=\"vertical\" />\n    </LinearLayout>\n\n    <ImageView\n        android:id=\"@+id/infoRoomImg\"\n        android:layout_width=\"40dp\"\n        android:layout_height=\"40dp\"\n        android:layout_alignParentRight=\"true\"\n        android:layout_below=\"@+id/includeRel\"\n        android:src=\"@drawable/infoicon_new\" />\n\n    <ImageView\n        android:id=\"@+id/imageViewSlotInfo\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"50dp\"\n        android:layout_alignParentBottom=\"true\"\n        android:src=\"@drawable/infoforparentseveningslot\" />\n    <ProgressBar\n        android:id=\"@+id/progressDialogAdd\"\n        android:layout_width=\"40dp\"\n        android:layout_height=\"40dp\"\n        android:layout_centerInParent=\"true\"\n        android:indeterminateDrawable=\"@anim/customspinner\"\n        android:visibility=\"gone\"\n\n        />\n</RelativeLayout>\n\n<!--\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<androidx.constraintlayout.widget.ConstraintLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n    xmlns:tools=\"http://schemas.android.com/tools\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\">\n\n\n    <include\n        android:id=\"@+id/includeRel\"\n        layout=\"@layout/layout_activity_header\" />\n\n    <com.nas.alreem.commonviews.CustomFontSansProTextBlackSemiBold\n        android:id=\"@+id/dateheader\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"35dp\"\n        android:layout_marginTop=\"10dp\"\n        android:gravity=\"center\"\n        android:text=\"date\"\n        app:layout_constraintEnd_toEndOf=\"parent\"\n        app:layout_constraintStart_toStartOf=\"parent\"\n        app:layout_constraintTop_toBottomOf=\"@+id/includeRel\" />\n\n    <ImageView\n        android:id=\"@+id/infoRoomImg\"\n        android:layout_width=\"40dp\"\n        android:layout_height=\"40dp\"\n        android:layout_below=\"@+id/includeRel\"\n        android:layout_alignParentRight=\"true\"\n        android:src=\"@drawable/infoicon_new\"\n        app:layout_constraintBottom_toBottomOf=\"@+id/dateheader\"\n        app:layout_constraintEnd_toEndOf=\"@+id/dateheader\" />\n\n    <LinearLayout\n        android:id=\"@+id/linearLayout\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\"\n        android:orientation=\"horizontal\"\n        android:paddingTop=\"2dp\"\n        android:paddingBottom=\"2dp\"\n        android:weightSum=\"100\"\n        app:layout_constraintEnd_toEndOf=\"parent\"\n        app:layout_constraintStart_toStartOf=\"parent\"\n        app:layout_constraintTop_toBottomOf=\"@+id/dateheader\">\n\n        <com.nas.alreem.commonviews.CustomFontSansProTextBlack\n            android:id=\"@+id/listTxtClass\"\n            android:layout_width=\"0dp\"\n            android:layout_height=\"wrap_content\"\n            android:layout_marginLeft=\"10dp\"\n            android:layout_marginTop=\"5dp\"\n            android:layout_weight=\"20\"\n            android:singleLine=\"true\"\n            android:text=\"Student   :\"\n            android:textColor=\"@color/black\"\n            android:textSize=\"15sp\" />\n\n        <com.nas.alreem.commonviews.CustomFontSansProTextBlack\n            android:id=\"@+id/studentNameTV\"\n            android:layout_width=\"0dp\"\n            android:layout_height=\"wrap_content\"\n            android:layout_marginTop=\"5dp\"\n            android:layout_marginRight=\"10dp\"\n            android:layout_weight=\"80\"\n            android:text=\"Select a date:\"\n            android:textColor=\"@color/black\"\n            android:textSize=\"15sp\"\n            android:textStyle=\"bold\" />\n    </LinearLayout>\n\n    <LinearLayout\n        android:id=\"@+id/linearLayout2\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\"\n        android:orientation=\"horizontal\"\n        android:paddingTop=\"2dp\"\n        android:paddingBottom=\"2dp\"\n        android:weightSum=\"100\"\n        app:layout_constraintEnd_toEndOf=\"parent\"\n        app:layout_constraintStart_toStartOf=\"parent\"\n        app:layout_constraintTop_toBottomOf=\"@+id/linearLayout\">\n\n        <com.nas.alreem.commonviews.CustomFontSansProTextBlack\n            android:id=\"@+id/studentClass\"\n            android:layout_width=\"0dp\"\n            android:layout_height=\"wrap_content\"\n            android:layout_marginLeft=\"10dp\"\n            android:layout_weight=\"20\"\n            android:singleLine=\"true\"\n            android:text=\"Class        :\"\n            android:textColor=\"@color/black\"\n            android:textSize=\"15sp\" />\n\n        <RelativeLayout\n            android:layout_width=\"0dp\"\n            android:layout_height=\"wrap_content\"\n            android:layout_marginRight=\"10dp\"\n            android:layout_weight=\"80\">\n\n            <com.nas.alreem.commonviews.CustomFontSansProTextBlack\n                android:id=\"@+id/studentclassTV\"\n                android:layout_width=\"wrap_content\"\n                android:layout_height=\"wrap_content\"\n                android:layout_alignParentLeft=\"true\"\n                android:layout_toLeftOf=\"@+id/cancelTextView\"\n                android:text=\"Select a date:\"\n                android:textColor=\"@color/black\"\n                android:textSize=\"15sp\" />\n\n            <com.nas.alreem.commonviews.CustomTextViewSemiBold\n                android:id=\"@+id/cancelTextView\"\n                android:layout_width=\"wrap_content\"\n                android:layout_height=\"wrap_content\"\n                android:layout_alignParentRight=\"true\"\n                android:background=\"@color/red\"\n                android:gravity=\"center\"\n                android:paddingLeft=\"25dp\"\n                android:paddingTop=\"2dp\"\n                android:paddingRight=\"25dp\"\n                android:paddingBottom=\"2dp\"\n                android:singleLine=\"true\"\n                android:text=\"Cancel\"\n                android:textColor=\"@color/white\"\n                android:textSize=\"15sp\"\n                android:visibility=\"gone\" />\n        </RelativeLayout>\n\n    </LinearLayout>\n\n    <LinearLayout\n        android:id=\"@+id/staffLinear\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\"\n        android:orientation=\"horizontal\"\n        android:paddingTop=\"2dp\"\n        android:paddingBottom=\"2dp\"\n        android:weightSum=\"100\"\n        app:layout_constraintEnd_toEndOf=\"parent\"\n        app:layout_constraintStart_toStartOf=\"parent\"\n        app:layout_constraintTop_toBottomOf=\"@+id/linearLayout2\">\n\n        <com.nas.alreem.commonviews.CustomFontSansProTextBlack\n            android:id=\"@+id/staff\"\n            android:layout_width=\"0dp\"\n            android:layout_height=\"wrap_content\"\n            android:layout_marginLeft=\"10dp\"\n            android:layout_weight=\"20\"\n            android:singleLine=\"true\"\n            android:text=\"Staff           :\"\n            android:textColor=\"@color/black\" />\n\n        <RelativeLayout\n            android:layout_width=\"0dp\"\n            android:layout_height=\"wrap_content\"\n            android:layout_marginRight=\"10dp\"\n            android:layout_weight=\"80\">\n\n            <com.nas.alreem.commonviews.CustomFontSansProTextBlack\n                android:id=\"@+id/staffTV\"\n                android:layout_width=\"wrap_content\"\n                android:layout_height=\"wrap_content\"\n                android:layout_alignParentLeft=\"true\"\n                android:layout_toLeftOf=\"@+id/confirmTextView\"\n                android:text=\"Select a date:\"\n                android:textColor=\"@color/black\"\n                android:textSize=\"15sp\" />\n\n            <com.nas.alreem.commonviews.CustomTextViewSemiBold\n                android:id=\"@+id/confirmTextView\"\n                android:layout_width=\"wrap_content\"\n                android:layout_height=\"wrap_content\"\n                android:layout_alignParentRight=\"true\"\n                android:background=\"@color/colorAccent\"\n                android:gravity=\"center\"\n                android:paddingLeft=\"25dp\"\n                android:paddingTop=\"2dp\"\n                android:paddingRight=\"25dp\"\n                android:paddingBottom=\"2dp\"\n                android:singleLine=\"true\"\n                android:text=\"@string/review_confirm\"\n                android:textColor=\"@color/white\"\n                android:textSize=\"15sp\"\n                android:visibility=\"gone\" />\n        </RelativeLayout>\n    </LinearLayout>\n\n    <androidx.recyclerview.widget.RecyclerView\n        android:id=\"@+id/recycler_timeslot\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"0dp\"\n        android:layout_marginLeft=\"10dp\"\n        android:layout_marginRight=\"10dp\"\n        android:layout_marginTop=\"20dp\"\n        android:overScrollMode=\"never\"\n        android:scrollbars=\"vertical\"\n        app:layout_constraintBottom_toTopOf=\"@+id/imageViewSlotInfo\"\n        app:layout_constraintEnd_toEndOf=\"parent\"\n        app:layout_constraintStart_toStartOf=\"parent\"\n        app:layout_constraintTop_toBottomOf=\"@+id/staffLinear\">\n\n    </androidx.recyclerview.widget.RecyclerView>\n\n    <include\n        android:id=\"@+id/progressDialog\"\n        layout=\"@layout/custom_progress_layout\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"match_parent\"\n        android:visibility=\"gone\"\n        app:layout_constraintBottom_toBottomOf=\"@+id/recycler_timeslot\"\n        app:layout_constraintEnd_toEndOf=\"@+id/recycler_timeslot\"\n        app:layout_constraintStart_toStartOf=\"parent\"\n        app:layout_constraintTop_toBottomOf=\"@+id/staffLinear\" />\n    <ImageView\n        android:id=\"@+id/imageViewSlotInfo\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\"\n        android:layout_alignParentBottom=\"true\"\n        android:src=\"@drawable/infoforparentseveningslot\"\n        app:layout_constraintBottom_toBottomOf=\"parent\"\n        app:layout_constraintEnd_toEndOf=\"parent\"\n        app:layout_constraintStart_toStartOf=\"parent\" />\n\n    <ProgressBar\n        android:id=\"@+id/progressDialogAdd\"\n        android:layout_width=\"40dp\"\n        android:layout_height=\"40dp\"\n        android:layout_centerInParent=\"true\"\n        android:indeterminateDrawable=\"@anim/customspinner\"\n        android:visibility=\"gone\"\n\n        />\n</androidx.constraintlayout.widget.ConstraintLayout>-->\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/activity_parent_meeting_detail.xml b/app/src/main/res/layout/activity_parent_meeting_detail.xml
--- a/app/src/main/res/layout/activity_parent_meeting_detail.xml	(revision 29dbbedb1ce8c3fe2a8032d242fcce101acbc7b5)
+++ b/app/src/main/res/layout/activity_parent_meeting_detail.xml	(date 1690537378437)
@@ -165,7 +165,7 @@
                 android:paddingBottom="2dp"
                 android:paddingTop="2dp"
                 android:singleLine="true"
-                android:text="Choose a time slot" />
+                android:text="Please choose a time slot" />
 
             <com.nas.alreem.commonviews.CustomTextViewRegular
                 android:id="@+id/reviewConfirmTextView"
Index: app/src/main/java/com/nas/alreem/activity/cca/CCAsReviewAfterSubmissionNoDeleteActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.nas.alreem.activity.cca\n\nimport android.app.Activity\nimport android.content.Context\nimport android.content.Intent\nimport android.os.Bundle\nimport android.text.Html\nimport android.util.Log\nimport android.view.View\nimport android.widget.*\nimport androidx.recyclerview.widget.GridLayoutManager\nimport androidx.recyclerview.widget.RecyclerView\nimport com.nas.alreem.R\nimport com.nas.alreem.activity.cca.adapter.CCAfinalReviewEditAfterSubmissionAdapter\nimport com.nas.alreem.activity.cca.model.*\nimport com.nas.alreem.activity.home.HomeActivity\nimport com.nas.alreem.constants.ConstantFunctions\nimport com.nas.alreem.constants.PreferenceManager\nimport com.nas.alreem.rest.ApiClient\nimport org.json.JSONObject\nimport retrofit2.Call\nimport retrofit2.Callback\nimport retrofit2.Response\nimport java.util.*\n\nclass CCAsReviewAfterSubmissionNoDeleteActivity : Activity(){\n    var recyclerViewLayoutManager: GridLayoutManager? = null\n    var recycler_review: RecyclerView? = null\n   // var headermanager: HeaderManager? = null\n    var relativeHeader: RelativeLayout? = null\n   // var back: ImageView? = null\n    var home: ImageView? = null\n    var editCcca: RelativeLayout? = null\n    var messageTxt: RelativeLayout? = null\n    var msgTxt: TextView? = null\n    var tab_type: String? = \"CCAs\"\n    var extras: Bundle? = null\n   lateinit var mContext: Context\n    var mCCADetailModelArrayList: ArrayList<CCAReviewAfterSubmissionModel>? = null\n    var textViewCCAaItem: TextView? = null\n    var weekList: ArrayList<String>? = null\n    var absentDaysChoice2Array: ArrayList<String>? = null\n    var presentDaysChoice2Array: ArrayList<String>? = null\n    var upcomingDaysChoice2Array: ArrayList<String>? = null\n    var absentDaysChoice1Array: ArrayList<String>? = null\n    var presentDaysChoice1Array: ArrayList<String>? = null\n    var upcomingDaysChoice1Array: ArrayList<String>? = null\n    var datestringChoice1: ArrayList<CCAAttendanceModel>? = null\n    var datestringChoice2: ArrayList<CCAAttendanceModel>? = null\n    var submissiondateover = \"-1\"\n    lateinit var progressBar: ProgressBar\n    var CCADetailModelArrayList: ArrayList<CCADetailModel>? = null\n    lateinit var logoclick: ImageView\n    lateinit var back: ImageView\n    lateinit var backRelative: RelativeLayout\n    override fun onCreate(savedInstanceState: Bundle?) {\n        super.onCreate(savedInstanceState)\n        setContentView(R.layout.activity_cca_no_edit_delete)\n        mContext = this\n        extras = intent.extras\n        if (extras != null) {\n            tab_type = extras!!.getString(\"tab_type\")\n            submissiondateover = extras!!.getString(\"submissiondateover\", \"-1\")\n            CCADetailModelArrayList =\n                extras!!.getSerializable(\"CCA_Detail\") as ArrayList<CCADetailModel>?\n        }\n        weekList = ArrayList()\n        weekList!!.add(\"Sunday\")\n        weekList!!.add(\"Monday\")\n        weekList!!.add(\"Tuesday\")\n        weekList!!.add(\"Wednesday\")\n        weekList!!.add(\"Thursday\")\n        weekList!!.add(\"Friday\")\n        weekList!!.add(\"Saturday\")\n        absentDaysChoice2Array = ArrayList()\n        presentDaysChoice2Array = ArrayList()\n        upcomingDaysChoice2Array = ArrayList()\n        absentDaysChoice1Array = ArrayList()\n        presentDaysChoice1Array = ArrayList()\n        upcomingDaysChoice1Array = ArrayList()\n        datestringChoice1 = ArrayList<CCAAttendanceModel>()\n        datestringChoice2 = ArrayList<CCAAttendanceModel>()\n        relativeHeader = findViewById<View>(R.id.relativeHeader) as RelativeLayout\n        recycler_review = findViewById<View>(R.id.recycler_view_cca) as RecyclerView\n        textViewCCAaItem = findViewById<View>(R.id.textViewCCAaItem) as TextView\n        messageTxt = findViewById<View>(R.id.messageTxt) as RelativeLayout\n        msgTxt = findViewById<View>(R.id.msgTxt) as TextView\n        messageTxt!!.visibility = View.VISIBLE\n        editCcca = findViewById<View>(R.id.editCcca) as RelativeLayout\n        progressBar = findViewById(R.id.progress)\n       // back = findViewById(R.id.btn_left)\n        backRelative = findViewById(R.id.backRelative)\n        logoclick = findViewById(R.id.logoClickImgView)\n        //  headermanager = HeaderManager(this@CCAsReviewAfterSubmissionNoDeleteActivity, tab_type)\n      //  headermanager.getHeader(relativeHeader, 0)\n        logoclick.setOnClickListener {\n            val mIntent = Intent(mContext, HomeActivity::class.java)\n            mIntent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP)\n\n            startActivity(mIntent)\n        }\n        backRelative.setOnClickListener {\n            finish()\n        }\n        editCcca!!.setOnClickListener {\n            /*val intent = Intent(\n                mContext,\n                CCASelectionActivity::class.java\n            )\n            intent.putExtra(\n                \"CCA_Detail\",\n                CCADetailModelArrayList\n            )\n            intent.putExtra(\"tab_type\", tab_type)\n            intent.putExtra(\"ccaedit\", 1)\n            startActivity(intent)*/\n        }\n       // home = headermanager.getLogoButton()\n\n        recycler_review!!.setHasFixedSize(true)\n        recyclerViewLayoutManager = GridLayoutManager(mContext, 1)\n        recycler_review!!.layoutManager = recyclerViewLayoutManager\n        mCCADetailModelArrayList = ArrayList<CCAReviewAfterSubmissionModel>()\n        //        textViewCCAaItem.setText(Html.fromHtml(PreferenceManager.getCCATitle(mContext) + \"<br/>\" + PreferenceManager.getStudNameForCCA(mContext)));\n        if (PreferenceManager.getStudClassForCCA(mContext).equals(\"\")) {\n            textViewCCAaItem!!.text = Html.fromHtml(\n                PreferenceManager.getCCATitle(mContext) + \"<br/>\" + PreferenceManager.getStudentName(\n                    mContext)+ \"<br/>Year Group : \" + PreferenceManager.getStudentClass(mContext)\n            )\n        } else {\n            textViewCCAaItem!!.text = Html.fromHtml(\n                PreferenceManager.getCCATitle(mContext) + \"<br/>\" + PreferenceManager.getStudNameForCCA(\n                    mContext\n                ) + \"<br/>Year Group : \" + PreferenceManager.getStudClassForCCA(mContext)\n            )\n        }\n      //  if (AppUtils.isNetworkConnected(mContext)) {\n            ccaReviewListAPI()\n      //  } else {\n      //      AppUtils.showDialogAlertDismiss(\n        //        mContext as Activity?,\n        //        \"Network Error\",\n        //        getString(R.string.no_internet),\n        //        R.drawable.nonetworkicon,\n        //        R.drawable.roundred\n        //    )\n       // }\n    }\n\n    private fun ccaReviewListAPI() {\n        val body = CCAReviewRequestModel(\n            PreferenceManager.getStudentID(mContext)!!,\n            PreferenceManager.getCCAItemId(mContext)!!\n        )\n        val token = PreferenceManager.getaccesstoken(mContext)\n        val call: Call<CCAReviewResponseModel> =\n            ApiClient.getClient.ccaReview(body, \"Bearer $token\")\n        progressBar.visibility = View.VISIBLE\n        call.enqueue(object : Callback<CCAReviewResponseModel> {\n            override fun onResponse(\n                call: Call<CCAReviewResponseModel>,\n                response: Response<CCAReviewResponseModel>\n            ) {\n                progressBar.visibility = View.GONE\n                if (response.isSuccessful) {\n                    if (response.body() != null) {\n                        if (response.body()!!.status.toString() == \"100\") {\n\n                            if (response.body()!!.data!!.size > 0) {\n                                for (j in weekList!!.indices) {\n                                    for (i in 0 until response.body()!!.data!!.size) {\n                                        if (response.body()!!.data!![i]!!.day.equals(\n                                                weekList!!.get(j)\n                                                    .toString(), ignoreCase = true\n                                            )\n                                        ) {\n                                            addCCAReviewlist(response.body()!!.data!![i])\n                                        }\n                                    }\n                                }\n                                val mCCAsActivityAdapter = CCAfinalReviewEditAfterSubmissionAdapter(\n                                    mContext,\n                                    mCCADetailModelArrayList!!\n                                )\n                                recycler_review!!.setAdapter(\n                                    mCCAsActivityAdapter\n                                )\n                            } else {\n                                val mCCAsActivityAdapter = CCAfinalReviewEditAfterSubmissionAdapter(\n                                    mContext,\n                                    mCCADetailModelArrayList!!\n                                )\n                                recycler_review!!.setAdapter(\n                                    mCCAsActivityAdapter\n                                )\n                                Toast.makeText(\n                                    mContext,\n                                    \"No ECA available\",\n                                    Toast.LENGTH_SHORT\n                                ).show()\n                            }\n                        } else {\n                            ConstantFunctions.showDialogueWithOk(\n                                mContext,\n                                getString(R.string.common_error),\n                                \"Alert\"\n                            )\n                        }\n                    } else {\n                        ConstantFunctions.showDialogueWithOk(\n                            mContext,\n                            getString(R.string.common_error),\n                            \"Alert\"\n                        )\n                    }\n                }\n            }\n\n            override fun onFailure(call: Call<CCAReviewResponseModel>, t: Throwable) {\n                progressBar.visibility = View.GONE\n                ConstantFunctions.showDialogueWithOk(\n                    mContext,\n                    getString(R.string.common_error),\n                    \"Alert\"\n                )\n            }\n\n\n        })\n    }\n\n    private fun addCCAReviewlist(dataObject: CCAReviewResponseModel.Data) {\n        val mCCAModel = CCAReviewAfterSubmissionModel()\n        mCCAModel.day = dataObject!!.day\n        datestringChoice1 = java.util.ArrayList()\n        datestringChoice2 = java.util.ArrayList()\n        if (dataObject.choice1 != null) {\n            val choice1  = dataObject.choice1\n            if (choice1 != null) {\n                if (choice1.cca_item_name != null) {\n                    mCCAModel.choice1 = choice1.cca_item_name\n                    mCCAModel.cca_item_start_time = choice1.cca_item_start_time\n                    mCCAModel.cca_item_end_time = choice1.cca_item_end_time\n                    if (choice1.cca_item_description != null){\n                        mCCAModel.cca_item_description = choice1.cca_item_description\n//                        mCCAModel.cca_item_description_2 = \"\"\n                    }else{\n                        mCCAModel.cca_item_description = \"\"\n//                        mCCAModel.cca_item_description_2 = \"\"\n                    }\n                    if (choice1.cca_venue != null){\n                        mCCAModel.venue = choice1.cca_venue\n//                        mCCAModel.venue2 = \"\"\n                    }else{\n                        mCCAModel.venue = \"\"\n//                        mCCAModel.venue2 = \"\"\n                    }\n\n                    Log.e(\"des1\",choice1.cca_item_description.toString())\n                    mCCAModel.venue2 = \"\"\n                    mCCAModel.cca_item_description_2 = \"\"\n                    val absentDaysChoice1 = choice1.absentDays\n                    absentDaysChoice1Array = java.util.ArrayList()\n                    if (choice1.absentDays !=null) {\n                        for (i in 0 until absentDaysChoice1!!.size) {\n                            absentDaysChoice1Array!!.add(absentDaysChoice1[i]!!)\n                        }\n                    }\n                    presentDaysChoice1Array = java.util.ArrayList()\n                    if (choice1.presentDays != null) {\n                        val presentDaysChoice1 = choice1.presentDays\n                        for (i in 0 until presentDaysChoice1.size) {\n                            presentDaysChoice1Array!!.add(presentDaysChoice1[i]!!)\n                        }\n                    }\n                    upcomingDaysChoice1Array = java.util.ArrayList()\n                    if (choice1.upcomingDays !=null) {\n                        val upcomingDaysChoice1 = choice1.upcomingDays\n                        for (i in 0 until upcomingDaysChoice1.size) {\n                            upcomingDaysChoice1Array!!.add(upcomingDaysChoice1[i]!!)\n                        }\n                    }\n                } else {\n                    mCCAModel.choice1 = \"0\"\n                }\n            } else {\n                mCCAModel.choice1 = \"0\"\n            }\n        } else {\n            mCCAModel.choice1 = \"-1\"\n        }\n        if (dataObject.choice2 != null) {\n            val choice2 = dataObject.choice2\n            if (choice2 != null) {\n                if (choice2.cca_item_name != null) {\n                    mCCAModel.choice2 = choice2.cca_item_name\n                    mCCAModel.cca_item_start_time2 = choice2.cca_item_start_time\n                    mCCAModel.cca_item_end_time2 = choice2.cca_item_end_time\n                    val absentDaysChoice2 = choice2.absentDays\n                    Log.e(\"des\",choice2.cca_item_description.toString())\n                    if (choice2.cca_item_description != null){\n                        mCCAModel.cca_item_description_2 = choice2.cca_item_description\n//                        mCCAModel.cca_item_description = \"\"\n                    }else{\n                        mCCAModel.cca_item_description_2 = \"\"\n//                        mCCAModel.cca_item_description = \"\"\n                    }\n                    if (choice2.cca_venue != null){\n                        mCCAModel.venue2 = choice2.cca_venue\n//                        mCCAModel.venue = \"\"\n                    }else{\n                        mCCAModel.venue2 = \"\"\n//                        mCCAModel.venue = \"\"\n                    }\n\n                    if (choice2.absentDays != null) {\n                        absentDaysChoice2Array = java.util.ArrayList()\n                        for (i in 0 until absentDaysChoice2!!.size) {\n                            absentDaysChoice2Array!!.add(absentDaysChoice2[i]!!)\n                        }\n                    }\n                    presentDaysChoice2Array = java.util.ArrayList()\n                    val presentDaysChoice2 = choice2.presentDays\n                    if (choice2.presentDays != null) {\n                        for (i in 0 until presentDaysChoice2!!.size) {\n                            presentDaysChoice2Array!!.add(presentDaysChoice2[i]!!)\n                        }\n                    }\n                    upcomingDaysChoice2Array = java.util.ArrayList()\n                    val upcomingDaysChoice2 = choice2.upcomingDays\n                    if (choice2.upcomingDays != null) {\n                        for (i in 0 until upcomingDaysChoice2!!.size) {\n                            upcomingDaysChoice2Array!!.add(upcomingDaysChoice2[i]!!)\n                        }\n                    }\n                } else {\n                    mCCAModel.choice2 = \"0\"\n                }\n            } else {\n                mCCAModel.choice2 = \"0\"\n            }\n        } else {\n            mCCAModel.choice2 = \"-1\"\n        }\n\n        if (absentDaysChoice1Array!!.size > 0) {\n            for (i in absentDaysChoice1Array!!.indices) {\n                val mCCAAttendanceModel = CCAAttendanceModel()\n                mCCAAttendanceModel.dateAttend = absentDaysChoice1Array!![i]\n                mCCAAttendanceModel.statusCCA = \"a\"\n                datestringChoice1!!.add(mCCAAttendanceModel)\n            }\n        }\n\n        if (upcomingDaysChoice1Array!!.size > 0) {\n            for (i in upcomingDaysChoice1Array!!.indices) {\n                val mCCAAttendanceModel = CCAAttendanceModel()\n                mCCAAttendanceModel.dateAttend = upcomingDaysChoice1Array!![i]\n                mCCAAttendanceModel.statusCCA = \"u\"\n                datestringChoice1!!.add(mCCAAttendanceModel)\n            }\n        }\n\n        if (presentDaysChoice1Array!!.size > 0) {\n            for (i in presentDaysChoice1Array!!.indices) {\n                val mCCAAttendanceModel = CCAAttendanceModel()\n                mCCAAttendanceModel.dateAttend = presentDaysChoice1Array!![i]\n                mCCAAttendanceModel.statusCCA = \"p\"\n                datestringChoice1!!.add(mCCAAttendanceModel)\n            }\n        }\n        if (absentDaysChoice2Array!!.size > 0) {\n            for (i in absentDaysChoice2Array!!.indices) {\n                val mCCAAttendanceModel = CCAAttendanceModel()\n                mCCAAttendanceModel.dateAttend = absentDaysChoice2Array!![i]\n                mCCAAttendanceModel.statusCCA = \"a\"\n                datestringChoice2!!.add(mCCAAttendanceModel)\n            }\n        }\n        if (upcomingDaysChoice2Array!!.size > 0) {\n            for (i in upcomingDaysChoice2Array!!.indices) {\n                val mCCAAttendanceModel = CCAAttendanceModel()\n                mCCAAttendanceModel.dateAttend = upcomingDaysChoice2Array!![i]\n                mCCAAttendanceModel.statusCCA = \"u\"\n                datestringChoice2!!.add(mCCAAttendanceModel)\n            }\n        }\n        if (presentDaysChoice2Array!!.size > 0) {\n            for (i in presentDaysChoice2Array!!.indices) {\n                val mCCAAttendanceModel = CCAAttendanceModel()\n                mCCAAttendanceModel.dateAttend = presentDaysChoice2Array!![i]\n                mCCAAttendanceModel.statusCCA = \"p\"\n                datestringChoice2!!.add(mCCAAttendanceModel)\n            }\n        }\n        if (datestringChoice1!!.size > 0) {\n            Collections.sort(datestringChoice1, object : Comparator<CCAAttendanceModel?> {\n\n                override fun compare(s1: CCAAttendanceModel?, s2: CCAAttendanceModel?): Int {\n                    return s1!!.dateAttend!!.compareTo(s2!!.dateAttend!!)\n                }\n            })\n        }\n        if (datestringChoice2!!.size > 0) {\n            Collections.sort(datestringChoice1, object : Comparator<CCAAttendanceModel?> {\n\n                override fun compare(s1: CCAAttendanceModel?, s2: CCAAttendanceModel?): Int {\n                    return s1!!.dateAttend!!.compareTo(s2!!.dateAttend!!)\n                }\n            })\n        }\n        mCCAModel.calendarDaysChoice1 = datestringChoice1\n        mCCAModel.calendarDaysChoice2 = datestringChoice2\n\n        mCCADetailModelArrayList!!.add(mCCAModel)\n\n    }\n\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/nas/alreem/activity/cca/CCAsReviewAfterSubmissionNoDeleteActivity.kt b/app/src/main/java/com/nas/alreem/activity/cca/CCAsReviewAfterSubmissionNoDeleteActivity.kt
--- a/app/src/main/java/com/nas/alreem/activity/cca/CCAsReviewAfterSubmissionNoDeleteActivity.kt	(revision 29dbbedb1ce8c3fe2a8032d242fcce101acbc7b5)
+++ b/app/src/main/java/com/nas/alreem/activity/cca/CCAsReviewAfterSubmissionNoDeleteActivity.kt	(date 1690800036721)
@@ -195,7 +195,7 @@
                                 )
                                 Toast.makeText(
                                     mContext,
-                                    "No ECA available",
+                                    "No EAP available",
                                     Toast.LENGTH_SHORT
                                 ).show()
                             }
Index: app/src/main/java/com/nas/alreem/appcontroller/AppController.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.nas.alreem.appcontroller\n\nimport android.app.Application\nimport com.nas.alreem.activity.cca.model.CCADetailModel\nimport com.nas.alreem.activity.cca.model.WeekListModel\n\n\nclass AppController : Application() {\n    companion object {\n        var instance: AppController? = null\n        var tibCoinPoints: Int = 0\n        var scratchID: Int = 0\n        var question_id: String? = null\n        var answer_id: String? = null\n        var weekList: ArrayList<WeekListModel> = ArrayList()\n        var weekListWithData: java.util.ArrayList<Int>? = ArrayList()\n        var CCADetailModelArrayList: ArrayList<CCADetailModel> = ArrayList()\n\n        var filledFlag = 0\n        fun applicationContext(): AppController {\n            return instance as AppController\n        }\n    }\n\n    init {\n        instance = this\n\n    }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/nas/alreem/appcontroller/AppController.kt b/app/src/main/java/com/nas/alreem/appcontroller/AppController.kt
--- a/app/src/main/java/com/nas/alreem/appcontroller/AppController.kt	(revision 29dbbedb1ce8c3fe2a8032d242fcce101acbc7b5)
+++ b/app/src/main/java/com/nas/alreem/appcontroller/AppController.kt	(date 1690523499720)
@@ -1,6 +1,7 @@
 package com.nas.alreem.appcontroller
 
 import android.app.Application
+import android.widget.TextView
 import com.nas.alreem.activity.cca.model.CCADetailModel
 import com.nas.alreem.activity.cca.model.WeekListModel
 
@@ -12,6 +13,7 @@
         var scratchID: Int = 0
         var question_id: String? = null
         var answer_id: String? = null
+        var ccdots:TextView?=null
         var weekList: ArrayList<WeekListModel> = ArrayList()
         var weekListWithData: java.util.ArrayList<Int>? = ArrayList()
         var CCADetailModelArrayList: ArrayList<CCADetailModel> = ArrayList()
Index: app/src/main/java/com/nas/alreem/fragment/canteen/CanteenFragment.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.nas.alreem.fragment.canteen\n\nimport android.app.Dialog\nimport android.content.Context\nimport android.content.Intent\nimport android.graphics.Color\nimport android.graphics.drawable.ColorDrawable\nimport android.os.Bundle\nimport android.util.Log\nimport android.view.LayoutInflater\nimport android.view.View\nimport android.view.ViewGroup\nimport android.view.Window\nimport android.widget.*\nimport androidx.fragment.app.Fragment\nimport com.bumptech.glide.Glide\nimport com.nas.alreem.R\nimport com.nas.alreem.activity.canteen.CanteenPaymentActivity\nimport com.nas.alreem.activity.canteen.InformationActivity\nimport com.nas.alreem.activity.canteen.PreOrderActivity\nimport com.nas.alreem.activity.login.model.SignUpResponseModel\nimport com.nas.alreem.constants.ConstantFunctions\nimport com.nas.alreem.constants.DialogFunctions\nimport com.nas.alreem.constants.PreferenceManager\nimport com.nas.alreem.fragment.canteen.model.CanteenBannerResponseModel\nimport com.nas.alreem.fragment.payments.model.SendEmailApiModel\nimport com.nas.alreem.rest.ApiClient\nimport retrofit2.Call\nimport retrofit2.Callback\nimport retrofit2.Response\n\nclass CanteenFragment  : Fragment() {\n    lateinit var mContext: Context\n //   lateinit var progress: RelativeLayout\n    lateinit var email_icon: ImageView\n    lateinit var preorder_image: LinearLayout\n    lateinit var information_image: LinearLayout\n    lateinit var payment_image: LinearLayout\n    lateinit var staffLinear: LinearLayout\n    lateinit var bannerImg:ImageView\n    lateinit var title: TextView\n    lateinit var description: TextView\n    lateinit var contactEmail:String\n\n     var walletTopUpLimit:Int=0\n     var walletTopUpLimit_str:String=\"\"\n    override fun onCreateView(\n        inflater: LayoutInflater, container: ViewGroup?,\n        savedInstanceState: Bundle?\n    ): View? {\n        return inflater.inflate(R.layout.canteen_fragment, container, false)\n    }\n\n    override fun onViewCreated(view: View, savedInstanceState: Bundle?) {\n        super.onViewCreated(view, savedInstanceState)\n        initFn()\n        onClick()\n        callGetCanteenBanner()\n\n    }\n    private fun initFn(){\n        mContext = requireContext()\n        title=view?.findViewById(R.id.titleTextView)!!\n        title.text = \"Lunch Box\"\n    //    progress = view?.findViewById(R.id.progressDialog)!!\n    //    progress.visibility=View.GONE\n        email_icon = view?.findViewById(R.id.email_icon)!!\n        preorder_image = view?.findViewById(R.id.preOrderLinear)!!\n        information_image = view?.findViewById(R.id.informationLinear)!!\n        payment_image = view?.findViewById(R.id.paymentLinear)!!\n        bannerImg = view?.findViewById(R.id.bannerimagecanteen)!!\n        description = view?.findViewById(R.id.description)!!\n        staffLinear = view?.findViewById(R.id.linearLayout5)!!\n\n\n    }\n    private fun onClick() {\n        email_icon.setOnClickListener {\n            showSendEmailDialog()\n        }\n        preorder_image.setOnClickListener {\n            val i = Intent(mContext, PreOrderActivity::class.java)\n            mContext.startActivity(i)\n        }\n        information_image.setOnClickListener {\n            val i = Intent(mContext, InformationActivity::class.java)\n            mContext.startActivity(i)\n        }\n        payment_image.setOnClickListener {\n            val i = Intent(mContext, CanteenPaymentActivity::class.java)\n            i.putExtra(\"WALLET_TOPUP_LIMIT\",walletTopUpLimit_str.toString())\n            mContext.startActivity(i)\n        }\n        staffLinear.setOnClickListener(View.OnClickListener {\n\n        })\n    }\n\n\n    fun callGetCanteenBanner()\n    {\n        val token = PreferenceManager.getaccesstoken(mContext)\n        val call: Call<CanteenBannerResponseModel> = ApiClient.getClient.get_canteen_banner(\"Bearer \"+token)\n        call.enqueue(object : Callback<CanteenBannerResponseModel>\n        {\n            override fun onFailure(call: Call<CanteenBannerResponseModel>, t: Throwable) {\n                Log.e(\"Failed\", t.localizedMessage)\n            }\n            override fun onResponse(call: Call<CanteenBannerResponseModel>, response: Response<CanteenBannerResponseModel>) {\n                val responsedata = response.body()\n                Log.e(\"Response\", responsedata.toString())\n                if (responsedata!!.status==100) {\n\n                    contactEmail=response.body()!!.responseArray.data.contact_email\n                    walletTopUpLimit_str=response.body()!!.responseArray.data.wallet_topup_limit\n                    PreferenceManager.setTopUpLimit(mContext,response.body()!!.responseArray.data.wallet_topup_limit)\n                    walletTopUpLimit=walletTopUpLimit_str.toInt()\n                    var banner_image=response.body()!!.responseArray.data.image\n                    var trn_no=response.body()!!.responseArray.data.trn_no\n                    PreferenceManager.setTrnNo(mContext,trn_no)\n                    if (contactEmail.equals(\"\"))\n                    {\n                        email_icon.visibility=View.GONE\n                    }\n                    else{\n                        email_icon.visibility=View.VISIBLE\n                    }\n                    if(response.body()!!.responseArray.data.description.equals(\"\"))\n                    {\n                        description.visibility=View.GONE\n                    }\n                    else{\n                        description.visibility=View.VISIBLE\n                        description.text=response.body()!!.responseArray.data.description\n                    }\n                    if (banner_image != \"\") {\n\n                        Glide.with(mContext) //1\n                            .load(banner_image)\n                            .into(bannerImg)\n                    } else {\n                        Glide.with(mContext)\n                            .load(R.drawable.default_banner)\n                            .into(bannerImg)\n                    }\n\n                }\n                else\n                {\n\n                    DialogFunctions.commonErrorAlertDialog(mContext.resources.getString(R.string.alert), ConstantFunctions.commonErrorString(response.body()!!.status), mContext)\n                }\n            }\n\n        })\n\n    }\n\n    private fun showSendEmailDialog()\n    {\n        val dialog = Dialog(mContext)\n        dialog.requestWindowFeature(Window.FEATURE_NO_TITLE)\n        dialog.setCancelable(true)\n        dialog.setContentView(R.layout.dialog_send_email)\n        dialog.window!!.setBackgroundDrawableResource(android.R.color.transparent)\n        val btn_submit = dialog.findViewById<Button>(R.id.submitButton)\n        val btn_cancel = dialog.findViewById<Button>(R.id.cancelButton)\n        val text_dialog = dialog.findViewById<EditText?>(R.id.text_dialog)\n        val text_content = dialog.findViewById<EditText>(R.id.text_content)\n\n        btn_cancel.setOnClickListener(View.OnClickListener {\n            dialog.dismiss()\n        })\n\n        btn_submit.setOnClickListener {\n            if (text_dialog.text.toString().trim().equals(\"\")) {\n                DialogFunctions.commonErrorAlertDialog(mContext.resources.getString(R.string.alert), resources.getString(R.string.enter_subject), mContext)\n\n\n            } else {\n                if (text_content.text.toString().trim().equals(\"\")) {\n                    DialogFunctions.commonErrorAlertDialog(mContext.resources.getString(R.string.alert), resources.getString(R.string.enter_content), mContext)\n\n                } else {\n                    // progressDialog.visibility = View.VISIBLE\n\n                    sendEmail(text_dialog.text.toString().trim(), text_content.text.toString().trim(), contactEmail, dialog)\n                }\n            }\n        }\n        dialog.show()\n    }\n\n\n    fun sendEmail(title: String, message: String,  staffEmail: String, dialog: Dialog)\n    {\n\n        val sendMailBody = SendEmailApiModel( staffEmail, title, message)\n        val call: Call<SignUpResponseModel> = ApiClient.getClient.sendEmailStaff(sendMailBody, \"Bearer \" + PreferenceManager.getaccesstoken(mContext))\n        call.enqueue(object : Callback<SignUpResponseModel> {\n            override fun onFailure(call: Call<SignUpResponseModel>, t: Throwable) {\n                Log.e(\"Failed\", t.localizedMessage)\n                //progressDialog.visibility = View.GONE\n            }\n\n            override fun onResponse(call: Call<SignUpResponseModel>, response: Response<SignUpResponseModel>) {\n                val responsedata = response.body()\n                //progressDialog.visibility = View.GONE\n                Log.e(\"Response Signup\", responsedata.toString())\n                if (responsedata != null) {\n                    try {\n\n\n                        if (response.body()!!.status==100) {\n                            dialog.dismiss()\n                            showSuccessAlertnew(\n                                mContext,\n                                \"Email sent Successfully \",\n                                \"Success\",\n                                dialog\n                            )\n                        }else {\n                            DialogFunctions.commonErrorAlertDialog(\n                                mContext.resources.getString(R.string.alert),\n                                ConstantFunctions.commonErrorString(response.body()!!.status),\n                                mContext\n                            )\n\n                        }\n                    } catch (e: Exception) {\n                        e.printStackTrace()\n                    }\n                }\n            }\n\n        })\n    }\n\n\n    fun showSuccessAlertnew(context: Context, message: String, msgHead: String, mdialog: Dialog) {\n        val dialog = Dialog(context)\n        dialog.requestWindowFeature(Window.FEATURE_NO_TITLE)\n        dialog.window!!.setBackgroundDrawable(ColorDrawable(Color.TRANSPARENT))\n        dialog.setCancelable(false)\n        dialog.setContentView(R.layout.dialog_common_error_alert)\n        var iconImageView = dialog.findViewById(R.id.iconImageView) as ImageView\n        var alertHead = dialog.findViewById(R.id.alertHead) as TextView\n        var text_dialog = dialog.findViewById(R.id.text_dialog) as TextView\n        var btn_Ok = dialog.findViewById(R.id.btn_Ok) as Button\n        text_dialog.text = message\n        alertHead.text = msgHead\n        iconImageView.setImageResource(R.drawable.exclamationicon)\n        btn_Ok.setOnClickListener()\n        {\n            dialog.dismiss()\n            mdialog.dismiss()\n        }\n        dialog.show()\n    }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/nas/alreem/fragment/canteen/CanteenFragment.kt b/app/src/main/java/com/nas/alreem/fragment/canteen/CanteenFragment.kt
--- a/app/src/main/java/com/nas/alreem/fragment/canteen/CanteenFragment.kt	(revision 29dbbedb1ce8c3fe2a8032d242fcce101acbc7b5)
+++ b/app/src/main/java/com/nas/alreem/fragment/canteen/CanteenFragment.kt	(date 1690794248434)
@@ -139,9 +139,7 @@
                             .load(banner_image)
                             .into(bannerImg)
                     } else {
-                        Glide.with(mContext)
-                            .load(R.drawable.default_banner)
-                            .into(bannerImg)
+                        bannerImg!!.setBackgroundResource(R.drawable.default_banner)
                     }
 
                 }
Index: app/src/main/res/layout/adapter_cca_final_review.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\n<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"wrap_content\"\n    android:background=\"@color/white\"\n    android:layout_marginBottom=\"10dp\"\n    android:id=\"@+id/linearChoice\"\n    android:orientation=\"vertical\">\n\n\n    <TextView\n\n        android:id=\"@+id/textViewCCADay\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\"\n        android:text=\"Day\"\n        android:textSize=\"16sp\"\n        android:padding=\"5dp\"\n        android:textStyle=\"bold\"\n        android:background=\"@color/light_grey\"\n        android:layout_gravity=\"center_vertical\"\n        android:textColor=\"#ff000000\" />\n    <LinearLayout\n        android:id=\"@+id/linearChoice1\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\"\n        android:layout_marginTop=\"5dp\"\n        android:orientation=\"horizontal\">\n        <ImageView\n            android:id=\"@+id/point1Img\"\n            android:layout_width=\"20dp\"\n            android:layout_height=\"20dp\"\n            android:layout_marginLeft=\"10dp\"\n            android:layout_marginTop=\"4dp\"\n            android:visibility=\"visible\"\n            android:background=\"@drawable/tealdot_icon\" />\n        <LinearLayout\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"wrap_content\"\n            android:layout_gravity=\"center_vertical\"\n            android:orientation=\"vertical\">\n            <TextView\n\n                android:id=\"@+id/textViewCCAChoice1\"\n                android:layout_width=\"wrap_content\"\n                android:layout_height=\"wrap_content\"\n                android:text=\"Choice 1:\"\n                android:textSize=\"16sp\"\n                android:layout_marginLeft=\"5dp\"\n                android:layout_gravity=\"center_vertical\"\n                android:textColor=\"#ff000000\" />\n            <TextView\n\n                android:id=\"@+id/textViewCCAaDateItemChoice1\"\n                android:layout_width=\"wrap_content\"\n                android:layout_height=\"wrap_content\"\n                android:layout_marginLeft=\"5dp\"\n                android:layout_marginTop=\"2dp\"\n                android:text=\"None\"\n                android:textColor=\"@color/dark_grey1\"\n                android:textSize=\"14sp\" />\n            <TextView\n\n                android:id=\"@+id/locationTxt\"\n                android:layout_width=\"wrap_content\"\n                android:layout_height=\"wrap_content\"\n                android:layout_marginLeft=\"5dp\"\n                android:layout_marginTop=\"2dp\"\n                android:textColor=\"@color/dark_grey1\"\n                android:textSize=\"14sp\" />\n            <TextView\n\n                android:id=\"@+id/descriptionTxt\"\n                android:layout_width=\"wrap_content\"\n                android:layout_height=\"wrap_content\"\n                android:layout_marginLeft=\"5dp\"\n                android:layout_marginTop=\"2dp\"\n                android:textColor=\"@color/dark_grey1\"\n                android:textSize=\"14sp\" />\n        </LinearLayout>\n    </LinearLayout>\n    <LinearLayout\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\"\n        android:layout_marginTop=\"5dp\"\n        android:id=\"@+id/linearChoice2\"\n\n        android:orientation=\"horizontal\">\n        <ImageView\n            android:id=\"@+id/point2Img\"\n            android:layout_width=\"20dp\"\n            android:layout_height=\"20dp\"\n            android:visibility=\"visible\"\n            android:layout_marginTop=\"4dp\"\n            android:layout_marginLeft=\"10dp\"\n            android:background=\"@drawable/tealdot_icon\" />\n\n        <LinearLayout\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"wrap_content\"\n            android:layout_gravity=\"center_vertical\"\n            android:orientation=\"vertical\">\n            <TextView\n\n                android:id=\"@+id/textViewCCAChoice2\"\n                android:layout_width=\"wrap_content\"\n                android:layout_height=\"wrap_content\"\n                android:text=\"Choice 2:\"\n                android:textSize=\"16sp\"\n                android:layout_marginLeft=\"5dp\"\n                android:layout_gravity=\"center_vertical\"\n                android:textColor=\"#ff000000\" />\n            <TextView\n\n                android:id=\"@+id/textViewCCAaDateItemChoice2\"\n                android:layout_width=\"wrap_content\"\n                android:layout_height=\"wrap_content\"\n                android:layout_marginLeft=\"5dp\"\n                android:layout_marginTop=\"2dp\"\n                android:text=\"None\"\n                android:textColor=\"@color/dark_grey1\"\n                android:textSize=\"14sp\" />\n            <TextView\n\n                android:id=\"@+id/location2Txt\"\n                android:layout_width=\"wrap_content\"\n                android:layout_height=\"wrap_content\"\n                android:layout_marginLeft=\"5dp\"\n                android:layout_marginTop=\"2dp\"\n                android:textColor=\"@color/dark_grey1\"\n                android:textSize=\"14sp\" />\n            <TextView\n\n                android:id=\"@+id/description2Txt\"\n                android:layout_width=\"wrap_content\"\n                android:layout_height=\"wrap_content\"\n                android:layout_marginLeft=\"5dp\"\n                android:layout_marginTop=\"2dp\"\n                android:textColor=\"@color/dark_grey1\"\n                android:textSize=\"14sp\" />\n        </LinearLayout>\n\n    </LinearLayout>\n\n</LinearLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/adapter_cca_final_review.xml b/app/src/main/res/layout/adapter_cca_final_review.xml
--- a/app/src/main/res/layout/adapter_cca_final_review.xml	(revision 29dbbedb1ce8c3fe2a8032d242fcce101acbc7b5)
+++ b/app/src/main/res/layout/adapter_cca_final_review.xml	(date 1690562811024)
@@ -61,22 +61,25 @@
                 android:textSize="14sp" />
             <TextView
 
-                android:id="@+id/locationTxt"
+                android:id="@+id/descriptionTxt"
                 android:layout_width="wrap_content"
                 android:layout_height="wrap_content"
                 android:layout_marginLeft="5dp"
                 android:layout_marginTop="2dp"
+                android:layout_marginRight="5dp"
+
                 android:textColor="@color/dark_grey1"
                 android:textSize="14sp" />
             <TextView
 
-                android:id="@+id/descriptionTxt"
+                android:id="@+id/locationTxt"
                 android:layout_width="wrap_content"
                 android:layout_height="wrap_content"
                 android:layout_marginLeft="5dp"
                 android:layout_marginTop="2dp"
                 android:textColor="@color/dark_grey1"
                 android:textSize="14sp" />
+
         </LinearLayout>
     </LinearLayout>
     <LinearLayout
@@ -122,22 +125,25 @@
                 android:textSize="14sp" />
             <TextView
 
-                android:id="@+id/location2Txt"
+                android:id="@+id/description2Txt"
                 android:layout_width="wrap_content"
                 android:layout_height="wrap_content"
                 android:layout_marginLeft="5dp"
+                android:layout_marginRight="5dp"
                 android:layout_marginTop="2dp"
+
                 android:textColor="@color/dark_grey1"
                 android:textSize="14sp" />
             <TextView
 
-                android:id="@+id/description2Txt"
+                android:id="@+id/location2Txt"
                 android:layout_width="wrap_content"
                 android:layout_height="wrap_content"
                 android:layout_marginLeft="5dp"
                 android:layout_marginTop="2dp"
                 android:textColor="@color/dark_grey1"
                 android:textSize="14sp" />
+
         </LinearLayout>
 
     </LinearLayout>
Index: app/src/main/java/com/nas/alreem/activity/cca/CCAsReviewAfterSubmissionActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.nas.alreem.activity.cca\n\nimport android.content.Context\nimport android.content.Intent\nimport android.os.Bundle\nimport android.text.Html\nimport android.view.View\nimport android.widget.*\nimport androidx.appcompat.app.AppCompatActivity\nimport androidx.recyclerview.widget.GridLayoutManager\nimport androidx.recyclerview.widget.RecyclerView\nimport com.nas.alreem.R\nimport com.nas.alreem.activity.cca.adapter.CCAfinalReviewAfterSubmissionAdapter\nimport com.nas.alreem.activity.cca.model.CCAAttendanceModel\nimport com.nas.alreem.activity.cca.model.CCAReviewAfterSubmissionModel\nimport com.nas.alreem.activity.cca.model.CCAReviewRequestModel\nimport com.nas.alreem.activity.cca.model.CCAReviewResponseModel\nimport com.nas.alreem.activity.home.HomeActivity\nimport com.nas.alreem.constants.ConstantFunctions\nimport com.nas.alreem.constants.PreferenceManager\nimport com.nas.alreem.rest.ApiClient\n\nimport retrofit2.Call\nimport retrofit2.Callback\nimport retrofit2.Response\n\nclass CCAsReviewAfterSubmissionActivity : AppCompatActivity() {\n    lateinit var mContext: Context\n    lateinit var titleTextView: TextView\n    lateinit var back: ImageView\n    lateinit var backRelative: RelativeLayout\n    lateinit var logoclick: ImageView\n    lateinit var progressBar: ProgressBar\n    var recyclerViewLayoutManager: GridLayoutManager? = null\n    var recycler_review: RecyclerView? = null\n    var relativeHeader: RelativeLayout? = null\n    var attendanceListIcon: ImageView? = null\n    var tab_type = \"ECAs\"\n    var extras: Bundle? = null\n    var mCCADetailModelArrayList: ArrayList<CCAReviewAfterSubmissionModel>? = null\n    var textViewCCAaItem: TextView? = null\n    var messageTxt: RelativeLayout? = null\n    var editCcca: RelativeLayout? = null\n    var weekList: ArrayList<String>? = null\n    var absentDaysChoice2Array: ArrayList<String>? = null\n    var presentDaysChoice2Array: ArrayList<String>? = null\n    var upcomingDaysChoice2Array: ArrayList<String>? = null\n    var absentDaysChoice1Array: ArrayList<String>? = null\n    var presentDaysChoice1Array: ArrayList<String>? = null\n    var upcomingDaysChoice1Array: ArrayList<String>? = null\n    var datestringChoice1: ArrayList<CCAAttendanceModel>? = null\n    var datestringChoice2: ArrayList<CCAAttendanceModel>? = null\n    var submissiondateover = \"-1\"\n    override fun onCreate(savedInstanceState: Bundle?) {\n        super.onCreate(savedInstanceState)\n        setContentView(R.layout.activity_ccas_review_after_submission)\n        mContext = this\n        titleTextView = findViewById(R.id.heading)\n        back = findViewById(R.id.btn_left)\n        backRelative = findViewById(R.id.backRelative)\n        logoclick = findViewById(R.id.logoClickImgView)\n        progressBar = findViewById(R.id.progress)\n        logoclick.setOnClickListener {\n            val mIntent = Intent(mContext, HomeActivity::class.java)\n            mIntent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP)\n\n            startActivity(mIntent)\n        }\n        backRelative.setOnClickListener {\n            finish()\n        }\n        extras = intent.extras\n        if (extras != null) {\n            tab_type = extras!!.getString(\"tab_type\")!!\n            submissiondateover = extras!!.getString(\"submissiondateover\", \"-1\")\n        }\n        weekList = java.util.ArrayList<String>()\n        weekList!!.add(\"Sunday\")\n        weekList!!.add(\"Monday\")\n        weekList!!.add(\"Tuesday\")\n        weekList!!.add(\"Wednesday\")\n        weekList!!.add(\"Thursday\")\n        weekList!!.add(\"Friday\")\n        weekList!!.add(\"Saturday\")\n        absentDaysChoice2Array = java.util.ArrayList<String>()\n        presentDaysChoice2Array = java.util.ArrayList<String>()\n        upcomingDaysChoice2Array = java.util.ArrayList<String>()\n        absentDaysChoice1Array = java.util.ArrayList<String>()\n        presentDaysChoice1Array = java.util.ArrayList<String>()\n        upcomingDaysChoice1Array = java.util.ArrayList<String>()\n        datestringChoice1 =\n            java.util.ArrayList<CCAAttendanceModel>()\n        datestringChoice2 =\n            java.util.ArrayList<CCAAttendanceModel>()\n        relativeHeader = findViewById<View>(R.id.relativeHeader) as RelativeLayout\n        recycler_review =\n            findViewById<View>(R.id.recycler_view_cca) as RecyclerView\n        textViewCCAaItem = findViewById<View>(R.id.textViewCCAaItem) as TextView\n        messageTxt = findViewById<View>(R.id.messageTxt) as RelativeLayout\n        editCcca = findViewById<View>(R.id.editCcca) as RelativeLayout\n        editCcca!!.visibility = View.GONE\n        messageTxt!!.visibility = View.GONE\n\n        recycler_review!!.setHasFixedSize(true)\n        recyclerViewLayoutManager = GridLayoutManager(mContext, 1)\n        recycler_review!!.setLayoutManager(recyclerViewLayoutManager)\n        mCCADetailModelArrayList =\n            java.util.ArrayList<CCAReviewAfterSubmissionModel>()\n        if (PreferenceManager.getStudClassForCCA(mContext)\n                .equals(\"\")\n        ) {\n            textViewCCAaItem!!.text = Html.fromHtml(\n                PreferenceManager.getCCATitle(mContext)\n                    .toString() + \"<br/>\" + PreferenceManager.getStudentName(\n                    mContext)+\"<br/>Year Group : \" + PreferenceManager.getStudentClass( mContext))\n        } else {\n            textViewCCAaItem!!.text = Html.fromHtml(\n                PreferenceManager.getCCATitle(mContext)\n                    .toString() + \"<br/>\" + PreferenceManager.getStudNameForCCA(\n                    mContext\n                ) + \"<br/>Year Group : \" + PreferenceManager.getStudClassForCCA(\n                    mContext\n                )\n            )\n        }\n        var internetCheck = ConstantFunctions.internetCheck(mContext)\n\n        if (internetCheck) {\n            ccaReviewListAPI()\n\n        } else {\n            //  InternetCheckClass.showSuccessInternetAlert(mContext)\n        }\n\n    }\n\n\n    private fun ccaReviewListAPI() {\n        val body = CCAReviewRequestModel(\n            PreferenceManager.getStudIdForCCA(mContext)!!,\n            PreferenceManager.getCCAItemId(mContext)!!\n        )\n        val token = PreferenceManager.getaccesstoken(mContext)\n        val call: Call<CCAReviewResponseModel> =\n            ApiClient.getClient.ccaReview(body, \"Bearer $token\")\n        progressBar.visibility = View.VISIBLE\n        call.enqueue(object : Callback<CCAReviewResponseModel> {\n            override fun onResponse(\n                call: Call<CCAReviewResponseModel>,\n                response: Response<CCAReviewResponseModel>\n            ) {\n                progressBar.visibility = View.GONE\n                if (response.isSuccessful) {\n                    if (response.body() != null) {\n                        if (response.body()!!.status.toString() == \"100\") {\n\n                            if (response.body()!!.data!!.size > 0) {\n                                for (j in weekList!!.indices) {\n                                    for (i in 0 until response.body()!!.data!!.size) {\n                                        if (response.body()!!.data!![i]!!.day.equals(\n                                                weekList!!.get(j)\n                                                    .toString(), ignoreCase = true\n                                            )\n                                        ) {\n                                            addCCAReviewlist(\n                                                response.body()!!.data!![i]\n                                            )\n                                        }\n                                    }\n                                }\n                                val mCCAsActivityAdapter = CCAfinalReviewAfterSubmissionAdapter(\n                                    mContext,\n                                    mCCADetailModelArrayList!!\n                                )\n                                recycler_review!!.setAdapter(\n                                    mCCAsActivityAdapter\n                                )\n                            } else {\n                                val mCCAsActivityAdapter = CCAfinalReviewAfterSubmissionAdapter(\n                                    mContext,\n                                    mCCADetailModelArrayList!!\n                                )\n                                recycler_review!!.setAdapter(\n                                    mCCAsActivityAdapter\n                                )\n                                Toast.makeText(\n                                    mContext,\n                                    \"No ECA available\",\n                                    Toast.LENGTH_SHORT\n                                ).show()\n                            }\n                        } else {\n                            ConstantFunctions.showDialogueWithOk(\n                                mContext,\n                                getString(R.string.common_error),\n                                \"Alert\"\n                            )\n                        }\n                    } else {\n                        ConstantFunctions.showDialogueWithOk(\n                            mContext,\n                            getString(R.string.common_error),\n                            \"Alert\"\n                        )\n                    }\n                }\n            }\n\n            override fun onFailure(call: Call<CCAReviewResponseModel>, t: Throwable) {\n                progressBar.visibility = View.GONE\n                ConstantFunctions.showDialogueWithOk(\n                    mContext,\n                    getString(R.string.common_error),\n                    \"Alert\"\n                )\n            }\n\n\n        })\n    }\n\n    private fun addCCAReviewlist(dataObject: CCAReviewResponseModel.Data) {\n        val mCCAModel = CCAReviewAfterSubmissionModel()\n        mCCAModel.day = dataObject!!.day\n        datestringChoice1 =\n            java.util.ArrayList<CCAAttendanceModel>()\n        datestringChoice2 =\n            java.util.ArrayList<CCAAttendanceModel>()\n        var ch = 0\n        if (dataObject!!.choice1 != null) {\n            val choice1 = dataObject.choice1\n            if (choice1 != null) {\n                if (choice1.cca_item_name != null) {\n                    mCCAModel.choice1 = choice1.cca_item_name\n                    mCCAModel.cca_details_id = choice1.cca_details_id.toString()\n                    mCCAModel.cca_item_start_time = choice1.cca_item_start_time\n                    mCCAModel.cca_item_end_time = choice1.cca_item_end_time\n                    mCCAModel.attending_status = choice1.attending_status\n                    val absentDaysChoice1 = choice1.absentDays\n                    if (choice1.cca_item_description != null){\n                        mCCAModel.cca_item_description = choice1.cca_item_description\n//                        mCCAModel.cca_item_description_2 = \"\"\n                    }else{\n                        mCCAModel.cca_item_description = \"\"\n//                        mCCAModel.cca_item_description_2 = \"\"\n                    }\n                    if (choice1.cca_venue != null){\n                        mCCAModel.venue = choice1.cca_venue\n//                        mCCAModel.venue2 = \"\"\n                    }else{\n                        mCCAModel.venue = \"\"\n//                        mCCAModel.venue2 = \"\"\n                    }\n                    absentDaysChoice1Array =\n                        java.util.ArrayList<String>()\n                    presentDaysChoice1Array =\n                        java.util.ArrayList<String>()\n                    upcomingDaysChoice1Array =\n                        java.util.ArrayList<String>()\n                    if (choice1.attending_status.equals(\"1\", ignoreCase = true)) {\n                        if (choice1.absentDays !=null) {\n                            ch = 1\n                            for (i in 0 until absentDaysChoice1!!.size) {\n                                absentDaysChoice1Array!!.add(\n                                    absentDaysChoice1[i]!!\n                                )\n                            }\n                        }\n                        if (choice1.presentDays != null) {\n                            ch = 1\n                            val presentDaysChoice1 = choice1.presentDays\n                            for (i in 0 until presentDaysChoice1.size) {\n                                presentDaysChoice1Array!!.add(\n                                    presentDaysChoice1[i]!!\n                                )\n                            }\n                        }\n                        if (choice1.upcomingDays != null) {\n                            ch = 1\n                            val upcomingDaysChoice1 = choice1.upcomingDays\n                            for (i in 0 until upcomingDaysChoice1.size) {\n                                upcomingDaysChoice1Array!!.add(\n                                    upcomingDaysChoice1[i]!!\n                                )\n                            }\n                        }\n                    } else if (choice1.attending_status\n                            .equals(\"3\", ignoreCase = true)\n                    ) {\n                        if (choice1.absentDays != null) {\n                            for (i in 0 until absentDaysChoice1!!.size) {\n                                absentDaysChoice1Array!!.add(\n                                    absentDaysChoice1[i]!!\n                                )\n                            }\n                            ch = 1\n                        }\n                        if (choice1.presentDays != null) {\n                            val presentDaysChoice1 = choice1.presentDays\n                            for (i in 0 until presentDaysChoice1.size) {\n                                presentDaysChoice1Array!!.add(\n                                    presentDaysChoice1[i]!!\n                                )\n                            }\n                            ch = 1\n                        }\n                    } else {\n                        mCCAModel.choice1 = \"0\"\n                    }\n                } else {\n                    mCCAModel.choice1 = \"0\"\n                }\n            } else {\n                mCCAModel.choice1 = \"0\"\n            }\n        } else {\n            mCCAModel.choice1 = \"-1\"\n        }\n        if (dataObject.choice2 != null) {\n            val choice2 = dataObject.choice2\n            if (choice2 != null) {\n                if (choice2.cca_item_name != null) {\n                    mCCAModel.choice2 = choice2.cca_item_name\n                    mCCAModel.cca_item_start_time = choice2.cca_item_start_time\n                    mCCAModel.cca_item_end_time = choice2.cca_item_end_time\n                    mCCAModel.cca_details_id2 = choice2.cca_details_id.toString()\n                    mCCAModel.attending_status2 = choice2.attending_status\n                    if (choice2.cca_item_description != null){\n                        mCCAModel.cca_item_description_2 = choice2.cca_item_description\n//                        mCCAModel.cca_item_description = \"\"\n                    }else{\n                        mCCAModel.cca_item_description_2 = \"\"\n//                        mCCAModel.cca_item_description = \"\"\n                    }\n                    if (choice2.cca_venue != null){\n                        mCCAModel.venue2 = choice2.cca_venue\n//                        mCCAModel.venue = \"\"\n                    }else{\n                        mCCAModel.venue2 = \"\"\n//                        mCCAModel.venue = \"\"\n                    }\n\n                    val absentDaysChoice2 = choice2.absentDays\n                    absentDaysChoice2Array =\n                        java.util.ArrayList<String>()\n                    presentDaysChoice2Array =\n                        java.util.ArrayList<String>()\n                    upcomingDaysChoice2Array =\n                        java.util.ArrayList<String>()\n                    if (choice2.attending_status.equals(\"1\", ignoreCase = true)) {\n                        if (choice2.absentDays != null) {\n                            ch = 1\n                            for (i in 0 until absentDaysChoice2!!.size) {\n                                absentDaysChoice2Array!!.add(\n                                    absentDaysChoice2!![i]!!\n                                )\n                            }\n                        }\n                        val presentDaysChoice2 = choice2.presentDays\n                        if (choice2.presentDays != null) {\n                            ch = 1\n                            for (i in 0 until presentDaysChoice2!!.size) {\n                                presentDaysChoice2Array!!.add(\n                                    presentDaysChoice2[i]!!\n                                )\n                            }\n                        }\n                        val upcomingDaysChoice2 = choice2.upcomingDays\n                        if (choice2.upcomingDays != null) {\n                            ch = 1\n                            for (i in 0 until upcomingDaysChoice2!!.size) {\n                                upcomingDaysChoice2Array!!.add(\n                                    upcomingDaysChoice2!![i]!!\n                                )\n                            }\n                        }\n                    } else if (choice2.attending_status\n                            .equals(\"3\", ignoreCase = true)\n                    ) {\n                        if (choice2.absentDays != null) {\n                            for (i in 0 until absentDaysChoice2!!.size) {\n                                absentDaysChoice2Array!!.add(\n                                    absentDaysChoice2[i]!!\n                                )\n                            }\n                            ch = 1\n                        }\n                        if (choice2.presentDays != null) {\n                            val presentDaysChoice2 = choice2.presentDays\n                            for (i in 0 until presentDaysChoice2!!.size) {\n                                presentDaysChoice2Array!!.add(\n                                    presentDaysChoice2[i]!!\n                                )\n                            }\n                            ch = 1\n                        }\n                    } else {\n                        mCCAModel.choice2 = \"0\"\n                    }\n                } else {\n                    mCCAModel.choice2 = \"0\"\n                }\n            } else {\n                mCCAModel.choice2 = \"0\"\n            }\n        } else {\n            mCCAModel.choice2 = \"-1\"\n        }\n\n        if (absentDaysChoice1Array!!.size > 0) {\n            for (i in absentDaysChoice1Array!!.indices) {\n                val mCCAAttendanceModel = CCAAttendanceModel()\n                mCCAAttendanceModel.dateAttend =\n                    absentDaysChoice1Array!!.get(i).toString()\n                mCCAAttendanceModel.statusCCA = \"a\"\n                datestringChoice1!!.add(mCCAAttendanceModel)\n            }\n        }\n\n        if (upcomingDaysChoice1Array!!.size > 0) {\n            for (i in upcomingDaysChoice1Array!!.indices)  //                datestringChoice1.add(upcomingDaysChoice1Array.get(i).toString());\n            {\n                val mCCAAttendanceModel = CCAAttendanceModel()\n                mCCAAttendanceModel.dateAttend =\n                    upcomingDaysChoice1Array!!.get(i).toString()\n                mCCAAttendanceModel.statusCCA = \"u\"\n                datestringChoice1!!.add(mCCAAttendanceModel)\n            }\n        }\n\n        if (presentDaysChoice1Array!!.size > 0) {\n            for (i in presentDaysChoice1Array!!.indices)  //                datestringChoice1.add(presentDaysChoice1Array.get(i).toString());\n            {\n                val mCCAAttendanceModel = CCAAttendanceModel()\n                mCCAAttendanceModel.dateAttend =\n                    presentDaysChoice1Array!!.get(i).toString()\n                mCCAAttendanceModel.statusCCA = \"p\"\n                datestringChoice1!!.add(mCCAAttendanceModel)\n            }\n        }\n        if (absentDaysChoice2Array!!.size > 0) {\n            for (i in absentDaysChoice2Array!!.indices) {\n                val mCCAAttendanceModel = CCAAttendanceModel()\n                mCCAAttendanceModel.dateAttend =\n                    absentDaysChoice2Array!!.get(i).toString()\n                mCCAAttendanceModel.statusCCA = \"a\"\n                datestringChoice2!!.add(mCCAAttendanceModel)\n            }\n        }\n        if (upcomingDaysChoice2Array!!.size > 0) {\n            for (i in upcomingDaysChoice2Array!!.indices) {\n                val mCCAAttendanceModel = CCAAttendanceModel()\n                mCCAAttendanceModel.dateAttend =\n                    upcomingDaysChoice2Array!!.get(i).toString()\n                mCCAAttendanceModel.statusCCA = \"u\"\n                datestringChoice2!!.add(mCCAAttendanceModel)\n            }\n        }\n        if (presentDaysChoice2Array!!.size > 0) {\n            for (i in presentDaysChoice2Array!!.indices) {\n                val mCCAAttendanceModel = CCAAttendanceModel()\n                mCCAAttendanceModel.dateAttend =\n                    presentDaysChoice2Array!!!!.get(i).toString()\n                mCCAAttendanceModel.statusCCA = \"p\"\n                datestringChoice2!!.add(mCCAAttendanceModel)\n            }\n        }\n        if (datestringChoice1!!.size > 0) {\n            datestringChoice1!!.sortWith(Comparator { s1, s2 -> s1!!.dateAttend!!.compareTo(s2!!.dateAttend!!, ignoreCase = true) })\n        }\n        if (datestringChoice2!!.size > 0) {\n            datestringChoice1!!.sortWith(Comparator { s1, s2 -> s1!!.dateAttend!!.compareTo(s2!!.dateAttend!!, ignoreCase = true) })\n        }\n        mCCAModel.calendarDaysChoice1 = datestringChoice1\n        mCCAModel.calendarDaysChoice2 = datestringChoice2\n        println(\"ch:::$ch\")\n\n        if (ch == 1) {\n            mCCADetailModelArrayList!!.add(mCCAModel)\n        }\n    }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/nas/alreem/activity/cca/CCAsReviewAfterSubmissionActivity.kt b/app/src/main/java/com/nas/alreem/activity/cca/CCAsReviewAfterSubmissionActivity.kt
--- a/app/src/main/java/com/nas/alreem/activity/cca/CCAsReviewAfterSubmissionActivity.kt	(revision 29dbbedb1ce8c3fe2a8032d242fcce101acbc7b5)
+++ b/app/src/main/java/com/nas/alreem/activity/cca/CCAsReviewAfterSubmissionActivity.kt	(date 1690800036324)
@@ -67,7 +67,10 @@
             startActivity(mIntent)
         }
         backRelative.setOnClickListener {
-            finish()
+          //  finish()
+            val mIntent = Intent(mContext, CCA_Activity::class.java)
+            mIntent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP)
+            startActivity(mIntent)
         }
         extras = intent.extras
         if (extras != null) {
@@ -185,7 +188,7 @@
                                 )
                                 Toast.makeText(
                                     mContext,
-                                    "No ECA available",
+                                    "No EAP available",
                                     Toast.LENGTH_SHORT
                                 ).show()
                             }
Index: app/src/main/java/com/nas/alreem/fragment/about_us/model/AboutUsDataModel.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.nas.alreem.fragment.about_us.model\n\nimport com.google.gson.annotations.SerializedName\n\nclass AboutUsDataModel  {\n    @SerializedName(\"id\") val id:Int=0\n    @SerializedName(\"name\") val name:String=\"\"\n    @SerializedName(\"tab_type\") val tab_type:String=\"\"\n    @SerializedName(\"url\") val url:String=\"\"\n    @SerializedName(\"title\") val title:String=\"\"\n    @SerializedName(\"created_at\") val created_at:String=\"\"\n\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/nas/alreem/fragment/about_us/model/AboutUsDataModel.kt b/app/src/main/java/com/nas/alreem/fragment/about_us/model/AboutUsDataModel.kt
--- a/app/src/main/java/com/nas/alreem/fragment/about_us/model/AboutUsDataModel.kt	(revision 29dbbedb1ce8c3fe2a8032d242fcce101acbc7b5)
+++ b/app/src/main/java/com/nas/alreem/fragment/about_us/model/AboutUsDataModel.kt	(date 1690880593006)
@@ -3,6 +3,7 @@
 import com.google.gson.annotations.SerializedName
 
 class AboutUsDataModel  {
+
     @SerializedName("id") val id:Int=0
     @SerializedName("name") val name:String=""
     @SerializedName("tab_type") val tab_type:String=""
Index: app/src/main/java/com/nas/alreem/activity/cca/CCAsReviewActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.nas.alreem.activity.cca\n\nimport android.app.Activity\nimport android.app.Dialog\nimport android.content.Context\nimport android.content.Intent\nimport android.graphics.Color\nimport android.graphics.drawable.ColorDrawable\nimport android.os.Bundle\nimport android.text.Html\nimport android.util.Log\nimport android.view.View\nimport android.view.Window\nimport android.widget.*\nimport androidx.appcompat.app.AppCompatActivity\nimport androidx.recyclerview.widget.GridLayoutManager\nimport androidx.recyclerview.widget.RecyclerView\nimport com.nas.alreem.R\nimport com.nas.alreem.activity.cca.adapter.CCAfinalReviewAdapter\nimport com.nas.alreem.activity.cca.model.CCADetailModel\nimport com.nas.alreem.activity.cca.model.CCASubmitResponseModel\nimport com.nas.alreem.activity.cca.model.CCASumbitRequestModel\nimport com.nas.alreem.activity.home.HomeActivity\nimport com.nas.alreem.appcontroller.AppController\nimport com.nas.alreem.constants.ConstantFunctions\nimport com.nas.alreem.constants.PreferenceManager\nimport com.nas.alreem.rest.ApiClient\n\nimport retrofit2.Call\nimport retrofit2.Callback\nimport retrofit2.Response\n\nclass CCAsReviewActivity : AppCompatActivity() {\n    lateinit var mContext: Context\n    lateinit var titleTextView: TextView\n    lateinit var back: ImageView\n    lateinit var backRelative: RelativeLayout\n    lateinit var logoclick: ImageView\n    lateinit var progressBar: ProgressBar\n    var recyclerViewLayoutManager: GridLayoutManager? = null\n    var recycler_review: RecyclerView? = null\n//    var headermanager: HeaderManager? = null\n    var relativeHeader: RelativeLayout? = null\n    var CCADetailModelArrayList: ArrayList<CCADetailModel>? = ArrayList()\n//    var back: ImageView? = null\n    var submitBtn: Button? = null\n    var home: ImageView? = null\n    var tab_type = \"ECAs\"\n    var extras: Bundle? = null\n    var mCCADetailModelArrayList: ArrayList<CCADetailModel>? = ArrayList()\n    var mCCAItemIdArray: java.util.ArrayList<String>? = null\n    var textViewCCAaItem: TextView? = null\n    var cca_details = \"\"\n    var cca_detailsId = \"[\"\n    var mCCADetailModels: CCADetailModel? = null\n    var survey_satisfation_status = 0\n    var currentPage = 0\n    var currentPageSurvey = 0\n    private val surveySize = 0\n    var pos = -1\n//    var surveyArrayList: java.util.ArrayList<SurveyModel>? = null\n//    var surveyQuestionArrayList: java.util.ArrayList<SurveyQuestionsModel>? = null\n//    var surveyAnswersArrayList: java.util.ArrayList<SurveyAnswersModel>? = null\n//    var mAnswerList: java.util.ArrayList<AnswerSubmitModel>? = null\n    var text_content: TextView? = null\n    var text_dialog: TextView? = null\n    private val surveyEmail = \"\"\n    override fun onCreate(savedInstanceState: Bundle?) {\n        super.onCreate(savedInstanceState)\n        setContentView(R.layout.activity_ccas_review)\n        mContext = this\n        titleTextView = findViewById(R.id.heading)\n        back = findViewById(R.id.btn_left)\n        backRelative = findViewById(R.id.backRelative)\n        logoclick = findViewById(R.id.logoClickImgView)\n        progressBar = findViewById(R.id.progress)\n        extras = intent.extras\n        logoclick.setOnClickListener {\n            val mIntent = Intent(mContext, HomeActivity::class.java)\n            mIntent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP)\n\n            startActivity(mIntent)\n        }\n        backRelative.setOnClickListener {\n            finish()\n        }\n        if (extras != null) {\n//            tab_type = extras!!.getString(\"tab_type\").toString()\n\n            CCADetailModelArrayList=\n                extras!!.getSerializable(\"detail_array\") as ArrayList<CCADetailModel>?\n            Log.e(\"size review\", CCADetailModelArrayList!!.size.toString())\n        }else{\n           CCADetailModelArrayList = AppController.CCADetailModelArrayList\n            Log.e(\"size review\", CCADetailModelArrayList!!.size.toString())\n        }\n\n        for (j in 0 until CCADetailModelArrayList!!.size)\n            {\n                Log.e(\"ccadetail model size\", CCADetailModelArrayList!!.size.toString())\n        }\n\n        relativeHeader = findViewById<View>(R.id.relativeHeader) as RelativeLayout\n        recycler_review = findViewById<View>(R.id.recycler_view_cca) as RecyclerView\n        textViewCCAaItem = findViewById<View>(R.id.textViewCCAaItem) as TextView\n        submitBtn = findViewById<View>(R.id.submitBtn) as Button\n\n        recycler_review!!.setHasFixedSize(true)\n        recyclerViewLayoutManager = GridLayoutManager(mContext, 1)\n        recycler_review!!.layoutManager = recyclerViewLayoutManager\n        mCCADetailModelArrayList = ArrayList<CCADetailModel>()\n        mCCAItemIdArray = ArrayList<String>()\n        if (PreferenceManager.getStudClassForCCA(mContext).equals(\"\")) {\n            textViewCCAaItem!!.text = Html.fromHtml(\n                PreferenceManager.getCCATitle(mContext)\n                    .toString() + \"<br/>\" + PreferenceManager.getStudentName(mContext)+ \"<br/>Year Group : \" + PreferenceManager.getStudentClass(\n                    mContext)\n            )\n        } else {\n            textViewCCAaItem!!.text = Html.fromHtml(\n                PreferenceManager.getCCATitle(mContext)\n                    .toString() + \"<br/>\" + PreferenceManager.getStudNameForCCA(mContext) + \"<br/>Year Group : \" + PreferenceManager.getStudClassForCCA(\n                    mContext\n                )\n            )\n        }\n        for (i in 0 until AppController.weekList.size) {\n            Log.e(\"here\",\"Here\")\n            for (j in 0 until CCADetailModelArrayList!!.size) {\n                if (AppController.weekList[i].weekDay.equals(\n                        CCADetailModelArrayList!![j].day,ignoreCase = true\n                    )\n                ) {\n                    Log.e(\"ccadetail model size\", CCADetailModelArrayList!!.size.toString())\n                    val mCCADetailModel = CCADetailModel()\n                    mCCADetailModel.day = CCADetailModelArrayList!![j].day\n                    mCCADetailModel.choice1 = CCADetailModelArrayList!![j].choice1\n                    mCCADetailModel.choice2 = CCADetailModelArrayList!![j].choice2\n                    mCCADetailModel.choice1Id = CCADetailModelArrayList!![j].choice1Id\n                    mCCADetailModel.choice2Id = CCADetailModelArrayList!![j].choice2Id\n\n                    if(CCADetailModelArrayList!![j].location != null){\n                        mCCADetailModel.location = CCADetailModelArrayList!![j].location\n                    }else{\n                        mCCADetailModel.location = \"\"\n                    }\n                    if(CCADetailModelArrayList!![j].location2 != null){\n                        mCCADetailModel.location2 = CCADetailModelArrayList!![j].location2\n                    }else{\n                        mCCADetailModel.location2 = \"\"\n                    }\n                    if(CCADetailModelArrayList!![j].description != null){\n                        mCCADetailModel.description = CCADetailModelArrayList!![j].description\n                    }else{\n                        mCCADetailModel.description = \"\"\n                    }\n                    if(CCADetailModelArrayList!![j].description2 != null){\n                        mCCADetailModel.description2 = CCADetailModelArrayList!![j].description2\n                    }else{\n                        mCCADetailModel.description2 = \"\"\n                    }\n\n                    for (k in 0 until CCADetailModelArrayList!![j].ccaChoiceModel!!.size)\n                        if (CCADetailModelArrayList!![j].choice1.equals(\n                                CCADetailModelArrayList!![j].ccaChoiceModel!![k].cca_item_name\n                            )\n                    ) {\n                        if (CCADetailModelArrayList!![j].ccaChoiceModel!![k].cca_item_start_time != null\n                            && CCADetailModelArrayList!![j].ccaChoiceModel!![k].cca_item_end_time != null\n                        ) {\n                            mCCADetailModel.cca_item_start_timechoice1 = CCADetailModelArrayList!![j].ccaChoiceModel!![k].cca_item_start_time\n                            mCCADetailModel.cca_item_end_timechoice1 = CCADetailModelArrayList!![j].ccaChoiceModel!![k].cca_item_end_time\n                            mCCADetailModel.location = CCADetailModelArrayList!![j].ccaChoiceModel!![k].venue\n                            mCCADetailModel.description = CCADetailModelArrayList!![j].ccaChoiceModel!![k].description\n\n                            break\n                        }\n                    }\n                    for (k in 0 until CCADetailModelArrayList!![j]\n                        .ccaChoiceModel2!!.size) if (CCADetailModelArrayList!![j]\n                            .choice2.equals(\n                                CCADetailModelArrayList!![j].ccaChoiceModel2!![k].cca_item_name,ignoreCase = true\n                            )\n                    ) {\n                        if (CCADetailModelArrayList!![j].ccaChoiceModel2!![k]\n                                .cca_item_start_time != null && CCADetailModelArrayList!![j].ccaChoiceModel2!![k].cca_item_end_time != null\n                        ) {\n                            mCCADetailModel.cca_item_start_timechoice2 = CCADetailModelArrayList!![j].ccaChoiceModel2!![k].cca_item_start_time\n                            mCCADetailModel.cca_item_end_timechoice2 = CCADetailModelArrayList!![j].ccaChoiceModel2!![k].cca_item_end_time\n                            mCCADetailModel.location2 = CCADetailModelArrayList!![j].ccaChoiceModel2!![k].venue\n                            mCCADetailModel.description2 = CCADetailModelArrayList!![j].ccaChoiceModel2!![k].description\n\n\n                            break\n                        }\n                    }\n                    mCCADetailModelArrayList!!.add(mCCADetailModel)\n                    Log.e(\"detaiol\",mCCADetailModel.location.toString())\n                    break\n                }\n            }\n        }\n\n        val mCCAsActivityAdapter = CCAfinalReviewAdapter(mContext, mCCADetailModelArrayList!!)\n        recycler_review!!.adapter = mCCAsActivityAdapter\n        for (j in mCCADetailModelArrayList!!.indices) {\n            Log.e(\"cca\", mCCADetailModelArrayList!![j].choice1.toString())\n            if (mCCADetailModelArrayList!!.get(j)\n                    .choice1 != null && mCCADetailModelArrayList!![j].choice2 != null\n            ) {\n                if (!mCCADetailModelArrayList!![j].choice1Id.equals(\"-541\") &&\n                    !mCCADetailModelArrayList!![j].choice2Id.equals(\"-541\")\n                ) {\n                   /* Log.e(\"1\",\n                        mCCAItemIdArray!!.add(mCCADetailModelArrayList!![j].choice1Id!!).toString()\n                    )*/\n\n                    mCCAItemIdArray!!.add(mCCADetailModelArrayList!![j].choice1Id!!)\n                    mCCAItemIdArray!!.add(mCCADetailModelArrayList!![j].choice2Id!!)\n                } else if (!mCCADetailModelArrayList!![j].choice1Id.equals(\"-541\")\n                ) {\n                   /* Log.e(\"2\",\n                        mCCAItemIdArray!!.add(mCCADetailModelArrayList!![j].choice1Id!!).toString()\n                    )*/\n                    mCCAItemIdArray!!.add(mCCADetailModelArrayList!![j].choice1Id!!)\n                } else if (!mCCADetailModelArrayList!![j].choice2Id.equals(\"-541\")\n                ) {\n                   /* Log.e(\"13\",\n                        mCCAItemIdArray!!.add(mCCADetailModelArrayList!![j].choice1Id!!).toString()\n                    )*/\n                    mCCAItemIdArray!!.add(mCCADetailModelArrayList!![j].choice2Id!!)\n                }\n            } else if (mCCADetailModelArrayList!![j].choice1 != null) {\n                if (!mCCADetailModelArrayList!![j].choice1Id.equals(\"-541\")) {\n                   /* Log.e(\"14\",\n                        mCCAItemIdArray!!.add(mCCADetailModelArrayList!![j].choice1Id!!).toString()\n                    )*/\n                    mCCAItemIdArray!!.add(mCCADetailModelArrayList!![j].choice1Id!!)\n                }\n            } else if (mCCADetailModelArrayList!![j].choice2 != null) {\n                if (!mCCADetailModelArrayList!![j].choice2Id.equals(\"-541\")) {\n                   /* Log.e(\"15\",\n                        mCCAItemIdArray!!.add(mCCADetailModelArrayList!![j].choice1Id!!).toString()\n                    )*/\n                    mCCAItemIdArray!!.add(mCCADetailModelArrayList!![j].choice2Id!!)\n                }\n            }\n        }\n\n        if (mCCAItemIdArray!!.size == 0) {\n            cca_detailsId += \"]}\"\n        }\n        for (i in mCCAItemIdArray!!.indices) {\n            Log.e(\"items\", mCCAItemIdArray!![i].toString())\n            if (mCCAItemIdArray!!.size - 1 == 0) {\n                cca_detailsId += \"\\\"\" + mCCAItemIdArray!![i] + \"\\\"]}\"\n            } else if (i == mCCAItemIdArray!!.size - 1) {\n                cca_detailsId += mCCAItemIdArray!![i] + \"\\\"]}\"\n            } else if (i == 0) {\n                cca_detailsId += \"\\\"\" + mCCAItemIdArray!![i] + \"\\\",\\\"\"\n            } else {\n                cca_detailsId += mCCAItemIdArray!![i] + \"\\\",\\\"\"\n            }\n        }\n        cca_details = \"{\\\"cca_days_id\\\":\\\"\" + PreferenceManager.getCCAItemId(mContext)\n            .toString() + \"\\\",\\\"student_id\\\":\\\"\" + PreferenceManager.getStudIdForCCA(mContext)\n            .toString() + \"\\\",\\\"users_id\\\":\\\"\" + PreferenceManager.getUserCode(mContext)\n            .toString() + \"\\\",\\\"cca_days_details_id\\\":\" + cca_detailsId\n\n        Log.e(\"cca_details\",cca_details)\n        Log.e(\"cca_detailsId\",cca_detailsId)\n\n        submitBtn!!.setOnClickListener(View.OnClickListener {\n            showDialogReviewSubmit(\n                mContext as Activity,\n                \"Confirm\",\n                \"Do you want to confirm this Enrichment?\",\n                R.drawable.exclamationicon,\n                R.drawable.round\n            )\n        })\n    }\n\n\n    private fun showDialogReviewSubmit(activity: Activity, msgHead: String, msg: String, ico: Int, bgIcon: Int) {\n        val dialog = Dialog(activity)\n        dialog.requestWindowFeature(Window.FEATURE_NO_TITLE)\n        dialog.window!!.setBackgroundDrawable(ColorDrawable(Color.TRANSPARENT))\n        dialog.setCancelable(false)\n        dialog.setContentView(R.layout.dialog_ok_cancel)\n        val icon = dialog.findViewById<View>(R.id.iconImageView) as ImageView\n        icon.setBackgroundResource(bgIcon)\n        icon.setImageResource(ico)\n        val text = dialog.findViewById<View>(R.id.text_dialog) as TextView\n        val textHead = dialog.findViewById<View>(R.id.alertHead) as TextView\n        text.text = msg\n        textHead.text = msgHead\n\n        val dialogButton = dialog.findViewById<View>(R.id.btn_Ok) as Button\n        dialogButton.setOnClickListener {\n\n            var internetCheck = ConstantFunctions.internetCheck(mContext)\n            if (internetCheck) {\n                ccaSubmitAPI()\n\n\n            } else {\n              //  internetCheck.showSuccessInternetAlert(mContext)\n            }\n            dialog.dismiss()\n\n        }\n        val dialogButtonCancel = dialog.findViewById<View>(R.id.btn_Cancel) as Button\n        dialogButtonCancel.setOnClickListener { dialog.dismiss() }\n        dialog.show()\n\n    }\n\n    private fun ccaSubmitAPI() {\n        Log.e(\"stud\", PreferenceManager.getStudIdForCCA(mContext).toString())\n        Log.e(\"day\",PreferenceManager.getCCAItemId(mContext).toString())\n        Log.e(\"details\",cca_detailsId)\n        val ccaDetail: ArrayList<String> = ArrayList()\n        for (i in mCCAItemIdArray!!.indices){\n//            if ( i != 0) {\n            if(!mCCAItemIdArray!![i].equals(\"-541\"))\n                ccaDetail.add(mCCAItemIdArray!![i].toString())\n//            }\n\n        }\n        Log.e(\"details1\",ccaDetail.toString())\n\n        var model= CCASumbitRequestModel(PreferenceManager.getStudIdForCCA(mContext).toString(),\n            PreferenceManager.getCCAItemId(mContext).toString(),ccaDetail.toString()\n        )\n        val token = PreferenceManager.getaccesstoken(mContext)\n        val call: Call<CCASubmitResponseModel> =\n            ApiClient.getClient.ccaSubmit( model,\"Bearer $token\")\n        progressBar.visibility = View.VISIBLE\n        call.enqueue(object : Callback<CCASubmitResponseModel> {\n            override fun onResponse(\n                call: Call<CCASubmitResponseModel>,\n                response: Response<CCASubmitResponseModel>\n            ) {\n                progressBar.visibility = View.GONE\n                if (response.isSuccessful){\n                    if (response.body() != null){\n                        if (response.body()!!.status!!.equals(100)){\n\n//                            val survey: Int = secobj.optInt(\"survey\")\n                            showDialogAlert(\n                                mContext as Activity,\n                                \"Success\",\n                                \"You are able to make changes until the closing date. After the closing date selections are final\",\n                                R.drawable.tickicon,\n                                R.drawable.round,\n                            )\n\n                        }\n                        else if (response.body()!!.status!!.equals(109))\n                        {\n\n\n                        }\n                        else{\n\n                            Toast.makeText(mContext, \"Failure\", Toast.LENGTH_SHORT).show()\n                        }\n\n                    }else{\n\n                        ConstantFunctions.showDialogueWithOk(mContext,getString(R.string.common_error),\"Alert\")\n                    }\n                }else{\n\n                    ConstantFunctions.showDialogueWithOk(mContext,getString(R.string.common_error),\"Alert\")\n                }\n            }\n\n            override fun onFailure(call: Call<CCASubmitResponseModel>, t: Throwable) {\n                progressBar.visibility = View.GONE\n                ConstantFunctions.showDialogueWithOk(mContext,getString(R.string.common_error),\"Alert\")\n            }\n\n        })\n    }\n\n    fun showDialogAlert(\n        activity: Activity?,\n        msgHead: String?,\n        msg: String?,\n        ico: Int,\n        bgIcon: Int,\n    ) {\n        val dialog = Dialog(activity!!)\n        dialog.requestWindowFeature(Window.FEATURE_NO_TITLE)\n        dialog.window!!.setBackgroundDrawable(ColorDrawable(Color.TRANSPARENT))\n        dialog.setCancelable(false)\n        dialog.setContentView(R.layout.dialog_common_error_alert)\n        val icon = dialog.findViewById<View>(R.id.iconImageView) as ImageView\n        icon.setBackgroundResource(bgIcon)\n        icon.setImageResource(ico)\n        val text = dialog.findViewById<View>(R.id.messageTxt) as TextView\n        val textHead = dialog.findViewById<View>(R.id.alertHead) as TextView\n        text.text = msg\n        textHead.text = msgHead\n        val dialogButton = dialog.findViewById<View>(R.id.btn_Ok) as Button\n        dialogButton.setOnClickListener {\n            dialog.dismiss()\n//            if (survey == 1) {\n//                callSurveyApi()\n//            } else {\n                val intent = Intent(mContext, CCA_Activity::class.java)\n                PreferenceManager.setStudIdForCCA(mContext!!, \"\")\n\n            intent.flags = Intent.FLAG_ACTIVITY_CLEAR_TOP\n                startActivity(intent)\n//            }\n        }\n        dialog.show()\n    }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/nas/alreem/activity/cca/CCAsReviewActivity.kt b/app/src/main/java/com/nas/alreem/activity/cca/CCAsReviewActivity.kt
--- a/app/src/main/java/com/nas/alreem/activity/cca/CCAsReviewActivity.kt	(revision 29dbbedb1ce8c3fe2a8032d242fcce101acbc7b5)
+++ b/app/src/main/java/com/nas/alreem/activity/cca/CCAsReviewActivity.kt	(date 1690538726276)
@@ -113,7 +113,7 @@
         if (PreferenceManager.getStudClassForCCA(mContext).equals("")) {
             textViewCCAaItem!!.text = Html.fromHtml(
                 PreferenceManager.getCCATitle(mContext)
-                    .toString() + "<br/>" + PreferenceManager.getStudentName(mContext)+ "<br/>Year Group : " + PreferenceManager.getStudentClass(
+                    .toString() + "<br/>" + PreferenceManager.getStudNameForCCA(mContext)+ "<br/>Year Group : " + PreferenceManager.getStudClassForCCA(
                     mContext)
             )
         } else {
@@ -274,7 +274,7 @@
             showDialogReviewSubmit(
                 mContext as Activity,
                 "Confirm",
-                "Do you want to confirm this Enrichment?",
+                "Do you want to confirm this EAP?",
                 R.drawable.exclamationicon,
                 R.drawable.round
             )
@@ -411,7 +411,7 @@
 //                callSurveyApi()
 //            } else {
                 val intent = Intent(mContext, CCA_Activity::class.java)
-                PreferenceManager.setStudIdForCCA(mContext!!, "")
+              //  PreferenceManager.setStudIdForCCA(mContext!!, "")
 
             intent.flags = Intent.FLAG_ACTIVITY_CLEAR_TOP
                 startActivity(intent)
Index: app/src/main/res/layout/activity_ccas_review.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\n<RelativeLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n    android:background=\"@color/white\">\n\n    <RelativeLayout\n        android:id=\"@+id/relativeHeader\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\"\n        android:layout_alignParentTop=\"true\" >\n        <ImageView\n            android:id=\"@+id/relative_logo_header\"\n            android:layout_width=\"match_parent\"\n            android:src=\"@drawable/titlebar\"\n            android:layout_height=\"wrap_content\" />\n        <ImageView\n            android:id=\"@+id/logoClickImgView\"\n            android:layout_width=\"wrap_content\"\n            android:layout_height=\"wrap_content\"\n            android:layout_centerHorizontal=\"true\"\n            android:layout_alignTop=\"@+id/relative_logo_header\"\n            android:background=\"@drawable/logotransperent\"\n            android:layout_above=\"@+id/heading\" />\n\n        <RelativeLayout\n            android:id=\"@+id/bottomRel\"\n            android:layout_width=\"match_parent\"\n            android:layout_above=\"@+id/heading\"\n            android:layout_alignParentTop=\"true\"\n            android:layout_height=\"wrap_content\" >\n\n\n            <RelativeLayout\n                android:id=\"@+id/backRelative\"\n                android:layout_width=\"45dp\"\n                android:layout_centerVertical=\"true\"\n                android:layout_height=\"45dp\">\n\n                <ImageView\n                    android:id=\"@+id/btn_left\"\n                    android:layout_width=\"wrap_content\"\n                    android:layout_height=\"wrap_content\"\n                    android:layout_alignParentLeft=\"true\"\n                    android:layout_centerVertical=\"true\"\n                    android:background=\"@drawable/back\"\n                    android:visibility=\"visible\" />\n            </RelativeLayout>\n\n            <ImageView\n                android:id=\"@+id/btn_right\"\n                android:layout_width=\"wrap_content\"\n                android:layout_height=\"wrap_content\"\n                android:layout_alignParentRight=\"true\"\n                android:layout_centerVertical=\"true\"\n                android:visibility=\"invisible\"/>\n        </RelativeLayout>\n\n        <com.nas.alreem.commonviews.CustomFontDJ5TextWhite\n            android:id=\"@+id/heading\"\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"40dp\"\n            android:layout_below=\"@id/relative_logo_header\"\n            android:background=\"@color/split_bg\"\n            android:gravity=\"center\"\n            android:paddingTop=\"5dp\"\n            android:paddingBottom=\"5dp\"\n            android:text=\"Enrichment Summary\"\n            android:textColor=\"@color/white\"\n            android:textSize=\"17dp\" />\n        <ImageView\n            android:id=\"@+id/btn_info\"\n            android:layout_width=\"35dp\"\n            android:layout_height=\"35dp\"\n            android:layout_alignParentRight=\"true\"\n            android:layout_marginBottom=\"8dp\"\n            android:layout_marginRight=\"2dp\"\n            android:layout_centerVertical=\"true\"\n            android:layout_alignBottom=\"@+id/heading\"\n            android:background=\"@drawable/infoptaicon\"\n            android:visibility=\"invisible\"/>\n\n    </RelativeLayout>\n\n\n    <com.nas.alreem.commonviews.CustomTextViewRegular\n        android:id=\"@+id/textViewCCAaItem\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:layout_below=\"@+id/relativeHeader\"\n        android:layout_marginLeft=\"5dp\"\n        android:text=\"Enrichment Review\"\n        android:textColor=\"#ff000000\"\n        android:textSize=\"16sp\" />\n\n    <androidx.recyclerview.widget.RecyclerView\n        android:id=\"@+id/recycler_view_cca\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"match_parent\"\n        android:layout_above=\"@+id/submitBtn\"\n        android:layout_below=\"@+id/textViewCCAaItem\"\n        android:layout_marginTop=\"5dp\"\n        android:layout_marginBottom=\"5dp\"\n        android:background=\"@color/white\"\n        android:overScrollMode=\"never\"\n        android:scrollbars=\"vertical\" />\n    <Button\n        android:id=\"@+id/submitBtn\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:layout_alignParentBottom=\"true\"\n        android:text=\"Confirm \\u0026 Submit\"\n        android:layout_centerHorizontal=\"true\"\n        android:textColor=\"@color/white\"\n        android:background=\"@drawable/buttonred_new\"\n        android:gravity=\"center\"\n        android:textSize=\"16sp\"\n        android:layout_marginTop=\"5dp\"\n        android:layout_marginBottom=\"5dp\"\n        android:layout_marginLeft=\"15dp\"\n        android:layout_marginRight=\"15dp\"\n        android:visibility=\"visible\" />\n    <ProgressBar\n        android:id=\"@+id/progress\"\n        android:layout_width=\"40dp\"\n        android:layout_height=\"40dp\"\n        android:layout_centerInParent=\"true\"\n        android:indeterminateDrawable=\"@anim/customspinner\"\n        android:visibility=\"gone\"\n        app:layout_constraintBottom_toBottomOf=\"parent\"\n        app:layout_constraintEnd_toEndOf=\"parent\"\n        app:layout_constraintStart_toStartOf=\"parent\"\n        app:layout_constraintTop_toTopOf=\"parent\" />\n\n</RelativeLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/activity_ccas_review.xml b/app/src/main/res/layout/activity_ccas_review.xml
--- a/app/src/main/res/layout/activity_ccas_review.xml	(revision 29dbbedb1ce8c3fe2a8032d242fcce101acbc7b5)
+++ b/app/src/main/res/layout/activity_ccas_review.xml	(date 1690538516677)
@@ -66,7 +66,7 @@
             android:gravity="center"
             android:paddingTop="5dp"
             android:paddingBottom="5dp"
-            android:text="Enrichment Summary"
+            android:text="EAP Summary"
             android:textColor="@color/white"
             android:textSize="17dp" />
         <ImageView
@@ -84,7 +84,7 @@
     </RelativeLayout>
 
 
-    <com.nas.alreem.commonviews.CustomTextViewRegular
+    <com.nas.alreem.commonviews.CustomEditTextViewSemiBold
         android:id="@+id/textViewCCAaItem"
         android:layout_width="wrap_content"
         android:layout_height="wrap_content"
Index: app/src/main/java/com/nas/alreem/activity/cca/adapter/CCAfinalReviewAdapter.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.nas.alreem.activity.cca.adapter\n\nimport android.content.Context\nimport android.util.Log\nimport android.view.LayoutInflater\nimport android.view.View\nimport android.view.ViewGroup\nimport android.widget.LinearLayout\nimport android.widget.TextView\nimport androidx.recyclerview.widget.RecyclerView\nimport com.nas.alreem.R\nimport com.nas.alreem.activity.cca.model.CCADetailModel\nimport java.text.ParseException\nimport java.text.SimpleDateFormat\nimport java.util.*\n\nclass CCAfinalReviewAdapter(\n    var mContext: Context,\n    mCCADetailModelArrayList: ArrayList<CCADetailModel>\n) :\n    RecyclerView.Adapter<CCAfinalReviewAdapter.MyViewHolder>() {\n    var mCCADetailModelArrayList: ArrayList<CCADetailModel>\n\n    inner class MyViewHolder(view: View) : RecyclerView.ViewHolder(view) {\n        var textViewCCAaDateItemChoice1: TextView\n        var textViewCCAaDateItemChoice2: TextView\n        var textViewCCADay: TextView\n        var textViewCCAChoice1: TextView\n        var textViewCCAChoice2: TextView\n        var locationTxt: TextView\n        var location2Txt: TextView\n        var description2Txt: TextView\n        var descriptionTxt: TextView\n        var linearChoice1: LinearLayout\n        var linearChoice2: LinearLayout\n\n        init {\n            textViewCCAaDateItemChoice1 =\n                view.findViewById<View>(R.id.textViewCCAaDateItemChoice1) as TextView\n            textViewCCAaDateItemChoice2 =\n                view.findViewById<View>(R.id.textViewCCAaDateItemChoice2) as TextView\n            textViewCCADay = view.findViewById<View>(R.id.textViewCCADay) as TextView\n            textViewCCAChoice1 = view.findViewById<View>(R.id.textViewCCAChoice1) as TextView\n            textViewCCAChoice2 = view.findViewById<View>(R.id.textViewCCAChoice2) as TextView\n            locationTxt = view.findViewById<View>(R.id.locationTxt) as TextView\n            location2Txt = view.findViewById<View>(R.id.location2Txt) as TextView\n            description2Txt = view.findViewById<View>(R.id.description2Txt) as TextView\n            descriptionTxt = view.findViewById<View>(R.id.descriptionTxt) as TextView\n            linearChoice1 = view.findViewById<View>(R.id.linearChoice1) as LinearLayout\n            linearChoice2 = view.findViewById<View>(R.id.linearChoice2) as LinearLayout\n        }\n    }\n\n    //    public CCAfinalReviewAdapter(Context mContext) {\n    //        this.mContext = mContext;\n    //    }\n    //    public CCAfinalReviewAdapter(Context mContext,ArrayList<CCADetailModel>mCCADetailModelArrayList) {\n    //        this.mContext = mContext;\n    //        this.mCCADetailModelArrayList = mCCADetailModelArrayList;\n    //    }\n    init {\n        this.mCCADetailModelArrayList = mCCADetailModelArrayList\n    }\n\n    override fun onCreateViewHolder(parent: ViewGroup, viewType: Int): MyViewHolder {\n        val itemView: View = LayoutInflater.from(parent.context)\n            .inflate(R.layout.adapter_cca_final_review, parent, false)\n        return MyViewHolder(itemView)\n    }\n\n    override fun onBindViewHolder(holder: MyViewHolder, position: Int) {\n      //  Log.e(\"Location\", mCCADetailModelArrayList[position].ccaChoiceModel!!.toString())\n       // Log.e(\"Location2\", mCCADetailModelArrayList[position].location2.toString())\n       // Log.e(\"item\", mCCADetailModelArrayList[position].choice1.toString())\n      //  Log.e(\"item2\", mCCADetailModelArrayList[position].choice2.toString())\n      //  Log.e(\"desc\", mCCADetailModelArrayList[position].description.toString())\n     //   Log.e(\"desc\", mCCADetailModelArrayList[position].description2.toString())\n        if (mCCADetailModelArrayList[position].location\n                .equals(\"0\") || mCCADetailModelArrayList[position].location\n                .equals(\"\")\n        ) {\n            holder.locationTxt.visibility = View.GONE\n        } else {\n            holder.locationTxt.visibility = View.VISIBLE\n            holder.locationTxt.text =\n                \"Location       : \" + mCCADetailModelArrayList[position].location\n        }\n        if (mCCADetailModelArrayList[position].location2\n                .equals(\"0\") || mCCADetailModelArrayList[position].location2\n                .equals(\"\")\n        ) {\n            holder.location2Txt.visibility = View.GONE\n        } else {\n            holder.location2Txt.visibility = View.VISIBLE\n            holder.location2Txt.text =\n                \"Location       : \" + mCCADetailModelArrayList[position].location2\n        }\n        if (mCCADetailModelArrayList[position].description\n                .equals(\"0\") || mCCADetailModelArrayList[position].description\n                .equals(\"\")\n        ) {\n            holder.descriptionTxt.visibility = View.GONE\n        } else {\n            holder.descriptionTxt.visibility = View.VISIBLE\n            holder.descriptionTxt.text =\n                \"Description : \" + mCCADetailModelArrayList[position].description\n        }\n        if (mCCADetailModelArrayList[position].description2\n                .equals(\"0\") || mCCADetailModelArrayList[position].description2\n                .equals(\"\")\n        ) {\n            holder.description2Txt.visibility = View.GONE\n        } else {\n            holder.description2Txt.visibility = View.VISIBLE\n            holder.description2Txt.text =\n                \"Description : \" + mCCADetailModelArrayList[position].description2\n        }\n        holder.textViewCCADay.setText(mCCADetailModelArrayList[position].day)\n        if (mCCADetailModelArrayList[position].choice1 == null) {\n            holder.linearChoice1.visibility = View.GONE\n            holder.textViewCCAChoice1.text = \"Choice 1 : Nil\"\n        } else {\n            holder.linearChoice1.visibility = View.VISIBLE\n            Log.e(\"date\", mCCADetailModelArrayList[position].cca_item_start_timechoice1.toString())\n            holder.textViewCCAChoice1.text =\n                \"Choice 1 : \" + mCCADetailModelArrayList[position].choice1\n            if (mCCADetailModelArrayList[position].cca_item_start_timechoice1 != null && mCCADetailModelArrayList[position].cca_item_end_timechoice1 != null) {\n                holder.textViewCCAaDateItemChoice1.visibility = View.VISIBLE\n                holder.textViewCCAaDateItemChoice1.text = \"(\" + convertTimeToAMPM(\n                    mCCADetailModelArrayList[position].cca_item_start_timechoice1\n                ) + \" - \" + convertTimeToAMPM(\n                    mCCADetailModelArrayList[position].cca_item_end_timechoice1\n                ) + \")\"\n            } else if (mCCADetailModelArrayList[position].cca_item_start_timechoice1 != null) {\n                holder.textViewCCAaDateItemChoice1.visibility = View.VISIBLE\n                holder.textViewCCAaDateItemChoice1.text = \"(\" + convertTimeToAMPM(\n                    mCCADetailModelArrayList[position].cca_item_end_timechoice1\n                ) + \")\"\n            } else if (mCCADetailModelArrayList[position].cca_item_end_timechoice1 != null) {\n                holder.textViewCCAaDateItemChoice1.visibility = View.VISIBLE\n                holder.textViewCCAaDateItemChoice1.text = \"(\" + convertTimeToAMPM(\n                    mCCADetailModelArrayList[position].cca_item_end_timechoice1\n                ) + \")\"\n            } else {\n                holder.textViewCCAaDateItemChoice1.visibility = View.GONE\n            }\n        }\n        if (mCCADetailModelArrayList[position].choice2 == null) {\n            holder.linearChoice2.visibility = View.GONE\n            holder.textViewCCAChoice2.text = \"Choice 2 : Nil\"\n        } else {\n            holder.linearChoice2.visibility = View.VISIBLE\n            holder.textViewCCAChoice2.text =\n                \"Choice 2 : \" + mCCADetailModelArrayList[position].choice2\n            if (mCCADetailModelArrayList[position].cca_item_start_timechoice2 != null && mCCADetailModelArrayList[position].cca_item_end_timechoice2 != null) {\n                holder.textViewCCAaDateItemChoice2.visibility = View.VISIBLE\n                holder.textViewCCAaDateItemChoice2.text = \"(\" + convertTimeToAMPM(\n                    mCCADetailModelArrayList[position].cca_item_start_timechoice2\n                ) + \" - \" + convertTimeToAMPM(\n                    mCCADetailModelArrayList[position].cca_item_end_timechoice2\n                ) + \")\"\n            } else if (mCCADetailModelArrayList[position].cca_item_start_timechoice2 != null) {\n                holder.textViewCCAaDateItemChoice2.visibility = View.VISIBLE\n                holder.textViewCCAaDateItemChoice2.text = \"(\" + convertTimeToAMPM(\n                    mCCADetailModelArrayList[position].cca_item_start_timechoice2\n                ) + \")\"\n            } else if (mCCADetailModelArrayList[position].cca_item_end_timechoice2 != null) {\n                holder.textViewCCAaDateItemChoice2.visibility = View.VISIBLE\n                holder.textViewCCAaDateItemChoice2.text = \"(\" + convertTimeToAMPM(\n                    mCCADetailModelArrayList[position].cca_item_end_timechoice2\n                ) + \")\"\n            } else {\n                holder.textViewCCAaDateItemChoice2.visibility = View.GONE\n            }\n        }\n    }\n\n    override fun getItemCount(): Int {\n        Log.e(\"size\", mCCADetailModelArrayList.size.toString())\n        return mCCADetailModelArrayList.size\n    }\n\n    companion object {\n        fun convertTimeToAMPM(date: String?): String {\n            var strCurrentDate = \"\"\n            var format = SimpleDateFormat(\"HH:mm:ss\", Locale.ENGLISH)\n            var newDate: Date? = null\n            try {\n                newDate = format.parse(date)\n            } catch (e: ParseException) {\n                e.printStackTrace()\n            }\n            format = SimpleDateFormat(\"hh:mm a\", Locale.ENGLISH)\n            strCurrentDate = format.format(newDate)\n            return strCurrentDate\n        }\n    }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/nas/alreem/activity/cca/adapter/CCAfinalReviewAdapter.kt b/app/src/main/java/com/nas/alreem/activity/cca/adapter/CCAfinalReviewAdapter.kt
--- a/app/src/main/java/com/nas/alreem/activity/cca/adapter/CCAfinalReviewAdapter.kt	(revision 29dbbedb1ce8c3fe2a8032d242fcce101acbc7b5)
+++ b/app/src/main/java/com/nas/alreem/activity/cca/adapter/CCAfinalReviewAdapter.kt	(date 1690523500581)
@@ -69,12 +69,8 @@
     }
 
     override fun onBindViewHolder(holder: MyViewHolder, position: Int) {
-      //  Log.e("Location", mCCADetailModelArrayList[position].ccaChoiceModel!!.toString())
-       // Log.e("Location2", mCCADetailModelArrayList[position].location2.toString())
-       // Log.e("item", mCCADetailModelArrayList[position].choice1.toString())
-      //  Log.e("item2", mCCADetailModelArrayList[position].choice2.toString())
-      //  Log.e("desc", mCCADetailModelArrayList[position].description.toString())
-     //   Log.e("desc", mCCADetailModelArrayList[position].description2.toString())
+        if (mCCADetailModelArrayList[position].location != null) {
+
         if (mCCADetailModelArrayList[position].location
                 .equals("0") || mCCADetailModelArrayList[position].location
                 .equals("")
@@ -83,8 +79,15 @@
         } else {
             holder.locationTxt.visibility = View.VISIBLE
             holder.locationTxt.text =
-                "Location       : " + mCCADetailModelArrayList[position].location
+                "Location      : " + mCCADetailModelArrayList[position].location
+        } }
+        else {
+            holder.locationTxt.visibility = View.GONE
         }
+
+
+        if (mCCADetailModelArrayList[position].location2 != null) {
+
         if (mCCADetailModelArrayList[position].location2
                 .equals("0") || mCCADetailModelArrayList[position].location2
                 .equals("")
@@ -93,8 +96,16 @@
         } else {
             holder.location2Txt.visibility = View.VISIBLE
             holder.location2Txt.text =
-                "Location       : " + mCCADetailModelArrayList[position].location2
+                "Location      : " + mCCADetailModelArrayList[position].location2
         }
+        }
+
+        else {
+            holder.location2Txt.visibility = View.GONE
+        }
+
+        if (mCCADetailModelArrayList[position].description != null) {
+
         if (mCCADetailModelArrayList[position].description
                 .equals("0") || mCCADetailModelArrayList[position].description
                 .equals("")
@@ -105,6 +116,15 @@
             holder.descriptionTxt.text =
                 "Description : " + mCCADetailModelArrayList[position].description
         }
+        }
+        else {
+            holder.descriptionTxt.visibility = View.GONE
+        }
+
+
+        if (mCCADetailModelArrayList[position].description2 != null) {
+
+
         if (mCCADetailModelArrayList[position].description2
                 .equals("0") || mCCADetailModelArrayList[position].description2
                 .equals("")
@@ -115,6 +135,13 @@
             holder.description2Txt.text =
                 "Description : " + mCCADetailModelArrayList[position].description2
         }
+        }
+        else {
+            holder.description2Txt.visibility = View.GONE
+        }
+
+
+
         holder.textViewCCADay.setText(mCCADetailModelArrayList[position].day)
         if (mCCADetailModelArrayList[position].choice1 == null) {
             holder.linearChoice1.visibility = View.GONE
Index: app/src/main/java/com/nas/alreem/fragment/contact_us/ContactUsFragment.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.nas.alreem.fragment.contact_us\n\nimport android.Manifest\nimport android.content.Context\nimport android.content.Intent\nimport android.content.pm.PackageManager\nimport android.location.Location\nimport android.location.LocationListener\nimport android.location.LocationManager\nimport android.net.Uri\nimport android.os.Build\nimport android.os.Bundle\nimport android.provider.Settings\nimport android.util.Log\nimport android.view.LayoutInflater\nimport android.view.View\nimport android.view.ViewGroup\nimport android.widget.ProgressBar\nimport android.widget.RelativeLayout\nimport android.widget.TextView\nimport androidx.core.app.ActivityCompat\nimport androidx.core.content.ContextCompat\nimport androidx.fragment.app.Fragment\nimport androidx.recyclerview.widget.DefaultItemAnimator\nimport androidx.recyclerview.widget.LinearLayoutManager\nimport androidx.recyclerview.widget.RecyclerView\nimport com.google.android.gms.common.ConnectionResult\nimport com.google.android.gms.common.api.GoogleApiClient\nimport com.google.android.gms.maps.CameraUpdateFactory\nimport com.google.android.gms.maps.GoogleMap\nimport com.google.android.gms.maps.SupportMapFragment\nimport com.google.android.gms.maps.model.LatLng\nimport com.google.android.gms.maps.model.Marker\nimport com.google.android.gms.maps.model.MarkerOptions\nimport com.nas.alreem.R\nimport com.nas.alreem.activity.primary.model.ComingUpResponseModel\nimport com.nas.alreem.constants.ConstantFunctions\nimport com.nas.alreem.constants.ConstantWords\nimport com.nas.alreem.constants.DialogFunctions\nimport com.nas.alreem.constants.PreferenceManager\nimport com.nas.alreem.fragment.contact_us.adapter.ContactusAdapter\nimport com.nas.alreem.fragment.contact_us.model.ContactUsModel\nimport com.nas.alreem.fragment.contact_us.model.ContactUsResponseModel\nimport com.nas.alreem.fragment.notifications.adapter.NotificationListAdapter\nimport com.nas.alreem.fragment.notifications.model.NotificationApiModel\nimport com.nas.alreem.fragment.notifications.model.NotificationResponseModel\nimport com.nas.alreem.rest.ApiClient\nimport retrofit2.Call\nimport retrofit2.Callback\nimport retrofit2.Response\n\n\nclass ContactUsFragment  : Fragment(), LocationListener,\n    GoogleApiClient.ConnectionCallbacks,\n    GoogleApiClient.OnConnectionFailedListener,\n    GoogleMap.OnMarkerDragListener, GoogleMap.OnMapLongClickListener {\n    lateinit var mContext: Context\n    lateinit var c_latitude: String\n    lateinit var c_longitude: String\n    lateinit var locationManager: LocationManager\n    var isGPSEnabled: Boolean? = null\n    var isNetworkEnabled: Boolean? = null\n    var lat: Double = 0.0\n    var long: Double = 0.0\n    lateinit var progressDialogAdd:ProgressBar\n    lateinit var contact_usrecyclerview:RecyclerView\n    lateinit var descriptiontext:TextView\n    lateinit var titleTextView:TextView\n    lateinit var map: GoogleMap\n    lateinit var mapFragment: SupportMapFragment\n    lateinit var contactUsArrayList: ArrayList<ContactUsModel>\n     var latitude: String=\"\"\n     var longitude: String=\"\"\n    override fun onCreateView(\n        inflater: LayoutInflater, container: ViewGroup?,\n        savedInstanceState: Bundle?\n    ): View? {\n\n        return inflater.inflate(R.layout.fragment_contact_us, container, false)\n    }\n\n    override fun onViewCreated(view: View, savedInstanceState: Bundle?) {\n        super.onViewCreated(view, savedInstanceState)\n        mContext = requireContext()\n        if (Build.VERSION.SDK_INT >= 23 &&\n            ContextCompat.checkSelfPermission(\n                mContext,\n                Manifest.permission.ACCESS_FINE_LOCATION\n            ) != PackageManager.PERMISSION_GRANTED &&\n            ContextCompat.checkSelfPermission(\n                mContext,\n                Manifest.permission.ACCESS_COARSE_LOCATION\n            ) != PackageManager.PERMISSION_GRANTED\n        ) {\n        }\n\n        initializeUI()\n        fetchlatitudelongitude()\n        callContactUsApi()\n        // permissioncheck()\n\n\n    }\n    private fun fetchlatitudelongitude() {\n        var location: Location\n        locationManager = mContext.getSystemService(Context.LOCATION_SERVICE) as LocationManager\n        isGPSEnabled = locationManager.isProviderEnabled(LocationManager.GPS_PROVIDER)\n        isNetworkEnabled = locationManager.isProviderEnabled(LocationManager.NETWORK_PROVIDER)\n\n        if (!isGPSEnabled!! && !isNetworkEnabled!!) {\n\n        } else {\n            if (isNetworkEnabled as Boolean) {\n                if (ActivityCompat.checkSelfPermission(\n                        mContext,\n                        Manifest.permission.ACCESS_FINE_LOCATION\n                    ) != PackageManager.PERMISSION_GRANTED && ActivityCompat.checkSelfPermission(\n                        mContext,\n                        Manifest.permission.ACCESS_COARSE_LOCATION\n                    ) != PackageManager.PERMISSION_GRANTED\n                ) {\n\n                } else {\n                    locationManager.requestLocationUpdates(\n                        LocationManager.NETWORK_PROVIDER,\n                        0L,\n                        0.0F,\n                        this\n                    )\n\n                    location =\n                        locationManager.getLastKnownLocation(LocationManager.NETWORK_PROVIDER)!!\n                    if (location != null) {\n                        lat = location.latitude\n                        long = location.longitude\n                    }\n                }\n            }\n            if (isGPSEnabled as Boolean) {\n                locationManager.requestLocationUpdates(\n                    LocationManager.NETWORK_PROVIDER,\n                    0L,\n                    0.0F,\n                    this\n                )\n                location = locationManager.getLastKnownLocation(LocationManager.NETWORK_PROVIDER)!!\n                if (location != null) {\n                    lat = location.latitude\n                    long = location.longitude\n                    println(\"lat---$lat\")\n                    println(\"lat---$long\")\n                    Log.e(\"CONTACTLATITUDE:\", (lat + long).toString())\n                }\n            }\n        }\n        c_latitude = lat.toString()\n        c_longitude = long.toString()\n\n    }\n\n\n    private fun initializeUI() {\n\n        progressDialogAdd=requireView().findViewById(R.id.progressDialogAdd)\n        contact_usrecyclerview=requireView().findViewById(R.id.contact_usrecyclerview)\n        descriptiontext=requireView().findViewById(R.id.descriptiontext)\n        titleTextView=requireView().findViewById(R.id.titleTextView)\n        var linearLayoutManager = LinearLayoutManager(mContext)\n        contact_usrecyclerview.layoutManager = linearLayoutManager\n        contact_usrecyclerview.itemAnimator = DefaultItemAnimator()\n        titleTextView.text=ConstantWords.contact_us\n        mapFragment = childFragmentManager.findFragmentById(R.id.googleMap) as SupportMapFragment\n    }\n\n\n\n    override fun onLocationChanged(p0: Location) {\n        // TODO(\"Not yet implemented\")\n    }\n\n    override fun onStatusChanged(provider: String?, status: Int, extras: Bundle?) {\n    }\n\n\n\n    override fun onConnected(p0: Bundle?) {\n    }\n\n    override fun onConnectionSuspended(p0: Int) {\n    }\n\n    override fun onConnectionFailed(p0: ConnectionResult) {\n    }\n\n    override fun onMarkerDrag(p0: Marker) {\n        TODO(\"Not yet implemented\")\n    }\n\n\n    override fun onMarkerDragEnd(p0: Marker) {\n        TODO(\"Not yet implemented\")\n    }\n\n    override fun onMarkerDragStart(p0: Marker) {\n        TODO(\"Not yet implemented\")\n    }\n\n    override fun onMapLongClick(p0: LatLng) {\n        TODO(\"Not yet implemented\")\n    }\n\n\n   private fun callContactUsApi()\n    {\n        progressDialogAdd.visibility=View.VISIBLE\n        contactUsArrayList= ArrayList()\n        val call: Call<ContactUsResponseModel> = ApiClient.getClient.contactUs()\n        call.enqueue(object : Callback<ContactUsResponseModel> {\n            override fun onFailure(call: Call<ContactUsResponseModel>, t: Throwable) {\n                Log.e(\"Failed\", t.localizedMessage)\n                progressDialogAdd.visibility=View.GONE\n            }\n            override fun onResponse(call: Call<ContactUsResponseModel>, response: Response<ContactUsResponseModel>) {\n                val responsedata = response.body()\n                progressDialogAdd.visibility=View.GONE\n                if (responsedata != null) {\n                    try {\n\n                        if (response.body()!!.status==100)\n                        {\n\n                            contactUsArrayList=response.body()!!.responseArray!!.contacts!!\n                            descriptiontext.text=response.body()!!.responseArray!!.description\n                            latitude=response.body()!!.responseArray!!.latitude\n                            longitude=response.body()!!.responseArray!!.longitude\n                            var adapterContact=ContactusAdapter(contactUsArrayList,mContext)\n                            contact_usrecyclerview.adapter=adapterContact\n                            mapFragment.getMapAsync { googleMap ->\n                                Log.d(\"Map Working\", \"good\")\n                                map = googleMap\n                                map.uiSettings.isMapToolbarEnabled = false\n                                map.uiSettings.isZoomControlsEnabled = false\n                                val latLng = LatLng(latitude.toDouble(), longitude.toDouble())\n                                map.addMarker(\n                                    MarkerOptions()\n                                        .position(latLng)\n                                        .draggable(true)\n                                        .title(\"NAS Abu Dhabi\")\n                                )\n\n\n                                map.moveCamera(CameraUpdateFactory.newLatLng(latLng))\n\n                                map.animateCamera(CameraUpdateFactory.zoomTo(13f))\n                                map.setOnInfoWindowClickListener {\n\n                                    if (!isGPSEnabled!!) {\n                                        val callGPSSettingIntent = Intent(\n                                            Settings.ACTION_LOCATION_SOURCE_SETTINGS\n                                        )\n                                        startActivity(callGPSSettingIntent)\n                                    } else {\n                                        //val url = \"http://maps.google.com/maps?saddr=$c_latitude,$c_longitude&daddr=The British International School,Abudhabi\"\n                                        val url = \"http://maps.google.com/maps?saddr=Your Location&daddr=The Nord Anglia International School,Abudhabi\"\n\n                                        val i = Intent(Intent.ACTION_VIEW)\n                                        i.data = Uri.parse(url)\n                                        startActivity(i)\n                                    }\n\n\n                                }\n                            }\n                        }\n                        else\n                        {\n\n                            DialogFunctions.commonErrorAlertDialog(mContext.resources.getString(R.string.alert), ConstantFunctions.commonErrorString(response.body()!!.status), mContext)\n                        }\n\n\n                    } catch (e: Exception) {\n                        e.printStackTrace()\n                    }\n                }\n            }\n\n        })\n    }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/nas/alreem/fragment/contact_us/ContactUsFragment.kt b/app/src/main/java/com/nas/alreem/fragment/contact_us/ContactUsFragment.kt
--- a/app/src/main/java/com/nas/alreem/fragment/contact_us/ContactUsFragment.kt	(revision 29dbbedb1ce8c3fe2a8032d242fcce101acbc7b5)
+++ b/app/src/main/java/com/nas/alreem/fragment/contact_us/ContactUsFragment.kt	(date 1690523500657)
@@ -130,6 +130,7 @@
 
                     location =
                         locationManager.getLastKnownLocation(LocationManager.NETWORK_PROVIDER)!!
+                    Log.e("loc", location.toString())
                     if (location != null) {
                         lat = location.latitude
                         long = location.longitude
Index: .idea/compiler.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"CompilerConfiguration\">\n    <bytecodeTargetLevel target=\"18\" />\n  </component>\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/compiler.xml b/.idea/compiler.xml
--- a/.idea/compiler.xml	(revision 29dbbedb1ce8c3fe2a8032d242fcce101acbc7b5)
+++ b/.idea/compiler.xml	(date 1690680539020)
@@ -1,6 +1,6 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
   <component name="CompilerConfiguration">
-    <bytecodeTargetLevel target="18" />
+    <bytecodeTargetLevel target="11" />
   </component>
 </project>
\ No newline at end of file
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><project version=\"4\">\n  <component name=\"ExternalStorageConfigurationManager\" enabled=\"true\" />\n  <component name=\"ProjectRootManager\" version=\"2\" languageLevel=\"JDK_18_PREVIEW\" default=\"true\" project-jdk-name=\"openjdk-18\" project-jdk-type=\"JavaSDK\">\n    <output url=\"file://$PROJECT_DIR$/build/classes\" />\n  </component>\n  <component name=\"ProjectType\">\n    <option name=\"id\" value=\"Android\" />\n  </component>\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/misc.xml b/.idea/misc.xml
--- a/.idea/misc.xml	(revision 29dbbedb1ce8c3fe2a8032d242fcce101acbc7b5)
+++ b/.idea/misc.xml	(date 1690680538842)
@@ -1,6 +1,7 @@
+<?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
   <component name="ExternalStorageConfigurationManager" enabled="true" />
-  <component name="ProjectRootManager" version="2" languageLevel="JDK_18_PREVIEW" default="true" project-jdk-name="openjdk-18" project-jdk-type="JavaSDK">
+  <component name="ProjectRootManager" version="2" languageLevel="JDK_11" project-jdk-name="11" project-jdk-type="JavaSDK">
     <output url="file://$PROJECT_DIR$/build/classes" />
   </component>
   <component name="ProjectType">
Index: app/src/main/java/com/nas/alreem/fragment/payments/PaymentFragment.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.nas.alreem.fragment.payments\n\nimport android.app.Dialog\nimport android.content.Context\nimport android.content.Intent\nimport android.graphics.Color\nimport android.graphics.drawable.ColorDrawable\nimport android.os.Bundle\nimport android.util.Log\nimport android.view.LayoutInflater\nimport android.view.View\nimport android.view.ViewGroup\nimport android.view.Window\nimport android.view.animation.Animation\nimport android.view.animation.AnimationUtils\nimport android.widget.*\nimport androidx.fragment.app.Fragment\nimport com.bumptech.glide.Glide\nimport com.google.android.material.progressindicator.BaseProgressIndicatorSpec\nimport com.nas.alreem.R\nimport com.nas.alreem.activity.login.model.SignUpResponseModel\nimport com.nas.alreem.activity.payments.PaymentCategoryActivity\nimport com.nas.alreem.activity.payments.PaymentInformationActivity\nimport com.nas.alreem.activity.primary.PrimaryActivity\nimport com.nas.alreem.activity.settings.model.TermsOfServiceResponseModel\nimport com.nas.alreem.constants.ConstantFunctions\nimport com.nas.alreem.constants.DialogFunctions\nimport com.nas.alreem.constants.PreferenceManager\nimport com.nas.alreem.fragment.payments.model.PaymentResponseModel\nimport com.nas.alreem.fragment.payments.model.SendEmailApiModel\nimport com.nas.alreem.fragment.primary.adapter.PrimaryAdapter\nimport com.nas.alreem.fragment.primary.model.PrimaryResponseModel\nimport com.nas.alreem.rest.ApiClient\nimport retrofit2.Call\nimport retrofit2.Callback\nimport retrofit2.Response\n\nclass PaymentFragment : Fragment() {\n    lateinit var mContext: Context\n    lateinit var progressDialogAdd: ProgressBar\n    lateinit var bannerImageViewPager: ImageView\n    lateinit var sendEmail: ImageView\n    lateinit var paymentRelative: RelativeLayout\n    lateinit var informationRelative: RelativeLayout\n    lateinit var title: RelativeLayout\n    lateinit var descriptionTitle: TextView\n    lateinit var titleTextView: TextView\n    var contact_email:String=\"\"\n\n    override fun onCreateView(\n        inflater: LayoutInflater, container: ViewGroup?,\n        savedInstanceState: Bundle?\n    ): View? {\n        return inflater.inflate(R.layout.fragment_payment, container, false)\n    }\n\n    override fun onViewCreated(view: View, savedInstanceState: Bundle?) {\n        super.onViewCreated(view, savedInstanceState)\n        mContext = requireContext()\n        initializeUI()\n        callPaymentBannerApi()\n    }\n\n    private fun initializeUI() {\n\n        progressDialogAdd=requireView().findViewById(R.id.progressDialogAdd)\n        bannerImageViewPager=requireView().findViewById(R.id.bannerImageViewPager)\n        paymentRelative=requireView().findViewById(R.id.paymentRelative)\n        informationRelative=requireView().findViewById(R.id.informationRelative)\n        sendEmail=requireView().findViewById(R.id.sendEmail)\n        descriptionTitle=requireView().findViewById(R.id.descriptionTitle)\n        title=requireView().findViewById(R.id.title)\n        titleTextView=requireView().findViewById(R.id.titleTextView)\n        titleTextView.text=\"Payment\"\n        sendEmail.visibility=View.GONE\n        paymentRelative.setOnClickListener(View.OnClickListener {\n\n            // Payment Activity\n            val intent = Intent(mContext, PaymentCategoryActivity::class.java)\n            startActivity(intent)\n        })\n\n        informationRelative.setOnClickListener(View.OnClickListener {\n\n            // Information Activity\n            val intent = Intent(activity, PaymentInformationActivity::class.java)\n            activity?.startActivity(intent)\n        })\n\n        sendEmail.setOnClickListener(View.OnClickListener {\n            // Email Popup\n            showSendEmailDialog()\n        })\n\n\n    }\n    private fun callPaymentBannerApi()\n    {\n        progressDialogAdd.visibility=View.VISIBLE\n        val call: Call<PaymentResponseModel> = ApiClient.getClient.paymentBanner(\"Bearer \"+PreferenceManager.getaccesstoken(mContext))\n        call.enqueue(object : Callback<PaymentResponseModel> {\n            override fun onFailure(call: Call<PaymentResponseModel>, t: Throwable) {\n                Log.e(\"Failed\", t.localizedMessage)\n                progressDialogAdd.visibility=View.GONE\n            }\n            override fun onResponse(call: Call<PaymentResponseModel>, response: Response<PaymentResponseModel>) {\n                val responsedata = response.body()\n                progressDialogAdd.visibility=View.GONE\n                if (responsedata != null) {\n                    try {\n\n                        if (response.body()!!.status==100)\n                        {\n\n                            title.visibility=View.VISIBLE\n                            contact_email=response.body()!!.responseArray!!.data.contact_email\n                            if (!contact_email.equals(\"\"))\n                            {\n                                sendEmail.visibility=View.VISIBLE\n\n                            }\n                            else{\n                                sendEmail.visibility=View.GONE\n                            }\n                            var description=response.body()!!.responseArray!!.data.description\n                            descriptionTitle.visibility=View.VISIBLE\n                            descriptionTitle.text=description\n\n                            var imageBanner=response.body()!!.responseArray!!.data.image\n                            if (imageBanner.isNotEmpty()) {\n                                Log.e(\"bann\",\"notemp\")\n                                Glide.with(mContext) //1\n                                    .load(imageBanner)\n                                    .into(bannerImageViewPager)\n                            } else {\n                                Log.e(\"bann\",\"emp\")\n                                Glide.with(mContext)\n                                    .load(R.drawable.default_banner)\n                                    .into(bannerImageViewPager)\n                            }\n\n\n                        }\n                        else\n                        {\n\n                            DialogFunctions.commonErrorAlertDialog(mContext.resources.getString(R.string.alert), ConstantFunctions.commonErrorString(response.body()!!.status), mContext)\n                        }\n\n\n                    } catch (e: Exception) {\n                        e.printStackTrace()\n                    }\n                }\n            }\n\n        })\n    }\n\n\n    private fun showSendEmailDialog()\n    {\n        val dialog = Dialog(mContext)\n        dialog.requestWindowFeature(Window.FEATURE_NO_TITLE)\n        dialog.setCancelable(true)\n        dialog.setContentView(R.layout.dialog_send_email)\n        dialog.window!!.setBackgroundDrawableResource(android.R.color.transparent)\n        val btn_submit = dialog.findViewById<Button>(R.id.submitButton)\n        val btn_cancel = dialog.findViewById<Button>(R.id.cancelButton)\n        val text_dialog = dialog.findViewById<EditText?>(R.id.text_dialog)\n        val text_content = dialog.findViewById<EditText>(R.id.text_content)\n\n        btn_cancel.setOnClickListener(View.OnClickListener {\n            dialog.dismiss()\n        })\n\n        btn_submit.setOnClickListener {\n            if (text_dialog.text.toString().trim().equals(\"\")) {\n                DialogFunctions.commonErrorAlertDialog(mContext.resources.getString(R.string.alert), resources.getString(R.string.enter_subject), mContext)\n\n\n            } else {\n                if (text_content.text.toString().trim().equals(\"\")) {\n                    DialogFunctions.commonErrorAlertDialog(mContext.resources.getString(R.string.alert), resources.getString(R.string.enter_content), mContext)\n\n                } else {\n                    // progressDialog.visibility = View.VISIBLE\n\n                    sendEmail(text_dialog.text.toString().trim(), text_content.text.toString().trim(), contact_email, dialog)\n                }\n            }\n        }\n        dialog.show()\n    }\n\n\n    fun sendEmail(title: String, message: String,  staffEmail: String, dialog: Dialog)\n    {\n\n        val sendMailBody = SendEmailApiModel( staffEmail, title, message)\n        val call: Call<SignUpResponseModel> = ApiClient.getClient.sendEmailStaff(sendMailBody, \"Bearer \" + PreferenceManager.getaccesstoken(mContext))\n        call.enqueue(object : Callback<SignUpResponseModel> {\n            override fun onFailure(call: Call<SignUpResponseModel>, t: Throwable) {\n                Log.e(\"Failed\", t.localizedMessage)\n                //progressDialog.visibility = View.GONE\n            }\n\n            override fun onResponse(call: Call<SignUpResponseModel>, response: Response<SignUpResponseModel>) {\n                val responsedata = response.body()\n                //progressDialog.visibility = View.GONE\n                Log.e(\"Response Signup\", responsedata.toString())\n                if (responsedata != null) {\n                    try {\n\n\n                        if (response.body()!!.status==100) {\n                            dialog.dismiss()\n                            showSuccessAlert(\n                                mContext,\n                                \"Email sent Successfully \",\n                                \"Success\",\n                                dialog\n                            )\n                        }else {\n                            DialogFunctions.commonErrorAlertDialog(\n                                mContext.resources.getString(R.string.alert),\n                                ConstantFunctions.commonErrorString(response.body()!!.status),\n                                mContext\n                            )\n\n                        }\n                        } catch (e: Exception) {\n                        e.printStackTrace()\n                    }\n                }\n            }\n\n        })\n    }\n\n\n    fun showSuccessAlert(context: Context, message: String, msgHead: String, mdialog: Dialog) {\n        val dialog = Dialog(context)\n        dialog.requestWindowFeature(Window.FEATURE_NO_TITLE)\n        dialog.window!!.setBackgroundDrawable(ColorDrawable(Color.TRANSPARENT))\n        dialog.setCancelable(false)\n        dialog.setContentView(R.layout.dialog_common_error_alert)\n        var iconImageView = dialog.findViewById(R.id.iconImageView) as ImageView\n        var alertHead = dialog.findViewById(R.id.alertHead) as TextView\n        var text_dialog = dialog.findViewById(R.id.text_dialog) as TextView\n        var btn_Ok = dialog.findViewById(R.id.btn_Ok) as Button\n        text_dialog.text = message\n        alertHead.text = msgHead\n        iconImageView.setImageResource(R.drawable.exclamationicon)\n        btn_Ok.setOnClickListener()\n        {\n            dialog.dismiss()\n            mdialog.dismiss()\n        }\n        dialog.show()\n    }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/nas/alreem/fragment/payments/PaymentFragment.kt b/app/src/main/java/com/nas/alreem/fragment/payments/PaymentFragment.kt
--- a/app/src/main/java/com/nas/alreem/fragment/payments/PaymentFragment.kt	(revision 29dbbedb1ce8c3fe2a8032d242fcce101acbc7b5)
+++ b/app/src/main/java/com/nas/alreem/fragment/payments/PaymentFragment.kt	(date 1690794436661)
@@ -134,9 +134,7 @@
                                     .into(bannerImageViewPager)
                             } else {
                                 Log.e("bann","emp")
-                                Glide.with(mContext)
-                                    .load(R.drawable.default_banner)
-                                    .into(bannerImageViewPager)
+                                bannerImageViewPager!!.setBackgroundResource(R.drawable.default_banner)
                             }
 
 
Index: app/src/main/res/layout/adapter_order_history_item_details.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\n<RelativeLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"105dp\"\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n    xmlns:card_view=\"http://schemas.android.com/tools\"\n    android:background=\"@color/white\">\n    <androidx.cardview.widget.CardView\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"match_parent\"\n        card_view:cardBackgroundColor=\"@android:color/white\"\n        app:cardElevation=\"2dp\"\n        app:cardCornerRadius=\"10dp\"\n        app:cardUseCompatPadding=\"true\"\n        card_view:cardUseCompatPadding=\"true\"\n        android:background=\"@color/canteen_item_bg\">\n        <LinearLayout\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"match_parent\"\n            android:orientation=\"horizontal\"\n            android:weightSum=\"100\"\n            android:background=\"@color/canteen_item_bg\">\n            <LinearLayout\n                android:layout_width=\"0dp\"\n                android:layout_height=\"match_parent\"\n                android:layout_weight=\"100\"\n                android:orientation=\"vertical\">\n                <com.nas.alreem.commonviews.CustomTextViewBold\n                    android:id=\"@+id/itemNameTxt\"\n                    android:layout_width=\"match_parent\"\n                    android:layout_height=\"wrap_content\"\n                    android:textColor=\"@color/black\"\n                    android:layout_marginLeft=\"5dp\"\n                    android:layout_marginTop=\"4dp\"\n                    android:text=\"iten name\"\n                    android:textSize=\"14sp\"\n                    android:maxLines=\"1\"\n                    />\n                <com.nas.alreem.commonviews.CustomTextViewRegular\n                    android:id=\"@+id/itemDescription\"\n                    android:layout_width=\"match_parent\"\n                    android:layout_height=\"wrap_content\"\n                    android:textColor=\"@color/black\"\n                    android:layout_marginLeft=\"5dp\"\n                    android:layout_marginTop=\"2dp\"\n                    android:textSize=\"12sp\"\n                    android:maxLines=\"3\"\n                    />\n\n                <LinearLayout\n                    android:layout_width=\"match_parent\"\n                    android:layout_height=\"match_parent\"\n                    android:orientation=\"horizontal\"\n                    android:weightSum=\"30\">\n                    <com.nas.alreem.commonviews.CustomTextViewBold\n                        android:id=\"@+id/amountTxt\"\n                        android:layout_width=\"0dp\"\n                        android:layout_height=\"match_parent\"\n                        android:layout_marginLeft=\"5dp\"\n                        android:layout_marginBottom=\"5dp\"\n                        android:layout_weight=\"10\"\n                        android:textSize=\"14sp\"\n                        android:textColor=\"@color/black\"\n                        android:gravity=\"center_vertical\"\n                        android:text=\"AED 45.00\" />\n                    <com.nas.alreem.commonviews.CustomTextViewBold\n                        android:id=\"@+id/itemsCount\"\n                        android:layout_width=\"0dp\"\n                        android:layout_height=\"match_parent\"\n                        android:layout_weight=\"10\"\n                        android:gravity=\"center\"\n                        android:text=\"1 Items\"\n                        android:textSize=\"14sp\"\n                        android:textColor=\"@color/black\"\n                        />\n                    <TextView\n                        android:id=\"@+id/status\"\n                        android:layout_width=\"0dp\"\n                        android:layout_height=\"match_parent\"\n                        android:layout_weight=\"10\"\n                        android:gravity=\"center\"\n                        android:text=\"Deliverd\"\n                        />\n                </LinearLayout>\n            </LinearLayout>\n            <RelativeLayout\n                android:layout_width=\"0dp\"\n                android:layout_height=\"match_parent\"\n                android:layout_weight=\"30\"\n                android:layout_margin=\"5dp\"\n                android:visibility=\"gone\">\n                <com.nas.alreem.commonviews.NonSwipeableViewPager\n                    android:id=\"@+id/bannerImagePager\"\n                    android:layout_width=\"match_parent\"\n                    android:background=\"@drawable/noitem\"\n                    android:layout_height=\"match_parent\" />\n            </RelativeLayout>\n\n        </LinearLayout>\n\n\n    </androidx.cardview.widget.CardView>\n</RelativeLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/adapter_order_history_item_details.xml b/app/src/main/res/layout/adapter_order_history_item_details.xml
--- a/app/src/main/res/layout/adapter_order_history_item_details.xml	(revision 29dbbedb1ce8c3fe2a8032d242fcce101acbc7b5)
+++ b/app/src/main/res/layout/adapter_order_history_item_details.xml	(date 1691043123881)
@@ -14,17 +14,22 @@
         app:cardUseCompatPadding="true"
         card_view:cardUseCompatPadding="true"
         android:background="@color/canteen_item_bg">
+
         <LinearLayout
             android:layout_width="match_parent"
             android:layout_height="match_parent"
             android:orientation="horizontal"
             android:weightSum="100"
             android:background="@color/canteen_item_bg">
+
             <LinearLayout
                 android:layout_width="0dp"
                 android:layout_height="match_parent"
                 android:layout_weight="100"
                 android:orientation="vertical">
+                <RelativeLayout
+                    android:layout_width="wrap_content"
+                    android:layout_height="wrap_content">
                 <com.nas.alreem.commonviews.CustomTextViewBold
                     android:id="@+id/itemNameTxt"
                     android:layout_width="match_parent"
@@ -36,6 +41,20 @@
                     android:textSize="14sp"
                     android:maxLines="1"
                     />
+                    <com.nas.alreem.commonviews.CustomTextViewRegular
+                        android:id="@+id/orderbadge"
+                        android:layout_width="20dp"
+                        android:layout_height="20dp"
+                        android:layout_margin="5dp"
+                        android:background="@drawable/shape_circle_red"
+                        android:gravity="center"
+                        android:text="100"
+                        android:layout_alignParentRight="true"
+                        android:textColor="@color/white"
+                        android:textSize="8sp"
+                        android:visibility="visible" />
+                </RelativeLayout>
+
                 <com.nas.alreem.commonviews.CustomTextViewRegular
                     android:id="@+id/itemDescription"
                     android:layout_width="match_parent"
Index: app/src/main/java/com/nas/alreem/fragment/permission_slip/PermissionSlipFragment.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.nas.alreem.fragment.permission_slip\n\nimport android.app.Dialog\nimport android.content.Context\nimport android.graphics.Color\nimport android.graphics.drawable.ColorDrawable\nimport android.os.Build\nimport android.os.Bundle\nimport android.util.Log\nimport android.view.LayoutInflater\nimport android.view.View\nimport android.view.ViewGroup\nimport android.view.Window\nimport android.view.animation.Animation\nimport android.view.animation.AnimationUtils\nimport android.widget.*\nimport androidx.fragment.app.Fragment\nimport androidx.recyclerview.widget.LinearLayoutManager\nimport androidx.recyclerview.widget.RecyclerView\nimport com.bumptech.glide.Glide\nimport com.bumptech.glide.load.engine.DiskCacheStrategy\nimport com.bumptech.glide.load.resource.bitmap.CircleCrop\nimport com.nas.alreem.R\nimport com.nas.alreem.activity.payments.adapter.StudentListAdapter\nimport com.nas.alreem.activity.payments.model.StudentList\nimport com.nas.alreem.activity.payments.model.StudentListModel\nimport com.nas.alreem.constants.ConstantFunctions\nimport com.nas.alreem.constants.OnItemClickListener\nimport com.nas.alreem.constants.PreferenceManager\nimport com.nas.alreem.constants.addOnItemClickListener\nimport com.nas.alreem.fragment.permission_slip.adapter.FormslistAdapter\nimport com.nas.alreem.fragment.permission_slip.model.PermissionSlipListApiModel\nimport com.nas.alreem.fragment.permission_slip.model.PermissionSlipListModel\nimport com.nas.alreem.fragment.permission_slip.model.PermissionSlipModel\nimport com.nas.alreem.rest.ApiClient\nimport retrofit2.Call\nimport retrofit2.Callback\nimport retrofit2.Response\n\nclass PermissionSlipFragment : Fragment(){\n    lateinit var progressDialog: RelativeLayout\n    lateinit var titleTextView: TextView\n    lateinit var mContext: Context\n    lateinit var sharedprefs: PreferenceManager\n    lateinit var studentSpinner: LinearLayout\n    var studentListArrayList = ArrayList<StudentList>()\n    lateinit var formslist:ArrayList<PermissionSlipListModel>\n    lateinit var studImg: ImageView\n    lateinit var studentName: String\n    lateinit var studentId: String\n    lateinit var studentImg: String\n    lateinit var studentClass: String\n    lateinit var studentNameTxt: TextView\n    lateinit var forms_recycler: RecyclerView\n    override fun onCreateView(\n        inflater: LayoutInflater, container: ViewGroup?,\n        savedInstanceState: Bundle?\n    ): View? {\n        return inflater.inflate(R.layout.fragment_permission_slip, container, false)\n    }\n    override fun onViewCreated(view: View, savedInstanceState: Bundle?) {\n        super.onViewCreated(view, savedInstanceState)\n        sharedprefs = PreferenceManager()\n        mContext = requireContext()\n\n        initializeUI()\n        var internetCheck = ConstantFunctions.internetCheck(mContext)\n        if (internetCheck) {\n            callStudentListApi()\n\n        } else {\n          //  InternetCheckClass.showSuccessInternetAlert(mContext)\n        }\n    }\n    private fun initializeUI(){\n        mContext=requireContext()\n        titleTextView = view!!.findViewById(R.id.titleTextView) as TextView\n        titleTextView.text = \"Permission Slips\"\n        //formslist= ArrayList()\n        studentSpinner = view!!.findViewById<LinearLayout>(R.id.studentSpinner)\n        studImg = view!!.findViewById<ImageView>(R.id.studImg)\n        studentNameTxt = view!!.findViewById<TextView>(R.id.studentName)\n        forms_recycler=view!!.findViewById(R.id.forms_rec)\n        progressDialog = view!!.findViewById(R.id.progressDialog)\n        val aniRotate: Animation =\n            AnimationUtils.loadAnimation(mContext, R.anim.linear_interpolator)\n        progressDialog.startAnimation(aniRotate)\n\n\n\n        studentSpinner.setOnClickListener(object : View.OnClickListener {\n            override fun onClick(v: View?) {\n                showStudentList(mContext,studentListArrayList)\n\n            }\n        })\n    }\n    fun showStudentList(context: Context ,mStudentList : ArrayList<StudentList>)\n    {\n        val dialog = Dialog(context)\n        dialog.requestWindowFeature(Window.FEATURE_NO_TITLE)\n        dialog.window!!.setBackgroundDrawable(ColorDrawable(Color.TRANSPARENT))\n        dialog.setCancelable(false)\n        dialog.setContentView(R.layout.dialogue_student_list)\n        var iconImageView = dialog.findViewById(R.id.iconImageView) as ImageView\n        var btn_dismiss = dialog.findViewById(R.id.btn_dismiss) as Button\n        var studentListRecycler = dialog.findViewById(R.id.studentListRecycler) as RecyclerView\n        iconImageView.setImageResource(R.drawable.boy)\n        //if(mSocialMediaArray.get())\n        val sdk = Build.VERSION.SDK_INT\n        if (sdk < Build.VERSION_CODES.JELLY_BEAN) {\n            btn_dismiss.setBackgroundDrawable(\n                mContext.resources.getDrawable(R.drawable.button_new)\n            )\n        } else {\n            btn_dismiss.background = mContext.resources.getDrawable(R.drawable.button_new)\n        }\n\n        studentListRecycler.setHasFixedSize(true)\n        val llm = LinearLayoutManager(mContext)\n        llm.orientation = LinearLayoutManager.VERTICAL\n        studentListRecycler.layoutManager = llm\n        if(mStudentList.size>0)\n        {\n            val studentAdapter = StudentListAdapter(mContext,mStudentList)\n            studentListRecycler.adapter = studentAdapter\n        }\n\n        btn_dismiss.setOnClickListener()\n        {\n            dialog.dismiss()\n        }\n        studentListRecycler.addOnItemClickListener(object: OnItemClickListener {\n            override fun onItemClicked(position: Int, view: View) {\n                // Your logic\n                progressDialog.visibility=View.VISIBLE\n                val aniRotate: Animation =\n                    AnimationUtils.loadAnimation(mContext, R.anim.linear_interpolator)\n                progressDialog.startAnimation(aniRotate)\n\n                studentName=studentListArrayList.get(position).name\n                studentImg=studentListArrayList.get(position).photo\n                studentId=studentListArrayList.get(position).id\n                studentClass=studentListArrayList.get(position).section\n                PreferenceManager.setStudentID(mContext,studentId)\n                PreferenceManager.setStudentName(mContext,studentName)\n                PreferenceManager.setStudentPhoto(mContext,studentImg)\n                PreferenceManager.setStudentClass(mContext,studentClass)\n                Log.e(\"studidclick\", PreferenceManager.getStudentID(mContext).toString())\n                studentNameTxt.text=studentName\n                if(!studentImg.equals(\"\"))\n                {\n                    Glide.with(mContext) //1\n                        .load(studentImg)\n                        .placeholder(R.drawable.student)\n                        .error(R.drawable.student)\n                        .skipMemoryCache(true) //2\n                        .diskCacheStrategy(DiskCacheStrategy.NONE) //3\n                        .transform(CircleCrop()) //4\n                        .into(studImg)\n                }\n                else\n                {\n                    studImg.setImageResource(R.drawable.student)\n                }\n                progressDialog.visibility = View.VISIBLE\n                formslistApi()\n                Log.e(\"TEST\",\"call 2\")\n\n                //  Toast.makeText(activity, mStudentList.get(position).name, Toast.LENGTH_SHORT).show()\n                dialog.dismiss()\n            }\n        })\n        dialog.show()\n    }\n    private fun formslistApi(){\n        progressDialog.visibility = View.VISIBLE\n        formslist=ArrayList()\n        val token = PreferenceManager.getaccesstoken(mContext)\n        Log.e(\"stid\", PreferenceManager.getStudentID(mContext).toString())\n        val list_permissionSlip= PermissionSlipListApiModel(\"0\",\"20\",PreferenceManager.getStudentID(mContext).toString())\n        val call: Call<PermissionSlipModel> = ApiClient.getClient.permissnslipList(list_permissionSlip,\"Bearer \"+token)\n        call.enqueue(object : Callback<PermissionSlipModel>{\n            override fun onFailure(call: Call<PermissionSlipModel>, t: Throwable) {\n                progressDialog.visibility = View.GONE\n                Log.e(\"Error\", t.localizedMessage)\n            }\n            override fun onResponse(call: Call<PermissionSlipModel>, response: Response<PermissionSlipModel>) {\n                progressDialog.visibility = View.GONE\n                if (response.body()!!.status==100)\n                {\n                    formslist=ArrayList()\n                    formslist.addAll(response.body()!!.responseArray.request)\n                    if (response.body()!!.responseArray.request.size > 0){\n                        Log.e(\"notempty\",\"true\")\n                        forms_recycler.layoutManager=LinearLayoutManager(mContext)\n                        var forms_adapter= FormslistAdapter(mContext,formslist)\n                        forms_recycler.adapter=forms_adapter\n                    }else{\n                        Log.e(\"empty\",\"true\")\n                        formslist=ArrayList()\n                        forms_recycler.layoutManager=LinearLayoutManager(mContext)\n                        var forms_adapter= FormslistAdapter(mContext,formslist)\n                        forms_recycler.adapter=forms_adapter\n                        //showerror(mContext,\"No Data Found\",\"Alert\")\n                        Toast.makeText(mContext, \"No Permission Slips Found\", Toast.LENGTH_SHORT).show()\n                    }\n\n\n                }/*else if(response.body()!!.status.equals(\"116\"))\n                {\n                    var internetCheck = InternetCheckClass.isInternetAvailable(com.mobatia.bisad.fragment.home.mContext)\n                    if (internetCheck){\n                        AccessTokenClass.getAccessToken(com.mobatia.bisad.fragment.home.mContext)\n                        Log.e(\"TEST\",\"call 3\")\n\n                        formslistApi()\n                    }else{\n                        InternetCheckClass.showSuccessInternetAlert(com.mobatia.bisad.fragment.home.mContext)\n                    }\n\n                }*/\n                else {\n                    if (response.body()!!.status == 132) {\n                        formslist=ArrayList()\n                        forms_recycler.layoutManager=LinearLayoutManager(mContext)\n                        var forms_adapter= FormslistAdapter(mContext,formslist)\n                        forms_recycler.adapter=forms_adapter\n                        Toast.makeText(mContext, \"No Permission Slips Found\", Toast.LENGTH_SHORT).show()\n                        //validation check error\n                    }\n                }\n            }\n        })\n    }\n    fun callStudentListApi()\n    {\n        progressDialog.visibility = View.VISIBLE\n        val token = PreferenceManager.getaccesstoken(mContext)\n        val call: Call<StudentListModel> = ApiClient.getClient.studentList(\"Bearer \"+token)\n        call.enqueue(object : Callback<StudentListModel> {\n            override fun onFailure(call: Call<StudentListModel>, t: Throwable) {\n                Log.e(\"Error\", t.localizedMessage)\n                progressDialog.visibility = View.GONE\n            }\n            override fun onResponse(call: Call<StudentListModel>, response: Response<StudentListModel>) {\n                progressDialog.visibility = View.GONE\n                //val arraySize :Int = response.body()!!.responseArray.studentList.size\n                if (response.body()!!.status==100)\n                {\n                    studentListArrayList.addAll(response.body()!!.responseArray.studentList)\n                    if (PreferenceManager.getStudentID(mContext).equals(\"\"))\n                    {\n                        studentName=studentListArrayList.get(0).name\n                        studentImg=studentListArrayList.get(0).photo\n                        studentId=studentListArrayList.get(0).id\n                        studentClass=studentListArrayList.get(0).section\n                        PreferenceManager.setStudentID(mContext,studentId)\n                        PreferenceManager.setStudentName(mContext,studentName)\n                        PreferenceManager.setStudentPhoto(mContext,studentImg)\n                        PreferenceManager.setStudentClass(mContext,studentClass)\n                        studentNameTxt.text=studentName\n                        if(!studentImg.equals(\"\"))\n                        {\n                            Glide.with(mContext) //1\n                                .load(studentImg)\n                                .placeholder(R.drawable.student)\n                                .error(R.drawable.student)\n                                .skipMemoryCache(true) //2\n                                .diskCacheStrategy(DiskCacheStrategy.NONE) //3\n                                .transform(CircleCrop()) //4\n                                .into(studImg)\n                        }\n                        else{\n                            studImg.setImageResource(R.drawable.student)\n                        }\n\n                    }\n                    else{\n                        studentName= PreferenceManager.getStudentName(mContext)!!\n                        studentImg= PreferenceManager.getStudentPhoto(mContext)!!\n                        studentId= PreferenceManager.getStudentID(mContext)!!\n                        studentClass= PreferenceManager.getStudentClass(mContext)!!\n                        studentNameTxt.text=studentName\n                        if(!studentImg.equals(\"\"))\n                        {\n                            Glide.with(mContext) //1\n                                .load(studentImg)\n                                .placeholder(R.drawable.student)\n                                .error(R.drawable.student)\n                                .skipMemoryCache(true) //2\n                                .diskCacheStrategy(DiskCacheStrategy.NONE) //3\n                                .transform(CircleCrop()) //4\n                                .into(studImg)\n                        }\n                        else{\n                            studImg.setImageResource(R.drawable.student)\n                        }\n                    }\n\n                    formslistApi()\n//                    var internetCheck = InternetCheckClass.isInternetAvailable(nContext)\n//                    if (internetCheck)\n//                    {\n//                        //callStudentLeaveInfo()\n//                    }\n//                    else{\n//                        InternetCheckClass.showSuccessInternetAlert(com.mobatia.bisad.fragment.home.mContext)\n//                    }\n\n                    //callStudentInfoApi()\n                }\n\n\n            }\n\n        })\n    }\n    override fun onResume() {\n        super.onResume()\n        Log.e(\"TEST\",\"call 1\")\n        formslistApi()\n        studentNameTxt.text = PreferenceManager.getStudentName(mContext)\n        studentId= PreferenceManager.getStudentID(mContext).toString()\n        studentImg= PreferenceManager.getStudentPhoto(mContext)!!\n        if(!studentImg.equals(\"\"))\n        {\n            Glide.with(mContext) //1\n                .load(studentImg)\n                .placeholder(R.drawable.student)\n                .error(R.drawable.student)\n                .skipMemoryCache(true) //2\n                .diskCacheStrategy(DiskCacheStrategy.NONE) //3\n                .transform(CircleCrop()) //4\n                .into(studImg)\n        }\n        else\n        {\n            studImg.setImageResource(R.drawable.student)\n        }\n\n    }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/nas/alreem/fragment/permission_slip/PermissionSlipFragment.kt b/app/src/main/java/com/nas/alreem/fragment/permission_slip/PermissionSlipFragment.kt
--- a/app/src/main/java/com/nas/alreem/fragment/permission_slip/PermissionSlipFragment.kt	(revision 29dbbedb1ce8c3fe2a8032d242fcce101acbc7b5)
+++ b/app/src/main/java/com/nas/alreem/fragment/permission_slip/PermissionSlipFragment.kt	(date 1690523498901)
@@ -75,7 +75,7 @@
     private fun initializeUI(){
         mContext=requireContext()
         titleTextView = view!!.findViewById(R.id.titleTextView) as TextView
-        titleTextView.text = "Permission Slips"
+        titleTextView.text = "Permission Forms"
         //formslist= ArrayList()
         studentSpinner = view!!.findViewById<LinearLayout>(R.id.studentSpinner)
         studImg = view!!.findViewById<ImageView>(R.id.studImg)
@@ -203,7 +203,7 @@
                         var forms_adapter= FormslistAdapter(mContext,formslist)
                         forms_recycler.adapter=forms_adapter
                         //showerror(mContext,"No Data Found","Alert")
-                        Toast.makeText(mContext, "No Permission Slips Found", Toast.LENGTH_SHORT).show()
+                        Toast.makeText(mContext, "No Permission Forms Found", Toast.LENGTH_SHORT).show()
                     }
 
 
Index: app/src/main/java/com/nas/alreem/activity/cca/adapter/CCAsChoiceListActivityAdapter.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.nas.alreem.activity.cca.adapter\n\nimport android.content.Context\nimport android.util.Log\nimport android.view.LayoutInflater\nimport android.view.View\nimport android.view.ViewGroup\nimport android.widget.Button\nimport android.widget.ImageView\nimport android.widget.RelativeLayout\nimport android.widget.TextView\nimport androidx.recyclerview.widget.RecyclerView\nimport com.nas.alreem.R\nimport com.nas.alreem.activity.cca.model.CCADetailModel\nimport com.nas.alreem.activity.cca.model.CCAchoiceModel\nimport com.nas.alreem.activity.cca.model.WeekListModel\nimport com.nas.alreem.appcontroller.AppController\nimport com.nas.alreem.constants.ConstantFunctions\nimport java.text.ParseException\nimport java.text.SimpleDateFormat\nimport java.util.*\nimport kotlin.collections.ArrayList\n\nclass CCAsChoiceListActivityAdapter :\n    RecyclerView.Adapter<CCAsChoiceListActivityAdapter.MyViewHolder> {\n    //    ArrayList<String> mSocialMediaModels;\n    var mCCAmodelArrayList: ArrayList<CCAchoiceModel>\n    var mContext: Context\n    var dayPosition = 0\n    var choicePosition = 0\n    var ccaDetailpos = 0\n    var msgRelative: RelativeLayout? = null\n    var weekList: ArrayList<WeekListModel>? = null\n    var ccaDetailModelArrayList: ArrayList<CCADetailModel>? = null\n    var submitBtn: Button? = null\n    var nextBtn: Button? = null\n    var filled: Boolean? = null\n    var recyclerWeek: RecyclerView? = null\n\n    constructor(\n        mContext: Context,\n        mCCAmodelArrayList: ArrayList<CCAchoiceModel>,\n        mdayPosition: Int,\n        mWeekList: ArrayList<WeekListModel>?,\n        mChoicePosition: Int,\n        recyclerWeek: RecyclerView?,\n        ccaDetailModelArrayList: ArrayList<CCADetailModel>?,\n        submitBtn: Button?,\n        nextBtn: Button?,\n        filled: Boolean?,\n        ccaDetailpos: Int,\n        msgRelative: RelativeLayout?\n    ) {\n        this.mContext = mContext\n        this.mCCAmodelArrayList = mCCAmodelArrayList\n        dayPosition = mdayPosition\n        weekList = mWeekList\n        choicePosition = mChoicePosition\n        this.recyclerWeek = recyclerWeek\n        this.ccaDetailModelArrayList = ccaDetailModelArrayList\n        this.submitBtn = submitBtn\n        this.nextBtn = nextBtn\n        this.filled = filled\n        this.ccaDetailpos = ccaDetailpos\n        this.msgRelative = msgRelative\n    }\n\n    constructor(mContext: Context, mCCAmodelArrayList: ArrayList<CCAchoiceModel>) {\n        this.mContext = mContext\n        this.mCCAmodelArrayList = mCCAmodelArrayList\n    }\n\n    constructor(\n        mContext: Context,\n        mCCAmodelArrayList: ArrayList<CCAchoiceModel>,\n        mdayPosition: Int,\n        mWeekList: ArrayList<WeekListModel>?\n    ) {\n        this.mContext = mContext\n        this.mCCAmodelArrayList = mCCAmodelArrayList\n        dayPosition = mdayPosition\n        weekList = mWeekList\n    }\n\n    constructor(\n        mContext: Context,\n        mCCAmodelArrayList: ArrayList<CCAchoiceModel>,\n        mdayPosition: Int,\n        mWeekList: ArrayList<WeekListModel>?,\n        mChoicePosition: Int,\n        recyclerWeek: RecyclerView?\n    ) {\n        this.mContext = mContext\n        this.mCCAmodelArrayList = mCCAmodelArrayList\n        dayPosition = mdayPosition\n        weekList = mWeekList\n        choicePosition = mChoicePosition\n        this.recyclerWeek = recyclerWeek\n    }\n\n    override fun onCreateViewHolder(parent: ViewGroup, viewType: Int): MyViewHolder {\n        val itemView: View = LayoutInflater.from(parent.context)\n            .inflate(R.layout.adapter_ccalist_activity_new, parent, false)\n        return MyViewHolder(itemView)\n    }\n\n    override fun onBindViewHolder(holder: MyViewHolder, position: Int) {\n        holder.confirmationImageview.visibility = View.VISIBLE\n        if (mCCAmodelArrayList[position].venue != null) {\n            if (mCCAmodelArrayList[position].venue\n                    .equals(\"0\") || mCCAmodelArrayList[position].venue\n                    .equals(\"\")\n            ) {\n                holder.textViewCCAVenue.visibility = View.GONE\n            } else {\n                holder.textViewCCAVenue.text =\n                    java.lang.String.format(\"Location: %s\", mCCAmodelArrayList[position].venue)\n                holder.textViewCCAVenue.visibility = View.VISIBLE\n            }\n        } else {\n            holder.textViewCCAVenue.visibility = View.GONE\n        }\n\n//\n//        System.out.println(\"DESC TEST\"+mCCAmodelArrayList.get(position).getDescription());\n//\n        Log.e(\"descptn\",mCCAmodelArrayList[position].description.toString())\n        if (mCCAmodelArrayList[position].description != null) {\n            if (mCCAmodelArrayList[position].description\n                    .equals(\"0\") || mCCAmodelArrayList[position].description\n                    .equals(\"\")\n            ) {\n                holder.descriptionRel.visibility = View.GONE\n            } else {\n                holder.descriptionRel.visibility = View.VISIBLE\n                holder.descriptionTxt.text =\n                    java.lang.String.format(\n                        \"Description : %s\",\n                        mCCAmodelArrayList[position].description\n                    )\n                if (mCCAmodelArrayList[position].description!!.length > 22) {\n                   // holder.readMoreTxt.visibility = View.VISIBLE\n                } else {\n                    holder.readMoreTxt.visibility = View.GONE\n                }\n                holder.readMoreTxt.setOnClickListener {\n                    ConstantFunctions.Companion.showDialogueWithOk(\n                        mContext,\n                        mCCAmodelArrayList[position].description!!,\n                        \"Description\"\n                    )\n                }\n            }\n        } else {\n            holder.descriptionRel.visibility = View.GONE\n        }\n        //        //   Log.e(\"DESC ADA\",mCCAmodelArrayList.get(position).getDescription());\n//\n//        Integer count=holder.descriptionTxt.getLineCount();\n//        Log.e(\"LINE COUNT\", String.valueOf(count));\n//\n//\n        if (choicePosition == 0) {\n            Log.e(\"choicePosition\", choicePosition.toString())\n            Log.e(\"status\", mCCAmodelArrayList[position].status.toString())\n            Log.e(\"disableCccaiem\", mCCAmodelArrayList[position].disableCccaiem.toString())\n\n            if (mCCAmodelArrayList[position].disableCccaiem!!) {\n                holder.confirmationImageview.setBackgroundResource(R.drawable.disablecrossicon)\n                holder.listTxtView.setTextColor(mContext.resources.getColor(R.color.grey))\n            } else if (mCCAmodelArrayList[position].status.equals(\"0\")) {\n                holder.confirmationImageview.setBackgroundResource(R.drawable.close_icon_with_white)\n                holder.listTxtView.setTextColor(mContext.resources.getColor(R.color.black))\n            } else {\n                holder.confirmationImageview.setBackgroundResource(R.drawable.participatingsmallicon_new)\n                holder.listTxtView.setTextColor(mContext.resources.getColor(R.color.black))\n                AppController.weekList.get(dayPosition).choiceStatus=(\"1\")\n                ccaDetailModelArrayList!![ccaDetailpos].choice1=(mCCAmodelArrayList[position].cca_item_name)\n                ccaDetailModelArrayList!![ccaDetailpos].choice1Id=(mCCAmodelArrayList[position].cca_details_id)\n\n\n\n                val mCCAsWeekListAdapter =\n                    CCAsWeekListAdapter(mContext, AppController.weekList, dayPosition, msgRelative)\n                mCCAsWeekListAdapter.notifyDataSetChanged()\n                recyclerWeek!!.adapter = mCCAsWeekListAdapter\n            }\n        } else {\n            System.out.println(\n                \"disable2::\" + mCCAmodelArrayList[position].disableCccaiem.toString() + \" @ \" + position\n            )\n            System.out.println(\n                \"disable2::\" + mCCAmodelArrayList[position].disableCccaiem.toString() + \" @dayPosition: \" + dayPosition\n            )\n            if (mCCAmodelArrayList[position].disableCccaiem!!) {\n                holder.confirmationImageview.setBackgroundResource(R.drawable.disablecrossicon)\n                holder.listTxtView.setTextColor(mContext.resources.getColor(R.color.grey))\n            } else if (mCCAmodelArrayList[position].status.equals(\"0\")) {\n                holder.confirmationImageview.setBackgroundResource(R.drawable.close_icon_with_white)\n                holder.listTxtView.setTextColor(mContext.resources.getColor(R.color.black))\n            } else {\n                holder.confirmationImageview.setBackgroundResource(R.drawable.participatingsmallicon_new)\n                AppController.weekList.get(dayPosition).choiceStatus1=(\"1\")\n                ccaDetailModelArrayList!![ccaDetailpos].choice2=(mCCAmodelArrayList[position].cca_item_name)\n                ccaDetailModelArrayList!![ccaDetailpos].choice2Id=(mCCAmodelArrayList[position].cca_details_id)\n\n\n\n                val mCCAsWeekListAdapter =\n                    CCAsWeekListAdapter(mContext, AppController.weekList, dayPosition, msgRelative)\n                mCCAsWeekListAdapter.notifyDataSetChanged()\n                recyclerWeek!!.adapter = mCCAsWeekListAdapter\n            }\n        }\n        for (j in 0 until AppController.weekList.size) {\n            if (AppController.weekList.get(j).choiceStatus\n                    .equals(\"0\") || AppController.weekList.get(j).choiceStatus1\n                    .equals(\"0\")\n            ) {\n                filled = false\n                break\n            } else {\n                filled = true\n            }\n            if (!filled!!) {\n                break\n            }\n        }\n        if (filled!!) {\n            submitBtn!!.background.alpha = 255\n            submitBtn!!.visibility = View.VISIBLE\n            nextBtn!!.background.alpha = 255\n            nextBtn!!.visibility = View.GONE\n        } else {\n            submitBtn!!.background.alpha = 150\n            submitBtn!!.visibility = View.INVISIBLE\n            nextBtn!!.background.alpha = 255\n            nextBtn!!.visibility = View.VISIBLE\n        }\n        holder.listTxtView.setText(mCCAmodelArrayList[position].cca_item_name)\n        if (mCCAmodelArrayList[position].cca_item_start_time != null && mCCAmodelArrayList[position].cca_item_end_time != null) {\n            holder.textViewCCAaDateItem.visibility = View.VISIBLE\n            holder.textViewCCAaDateItem.text = \"(\" + convertTimeToAMPM(\n                mCCAmodelArrayList[position].cca_item_start_time\n            ) + \" - \" + convertTimeToAMPM(\n                mCCAmodelArrayList[position].cca_item_end_time\n            ) + \")\"\n        } else if (mCCAmodelArrayList[position].cca_item_start_time != null) {\n            holder.textViewCCAaDateItem.visibility = View.VISIBLE\n            holder.textViewCCAaDateItem.text = \"(\" + convertTimeToAMPM(\n                mCCAmodelArrayList[position].cca_item_start_time\n            ) + \")\"\n        } else if (mCCAmodelArrayList[position].cca_item_end_time != null) {\n            holder.textViewCCAaDateItem.visibility = View.VISIBLE\n            holder.textViewCCAaDateItem.text = \"(\" + convertTimeToAMPM(\n                mCCAmodelArrayList[position].cca_item_end_time\n            ) + \")\"\n        } else {\n            holder.textViewCCAaDateItem.visibility = View.GONE\n        }\n\n    }\n\n    override fun getItemCount(): Int {\n        return mCCAmodelArrayList.size\n    }\n\n    inner class MyViewHolder(view: View) : RecyclerView.ViewHolder(view) {\n        var listTxtView: TextView\n        var textViewCCAaDateItem: TextView\n        var confirmationImageview: ImageView\n        var textViewCCAVenue: TextView\n        var descriptionTxt: TextView\n        var readMoreTxt: TextView\n        var descriptionRel: RelativeLayout\n\n        init {\n            textViewCCAaDateItem = view.findViewById<View>(R.id.textViewCCAaDateItem) as TextView\n            listTxtView = view.findViewById<View>(R.id.textViewCCAaItem) as TextView\n            textViewCCAVenue = view.findViewById<View>(R.id.textViewCCAVenue) as TextView\n            descriptionTxt = view.findViewById<View>(R.id.descriptionTxt) as TextView\n            readMoreTxt = view.findViewById<View>(R.id.readMoreTxt) as TextView\n            confirmationImageview = view.findViewById<View>(R.id.confirmationImageview) as ImageView\n            descriptionRel = view.findViewById<View>(R.id.descriptionRel) as RelativeLayout\n        }\n    }\n\n    companion object {\n        fun convertTimeToAMPM(date: String?): String {\n            var strCurrentDate = \"\"\n            var format = SimpleDateFormat(\"HH:mm:ss\", Locale.ENGLISH)\n            var newDate: Date? = null\n            try {\n                newDate = format.parse(date)\n            } catch (e: ParseException) {\n                e.printStackTrace()\n            }\n            format = SimpleDateFormat(\"hh:mm a\", Locale.ENGLISH)\n            strCurrentDate = format.format(newDate)\n            return strCurrentDate\n        }\n    }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/nas/alreem/activity/cca/adapter/CCAsChoiceListActivityAdapter.kt b/app/src/main/java/com/nas/alreem/activity/cca/adapter/CCAsChoiceListActivityAdapter.kt
--- a/app/src/main/java/com/nas/alreem/activity/cca/adapter/CCAsChoiceListActivityAdapter.kt	(revision 29dbbedb1ce8c3fe2a8032d242fcce101acbc7b5)
+++ b/app/src/main/java/com/nas/alreem/activity/cca/adapter/CCAsChoiceListActivityAdapter.kt	(date 1690523499429)
@@ -114,7 +114,7 @@
                 holder.textViewCCAVenue.visibility = View.GONE
             } else {
                 holder.textViewCCAVenue.text =
-                    java.lang.String.format("Location: %s", mCCAmodelArrayList[position].venue)
+                    java.lang.String.format("Location    : %s", mCCAmodelArrayList[position].venue)
                 holder.textViewCCAVenue.visibility = View.VISIBLE
             }
         } else {
@@ -134,8 +134,7 @@
             } else {
                 holder.descriptionRel.visibility = View.VISIBLE
                 holder.descriptionTxt.text =
-                    java.lang.String.format(
-                        "Description : %s",
+                    java.lang.String.format("Description : %s",
                         mCCAmodelArrayList[position].description
                     )
                 if (mCCAmodelArrayList[position].description!!.length > 22) {
Index: app/src/main/java/com/nas/alreem/activity/cca/adapter/CCAfinalReviewEditAfterSubmissionAdapter.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.nas.alreem.activity.cca.adapter\n\nimport android.app.Dialog\nimport android.content.Context\nimport android.graphics.Color\nimport android.graphics.drawable.ColorDrawable\nimport android.util.Log\nimport android.view.LayoutInflater\nimport android.view.View\nimport android.view.ViewGroup\nimport android.view.Window\nimport android.widget.*\nimport androidx.recyclerview.widget.LinearLayoutManager\nimport androidx.recyclerview.widget.RecyclerView\nimport com.nas.alreem.R\nimport com.nas.alreem.activity.cca.model.CCAReviewAfterSubmissionModel\nimport com.nas.alreem.constants.ConstantFunctions\nimport java.text.ParseException\nimport java.text.SimpleDateFormat\nimport java.util.*\n\nclass CCAfinalReviewEditAfterSubmissionAdapter(\n    var mContext: Context,\n    var mCCADetailModelArrayList: java.util.ArrayList<CCAReviewAfterSubmissionModel>\n) :\n    RecyclerView.Adapter<CCAfinalReviewEditAfterSubmissionAdapter.MyViewHolder>() {\n    var dialog: Dialog\n\n    inner class MyViewHolder(view: View) : RecyclerView.ViewHolder(view) {\n        var textViewCCADay: TextView\n        var textViewCCAChoice1: TextView\n        var textViewCCAChoice2: TextView\n        var attendanceListIcon: ImageView\n        var deleteChoice1: ImageView\n        var deleteChoice2: ImageView\n        var linearChoice1: LinearLayout\n        var linearChoice2: LinearLayout\n        var textViewCCAaDateItemChoice1: TextView\n        var textViewCCAaDateItemChoice2: TextView\n        var locationTxt: TextView\n        var descriptionTxt: TextView\n        var location2Txt: TextView\n        var description2Txt: TextView\n        var readMore: TextView\n        var readMore1: TextView\n\n        init {\n            textViewCCAaDateItemChoice1 =\n                view.findViewById<View>(R.id.textViewCCAaDateItemChoice1) as TextView\n            textViewCCAaDateItemChoice2 =\n                view.findViewById<View>(R.id.textViewCCAaDateItemChoice2) as TextView\n            textViewCCADay = view.findViewById<View>(R.id.textViewCCADay) as TextView\n            textViewCCAChoice1 = view.findViewById<View>(R.id.textViewCCAChoice1) as TextView\n            textViewCCAChoice2 = view.findViewById<View>(R.id.textViewCCAChoice2) as TextView\n            locationTxt = view.findViewById<View>(R.id.locationTxt) as TextView\n            descriptionTxt = view.findViewById<View>(R.id.descriptionTxt) as TextView\n            description2Txt = view.findViewById<View>(R.id.description2Txt) as TextView\n            location2Txt = view.findViewById<View>(R.id.location2Txt) as TextView\n            readMore = view.findViewById<View>(R.id.readMore) as TextView\n            readMore1 = view.findViewById<View>(R.id.readMore1) as TextView\n            attendanceListIcon = view.findViewById<View>(R.id.attendanceListIcon) as ImageView\n            deleteChoice1 = view.findViewById<View>(R.id.deleteChoice1) as ImageView\n            deleteChoice2 = view.findViewById<View>(R.id.deleteChoice2) as ImageView\n            linearChoice1 = view.findViewById<View>(R.id.linearChoice1) as LinearLayout\n            linearChoice2 = view.findViewById<View>(R.id.linearChoice2) as LinearLayout\n        }\n    }\n\n    init {\n        dialog = Dialog(mContext)\n        dialog.requestWindowFeature(Window.FEATURE_NO_TITLE)\n        dialog.setContentView(R.layout.dialog_attendance_list)\n        dialog.window!!.setBackgroundDrawable(ColorDrawable(Color.TRANSPARENT))\n    }\n\n    override fun onCreateViewHolder(parent: ViewGroup, viewType: Int): MyViewHolder {\n        val itemView = LayoutInflater.from(parent.context)\n            .inflate(R.layout.adapter_cca_review_after_submit, parent, false)\n        return MyViewHolder(itemView)\n    }\n\n    override fun onBindViewHolder(holder: MyViewHolder, position: Int) {\n        holder.textViewCCADay.setText(mCCADetailModelArrayList[position].day)\n        holder.attendanceListIcon.setOnClickListener {\n            if (!mCCADetailModelArrayList[position].choice1\n                    .equals(\"0\") || !mCCADetailModelArrayList[position].choice1\n                    .equals(\"-1\") || !mCCADetailModelArrayList[position].choice2\n                    .equals(\"0\") || !mCCADetailModelArrayList[position].choice2\n                    .equals(\"-1\")\n            ) {\n                showAttendanceList(position)\n            }\n        }\n        if (mCCADetailModelArrayList[position].choice1.equals(\"0\")) {\n            holder.linearChoice1.visibility = View.GONE\n            holder.textViewCCAChoice1.text = \"Choice 1 : None\"\n        } else if (mCCADetailModelArrayList[position].choice1.equals(\"-1\")) {\n            holder.linearChoice1.visibility = View.GONE\n            holder.textViewCCAChoice1.text = \"Choice 1 : Nil\"\n        } else {\n            holder.linearChoice1.visibility = View.VISIBLE\n            holder.textViewCCAChoice1.setText(mCCADetailModelArrayList[position].choice1)\n            Log.e(\"LOCATION EDIT\", mCCADetailModelArrayList[position].venue!!)\n            if (mCCADetailModelArrayList[position].venue\n                    .equals(\"0\") || mCCADetailModelArrayList[position].venue\n                    .equals(\"\")\n            ) {\n                holder.locationTxt.visibility = View.GONE\n            } else {\n                holder.locationTxt.visibility = View.VISIBLE\n                holder.locationTxt.text =\n                    \"Location            : \" + mCCADetailModelArrayList[position].venue\n            }\n            if (mCCADetailModelArrayList[position].cca_item_description\n                    .equals(\"0\") || mCCADetailModelArrayList[position].cca_item_description\n                    .equals(\"\")\n            ) {\n                holder.descriptionTxt.visibility = View.GONE\n                holder.readMore1.visibility = View.GONE\n            } else {\n                holder.descriptionTxt.visibility = View.VISIBLE\n                holder.readMore1.visibility = View.VISIBLE\n                holder.descriptionTxt.text =\n                    \"Description      : \" + mCCADetailModelArrayList[position].cca_item_description\n            }\n            if (mCCADetailModelArrayList[position].cca_item_start_time != null &&\n                mCCADetailModelArrayList[position].cca_item_end_time != null) {\n                holder.textViewCCAaDateItemChoice1.visibility = View.VISIBLE\n                holder.textViewCCAaDateItemChoice1.text = \"(\" + convertTimeToAMPM(\n                    mCCADetailModelArrayList[position].cca_item_start_time\n                ).toString() + \" - \" + convertTimeToAMPM(\n                    mCCADetailModelArrayList[position].cca_item_end_time\n                ).toString() + \")\"\n            } else if (mCCADetailModelArrayList[position].cca_item_start_time != null) {\n                holder.textViewCCAaDateItemChoice1.visibility = View.VISIBLE\n                holder.textViewCCAaDateItemChoice1.text = \"(\" + convertTimeToAMPM(\n                    mCCADetailModelArrayList[position].cca_item_start_time\n                ).toString() + \")\"\n            } else if (mCCADetailModelArrayList[position].cca_item_end_time != null) {\n                holder.textViewCCAaDateItemChoice1.visibility = View.VISIBLE\n                holder.textViewCCAaDateItemChoice1.text = \"(\" + convertTimeToAMPM(\n                    mCCADetailModelArrayList[position].cca_item_end_time\n                ).toString() + \")\"\n            } else {\n                holder.textViewCCAaDateItemChoice1.visibility = View.GONE\n            }\n        }\n        holder.readMore.setOnClickListener {\n            Log.e(\"des\",mCCADetailModelArrayList[position].cca_item_description_2!!)\n            if (mCCADetailModelArrayList[position].cca_item_description_2 != null) {\n                ConstantFunctions.showDialogueWithOk(\n                    mContext,\n                    mCCADetailModelArrayList[position].cca_item_description_2!!,\n                    \"Description\"\n                )\n            } else {\n                Toast.makeText(mContext, \"No Description available\", Toast.LENGTH_SHORT).show()\n            }\n\n        }\n        holder.description2Txt.setOnClickListener {\n            ConstantFunctions.showDialogueWithOk(\n                mContext,\n                mCCADetailModelArrayList[position].cca_item_description_2!!,\n                \"Description\"\n            )\n        }\n        holder.readMore1.setOnClickListener {\n            Log.e(\"des1\",mCCADetailModelArrayList[position].cca_item_description!!)\n            ConstantFunctions.showDialogueWithOk(\n                mContext,\n                mCCADetailModelArrayList[position].cca_item_description!!,\n                \"Description\"\n            )\n        }\n        holder.descriptionTxt.setOnClickListener {\n            ConstantFunctions.showDialogueWithOk(\n                mContext,\n                mCCADetailModelArrayList[position].cca_item_description!!,\n                \"Description\"\n            )\n        }\n        if (mCCADetailModelArrayList[position].choice2.equals(\"0\")) {\n            holder.linearChoice2.visibility = View.GONE\n            holder.textViewCCAChoice2.text = \"Choice 2 : None\"\n        } else if (mCCADetailModelArrayList[position].choice2.equals(\"-1\")) {\n            holder.linearChoice2.visibility = View.GONE\n            holder.textViewCCAChoice2.text = \"Choice 2 : Nil\"\n        } else {\n            holder.linearChoice2.visibility = View.VISIBLE\n            holder.textViewCCAChoice2.setText(mCCADetailModelArrayList[position].choice2)\n            if (mCCADetailModelArrayList[position].venue2\n                    .equals(\"0\") || mCCADetailModelArrayList[position].venue2\n                    .equals(\"\")\n            ) {\n                holder.location2Txt.visibility = View.GONE\n                holder.readMore.visibility = View.GONE\n            } else {\n                holder.location2Txt.visibility = View.VISIBLE\n                holder.readMore.visibility = View.VISIBLE\n                holder.location2Txt.text =\n                    \"Location            : \" + mCCADetailModelArrayList[position].venue2\n            }\n            if (mCCADetailModelArrayList[position].cca_item_description_2\n                    .equals(\"0\") || mCCADetailModelArrayList[position].cca_item_description_2\n                    .equals(\"\")\n            ) {\n                holder.description2Txt.visibility = View.GONE\n            } else {\n                holder.description2Txt.visibility = View.VISIBLE\n                holder.description2Txt.text =\n                    \"Description      : \" + mCCADetailModelArrayList[position].cca_item_description_2\n            }\n            if (mCCADetailModelArrayList[position].cca_item_start_time2!= null &&\n                mCCADetailModelArrayList[position].cca_item_end_time2 != null) {\n                holder.textViewCCAaDateItemChoice2.visibility = View.VISIBLE\n                holder.textViewCCAaDateItemChoice2.text = \"(\" + convertTimeToAMPM(\n                    mCCADetailModelArrayList[position].cca_item_start_time2\n                ).toString() + \" - \" + convertTimeToAMPM(\n                    mCCADetailModelArrayList[position].cca_item_end_time2\n                ).toString() + \")\"\n            } else if (mCCADetailModelArrayList[position].cca_item_start_time2 != null) {\n                holder.textViewCCAaDateItemChoice2.visibility = View.VISIBLE\n                holder.textViewCCAaDateItemChoice2.text = \"(\" + convertTimeToAMPM(\n                    mCCADetailModelArrayList[position].cca_item_start_time2\n                ).toString() + \")\"\n            } else if (mCCADetailModelArrayList[position].cca_item_end_time2 != null) {\n                holder.textViewCCAaDateItemChoice2.visibility = View.VISIBLE\n                holder.textViewCCAaDateItemChoice2.text = \"(\" + convertTimeToAMPM(\n                    mCCADetailModelArrayList[position].cca_item_end_time2\n                ).toString() + \")\"\n            } else {\n                holder.textViewCCAaDateItemChoice2.visibility = View.GONE\n            }\n        }\n        if ((mCCADetailModelArrayList[position].choice1\n                .equals(\"0\") || mCCADetailModelArrayList[position].choice1\n                .equals(\"-1\")) && (mCCADetailModelArrayList[position].choice2\n                .equals(\"0\") || mCCADetailModelArrayList[position].choice2\n                .equals(\"-1\"))\n        ) {\n            holder.attendanceListIcon.visibility = View.INVISIBLE\n            holder.deleteChoice1.visibility = View.INVISIBLE\n            holder.deleteChoice2.visibility = View.INVISIBLE\n        } else {\n            holder.attendanceListIcon.visibility = View.INVISIBLE\n            holder.deleteChoice1.visibility = View.INVISIBLE\n            holder.deleteChoice2.visibility = View.INVISIBLE\n        }\n    }\n\n    override fun getItemCount(): Int {\n        return mCCADetailModelArrayList.size\n    }\n\n    fun showAttendanceList(mPosition: Int) {\n        if (dialog.isShowing) {\n            dialog.dismiss()\n        }\n        val dialogDismiss = dialog.findViewById<View>(R.id.btn_dismiss) as Button\n        val linearChoice3 = dialog.findViewById<View>(R.id.linearChoice1) as LinearLayout\n        val linearChoice4 = dialog.findViewById<View>(R.id.linearChoice2) as LinearLayout\n        val alertHead = dialog.findViewById<View>(R.id.alertHead) as TextView\n        val textViewCCAChoiceFirst = dialog.findViewById<View>(R.id.textViewCCAChoice1) as TextView\n        val textViewCCAChoiceSecond = dialog.findViewById<View>(R.id.textViewCCAChoice2) as TextView\n        val scrollViewMain = dialog.findViewById<View>(R.id.scrollViewMain) as ScrollView\n        val socialMediaList =\n            dialog.findViewById<View>(R.id.recycler_view_social_media) as RecyclerView\n        val recycler_view_social_mediaChoice2 =\n            dialog.findViewById<View>(R.id.recycler_view_social_mediaChoice2) as RecyclerView\n        alertHead.text = \"Attendance report of \" + mCCADetailModelArrayList[mPosition].day\n        scrollViewMain.smoothScrollTo(0, 0)\n        if (!mCCADetailModelArrayList[mPosition].choice1\n                .equals(\"0\") && !mCCADetailModelArrayList[mPosition].choice2\n                .equals(\"-1\")\n        ) {\n            textViewCCAChoiceFirst.setText(mCCADetailModelArrayList[mPosition].choice2)\n            linearChoice3.visibility = View.VISIBLE\n            socialMediaList.visibility = View.VISIBLE\n            socialMediaList.setHasFixedSize(true)\n            val llm = LinearLayoutManager(mContext)\n            llm.orientation = LinearLayoutManager.VERTICAL\n            socialMediaList.layoutManager = llm\n            val socialMediaAdapter = CCAAttendenceListAdapter(\n                mContext,\n                mCCADetailModelArrayList[mPosition].calendarDaysChoice1!!\n            )\n            socialMediaList.adapter = socialMediaAdapter\n        } else {\n            linearChoice3.visibility = View.GONE\n            socialMediaList.visibility = View.GONE\n        }\n        if (!mCCADetailModelArrayList[mPosition].choice2\n                .equals(\"0\") && !mCCADetailModelArrayList[mPosition].choice2\n                .equals(\"-1\")\n        ) {\n            textViewCCAChoiceSecond.setText(mCCADetailModelArrayList[mPosition].choice2)\n            linearChoice4.visibility = View.VISIBLE\n            recycler_view_social_mediaChoice2.visibility = View.VISIBLE\n            recycler_view_social_mediaChoice2.setHasFixedSize(true)\n            val llmrecycler_view_social_mediaChoice2 = LinearLayoutManager(\n                mContext\n            )\n            llmrecycler_view_social_mediaChoice2.orientation = LinearLayoutManager.VERTICAL\n            recycler_view_social_mediaChoice2.layoutManager = llmrecycler_view_social_mediaChoice2\n            val socialMediaAdapterChoice2 = CCAAttendenceListAdapter(\n                mContext, mCCADetailModelArrayList[mPosition].calendarDaysChoice2!!\n            )\n            recycler_view_social_mediaChoice2.adapter = socialMediaAdapterChoice2\n        } else {\n            linearChoice4.visibility = View.GONE\n            recycler_view_social_mediaChoice2.visibility = View.GONE\n        }\n        dialogDismiss.setOnClickListener { dialog.dismiss() }\n        dialog.show()\n    }\n    companion object {\n        fun convertTimeToAMPM(date: String?): String {\n            var strCurrentDate = \"\"\n            var format = SimpleDateFormat(\"HH:mm:ss\", Locale.ENGLISH)\n            var newDate: Date? = null\n            try {\n                newDate = format.parse(date)\n            } catch (e: ParseException) {\n                e.printStackTrace()\n            }\n            format = SimpleDateFormat(\"hh:mm a\", Locale.ENGLISH)\n            strCurrentDate = format.format(newDate)\n            return strCurrentDate\n        }\n    }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/nas/alreem/activity/cca/adapter/CCAfinalReviewEditAfterSubmissionAdapter.kt b/app/src/main/java/com/nas/alreem/activity/cca/adapter/CCAfinalReviewEditAfterSubmissionAdapter.kt
--- a/app/src/main/java/com/nas/alreem/activity/cca/adapter/CCAfinalReviewEditAfterSubmissionAdapter.kt	(revision 29dbbedb1ce8c3fe2a8032d242fcce101acbc7b5)
+++ b/app/src/main/java/com/nas/alreem/activity/cca/adapter/CCAfinalReviewEditAfterSubmissionAdapter.kt	(date 1690523499526)
@@ -108,8 +108,7 @@
                 holder.locationTxt.visibility = View.GONE
             } else {
                 holder.locationTxt.visibility = View.VISIBLE
-                holder.locationTxt.text =
-                    "Location            : " + mCCADetailModelArrayList[position].venue
+                holder.locationTxt.text = "Location           : " + mCCADetailModelArrayList[position].venue
             }
             if (mCCADetailModelArrayList[position].cca_item_description
                     .equals("0") || mCCADetailModelArrayList[position].cca_item_description
@@ -198,8 +197,7 @@
             } else {
                 holder.location2Txt.visibility = View.VISIBLE
                 holder.readMore.visibility = View.VISIBLE
-                holder.location2Txt.text =
-                    "Location            : " + mCCADetailModelArrayList[position].venue2
+                holder.location2Txt.text = "Location           : " + mCCADetailModelArrayList[position].venue2
             }
             if (mCCADetailModelArrayList[position].cca_item_description_2
                     .equals("0") || mCCADetailModelArrayList[position].cca_item_description_2
Index: app/src/main/java/com/nas/alreem/fragment/calendar/adapter/CalendarListAdapter.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.nas.alreem.fragment.calendar.adapter\n\nimport android.app.Dialog\nimport android.content.ContentUris\nimport android.content.ContentValues\nimport android.content.Context\nimport android.content.Intent\nimport android.graphics.Color\nimport android.graphics.drawable.ColorDrawable\nimport android.net.Uri\nimport android.os.Build\nimport android.provider.CalendarContract\nimport android.text.Html\nimport android.util.Log\nimport android.view.LayoutInflater\nimport android.view.View\nimport android.view.ViewGroup\nimport android.view.Window\nimport android.widget.*\nimport androidx.annotation.NonNull\nimport androidx.recyclerview.widget.LinearLayoutManager\nimport androidx.recyclerview.widget.RecyclerView\nimport com.nas.alreem.R\nimport com.nas.alreem.constants.ConstantFunctions\nimport com.nas.alreem.constants.OnItemClickListener\nimport com.nas.alreem.constants.PreferenceManager\nimport com.nas.alreem.constants.addOnItemClickListener\nimport com.nas.alreem.fragment.calendar.model.CalendarArrayModelUSe\nimport com.nas.alreem.fragment.calendar.model.CalendarDetailsModelUse\nimport java.text.DateFormat\nimport java.text.SimpleDateFormat\nimport java.util.*\n\nvar mnthId:Int=-1\nclass CalendarListAdapter(\n    private var mContext: Context,\n    private var parentsEssentialArrayList: List<CalendarArrayModelUSe>\n) : RecyclerView.Adapter<CalendarListAdapter.MyViewHolder>() {\n    lateinit var linearLayoutManager: LinearLayoutManager\n    var colorValue:Int=0\n    var isRead:Boolean=false\n     inner class MyViewHolder(view: View) : RecyclerView.ViewHolder(view) {\n        var title: TextView = view.findViewById(R.id.dateNTime)\n        var header: LinearLayout = view.findViewById(R.id.header)\n        var eventsListView: RecyclerView = view.findViewById(R.id.eventsListView)\n\n\n    }\n    @NonNull\n    override fun onCreateViewHolder(parent: ViewGroup, viewType: Int): MyViewHolder {\n        val itemView = LayoutInflater.from(parent.context)\n            .inflate(R.layout.adapter_calendar_list, parent, false)\n        return MyViewHolder(itemView)\n    }\n    override fun onBindViewHolder(holder: MyViewHolder, position: Int) {\n        var mPosition: Int = position\n        var colours: IntArray = mContext.resources.getIntArray(R.array.calendar_row_colors)\n        colorValue = colours[position % colours.size]\n        val movie = parentsEssentialArrayList[position]\n        linearLayoutManager = LinearLayoutManager(mContext)\n        holder.eventsListView.layoutManager = linearLayoutManager\n        holder.title.text = movie.date\n        holder.header.setBackgroundColor(colorValue)\n        Log.e(\"ADAPTER SIZE\", parentsEssentialArrayList.get(position).details.size.toString())\n        val calendarAdapter = CalendarDetailListAdapter(\n            mContext, parentsEssentialArrayList.get(\n                position\n            ).details, colorValue, position, isRead\n        )\n        holder.eventsListView.adapter = calendarAdapter\n        holder.eventsListView.addOnItemClickListener(object : OnItemClickListener {\n            override fun onItemClicked(position: Int, view: View) {\n                if (parentsEssentialArrayList.get(mPosition).details.get(position).status.equals(\"0\") || parentsEssentialArrayList.get(\n                        mPosition\n                    ).details.get(position).status.equals(\"2\")\n                ) {\n                    Log.e(\"WORKING\", \"111111\")\n                    parentsEssentialArrayList.get(mPosition).details.get(position).status = \"1\"\n                    PreferenceManager.setCalendarBadge(mContext, 0)\n                    PreferenceManager.setCalendarEditedBadge(mContext, 0)\n                    notifyDataSetChanged()\n                }\n                var dateString: String = \"\"\n                if (parentsEssentialArrayList.get(mPosition).details.get(position).isAllday.equals(\"1\")) {\n                    dateString = \"All Day Event\"\n                } else {\n                    if (!parentsEssentialArrayList.get(mPosition).details.get(position).starttime.equals(\n                            \"\"\n                        ) && !parentsEssentialArrayList.get(mPosition).details.get(position).endtime.equals(\n                            \"\"\n                        )\n                    ) {\n                        dateString =\n                            parentsEssentialArrayList.get(mPosition).details.get(position).starttime + \" - \" + parentsEssentialArrayList.get(\n                                mPosition\n                            ).details.get(position).endtime\n                    } else if (!parentsEssentialArrayList.get(mPosition).details.get(position).starttime.equals(\n                            \"\"\n                        ) && parentsEssentialArrayList.get(mPosition).details.get(position).endtime.equals(\n                            \"\"\n                        )\n                    ) {\n                        dateString =\n                            parentsEssentialArrayList.get(mPosition).details.get(position).starttime\n                    } else if (parentsEssentialArrayList.get(mPosition).details.get(position).starttime.equals(\n                            \"\"\n                        ) && !parentsEssentialArrayList.get(mPosition).details.get(position).endtime.equals(\n                            \"\"\n                        )\n                    ) {\n                        dateString =\n                            parentsEssentialArrayList.get(mPosition).details.get(position).endtime\n                    }\n                }\n                showCalendarDetail(\n                    parentsEssentialArrayList.get(mPosition).details.get(position).title,\n                    parentsEssentialArrayList.get(\n                        mPosition\n                    ).date,\n                    dateString,\n                    parentsEssentialArrayList.get(mPosition).details,\n                    position,\n                    mContext\n                )\n\n            }\n\n        })\n\n    }\n\n    fun showCalendarDetail(\n        eventNameStr: String,\n        eventDateStr: String,\n        eventTypeStr: String,\n        mCalendarEventModels: ArrayList<CalendarDetailsModelUse>,\n        eventPosition: Int,\n        mContext: Context\n    )\n    {\n        val dialog = Dialog(mContext)\n        dialog.requestWindowFeature(Window.FEATURE_NO_TITLE)\n        dialog.window!!.setBackgroundDrawable(ColorDrawable(Color.TRANSPARENT))\n        dialog.setCancelable(false)\n        dialog.setContentView(R.layout.dialogue_calendar_detail)\n        var iconImageView = dialog.findViewById(R.id.iconImageView) as? ImageView\n        var eventType = dialog.findViewById(R.id.eventType) as? TextView\n        var eventDate = dialog.findViewById(R.id.eventDate) as? TextView\n        var dismiss = dialog.findViewById(R.id.dismiss) as Button\n        var linkBtn = dialog.findViewById(R.id.linkBtn) as Button\n        var deleteCalendar = dialog.findViewById(R.id.deleteCalendar) as Button\n        var addToCalendar = dialog.findViewById(R.id.addToCalendar) as Button\n        eventDate?.text =eventDateStr\n        if(eventTypeStr.equals(\"\"))\n        {\n\n        }\n        else{\n            eventType?.text = \"( \"+eventTypeStr+\" )\"\n        }\n\n        dismiss.setOnClickListener()\n        {\n            dialog.dismiss()\n        }\n        if(mCalendarEventModels.get(eventPosition).vpml.equals(\"\"))\n        {\n            linkBtn.visibility=View.GONE\n        }\n        else{\n            linkBtn.visibility=View.VISIBLE\n        }\n        linkBtn.setOnClickListener(View.OnClickListener {\n\n            val uri = Uri.parse(mCalendarEventModels[eventPosition].vpml)\n            val intent = Intent(Intent.ACTION_VIEW, uri)\n            mContext.startActivity(intent)\n            dialog.dismiss()\n\n        })\n\n        addToCalendar.setOnClickListener(View.OnClickListener {\n\n            val reqSentence: String = ConstantFunctions.htmlparsing(\n                Html.fromHtml(mCalendarEventModels[eventPosition].title).toString().replace(\n                    \"\\\\s+\".toRegex(),\n                    \" \"\n                )\n            ).toString()\n            val splited = reqSentence.split(\"\\\\s+\".toRegex()).toTypedArray()\n            var dateString: Array<String?>\n            var year = -1\n            var month = -1\n            var day = -1\n            val timeString: Array<String>\n            var hour = -1\n            var min = -1\n            val timeString1: Array<String>\n            var hour1 = -1\n            var min1 = -1\n            var allDay: String? = \"0\"\n            year = mCalendarEventModels[eventPosition].yearDate.toInt()\n            Log.e(\"MONTH\" ,mCalendarEventModels[eventPosition].monthDate)\n            month = getMonthDetails(mContext, mCalendarEventModels[eventPosition].monthDate)\n            day = mCalendarEventModels[eventPosition].dayDate.toInt()\n            if (mCalendarEventModels[eventPosition].starttime.equals(\"\")) {\n                hour = -1\n                min = -1\n            } else {\n                val format1: DateFormat = SimpleDateFormat(\"hh:mm a\", Locale.ENGLISH)\n                val format2 = SimpleDateFormat(\"hh:mm\", Locale.ENGLISH)\n                val dateStart = format1.parse(mCalendarEventModels[eventPosition].starttime)\n                val startTime = format2.format(dateStart)\n                timeString = startTime.split(\":\").toTypedArray()\n                Log.e(\"From Time\",startTime)\n                hour = timeString[0].toInt()\n                min = timeString[1].toInt()\n            }\n            allDay = mCalendarEventModels[eventPosition].isAllday\n\n            if (mCalendarEventModels[eventPosition].endtime.equals(\"\")) {\n                hour1 = -1\n                min1 = -1\n            } else {\n                val format1: DateFormat = SimpleDateFormat(\"hh:mm a\", Locale.ENGLISH)\n                val format2 = SimpleDateFormat(\"hh:mm\", Locale.ENGLISH)\n                val dateStart = format1.parse(mCalendarEventModels[eventPosition].endtime)\n                val startTime = format2.format(dateStart)\n                timeString1 = startTime.split(\":\").toTypedArray()\n                Log.e(\"From Time\",startTime)\n                hour = timeString1[0].toInt()\n                min = timeString1[1].toInt()\n//                timeString1 = mCalendarEventModels[eventPosition].endtime.split(\":\").toTypedArray()\n//                hour = timeString1[0].toInt()\n//                min = timeString1[1].toInt()\n            }\n\n            var addToCalendar = true\n            val prefData: List<String> = PreferenceManager\n                .getCalendarEventNames(mContext)!!.split(\",\")\n            for (i in prefData.indices) {\n                if (prefData[i].equals(\n                        mCalendarEventModels[eventPosition].title + mCalendarEventModels[eventPosition].title,\n                        ignoreCase = true\n                    )\n                ) {\n                    addToCalendar = false\n                    break\n                }\n            }\n            if (addToCalendar) {\n                Log.e(\"Values\", year.toString()+\" M \"+month.toString()+\" D \"+day.toString()+ \" H \"+hour.toString()+\" MIN \"+min.toString())\n                if (year != -1 && month != -1 && day != -1 && hour != -1 && min != -1) {\n                    Log.e(\"It Enters\",\"First Condition\")\n                    if (hour1 == -1 && min1 == -1) {\n                        Log.e(\"It Enters\",\"Second Condition\")\n                        addReminder(year, month, day, hour, min, year, month, day,hour, min,\n                            mCalendarEventModels[eventPosition].title, mCalendarEventModels[eventPosition].title, 0,\n                            eventPosition, allDay, mCalendarEventModels)\n                    }\n                    else {\n                        Log.e(\"It Enters\",\"Third Condition\")\n                        addReminder(year, month, day, hour, min, year, month, day, hour1, min1,\n                            mCalendarEventModels[eventPosition].title, mCalendarEventModels[eventPosition].title, 0,\n                            eventPosition, allDay, mCalendarEventModels)\n\n                    }\n                    Log.e(\"It Enters\",\"Fourth Condition\")\n                }\n                else {\n                    Log.e(\"It Enters\",\"Fifth Condition\")\n                    Toast.makeText(\n                        mContext,\n                        \"Not enough details to add to calendar\",\n                        Toast.LENGTH_SHORT\n                    ).show()\n                }\n            } else {\n                Toast.makeText(mContext, \"Event added to device calendar\", Toast.LENGTH_SHORT)\n                    .show()\n            }\n            notifyDataSetChanged()\n\n        })\n\n        deleteCalendar.setOnClickListener(View.OnClickListener {\n\n            if (mCalendarEventModels.get(eventPosition).id != 0) {\n                val deleteUri = ContentUris.withAppendedId(\n                    CalendarContract.Events.CONTENT_URI, mCalendarEventModels[eventPosition]\n                        .id.toLong()\n                )\n                mContext.contentResolver.delete(\n                    deleteUri, null,\n                    null\n                )\n                mCalendarEventModels[eventPosition].id = 0\n                Toast.makeText(\n                    mContext,\n                    \"Event removed from device calendar\", Toast.LENGTH_SHORT\n                ).show()\n            }\n            dialog.dismiss()\n        })\n\n        dialog.show()\n    }\n    override fun getItemCount(): Int {\n\n        return parentsEssentialArrayList.size\n\n    }\n\n    fun getMonthDetails(mContext: Context, descStringTime: String):Int\n    {\n        if (descStringTime.equals(\"January\"))\n        {\n            mnthId =0\n        }\n        else if (descStringTime.equals(\"February\"))\n        {\n            mnthId =1\n        }\n        else if (descStringTime.equals(\"March\"))\n        {\n            mnthId =2\n        }\n        else if (descStringTime.equals(\"April\"))\n        {\n            mnthId =3\n        }\n        else if (descStringTime.equals(\"May\"))\n        {\n            mnthId =4\n        }\n        else if (descStringTime.equals(\"June\"))\n        {\n            mnthId =5\n        }\n        else if (descStringTime.equals(\"July\"))\n        {\n            mnthId =6\n        }\n        else if (descStringTime.equals(\"August\"))\n        {\n            mnthId =7\n        }\n        else if (descStringTime.equals(\"September\"))\n        {\n            mnthId =8\n        }\n        else if (descStringTime.equals(\"October\"))\n        {\n            mnthId =9\n        }\n        else if (descStringTime.equals(\"November\"))\n        {\n            mnthId =10\n        }\n        else if (descStringTime.equals(\"December\"))\n        {\n            mnthId =11\n        }\n\n        return mnthId\n    }\n\n    fun addReminder(startYear: Int, startMonth: Int, startDay: Int, startHour: Int, startMinute: Int, endYear: Int, endMonth: Int,\n        endDay: Int, endHour: Int, endMinutes: Int, name: String, description: String, count: Int, position: Int, allDay: String,\n        mCalendarEventModelAdd:ArrayList<CalendarDetailsModelUse>) {\n        val beginTime = Calendar.getInstance()\n        beginTime[startYear, startMonth, startDay, startHour] = startMinute\n        val startMillis = beginTime.timeInMillis\n        val endTime = Calendar.getInstance()\n        endTime[endYear, endMonth, endDay, endHour] = endMinutes\n        val endMillis = endTime.timeInMillis\n        val eventUriString = \"content://com.android.calendar/events\"\n        val eventValues = ContentValues()\n        if (Build.VERSION.SDK_INT > Build.VERSION_CODES.M) {\n            // Marshmallow+\n            eventValues.put(CalendarContract.Events.CALENDAR_ID, 3) //1\n        } else if (Build.VERSION.SDK_INT == Build.VERSION_CODES.LOLLIPOP || Build.VERSION.SDK_INT == Build.VERSION_CODES.LOLLIPOP_MR1) {\n            // lollipop\n            eventValues.put(CalendarContract.Events.CALENDAR_ID, 3) //1\n        } else {\n            //below Marshmallow\n            eventValues.put(CalendarContract.Events.CALENDAR_ID, 1) //1\n        }\n\n//        eventValues.put(CalendarContract.Events.CALENDAR_ID, 1);//1\n        eventValues.put(CalendarContract.Events.TITLE, name)\n        eventValues.put(CalendarContract.Events.DESCRIPTION, description)\n        eventValues.put(CalendarContract.Events.EVENT_TIMEZONE, TimeZone.SHORT)\n        eventValues.put(CalendarContract.Events.DTSTART, startMillis)\n        eventValues.put(CalendarContract.Events.DTEND, endMillis)\n        if (allDay == \"1\") {\n            eventValues.put(CalendarContract.Events.ALL_DAY, true)\n        } else {\n            eventValues.put(CalendarContract.Events.ALL_DAY, false)\n        }\n        eventValues.put(\"eventStatus\", 1)\n        eventValues.put(CalendarContract.Events.HAS_ALARM, 1)\n        val eventUri = mContext.contentResolver.insert(\n            Uri.parse(eventUriString), eventValues\n        )\n        val eventID = eventUri!!.lastPathSegment!!.toLong()\n        Log.d(\"TAG\", \"1----$eventID\")\n        mCalendarEventModelAdd[position].id.toString()\n        Log.d(\"TAG\", \"2----\")\n        PreferenceManager.setCalendarEventNames(\n            mContext,\n            PreferenceManager.getCalendarEventNames(mContext).toString() + name\n                    + description + \",\"\n        )\n        if (count == 0) {\n            Toast.makeText(\n                mContext,\"Event added to device calendar\", Toast.LENGTH_SHORT\n            ).show()\n        }\n        /***************** Event: Reminder(with alert) Adding reminder to event  */\n        val reminderUriString = \"content://com.android.calendar/reminders\"\n        val reminderValues = ContentValues()\n        reminderValues.put(\"event_id\", eventID)\n        reminderValues.put(\"minutes\", 1440)\n        reminderValues.put(\"method\", 1)\n//        val reminderUri = mContext.contentResolver.insert(\n//            Uri.parse(reminderUriString), reminderValues\n//        )\n      //  val eventIDlong = reminderUri!!.lastPathSegment!!.toLong()\n//        AppController.eventIdList.add(eventID.toString())\n    }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/nas/alreem/fragment/calendar/adapter/CalendarListAdapter.kt b/app/src/main/java/com/nas/alreem/fragment/calendar/adapter/CalendarListAdapter.kt
--- a/app/src/main/java/com/nas/alreem/fragment/calendar/adapter/CalendarListAdapter.kt	(revision 29dbbedb1ce8c3fe2a8032d242fcce101acbc7b5)
+++ b/app/src/main/java/com/nas/alreem/fragment/calendar/adapter/CalendarListAdapter.kt	(date 1690796387608)
@@ -150,7 +150,9 @@
         var linkBtn = dialog.findViewById(R.id.linkBtn) as Button
         var deleteCalendar = dialog.findViewById(R.id.deleteCalendar) as Button
         var addToCalendar = dialog.findViewById(R.id.addToCalendar) as Button
+        var eventNameText=dialog.findViewById(R.id.eventName) as TextView
         eventDate?.text =eventDateStr
+        eventNameText?.text =eventNameStr
         if(eventTypeStr.equals(""))
         {
 
Index: app/src/main/java/com/nas/alreem/constants/ConstantFunctions.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.nas.alreem.constants\n\nimport android.app.Dialog\nimport android.content.ComponentName\nimport android.content.Context\nimport android.content.Intent\nimport android.content.pm.PackageManager\nimport android.graphics.Color\nimport android.graphics.drawable.ColorDrawable\nimport android.net.ConnectivityManager\nimport android.net.NetworkCapabilities\nimport android.os.Build\nimport android.util.Log\nimport android.view.Window\nimport android.widget.Button\nimport android.widget.ImageView\nimport android.widget.TextView\nimport com.nas.alreem.R\nimport java.text.ParseException\nimport java.text.SimpleDateFormat\nimport java.util.*\n\nclass ConstantFunctions {\n    companion object{\n\n        fun isEmailValid(email: String): Boolean {\n            return android.util.Patterns.EMAIL_ADDRESS.matcher(email).matches()\n        }\n\n        fun showEmailView(email:String,context: Context,helpButton: Button)\n        {\n            val intent = Intent(Intent.ACTION_SEND)\n            val recipients = arrayOf(\"It.help@nasabudhabi.ae\")\n            intent.putExtra(Intent.EXTRA_EMAIL, recipients)\n            intent.type = \"text/html\"\n            intent.setPackage(\"com.google.android.gm\")\n            context.startActivity(Intent.createChooser(intent, \"Send mail\"))\n        }\n\n\n        fun internetCheck(context:Context):Boolean\n        {\n            var result = false\n            val cm = context.getSystemService(Context.CONNECTIVITY_SERVICE) as ConnectivityManager?\n            if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M) {\n                cm?.run {\n                    cm.getNetworkCapabilities(cm.activeNetwork)?.run {\n                        result = when {\n                            hasTransport(NetworkCapabilities.TRANSPORT_WIFI) -> true\n                            hasTransport(NetworkCapabilities.TRANSPORT_CELLULAR) -> true\n                            hasTransport(NetworkCapabilities.TRANSPORT_ETHERNET) -> true\n                            else -> false\n                        }\n                    }\n                }\n            } else {\n                cm?.run {\n                    cm.activeNetworkInfo?.run {\n                        if (type == ConnectivityManager.TYPE_WIFI) {\n                            result = true\n                        } else if (type == ConnectivityManager.TYPE_MOBILE) {\n                            result = true\n                        }\n                    }\n                }\n            }\n            return result\n        }\n\n        fun commonErrorString(status:Int):String\n        {\n            var msg:String=\"\"\n\n            if(status==101)\n            {\n                msg=ConstantWords.status_101\n            }\n            else if (status==102)\n            {\n                msg=ConstantWords.status_102\n            }\n            else if (status==103)\n            {\n                msg=ConstantWords.status_103\n            }\n            else if (status==110)\n            {\n                msg=ConstantWords.status_110\n            }\n            else if (status==113)\n            {\n                msg=ConstantWords.status_113\n            }\n            else if (status==114)\n            {\n                msg=ConstantWords.status_114\n            } else if (status==116)\n            {\n                msg=ConstantWords.status_116\n            } else if (status==123)\n            {\n                msg=ConstantWords.status_123\n            }\n            else if (status==124)\n            {\n                msg=ConstantWords.status_124\n            }\n             else if (status==125)\n            {\n                msg=ConstantWords.status_125\n            }\n             else if (status==130)\n            {\n                msg=ConstantWords.status_130\n            }\n             else if (status==131)\n            {\n                msg=ConstantWords.status_131\n            } else if (status==132)\n            {\n                msg=ConstantWords.status_132\n            } else if (status==133)\n            {\n                msg=ConstantWords.status_133\n            } else if (status==134)\n            {\n                msg=ConstantWords.status_134\n            } else if (status==135)\n            {\n                msg=ConstantWords.status_135\n            }\n            else if(status==121)\n            {\n                msg=ConstantWords.status_121\n            }\n\n            return msg\n        }\n\n\n        fun showDialogueWithOk(context: Context, message: String, msgHead: String)\n        {\n            val dialog = Dialog(context)\n            dialog.requestWindowFeature(Window.FEATURE_NO_TITLE)\n            dialog.window!!.setBackgroundDrawable(ColorDrawable(Color.TRANSPARENT))\n            dialog.setCancelable(false)\n            dialog.setContentView(R.layout.dialog_common_error_alert)\n            var iconImageView = dialog.findViewById(R.id.iconImageView) as? ImageView\n            var alertHead = dialog.findViewById(R.id.alertHead) as? TextView\n            var text_dialog = dialog.findViewById(R.id.messageTxt) as? TextView\n            var btn_Ok = dialog.findViewById(R.id.btn_Ok) as Button\n            text_dialog?.text = message\n            alertHead?.text = msgHead\n            btn_Ok.setOnClickListener()\n            {\n                dialog.dismiss()\n            }\n            dialog.show()\n        }\n        fun htmlparsing(text: String): String? {\n            var encodedString: String = text.replace(\"&lt;\".toRegex(), \"<\")\n            encodedString = encodedString.replace(\"&gt;\".toRegex(), \">\")\n            encodedString = encodedString.replace(\"&amp;\".toRegex(), \"\")\n            encodedString = encodedString.replace(\"amp;\".toRegex(), \"\")\n            return encodedString\n        }\n\n        fun dateParsingToddMMMyyyyBasket(date: String?): String? {\n            var strCurrentDate = \"\"\n            var format = SimpleDateFormat(\"yyyy-MM-dd\", Locale.ENGLISH)\n            var newDate: Date? = null\n            try {\n                newDate = format.parse(date)\n            } catch (e: ParseException) {\n                e.printStackTrace()\n            }\n            format = SimpleDateFormat(\"dd MMM yyyy\", Locale.ENGLISH)\n            strCurrentDate = format.format(newDate)\n            Log.e(\"Date converted\",strCurrentDate)\n            return strCurrentDate\n        }\n        fun replace(str: String): String? {\n            return str.replace(\" \".toRegex(), \"%20\")\n        }\n    }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/nas/alreem/constants/ConstantFunctions.kt b/app/src/main/java/com/nas/alreem/constants/ConstantFunctions.kt
--- a/app/src/main/java/com/nas/alreem/constants/ConstantFunctions.kt	(revision 29dbbedb1ce8c3fe2a8032d242fcce101acbc7b5)
+++ b/app/src/main/java/com/nas/alreem/constants/ConstantFunctions.kt	(date 1690523499625)
@@ -11,6 +11,7 @@
 import android.net.NetworkCapabilities
 import android.os.Build
 import android.util.Log
+import android.view.View
 import android.view.Window
 import android.widget.Button
 import android.widget.ImageView
@@ -183,4 +184,6 @@
             return str.replace(" ".toRegex(), "%20")
         }
     }
+
+
 }
\ No newline at end of file
Index: app/src/main/java/com/nas/alreem/constants/ConstantWords.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.nas.alreem.constants\n\nimport com.nas.alreem.activity.survey.model.SurveySubmitApiModel\nimport com.nas.alreem.activity.survey.model.SurveySubmitDataModel\n\nclass ConstantWords {\n    companion object\n    {\n        var emailHelp:String=\"communications@alreem.com\"\n        var status_101=\"Some Error Occured.\"\n        var status_102=\"Internal Server Error.\"\n        var status_103=\"Validation Error.\"\n        var status_110=\"Invalid username and password.\"\n        var status_113=\"Verification code not match.\"\n        var status_114=\"This Email ID is not registered with our school. Kindly enter the school registered Email ID.\"\n        var status_116=\"Token expired.\"\n        var status_123=\"Invalid file access.\"\n        var status_124=\"Route not found.\"\n        var status_125=\"Student not found in our database.\"\n        var status_130=\"DecryptException Error.\"\n        var status_131=\"Url/Method not found.\"\n        var status_132=\"No Data Found.\"\n        var status_133=\"Restricted access.\"\n        var status_134=\"Method Not Allowed.\"\n        var status_135=\"User not triggered.\"\n        var status_121=\"The Email ID is already Registered.\"\n        var status_111=\"No Students are linked with this Email ID.\"\n        var status_100_signup=\"Successfully registered.Please check your email for further details.\"\n        var status_100_forget_password=\"New Password has send to your Email Id.Please check your email for further details.\"\n        var status_100_login=\"Successfully Logged in.\"\n        var status_100_change_password=\"Successfully Reset your password.\"\n        var no_notification_found=\"No Notification Found.\"\n\n\n\n        /*TAB_ID*/\n        var TAB_NOTIFICATIONS = \"1\"\n        var TAB_CALENDAR = \"2\"\n        var TAB_ABSENCE = \"3\"\n        var TAB_PAYMENTS = \"4\"\n        var TAB_LUNCH_BOX = \"5\"\n        var TAB_PARENT_ESSENTIAL = \"6\"\n        var TAB_EARLY_YEARS = \"7\"\n        var TAB_PRIMARY = \"8\"\n        var TAB_SECONDARY = \"9\"\n        var TAB_ENRICHMENT = \"10\"\n        var TAB_PARENT_MEETINGS = \"11\"\n        var TAB_PERMISSION_FORMS = \"12\"\n        var TAB_GALLERY = \"13\"\n        var TAB_ABOUT_US = \"14\"\n        var TAB_CONTACT_US = \"15\"\n\n\n\n        /*MODULE NAME*/\n        var notification=\"Notifications\"\n        var calendar=\"Calendar\"\n        var payments=\"Payments\"\n        var early_years=\"Early Years\"\n        var primary=\"Primary\"\n        var secondary=\"Secondary\"\n        var gallery=\"Gallery\"\n        var about_us=\"About Us\"\n        var contact_us=\"Contact Us\"\n        var settings=\"Settings\"\n        var lunchbox=\"Lunch Box\"\n        var communications=\"Communications\"\n        var social_media=\"Social Media\"\n        var information=\"Informations\"\n        var newsletters=\"Newsletters\"\n        var parentessential=\"Parent Essentials\"\n        var parentmeetings=\"Parent Meetings\"\n        var absence_earlypickup=\"Absence & Early Pickup\"\n        var enrichment=\"Enrichment\"\n        var permission_forms=\"Permission Forms\"\n\n\n        var absence=\"Absence\"\n        var earlypickup=\"Early Pickup\"\n        var staff_directory=\"Staff Directory\"\n\n\n        var surveySubmitArrayList=ArrayList<SurveySubmitDataModel>()\n    }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/nas/alreem/constants/ConstantWords.kt b/app/src/main/java/com/nas/alreem/constants/ConstantWords.kt
--- a/app/src/main/java/com/nas/alreem/constants/ConstantWords.kt	(revision 29dbbedb1ce8c3fe2a8032d242fcce101acbc7b5)
+++ b/app/src/main/java/com/nas/alreem/constants/ConstantWords.kt	(date 1690786968007)
@@ -36,19 +36,19 @@
         /*TAB_ID*/
         var TAB_NOTIFICATIONS = "1"
         var TAB_CALENDAR = "2"
-        var TAB_ABSENCE = "3"
-        var TAB_PAYMENTS = "4"
-        var TAB_LUNCH_BOX = "5"
-        var TAB_PARENT_ESSENTIAL = "6"
+        var TAB_ABSENCE = "6"
+        var TAB_PAYMENTS = "3"
+        var TAB_LUNCH_BOX = "4"
+        var TAB_PARENT_ESSENTIAL = "5"
         var TAB_EARLY_YEARS = "7"
         var TAB_PRIMARY = "8"
         var TAB_SECONDARY = "9"
-        var TAB_ENRICHMENT = "10"
-        var TAB_PARENT_MEETINGS = "11"
-        var TAB_PERMISSION_FORMS = "12"
+        var TAB_ENRICHMENT = "11"
+        var TAB_PARENT_MEETINGS = "12"
+        var TAB_PERMISSION_FORMS = "10"
         var TAB_GALLERY = "13"
-        var TAB_ABOUT_US = "14"
-        var TAB_CONTACT_US = "15"
+        var TAB_ABOUT_US = "15"
+        var TAB_CONTACT_US = "14"
 
 
 
Index: app/src/main/java/com/nas/alreem/fragment/calendar/adapter/CalendarDetailListAdapter.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.nas.alreem.fragment.calendar.adapter\n\nimport android.content.Context\nimport android.util.Log\nimport android.view.LayoutInflater\nimport android.view.View\nimport android.view.ViewGroup\nimport android.widget.ImageView\nimport android.widget.TextView\nimport androidx.annotation.NonNull\nimport androidx.recyclerview.widget.RecyclerView\nimport com.nas.alreem.R\nimport com.nas.alreem.fragment.calendar.model.CalendarDetailsModelUse\n\nclass CalendarDetailListAdapter(\n    private var mContext: Context,\n    private var calendarModels: List<CalendarDetailsModelUse>,\n    private var colors: Int,\n    private var mPosition: Int,\n    private var isRead: Boolean\n) : RecyclerView.Adapter<CalendarDetailListAdapter.MyViewHolder>() {\n    inner class MyViewHolder(view: View) : RecyclerView.ViewHolder(view) {\n        var eventName: TextView = view.findViewById(R.id.eventName)\n        var eventTime: TextView = view.findViewById(R.id.eventTime)\n        var addicon: ImageView = view.findViewById(R.id.addicon)\n        var removeicon: ImageView = view.findViewById(R.id.removeicon)\n        var statusImg: ImageView = view.findViewById(R.id.statusImg)\n\n\n\n    }\n    @NonNull\n    override fun onCreateViewHolder(parent: ViewGroup, viewType: Int): MyViewHolder {\n        val itemView = LayoutInflater.from(parent.context)\n            .inflate(R.layout.adapter_calendar_detail, parent, false)\n        return MyViewHolder(itemView)\n    }\n    override fun onBindViewHolder(holder: MyViewHolder, position: Int) {\n        Log.e(\"ADAPTAR\", \"DETAIL\")\n        holder.eventName.text = calendarModels.get(position).title\n\n        if (calendarModels.get(position).isAllday.equals(\"1\")) {\n            holder.eventTime.text = \"All Day Event\"\n        } else {\n            if (!calendarModels.get(position).starttime.equals(\"\") && !(calendarModels.get(position).endtime).equals(\n                    \"\"\n                )\n            ) {\n                holder.eventTime.text =\n                    calendarModels.get(position).starttime + \" - \" + calendarModels.get(\n                        position\n                    ).endtime\n            } else if (!calendarModels.get(position).starttime.equals(\"\") && (calendarModels.get(\n                    position\n                ).endtime).equals(\"\")\n            ) {\n                holder.eventTime.text = calendarModels.get(position).starttime\n            } else if (calendarModels.get(position).starttime.equals(\"\") && !(calendarModels.get(\n                    position\n                ).endtime).equals(\"\")\n            ) {\n                holder.eventTime.text = calendarModels.get(position).endtime\n            }\n        }\n\n\n\n        holder.eventTime.setTextColor(colors)\n        holder.eventName.setTextColor(colors)\n\n        if (colors == mContext.resources.getColor(R.color.cal_row_1)) {\n            holder.addicon.setImageResource(R.drawable.addicon4)\n            holder.removeicon.setImageResource(R.drawable.minimize4)\n        } else if (colors == mContext.resources.getColor(R.color.cal_row_2)) {\n            holder.addicon.setImageResource(R.drawable.addicon3)\n            holder.removeicon.setImageResource(R.drawable.minimize3)\n        } else if (colors == mContext.resources.getColor(R.color.cal_row_3)) {\n            holder.addicon.setImageResource(R.drawable.addicon2)\n            holder.removeicon.setImageResource(R.drawable.minimize2)\n        } else if (colors == mContext.resources.getColor(R.color.cal_row_4)) {\n            holder.addicon.setImageResource(R.drawable.addicon1)\n            holder.removeicon.setImageResource(R.drawable.minimize1)\n        }\n\n        if (calendarModels.get(position).status.equals(\"0\")) {\n            holder.statusImg.visibility = View.VISIBLE\n\n            holder.statusImg.setImageResource(R.drawable.shape_circle_red)\n        } else if (calendarModels.get(position).status.equals(\"2\")) {\n            holder.statusImg.visibility = View.VISIBLE\n\n            holder.statusImg.setImageResource(R.drawable.shape_circle_navy)\n\n        } else if (calendarModels.get(position).status.equals(\"1\") || calendarModels.get(position).status.equals(\n                \"\"\n            )\n        ) {\n            holder.statusImg.visibility = View.INVISIBLE\n        }\n\n    }\n    override fun getItemCount(): Int {\n        Log.e(\"SIZE ADA\", calendarModels.size.toString())\n        return calendarModels.size\n\n    }\n\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/nas/alreem/fragment/calendar/adapter/CalendarDetailListAdapter.kt b/app/src/main/java/com/nas/alreem/fragment/calendar/adapter/CalendarDetailListAdapter.kt
--- a/app/src/main/java/com/nas/alreem/fragment/calendar/adapter/CalendarDetailListAdapter.kt	(revision 29dbbedb1ce8c3fe2a8032d242fcce101acbc7b5)
+++ b/app/src/main/java/com/nas/alreem/fragment/calendar/adapter/CalendarDetailListAdapter.kt	(date 1690799233118)
@@ -38,14 +38,15 @@
     override fun onBindViewHolder(holder: MyViewHolder, position: Int) {
         Log.e("ADAPTAR", "DETAIL")
         holder.eventName.text = calendarModels.get(position).title
-
+        //Log.e("isalladay", calendarModels.get(position).isAllday)
         if (calendarModels.get(position).isAllday.equals("1")) {
             holder.eventTime.text = "All Day Event"
         } else {
-            if (!calendarModels.get(position).starttime.equals("") && !(calendarModels.get(position).endtime).equals(
-                    ""
-                )
+          //  Log.e("satrttime",calendarModels.get(position).starttime)
+          //  Log.e("endtime",calendarModels.get(position).endtime)
+            if (!calendarModels.get(position).starttime.equals("") && !(calendarModels.get(position).endtime).equals("")
             ) {
+                Log.e("minus","minus")
                 holder.eventTime.text =
                     calendarModels.get(position).starttime + " - " + calendarModels.get(
                         position
@@ -54,11 +55,13 @@
                     position
                 ).endtime).equals("")
             ) {
+                //Log.e("Success1","Suucess")
                 holder.eventTime.text = calendarModels.get(position).starttime
             } else if (calendarModels.get(position).starttime.equals("") && !(calendarModels.get(
                     position
                 ).endtime).equals("")
             ) {
+               // Log.e("Success2","Suucess")
                 holder.eventTime.text = calendarModels.get(position).endtime
             }
         }
Index: app/src/main/java/com/nas/alreem/fragment/calendar/model/CalendarDetailsModelUse.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.nas.alreem.fragment.calendar.model\n\nimport com.google.gson.annotations.SerializedName\n\nclass CalendarDetailsModelUse {\n\n    @SerializedName(\"id\") var id: Int=0\n    @SerializedName(\"starttime\") var starttime: String=\"\"\n    @SerializedName(\"endtime\") var endtime: String=\"\"\n    @SerializedName(\"title\") var title: String=\"\"\n    @SerializedName(\"isAllday\") var isAllday: String=\"\"\n    @SerializedName(\"vpml\") var vpml: String=\"\"\n    @SerializedName(\"status\") var status: String=\"\"\n    @SerializedName(\"dayStringDate\") var dayStringDate: String=\"\"\n    @SerializedName(\"dayDate\") var dayDate: String=\"\"\n    @SerializedName(\"monthDate\") var monthDate: String=\"\"\n    @SerializedName(\"yearDate\") var yearDate: String=\"\"\n    @SerializedName(\"from_time\") var fromTime: String=\"\"\n    @SerializedName(\"to_time\") var toTime: String=\"\"\n    @SerializedName(\"eventAddToCalendar\") var eventAddToCalendar: Boolean=false\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/nas/alreem/fragment/calendar/model/CalendarDetailsModelUse.kt b/app/src/main/java/com/nas/alreem/fragment/calendar/model/CalendarDetailsModelUse.kt
--- a/app/src/main/java/com/nas/alreem/fragment/calendar/model/CalendarDetailsModelUse.kt	(revision 29dbbedb1ce8c3fe2a8032d242fcce101acbc7b5)
+++ b/app/src/main/java/com/nas/alreem/fragment/calendar/model/CalendarDetailsModelUse.kt	(date 1690798390047)
@@ -5,8 +5,8 @@
 class CalendarDetailsModelUse {
 
     @SerializedName("id") var id: Int=0
-    @SerializedName("starttime") var starttime: String=""
-    @SerializedName("endtime") var endtime: String=""
+    @SerializedName("start_time") var starttime: String=""
+    @SerializedName("end_time") var endtime: String=""
     @SerializedName("title") var title: String=""
     @SerializedName("isAllday") var isAllday: String=""
     @SerializedName("vpml") var vpml: String=""
Index: app/src/main/java/com/nas/alreem/fragment/calendar/model/CalendarDetailsModel.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.nas.alreem.fragment.calendar.model\n\nimport com.google.gson.annotations.SerializedName\n\nclass CalendarDetailsModel {\n    @SerializedName(\"id\") var id: Int=0\n    @SerializedName(\"starttime\") var starttime: String=\"\"\n    @SerializedName(\"endtime\") var endtime: String=\"\"\n    @SerializedName(\"title\") var title: String=\"\"\n    @SerializedName(\"isAllday\") var isAllday: String=\"\"\n    @SerializedName(\"vpml\") var vpml: String=\"\"\n    @SerializedName(\"status\") var status: String=\"\"\n}\n\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/nas/alreem/fragment/calendar/model/CalendarDetailsModel.kt b/app/src/main/java/com/nas/alreem/fragment/calendar/model/CalendarDetailsModel.kt
--- a/app/src/main/java/com/nas/alreem/fragment/calendar/model/CalendarDetailsModel.kt	(revision 29dbbedb1ce8c3fe2a8032d242fcce101acbc7b5)
+++ b/app/src/main/java/com/nas/alreem/fragment/calendar/model/CalendarDetailsModel.kt	(date 1690798389876)
@@ -4,8 +4,8 @@
 
 class CalendarDetailsModel {
     @SerializedName("id") var id: Int=0
-    @SerializedName("starttime") var starttime: String=""
-    @SerializedName("endtime") var endtime: String=""
+    @SerializedName("start_time") var starttime: String=""
+    @SerializedName("end_time") var endtime: String=""
     @SerializedName("title") var title: String=""
     @SerializedName("isAllday") var isAllday: String=""
     @SerializedName("vpml") var vpml: String=""
Index: app/src/main/java/com/nas/alreem/activity/cca/adapter/CCAfinalReviewAfterSubmissionAdapter.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.nas.alreem.activity.cca.adapter\n\nimport android.app.Dialog\nimport android.content.Context\nimport android.content.Intent\nimport android.graphics.Color\nimport android.graphics.drawable.ColorDrawable\nimport android.util.Log\nimport android.view.LayoutInflater\nimport android.view.View\nimport android.view.ViewGroup\nimport android.view.Window\nimport android.widget.*\nimport androidx.recyclerview.widget.LinearLayoutManager\nimport androidx.recyclerview.widget.RecyclerView\nimport com.nas.alreem.R\nimport com.nas.alreem.activity.cca.CCAsReviewAfterSubmissionActivity\nimport com.nas.alreem.activity.cca.model.CCACancelRequestModel\nimport com.nas.alreem.activity.cca.model.CCACancelResponseModel\nimport com.nas.alreem.activity.cca.model.CCAReviewAfterSubmissionModel\nimport com.nas.alreem.constants.ConstantFunctions\nimport com.nas.alreem.constants.PreferenceManager\nimport com.nas.alreem.rest.ApiClient\nimport retrofit2.Call\nimport retrofit2.Callback\nimport retrofit2.Response\nimport java.text.ParseException\nimport java.text.SimpleDateFormat\nimport java.util.*\n\nclass CCAfinalReviewAfterSubmissionAdapter(\n  var  mContext: Context,\n  var  mCCADetailModelArrayList: ArrayList<CCAReviewAfterSubmissionModel>\n) :\n    RecyclerView.Adapter<CCAfinalReviewAfterSubmissionAdapter.MyViewHolder>() {\n   // lateinit var mCCADetailModelArrayList: ArrayList<CCAReviewAfterSubmissionModel>\n    var dialog: Dialog\n\n    inner class MyViewHolder(view: View) : RecyclerView.ViewHolder(view) {\n        var textViewCCADay: TextView\n        var textViewCCAChoice1: TextView\n        var textViewCCAChoice2: TextView\n        var attendanceListIcon: ImageView\n        var deleteChoice1: ImageView\n        var deleteChoice2: ImageView\n        var linearChoice1: LinearLayout\n        var linearChoice2: LinearLayout\n        var textViewCCAaDateItemChoice1: TextView\n        var textViewCCAaDateItemChoice2: TextView\n        var locationTxt: TextView\n        var descriptionTxt: TextView\n        var location2Txt: TextView\n        var description2Txt: TextView\n        var readMore: TextView\n        var readMore1: TextView\n\n        init {\n            textViewCCAaDateItemChoice1 =\n                view.findViewById<View>(R.id.textViewCCAaDateItemChoice1) as TextView\n            textViewCCAaDateItemChoice2 =\n                view.findViewById<View>(R.id.textViewCCAaDateItemChoice2) as TextView\n            textViewCCADay = view.findViewById<View>(R.id.textViewCCADay) as TextView\n            textViewCCAChoice1 = view.findViewById<View>(R.id.textViewCCAChoice1) as TextView\n            textViewCCAChoice2 = view.findViewById<View>(R.id.textViewCCAChoice2) as TextView\n            attendanceListIcon = view.findViewById<View>(R.id.attendanceListIcon) as ImageView\n            deleteChoice1 = view.findViewById<View>(R.id.deleteChoice1) as ImageView\n            deleteChoice2 = view.findViewById<View>(R.id.deleteChoice2) as ImageView\n            linearChoice1 = view.findViewById<View>(R.id.linearChoice1) as LinearLayout\n            linearChoice2 = view.findViewById<View>(R.id.linearChoice2) as LinearLayout\n            locationTxt = view.findViewById<View>(R.id.locationTxt) as TextView\n            descriptionTxt = view.findViewById<View>(R.id.descriptionTxt) as TextView\n            description2Txt = view.findViewById<View>(R.id.description2Txt) as TextView\n            location2Txt = view.findViewById<View>(R.id.location2Txt) as TextView\n            readMore = view.findViewById<View>(R.id.readMore) as TextView\n            readMore1 = view.findViewById<View>(R.id.readMore1) as TextView\n        }\n    }\n\n    init {\n        this.mContext = mContext\n        this.mCCADetailModelArrayList = mCCADetailModelArrayList\n        dialog = Dialog(mContext)\n        dialog.requestWindowFeature(Window.FEATURE_NO_TITLE)\n        dialog.setContentView(R.layout.dialog_attendance_list)\n        dialog.window!!.setBackgroundDrawable(ColorDrawable(Color.TRANSPARENT))\n    }\n\n    override fun onCreateViewHolder(parent: ViewGroup, viewType: Int): MyViewHolder {\n        val itemView: View = LayoutInflater.from(parent.context)\n            .inflate(R.layout.adapter_cca_review_after_submit, parent, false)\n        return MyViewHolder(itemView)\n    }\n\n    override fun onBindViewHolder(holder: MyViewHolder, position: Int) {\n        holder.textViewCCADay.setText(mCCADetailModelArrayList[position].day)\n        if (mCCADetailModelArrayList[position].cca_item_description!!.length > 40) {\n            holder.readMore1.visibility = View.VISIBLE\n        } else {\n            holder.readMore1.visibility = View.GONE\n        }\n        holder.attendanceListIcon.setOnClickListener {\n            if (!mCCADetailModelArrayList[position].choice1\n                    .equals(\"0\") || !mCCADetailModelArrayList[position].choice1\n                    .equals(\"-1\") || !mCCADetailModelArrayList[position].choice2\n                    .equals(\"0\") || !mCCADetailModelArrayList[position].choice2\n                    .equals(\"-1\")\n            ) {\n                showAttendanceList(position)\n            }\n        }\n        holder.readMore.setOnClickListener {\n            Log.e(\"click1\",\"Click1\")\n            ConstantFunctions.showDialogueWithOk(\n                mContext,\n                mCCADetailModelArrayList[position].cca_item_description_2!!,\n                \"Description\"\n            )\n        }\n        holder.description2Txt.setOnClickListener {\n            ConstantFunctions.showDialogueWithOk(\n                mContext,\n                mCCADetailModelArrayList[position].cca_item_description_2!!,\n                \"Description\"\n            )\n        }\n        holder.readMore1.setOnClickListener {\n            Log.e(\"click1\",\"Click1\")\n            ConstantFunctions.showDialogueWithOk(\n                mContext,\n                mCCADetailModelArrayList[position].cca_item_description!!,\n                \"Description\"\n            )\n        }\n        holder.descriptionTxt.setOnClickListener {\n            ConstantFunctions.showDialogueWithOk(\n                mContext,\n                mCCADetailModelArrayList[position].cca_item_description!!,\n                \"Description\"\n            )\n        }\n        if (mCCADetailModelArrayList[position].choice1.equals(\"0\")) {\n            holder.linearChoice1.visibility = View.GONE\n            holder.textViewCCAChoice1.text = \"Choice 1 : None\"\n        } else if (mCCADetailModelArrayList[position].choice1.equals(\"-1\")) {\n            holder.linearChoice1.visibility = View.GONE\n            holder.textViewCCAChoice1.text = \"Choice 1 : Nil\"\n        } else {\n            holder.linearChoice1.visibility = View.VISIBLE\n            holder.textViewCCAChoice1.setText(mCCADetailModelArrayList[position].choice1)\n            if (mCCADetailModelArrayList[position].venue\n                    .equals(\"0\") || mCCADetailModelArrayList[position].venue\n                    .equals(\"\")\n            ) {\n                holder.locationTxt.visibility = View.GONE\n            } else {\n                holder.locationTxt.visibility = View.VISIBLE\n                holder.locationTxt.text =\n                    \"Location            : \" + mCCADetailModelArrayList[position].venue\n            }\n            System.out.println(\"DESC EDIT\" + mCCADetailModelArrayList[position].cca_item_description)\n            if (mCCADetailModelArrayList[position].cca_item_description\n                    .equals(\"0\") || mCCADetailModelArrayList[position].cca_item_description\n                    .equals(\"\")\n            ) {\n                holder.descriptionTxt.visibility = View.GONE\n                holder.readMore1.visibility = View.GONE\n            } else {\n                holder.descriptionTxt.visibility = View.VISIBLE\n                holder.readMore1.visibility = View.VISIBLE\n                holder.descriptionTxt.text =\n                    \"Description      : \" + mCCADetailModelArrayList[position].cca_item_description\n            }\n            if (mCCADetailModelArrayList[position].cca_item_start_time != null && mCCADetailModelArrayList[position].cca_item_end_time != null) {\n                holder.textViewCCAaDateItemChoice1.visibility = View.VISIBLE\n                holder.textViewCCAaDateItemChoice1.text = \"(\" + convertTimeToAMPM(\n                    mCCADetailModelArrayList[position].cca_item_start_time\n                ) + \" - \" + convertTimeToAMPM(\n                    mCCADetailModelArrayList[position].cca_item_end_time\n                ) + \")\"\n            } else if (mCCADetailModelArrayList[position].cca_item_start_time != null) {\n                holder.textViewCCAaDateItemChoice1.visibility = View.VISIBLE\n                holder.textViewCCAaDateItemChoice1.text = \"(\" + convertTimeToAMPM(\n                    mCCADetailModelArrayList[position].cca_item_start_time\n                ) + \")\"\n            } else if (mCCADetailModelArrayList[position].cca_item_end_time != null) {\n                holder.textViewCCAaDateItemChoice1.visibility = View.VISIBLE\n                holder.textViewCCAaDateItemChoice1.text = \"(\" + convertTimeToAMPM(\n                    mCCADetailModelArrayList[position].cca_item_end_time\n                ) + \")\"\n            } else {\n                holder.textViewCCAaDateItemChoice1.visibility = View.GONE\n            }\n            if (mCCADetailModelArrayList[position].attending_status.equals(\"1\")) {\n                holder.deleteChoice1.setImageResource(R.drawable.delete_red)\n            } else if (mCCADetailModelArrayList[position].attending_status\n                    .equals(\"3\")\n            ) {\n                holder.deleteChoice1.setImageResource(R.drawable.delete_disabled)\n                holder.textViewCCAaDateItemChoice1.setTextColor(mContext.resources.getColor(R.color.light_grey))\n                holder.textViewCCAChoice1.setTextColor(mContext.resources.getColor(R.color.light_grey))\n            } else {\n                holder.deleteChoice2.setImageResource(R.drawable.delete_disabled)\n                holder.textViewCCAaDateItemChoice2.setTextColor(mContext.resources.getColor(R.color.light_grey))\n                holder.textViewCCAChoice2.setTextColor(mContext.resources.getColor(R.color.light_grey))\n            }\n        }\n        if (mCCADetailModelArrayList[position].choice2.equals(\"0\")) {\n            holder.linearChoice2.visibility = View.GONE\n            holder.textViewCCAChoice2.text = \"Choice 2 : None\"\n        } else if (mCCADetailModelArrayList[position].choice2.equals(\"-1\")) {\n            holder.linearChoice2.visibility = View.GONE\n            holder.textViewCCAChoice2.text = \"Choice 2 : Nil\"\n        } else {\n            holder.linearChoice2.visibility = View.VISIBLE\n            holder.textViewCCAChoice2.setText(mCCADetailModelArrayList[position].choice2)\n            if (mCCADetailModelArrayList[position].venue2\n                    .equals(\"0\") || mCCADetailModelArrayList[position].venue2\n                    .equals(\"\")\n            ) {\n                holder.location2Txt.visibility = View.GONE\n                holder.readMore.visibility = View.GONE\n            } else {\n                holder.location2Txt.visibility = View.VISIBLE\n                holder.readMore.visibility = View.VISIBLE\n                holder.location2Txt.text =\n                    \"Location            : \" + mCCADetailModelArrayList[position].venue2\n            }\n            if (mCCADetailModelArrayList[position].cca_item_description_2\n                    .equals(\"0\") || mCCADetailModelArrayList[position].cca_item_description_2\n                    .equals(\"\")\n            ) {\n                holder.description2Txt.visibility = View.GONE\n            } else {\n                holder.description2Txt.visibility = View.VISIBLE\n                holder.description2Txt.text =\n                    \"Description      : \" + mCCADetailModelArrayList[position].cca_item_description_2\n            }\n            if (mCCADetailModelArrayList[position].cca_item_start_time != null && mCCADetailModelArrayList[position].cca_item_end_time != null) {\n                holder.textViewCCAaDateItemChoice2.visibility = View.VISIBLE\n                holder.textViewCCAaDateItemChoice2.text = \"(\" + convertTimeToAMPM(\n                    mCCADetailModelArrayList[position].cca_item_start_time\n                ) + \" - \" + convertTimeToAMPM(\n                    mCCADetailModelArrayList[position].cca_item_end_time\n                ) + \")\"\n            } else if (mCCADetailModelArrayList[position].cca_item_start_time != null) {\n                holder.textViewCCAaDateItemChoice2.visibility = View.VISIBLE\n                holder.textViewCCAaDateItemChoice2.text = \"(\" + convertTimeToAMPM(\n                    mCCADetailModelArrayList[position].cca_item_start_time\n                ) + \")\"\n            } else if (mCCADetailModelArrayList[position].cca_item_end_time != null) {\n                holder.textViewCCAaDateItemChoice2.visibility = View.VISIBLE\n                holder.textViewCCAaDateItemChoice2.text = \"(\" + convertTimeToAMPM(\n                    mCCADetailModelArrayList[position].cca_item_end_time\n                ) + \")\"\n            } else {\n                holder.textViewCCAaDateItemChoice2.visibility = View.GONE\n            }\n            if (mCCADetailModelArrayList[position].attending_status2.equals(\"1\")) {\n                holder.deleteChoice2.setImageResource(R.drawable.delete_red)\n            } else if (mCCADetailModelArrayList[position].attending_status2\n                    .equals(\"3\")\n            ) {\n                holder.deleteChoice2.setImageResource(R.drawable.delete_disabled)\n                holder.textViewCCAaDateItemChoice2.setTextColor(mContext.resources.getColor(R.color.light_grey))\n                holder.textViewCCAChoice2.setTextColor(mContext.resources.getColor(R.color.light_grey))\n            } else {\n                holder.deleteChoice2.setImageResource(R.drawable.delete_disabled)\n                holder.textViewCCAaDateItemChoice2.setTextColor(mContext.resources.getColor(R.color.light_grey))\n                holder.textViewCCAChoice2.setTextColor(mContext.resources.getColor(R.color.light_grey))\n            }\n        }\n        if ((mCCADetailModelArrayList[position].choice1\n                .equals(\"0\") || mCCADetailModelArrayList[position].choice1\n                .equals(\"-1\")) && (mCCADetailModelArrayList[position].choice2\n                .equals(\"0\") || mCCADetailModelArrayList[position].choice2\n                .equals(\"-1\"))\n        ) {\n            holder.attendanceListIcon.visibility = View.INVISIBLE\n        } else {\n            holder.attendanceListIcon.visibility = View.VISIBLE\n        }\n        holder.deleteChoice1.setOnClickListener {\n            if (mCCADetailModelArrayList[position].attending_status.equals(\"1\")) {\n                showDialogAlertDelete(\n                    mContext as Context,\n                    \"Alert\",\n                    mContext.resources.getString(R.string.deltechoicealertques),\n                    R.drawable.questionmark_icon,\n                    R.drawable.round,\n                    position,\n                    mCCADetailModelArrayList[position].cca_details_id!!\n                )\n                notifyItemChanged(position)\n                notifyDataSetChanged()\n            } else {\n            }\n        }\n        holder.deleteChoice2.setOnClickListener {\n            if (mCCADetailModelArrayList[position].attending_status2.equals(\"1\")) {\n                showDialogAlertDelete(\n                    mContext as Context,\n                    \"Alert\",\n                    mContext.resources.getString(R.string.deltechoicealertques),\n                    R.drawable.questionmark_icon,\n                    R.drawable.round,\n                    position,\n                    mCCADetailModelArrayList[position].cca_details_id2!!\n                )\n                notifyItemChanged(position)\n                notifyDataSetChanged()\n            } else {\n            }\n        }\n        //        holder.textViewCCADay.setText(mCCADetailModelArrayList.get(position).getDay());\n//        holder.attendanceListIcon.setOnClickListener(new View.OnClickListener() {\n//            @Override\n//            public void onClick(View v) {\n//                if ((!(mCCADetailModelArrayList.get(position).getChoice1().equalsIgnoreCase(\"0\")) || !(mCCADetailModelArrayList.get(position).getChoice1().equalsIgnoreCase(\"-1\"))) || (!(mCCADetailModelArrayList.get(position).getChoice2().equalsIgnoreCase(\"0\")) || !(mCCADetailModelArrayList.get(position).getChoice2().equalsIgnoreCase(\"-1\")))) {\n//                    showAttendanceList(position);\n//                    }\n//                    }\n//        });\n//        if (mCCADetailModelArrayList.get(position).getChoice1().equalsIgnoreCase(\"0\")) {\n//            holder.linearChoice1.setVisibility(View.GONE);\n//            holder.textViewCCAChoice1.setText(\"Choice 1 : None\");\n//            } else if (mCCADetailModelArrayList.get(position).getChoice1().equalsIgnoreCase(\"-1\")) {\n//            holder.linearChoice1.setVisibility(View.GONE);\n//            holder.textViewCCAChoice1.setText(\"Choice 1 : Nil\");\n//            } else {\n//            holder.linearChoice1.setVisibility(View.VISIBLE);\n//            holder.textViewCCAChoice1.setText(mCCADetailModelArrayList.get(position).getChoice1());\n//            if (mCCADetailModelArrayList.get(position).getCca_item_start_time() != null && mCCADetailModelArrayList.get(position).getCca_item_end_time() != null) {\n//                holder.textViewCCAaDateItemChoice1.setVisibility(View.VISIBLE);\n//                holder.textViewCCAaDateItemChoice1.setText(\"(\" + convertTimeToAMPM(mCCADetailModelArrayList.get(position).getCca_item_start_time()) + \" - \" + convertTimeToAMPM(mCCADetailModelArrayList.get(position).getCca_item_end_time()) + \")\");\n//                } else if (mCCADetailModelArrayList.get(position).getCca_item_start_time() != null) {\n//                holder.textViewCCAaDateItemChoice1.setVisibility(View.VISIBLE);\n//                holder.textViewCCAaDateItemChoice1.setText(\"(\" + convertTimeToAMPM(mCCADetailModelArrayList.get(position).getCca_item_start_time()) + \")\"); } else if (mCCADetailModelArrayList.get(position).getCca_item_end_time() != null) {\n//                holder.textViewCCAaDateItemChoice1.setVisibility(View.VISIBLE);\n//                holder.textViewCCAaDateItemChoice1.setText(\"(\" + convertTimeToAMPM(mCCADetailModelArrayList.get(position).getCca_item_end_time()) + \")\");\n//            } else {\n//                holder.textViewCCAaDateItemChoice1.setVisibility(View.GONE);\n//                }\n//            if (mCCADetailModelArrayList.get(position).getAttending_status().equalsIgnoreCase(\"1\")) {\n//                holder.deleteChoice1.setImageResource(R.drawable.delete_red);\n//            } else if (mCCADetailModelArrayList.get(position).getAttending_status().equalsIgnoreCase(\"3\")) {\n//                holder.deleteChoice1.setImageResource(R.drawable.delete_disabled);\n//                holder.textViewCCAaDateItemChoice1.setTextColor(mContext.getResources().getColor(R.color.light_grey));\n//                holder.textViewCCAChoice1.setTextColor(mContext.getResources().getColor(R.color.light_grey));\n//                } else {\n//                holder.deleteChoice2.setImageResource(R.drawable.delete_disabled);\n//                holder.textViewCCAaDateItemChoice2.setTextColor(mContext.getResources().getColor(R.color.light_grey));\n//                holder.textViewCCAChoice2.setTextColor(mContext.getResources().getColor(R.color.light_grey));\n//                }\n//                }\n//        if (mCCADetailModelArrayList.get(position).getChoice2().equalsIgnoreCase(\"0\")) {\n//            holder.linearChoice2.setVisibility(View.GONE);\n//            holder.textViewCCAChoice2.setText(\"Choice 2 : None\");\n//            } else if (mCCADetailModelArrayList.get(position).getChoice2().equalsIgnoreCase(\"-1\")) {\n//            holder.linearChoice2.setVisibility(View.GONE);\n//            holder.textViewCCAChoice2.setText(\"Choice 2 : Nil\");\n//            } else {\n//            holder.linearChoice2.setVisibility(View.VISIBLE);\n//            holder.textViewCCAChoice2.setText(mCCADetailModelArrayList.get(position).getChoice2());\n//            if (mCCADetailModelArrayList.get(position).getCca_item_start_time() != null && mCCADetailModelArrayList.get(position).getCca_item_end_time() != null) {\n//                holder.textViewCCAaDateItemChoice2.setVisibility(View.VISIBLE);\n//                holder.textViewCCAaDateItemChoice2.setText(\"(\" + convertTimeToAMPM(mCCADetailModelArrayList.get(position).getCca_item_start_time()) + \" - \" + convertTimeToAMPM(mCCADetailModelArrayList.get(position).getCca_item_end_time()) + \")\");\n//                } else if (mCCADetailModelArrayList.get(position).getCca_item_start_time() != null) {\n//                holder.textViewCCAaDateItemChoice2.setVisibility(View.VISIBLE);\n//                holder.textViewCCAaDateItemChoice2.setText(\"(\" + convertTimeToAMPM(mCCADetailModelArrayList.get(position).getCca_item_start_time()) + \")\");\n//            } else if (mCCADetailModelArrayList.get(position).getCca_item_end_time() != null) {\n//                holder.textViewCCAaDateItemChoice2.setVisibility(View.VISIBLE);\n//                holder.textViewCCAaDateItemChoice2.setText(\"(\" + convertTimeToAMPM(mCCADetailModelArrayList.get(position).getCca_item_end_time()) + \")\");\n//            } else {\n//                holder.textViewCCAaDateItemChoice2.setVisibility(View.GONE);\n//                }\n//            if (mCCADetailModelArrayList.get(position).getAttending_status2().equalsIgnoreCase(\"1\")) {\n//                holder.deleteChoice2.setImageResource(R.drawable.delete_red);\n//                } else if (mCCADetailModelArrayList.get(position).getAttending_status2().equalsIgnoreCase(\"3\")) {\n//                holder.deleteChoice2.setImageResource(R.drawable.delete_disabled);\n//                holder.textViewCCAaDateItemChoice2.setTextColor(mContext.getResources().getColor(R.color.light_grey));\n//                holder.textViewCCAChoice2.setTextColor(mContext.getResources().getColor(R.color.light_grey));\n//                } else {\n//                holder.deleteChoice2.setImageResource(R.drawable.delete_disabled);\n//                holder.textViewCCAaDateItemChoice2.setTextColor(mContext.getResources().getColor(R.color.light_grey));\n//                holder.textViewCCAChoice2.setTextColor(mContext.getResources().getColor(R.color.light_grey));\n//                }\n//                }\n//        if (((mCCADetailModelArrayList.get(position).getChoice1().equalsIgnoreCase(\"0\")) || (mCCADetailModelArrayList.get(position).getChoice1().equalsIgnoreCase(\"-1\"))) && ((mCCADetailModelArrayList.get(position).getChoice2().equalsIgnoreCase(\"0\")) || (mCCADetailModelArrayList.get(position).getChoice2().equalsIgnoreCase(\"-1\")))) {\n//            holder.attendanceListIcon.setVisibility(View.INVISIBLE);\n//        } else {\n//            holder.attendanceListIcon.setVisibility(View.VISIBLE);\n//            }\n//            holder.deleteChoice1.setOnClickListener(new View.OnClickListener() {\n//            @Override\n//            public void onClick(View v) {\n//                if (mCCADetailModelArrayList.get(position).getAttending_status().equalsIgnoreCase(\"1\")) {\n//                    showDialogAlertDelete((Activity) mContext, \"Alert\", \"Do you want to delete this choice?\", R.drawable.questionmark_icon, R.drawable.round, position, mCCADetailModelArrayList.get(position).getCca_details_id());\n//                                        notifyDataSetChanged();\n//                } else {\n//\n//                }\n//            }\n//        });\n//        holder.deleteChoice2.setOnClickListener(new View.OnClickListener() {\n//            @Override\n//            public void onClick(View v) {\n//                if (mCCADetailModelArrayList.get(position).getAttending_status2().equalsIgnoreCase(\"1\")) {\n//                    showDialogAlertDelete((Activity) mContext, \"Alert\", \"Do you want to delete this choice?\", R.drawable.questionmark_icon, R.drawable.round, position, mCCADetailModelArrayList.get(position).getCca_details_id2());\n//                    notifyDataSetChanged();\n//                } else {\n//\n//                }\n//            }\n//        });\n    }\n\n    override fun getItemCount(): Int {\n        Log.e(\"size edit\", mCCADetailModelArrayList.size.toString())\n        return mCCADetailModelArrayList.size\n    }\n\n    fun showAttendanceList(mPosition: Int) {\n        if (dialog.isShowing) {\n            dialog.dismiss()\n        }\n        val dialogDismiss = dialog.findViewById<View>(R.id.btn_dismiss) as Button\n        val linearChoice3 = dialog.findViewById<View>(R.id.linearChoice1) as LinearLayout\n        val linearChoice4 = dialog.findViewById<View>(R.id.linearChoice2) as LinearLayout\n        val alertHead = dialog.findViewById<View>(R.id.alertHead) as TextView\n        val textViewCCAChoiceFirst = dialog.findViewById<View>(R.id.textViewCCAChoice1) as TextView\n        val textViewCCAChoiceSecond = dialog.findViewById<View>(R.id.textViewCCAChoice2) as TextView\n        val scrollViewMain = dialog.findViewById<View>(R.id.scrollViewMain) as ScrollView\n        val socialMediaList =\n            dialog.findViewById<View>(R.id.recycler_view_social_media) as RecyclerView\n        val recycler_view_social_mediaChoice2 =\n            dialog.findViewById<View>(R.id.recycler_view_social_mediaChoice2) as RecyclerView\n        alertHead.text = \"Attendance report of \" + mCCADetailModelArrayList[mPosition].day\n        var showdialog = 1\n        //        scrollViewMain.pageScroll(View.FOCUS_DOWN);\n        scrollViewMain.smoothScrollTo(0, 0)\n        if (!mCCADetailModelArrayList[mPosition].choice1\n                .equals(\"0\") && !mCCADetailModelArrayList[mPosition].choice1\n                .equals(\"-1\")\n        ) {\n            linearChoice3.visibility = View.VISIBLE\n            socialMediaList.visibility = View.VISIBLE\n            socialMediaList.setHasFixedSize(true)\n            val llm = LinearLayoutManager(mContext)\n            llm.orientation = LinearLayoutManager.VERTICAL\n            socialMediaList.layoutManager = llm\n            if (mCCADetailModelArrayList[mPosition].calendarDaysChoice1!!.size <= 0) {\n                textViewCCAChoiceFirst.visibility = View.GONE\n                showdialog = 0\n            } else {\n                textViewCCAChoiceFirst.setText(mCCADetailModelArrayList[mPosition].choice1)\n                textViewCCAChoiceFirst.visibility = View.VISIBLE\n                showdialog = 1\n            }\n            val socialMediaAdapter = CCAAttendenceListAdapter(\n                mContext,\n                mCCADetailModelArrayList[mPosition].calendarDaysChoice1!!\n            )\n            socialMediaList.adapter = socialMediaAdapter\n        } else {\n            linearChoice3.visibility = View.GONE\n            socialMediaList.visibility = View.GONE\n        }\n        if (!mCCADetailModelArrayList[mPosition].choice2\n                .equals(\"0\") && !mCCADetailModelArrayList[mPosition].choice2\n                .equals(\"-1\")\n        ) {\n            if (mCCADetailModelArrayList[mPosition].calendarDaysChoice2!!.size <= 0) {\n                textViewCCAChoiceSecond.visibility = View.GONE\n                showdialog = 0\n            } else {\n                textViewCCAChoiceSecond.setText(mCCADetailModelArrayList[mPosition].choice2)\n                textViewCCAChoiceSecond.visibility = View.VISIBLE\n                showdialog = 1\n            }\n            linearChoice4.visibility = View.VISIBLE\n            recycler_view_social_mediaChoice2.visibility = View.VISIBLE\n            recycler_view_social_mediaChoice2.setHasFixedSize(true)\n            val llmrecycler_view_social_mediaChoice2 = LinearLayoutManager(mContext)\n            llmrecycler_view_social_mediaChoice2.orientation = LinearLayoutManager.VERTICAL\n            recycler_view_social_mediaChoice2.layoutManager = llmrecycler_view_social_mediaChoice2\n            Log.e(\n                \"mCCACAcaldar\",\n                java.lang.String.valueOf(mCCADetailModelArrayList[mPosition].cca_details_id)\n            )\n            val socialMediaAdapterChoice2 = CCAAttendenceListAdapter(\n                mContext,\n                mCCADetailModelArrayList[mPosition].calendarDaysChoice2!!\n            )\n            recycler_view_social_mediaChoice2.adapter = socialMediaAdapterChoice2\n        } else {\n            linearChoice4.visibility = View.GONE\n            recycler_view_social_mediaChoice2.visibility = View.GONE\n        }\n        dialogDismiss.setOnClickListener { dialog.dismiss() }\n        if (showdialog == 1) {\n            dialog.show()\n        } else {\n            Toast.makeText(mContext, \"No attendance details available\", Toast.LENGTH_SHORT).show()\n        }\n    }\n\n    companion object {\n      //  lateinit var mContext: Context\n\n        fun showDialogAlertDelete(\n            activity: Context,\n            msgHead: String?,\n            msg: String?,\n            ico: Int,\n            bgIcon: Int,\n            position: Int,\n            ccaDetailsId: String\n        ) {\n            val dialog = Dialog(activity!!)\n            dialog.requestWindowFeature(Window.FEATURE_NO_TITLE)\n            dialog.window!!.setBackgroundDrawable(ColorDrawable(Color.TRANSPARENT))\n            dialog.setCancelable(false)\n            dialog.setContentView(R.layout.dialog_ok_cancel)\n            val icon = dialog.findViewById<View>(R.id.iconImageView) as ImageView\n            icon.setBackgroundResource(bgIcon)\n            icon.setImageResource(ico)\n            val text = dialog.findViewById<View>(R.id.text_dialog) as TextView\n            val textHead = dialog.findViewById<View>(R.id.alertHead) as TextView\n            text.text = msg\n            textHead.text = msgHead\n            val dialogButton = dialog.findViewById<View>(R.id.btn_Ok) as Button\n            dialogButton.setOnClickListener {\n                dialog.dismiss()\n                ccaDeleteAPI(ccaDetailsId,activity)\n            }\n            val dialogButtonCancel = dialog.findViewById<View>(R.id.btn_Cancel) as Button\n            dialogButtonCancel.visibility = View.VISIBLE\n            dialogButtonCancel.setOnClickListener { dialog.dismiss() }\n            dialog.show()\n        }\n\n        private fun ccaDeleteAPI(ccaDetailsId: String, activity: Context) {\n            val ccaDetails: ArrayList<String?> = ArrayList()\n            ccaDetails.add(ccaDetailsId)\n            val token = PreferenceManager.getaccesstoken(activity)\n            val body = CCACancelRequestModel(\n                PreferenceManager.getStudIdForCCA(activity)!!,\n                ccaDetails.toString()\n            )\n            //        String token = PreferenceManager.Companion.getUserCode(mContext);\n//        Call call = new Call<CCACancelResponseModel>() {\n//            @Override\n//            public void enqueue(Callback<CCACancelResponseModel> callback) {\n//\n//            }\n//        } = ApiClient.INSTANCE.getGetClient().ccaCancel(body,\"Bearer &token\");\n            val call: Call<CCACancelResponseModel> = ApiClient.getClient.ccaCancel(\n                body,\n                \"Bearer $token\"\n            )\n            call.enqueue(object : Callback<CCACancelResponseModel?> {\n                override fun onResponse(\n                    call: Call<CCACancelResponseModel?>,\n                    response: Response<CCACancelResponseModel?>\n                ) {\n                    if (response.isSuccessful()) {\n                        if (response.body() != null) {\n                            if (response.body()!!.status!!.equals(100)) {\n//                            CommonMethods.Companion.showDialogueWithOk(mContext,\"Successfully deleted the choice\",\"Alert\");\n                                showDialogAlert(\n                                    activity,\n                                    \"Alert\",\n                                    \"Successfully Deleted the choice\",\n                                    R.drawable.exclamationicon,\n                                    R.drawable.round\n                                )\n                            } else {\n                                ConstantFunctions.showDialogueWithOk(\n                                    activity,\n                                    \"Unable to delete the choice. Please try again later\",\n                                    \"Alert\"\n                                )\n                            }\n                        }\n                    } else {\n                        ConstantFunctions.showDialogueWithOk(\n                            activity,\n                            \"Cannot continue. Please try again later\",\n                            \"Alert\"\n                        )\n                    }\n                }\n\n                override fun onFailure(call: Call<CCACancelResponseModel?>, t: Throwable) {\n                    ConstantFunctions.showDialogueWithOk(\n                        activity,\n                        \"Cannot continue. Please try again later\",\n                        \"Alert\"\n                    )\n                }\n            })\n        }\n\n        fun showDialogAlert(\n            activity: Context?,\n            msgHead: String?,\n            msg: String?,\n            ico: Int,\n            bgIcon: Int\n        ) {\n            val dialog = Dialog(activity!!)\n            dialog.requestWindowFeature(Window.FEATURE_NO_TITLE)\n            dialog.window!!.setBackgroundDrawable(ColorDrawable(Color.TRANSPARENT))\n            dialog.setCancelable(false)\n            dialog.setContentView(R.layout.dialog_common_error_alert)\n            val icon = dialog.findViewById<View>(R.id.iconImageView) as ImageView\n            icon.setBackgroundResource(bgIcon)\n            icon.setImageResource(ico)\n            val text = dialog.findViewById<View>(R.id.messageTxt) as TextView\n            val textHead = dialog.findViewById<View>(R.id.alertHead) as TextView\n            text.text = msg\n            textHead.text = msgHead\n            val dialogButton = dialog.findViewById<View>(R.id.btn_Ok) as Button\n            dialogButton.setOnClickListener { v ->\n                dialog.dismiss()\n                activity.startActivity(\n                    Intent(\n                        v.context,\n                        CCAsReviewAfterSubmissionActivity::class.java\n                    ).addFlags(Intent.FLAG_ACTIVITY_NO_ANIMATION)\n                )\n            }\n            dialog.show()\n        }\n\n        fun convertTimeToAMPM(date: String?): String {\n            var strCurrentDate = \"\"\n            var format = SimpleDateFormat(\"HH:mm:ss\", Locale.ENGLISH)\n            var newDate: Date? = null\n            try {\n                newDate = format.parse(date)\n            } catch (e: ParseException) {\n                e.printStackTrace()\n            }\n            format = SimpleDateFormat(\"hh:mm a\", Locale.ENGLISH)\n            strCurrentDate = format.format(newDate)\n            return strCurrentDate\n        }\n    }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/nas/alreem/activity/cca/adapter/CCAfinalReviewAfterSubmissionAdapter.kt b/app/src/main/java/com/nas/alreem/activity/cca/adapter/CCAfinalReviewAfterSubmissionAdapter.kt
--- a/app/src/main/java/com/nas/alreem/activity/cca/adapter/CCAfinalReviewAfterSubmissionAdapter.kt	(revision 29dbbedb1ce8c3fe2a8032d242fcce101acbc7b5)
+++ b/app/src/main/java/com/nas/alreem/activity/cca/adapter/CCAfinalReviewAfterSubmissionAdapter.kt	(date 1690523499895)
@@ -154,8 +154,7 @@
                 holder.locationTxt.visibility = View.GONE
             } else {
                 holder.locationTxt.visibility = View.VISIBLE
-                holder.locationTxt.text =
-                    "Location            : " + mCCADetailModelArrayList[position].venue
+                holder.locationTxt.text = "Location           : " + mCCADetailModelArrayList[position].venue
             }
             System.out.println("DESC EDIT" + mCCADetailModelArrayList[position].cca_item_description)
             if (mCCADetailModelArrayList[position].cca_item_description
@@ -198,10 +197,21 @@
                 holder.deleteChoice1.setImageResource(R.drawable.delete_disabled)
                 holder.textViewCCAaDateItemChoice1.setTextColor(mContext.resources.getColor(R.color.light_grey))
                 holder.textViewCCAChoice1.setTextColor(mContext.resources.getColor(R.color.light_grey))
+                holder.locationTxt.setTextColor(mContext.resources.getColor(R.color.light_grey))
+                holder.descriptionTxt.setTextColor(mContext.resources.getColor(R.color.light_grey))
+                holder.readMore1.visibility=View.GONE
+                holder.descriptionTxt.setOnClickListener {  }
+
+
             } else {
                 holder.deleteChoice2.setImageResource(R.drawable.delete_disabled)
                 holder.textViewCCAaDateItemChoice2.setTextColor(mContext.resources.getColor(R.color.light_grey))
                 holder.textViewCCAChoice2.setTextColor(mContext.resources.getColor(R.color.light_grey))
+                holder.location2Txt.setTextColor(mContext.resources.getColor(R.color.light_grey))
+                holder.description2Txt.setTextColor(mContext.resources.getColor(R.color.light_grey))
+                holder.readMore.visibility=View.GONE
+
+                holder.description2Txt.setOnClickListener {  }
             }
         }
         if (mCCADetailModelArrayList[position].choice2.equals("0")) {
@@ -222,8 +232,7 @@
             } else {
                 holder.location2Txt.visibility = View.VISIBLE
                 holder.readMore.visibility = View.VISIBLE
-                holder.location2Txt.text =
-                    "Location            : " + mCCADetailModelArrayList[position].venue2
+                holder.location2Txt.text = "Location           : " + mCCADetailModelArrayList[position].venue2
             }
             if (mCCADetailModelArrayList[position].cca_item_description_2
                     .equals("0") || mCCADetailModelArrayList[position].cca_item_description_2
@@ -263,10 +272,21 @@
                 holder.deleteChoice2.setImageResource(R.drawable.delete_disabled)
                 holder.textViewCCAaDateItemChoice2.setTextColor(mContext.resources.getColor(R.color.light_grey))
                 holder.textViewCCAChoice2.setTextColor(mContext.resources.getColor(R.color.light_grey))
+                holder.textViewCCAChoice2.setTextColor(mContext.resources.getColor(R.color.light_grey))
+                holder.location2Txt.setTextColor(mContext.resources.getColor(R.color.light_grey))
+                holder.description2Txt.setTextColor(mContext.resources.getColor(R.color.light_grey))
+                holder.readMore.visibility=View.GONE
+                holder.description2Txt.setOnClickListener {  }
             } else {
                 holder.deleteChoice2.setImageResource(R.drawable.delete_disabled)
                 holder.textViewCCAaDateItemChoice2.setTextColor(mContext.resources.getColor(R.color.light_grey))
                 holder.textViewCCAChoice2.setTextColor(mContext.resources.getColor(R.color.light_grey))
+                holder.textViewCCAChoice2.setTextColor(mContext.resources.getColor(R.color.light_grey))
+                holder.location2Txt.setTextColor(mContext.resources.getColor(R.color.light_grey))
+                holder.description2Txt.setTextColor(mContext.resources.getColor(R.color.light_grey))
+                holder.readMore.visibility=View.GONE
+
+                holder.description2Txt.setOnClickListener {  }
             }
         }
         if ((mCCADetailModelArrayList[position].choice1
@@ -531,6 +551,7 @@
             val dialogButton = dialog.findViewById<View>(R.id.btn_Ok) as Button
             dialogButton.setOnClickListener {
                 dialog.dismiss()
+                //CCAsReviewAfterSubmissionActivity().ccaDeleteAPI(ccaDetailsId,activity)
                 ccaDeleteAPI(ccaDetailsId,activity)
             }
             val dialogButtonCancel = dialog.findViewById<View>(R.id.btn_Cancel) as Button
Index: app/src/main/res/layout/canteen_fragment.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\n<androidx.constraintlayout.widget.ConstraintLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n    xmlns:tools=\"http://schemas.android.com/tools\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    android:background=\"@color/white\">\n\n    <include\n        android:id=\"@+id/includeRel\"\n        layout=\"@layout/header_bar_fragment\" />\n\n\n\n    <LinearLayout\n        android:id=\"@+id/linearLayout5\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"0dp\"\n        android:orientation=\"vertical\"\n        android:weightSum=\"100\"\n        app:layout_constraintBottom_toBottomOf=\"parent\"\n        app:layout_constraintEnd_toEndOf=\"parent\"\n        app:layout_constraintStart_toStartOf=\"parent\"\n        app:layout_constraintTop_toBottomOf=\"@+id/includeRel\">\n\n        <ImageView\n            android:id=\"@+id/bannerimagecanteen\"\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"0dp\"\n            android:layout_weight=\"30\"\n            android:scaleType=\"centerCrop\"\n            app:layout_constraintBottom_toTopOf=\"@+id/guideline8\"\n            app:layout_constraintEnd_toEndOf=\"@+id/staffLinear\"\n            app:layout_constraintStart_toStartOf=\"parent\"\n            app:layout_constraintTop_toBottomOf=\"@+id/title\" />\n\n        <ImageView\n            android:id=\"@+id/email_icon\"\n            android:layout_width=\"30dp\"\n            android:layout_height=\"20dp\"\n            android:layout_gravity=\"end\"\n            android:layout_marginTop=\"10dp\"\n            android:layout_marginEnd=\"20dp\"\n            android:background=\"@drawable/mailiconpe\"\n            app:layout_constraintEnd_toEndOf=\"parent\"\n            app:layout_constraintTop_toBottomOf=\"@+id/bannerimagecanteen\" />\n\n        <com.nas.alreem.commonviews.CustomTextViewRegular\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"wrap_content\"\n            android:id=\"@+id/description\"\n            android:layout_margin=\"10dp\"\n            android:textColor=\"@color/black\"/>\n\n        <LinearLayout\n            android:id=\"@+id/staffLinear\"\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"0dp\"\n            android:layout_marginLeft=\"10dp\"\n            android:layout_marginTop=\"10dp\"\n            android:layout_marginRight=\"10dp\"\n            android:layout_weight=\"60\"\n            android:orientation=\"horizontal\"\n            android:weightSum=\"3\"\n            app:layout_constraintEnd_toEndOf=\"parent\"\n            app:layout_constraintStart_toStartOf=\"parent\"\n            app:layout_constraintTop_toBottomOf=\"@+id/description_canteen\">\n\n            <LinearLayout\n                android:id=\"@+id/preOrderLinear\"\n                android:layout_width=\"0dp\"\n                android:layout_height=\"wrap_content\"\n                android:layout_marginTop=\"5dp\"\n                android:layout_marginRight=\"2dp\"\n                android:layout_weight=\"1\"\n                android:background=\"@drawable/sportsbtnorange\"\n                android:gravity=\"center\"\n                android:orientation=\"vertical\">\n\n                <ImageView\n                    android:layout_width=\"wrap_content\"\n                    android:layout_height=\"wrap_content\"\n                    android:src=\"@drawable/lunchbox_icon\" />\n\n                <com.nas.alreem.commonviews.CustomTextViewRegular\n                    android:layout_width=\"wrap_content\"\n                    android:layout_height=\"wrap_content\"\n                    android:text=\"Pre-Order\"\n                    android:textColor=\"@color/white\" />\n            </LinearLayout>\n\n            <LinearLayout\n                android:id=\"@+id/informationLinear\"\n                android:layout_width=\"0dp\"\n                android:layout_height=\"wrap_content\"\n                android:layout_marginLeft=\"2dp\"\n                android:layout_marginTop=\"5dp\"\n                android:layout_marginRight=\"2dp\"\n                android:layout_weight=\"1\"\n                android:background=\"@drawable/sportsbtngreen\"\n                android:gravity=\"center\"\n                android:orientation=\"vertical\">\n\n                <ImageView\n                    android:layout_width=\"wrap_content\"\n                    android:layout_height=\"wrap_content\"\n                    android:src=\"@drawable/information_cca\" />\n\n                <com.nas.alreem.commonviews.CustomTextViewRegular\n                    android:layout_width=\"wrap_content\"\n                    android:layout_height=\"wrap_content\"\n                    android:text=\"Information\"\n                    android:textColor=\"@color/white\" />\n            </LinearLayout>\n\n            <LinearLayout\n                android:id=\"@+id/paymentLinear\"\n                android:layout_width=\"0dp\"\n                android:layout_height=\"wrap_content\"\n                android:layout_marginLeft=\"2dp\"\n                android:layout_marginTop=\"5dp\"\n                android:layout_marginRight=\"2dp\"\n                android:layout_weight=\"1\"\n                android:background=\"@drawable/sportsbtnblue\"\n                android:gravity=\"center\"\n                android:orientation=\"vertical\">\n\n                <ImageView\n                    android:layout_width=\"wrap_content\"\n                    android:layout_height=\"wrap_content\"\n                    android:src=\"@drawable/payment_icon\" />\n\n                <com.nas.alreem.commonviews.CustomTextViewRegular\n                    android:layout_width=\"wrap_content\"\n                    android:layout_height=\"wrap_content\"\n                    android:text=\"Payment\"\n                    android:textColor=\"@color/white\" />\n            </LinearLayout>\n        </LinearLayout>\n    </LinearLayout>\n\n</androidx.constraintlayout.widget.ConstraintLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/canteen_fragment.xml b/app/src/main/res/layout/canteen_fragment.xml
--- a/app/src/main/res/layout/canteen_fragment.xml	(revision 29dbbedb1ce8c3fe2a8032d242fcce101acbc7b5)
+++ b/app/src/main/res/layout/canteen_fragment.xml	(date 1690794248618)
@@ -29,6 +29,7 @@
             android:layout_height="0dp"
             android:layout_weight="30"
             android:scaleType="centerCrop"
+            android:background="@drawable/default_banner"
             app:layout_constraintBottom_toTopOf="@+id/guideline8"
             app:layout_constraintEnd_toEndOf="@+id/staffLinear"
             app:layout_constraintStart_toStartOf="parent"
Index: app/src/main/res/layout/calendar_canteen_popup.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\n<androidx.constraintlayout.widget.ConstraintLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\">\n\n\n    <LinearLayout\n        android:layout_width=\"350dp\"\n        android:layout_height=\"wrap_content\"\n        android:gravity=\"center_horizontal\"\n        android:orientation=\"vertical\"\n        android:background=\"@android:color/white\"\n        app:layout_constraintBottom_toBottomOf=\"parent\"\n        app:layout_constraintEnd_toEndOf=\"parent\"\n        app:layout_constraintStart_toStartOf=\"parent\"\n        app:layout_constraintTop_toTopOf=\"parent\">\n\n        <RelativeLayout\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"wrap_content\"\n            android:background=\"@android:color/white\">\n\n            <ImageView\n                android:id=\"@+id/dummyClose\"\n                android:layout_width=\"50dp\"\n                android:layout_height=\"50dp\"\n                android:layout_alignParentEnd=\"true\"\n                android:background=\"@color/white\" />\n\n            <ImageView\n                android:id=\"@+id/imgClose\"\n                android:layout_width=\"15dp\"\n                android:layout_height=\"15dp\"\n                android:layout_alignParentEnd=\"true\"\n                android:layout_marginStart=\"10dp\"\n                android:layout_marginTop=\"10dp\"\n                android:layout_marginEnd=\"10dp\"\n\n                android:layout_marginBottom=\"10dp\"\n                android:src=\"@drawable/close_gray\" />\n        </RelativeLayout>\n\n        <com.applandeo.materialcalendarview.CalendarView\n            android:id=\"@+id/MCalendar\"\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"350dp\"\n            android:layout_marginTop=\"8dp\"\n            app:headerColor=\"@color/white\"\n            app:headerLabelColor=\"@color/black\"\n            app:layout_constraintLeft_toLeftOf=\"parent\"\n            app:layout_constraintRight_toRightOf=\"parent\"\n            app:layout_constraintTop_toBottomOf=\"@+id/imgClose\"\n            app:maximumDaysRange=\"10\"\n            app:selectionColor=\"@color/canteen_red\"\n            app:todayLabelColor=\"@color/black\"\n            app:type=\"many_days_picker\" />\n\n\n<com.nas.alreem.commonviews.CustomTextViewRegular\n    android:id=\"@+id/noteText\"\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"wrap_content\"\n            android:layout_marginTop=\"10dp\"\n            android:layout_marginBottom=\"10dp\"\n            android:gravity=\"center\"\n            android:textColor=\"@color/canteen_red\"\n            android:text=\"Pre-ordering for the day closes at 7.30am\" />\n        <Button\n            android:id=\"@+id/GetDate\"\n            android:layout_width=\"120dp\"\n            android:layout_height=\"40dp\"\n            android:layout_marginTop=\"10dp\"\n            android:layout_marginBottom=\"10dp\"\n            android:background=\"@drawable/curve_filled_split_bg_sports\"\n            android:text=\"Submit\"\n            android:textAllCaps=\"false\"\n            android:textColor=\"@android:color/white\"\n            android:textStyle=\"bold\" />\n\n    </LinearLayout>\n</androidx.constraintlayout.widget.ConstraintLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/calendar_canteen_popup.xml b/app/src/main/res/layout/calendar_canteen_popup.xml
--- a/app/src/main/res/layout/calendar_canteen_popup.xml	(revision 29dbbedb1ce8c3fe2a8032d242fcce101acbc7b5)
+++ b/app/src/main/res/layout/calendar_canteen_popup.xml	(date 1691043295440)
@@ -65,7 +65,7 @@
             android:layout_marginBottom="10dp"
             android:gravity="center"
             android:textColor="@color/canteen_red"
-            android:text="Pre-ordering for the day closes at 7.30am" />
+            android:text="Pre-ordering for the day closes at 5:00pm" />
         <Button
             android:id="@+id/GetDate"
             android:layout_width="120dp"
Index: app/src/main/java/com/nas/alreem/activity/cca/CCAsReviewEditAfterSubmissionActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.nas.alreem.activity.cca\n\nimport android.content.Context\nimport android.content.Intent\nimport android.os.Bundle\nimport android.text.Html\nimport android.util.Log\nimport android.view.View\nimport android.widget.*\nimport androidx.appcompat.app.AppCompatActivity\nimport androidx.recyclerview.widget.GridLayoutManager\nimport androidx.recyclerview.widget.RecyclerView\nimport com.nas.alreem.R\nimport com.nas.alreem.activity.cca.adapter.CCAfinalReviewEditAfterSubmissionAdapter\nimport com.nas.alreem.activity.cca.model.*\nimport com.nas.alreem.activity.home.HomeActivity\nimport com.nas.alreem.constants.ConstantFunctions\nimport com.nas.alreem.constants.PreferenceManager\nimport com.nas.alreem.rest.ApiClient\n\nimport retrofit2.Call\nimport retrofit2.Callback\nimport retrofit2.Response\nimport java.util.*\n\nclass CCAsReviewEditAfterSubmissionActivity : AppCompatActivity() {\n    lateinit var mContext: Context\n    lateinit var titleTextView: TextView\n    lateinit var back: ImageView\n    lateinit var backRelative: RelativeLayout\n    lateinit var logoclick: ImageView\n    lateinit var progressBar: ProgressBar\n    var recyclerViewLayoutManager: GridLayoutManager? = null\n    var recycler_review: RecyclerView? = null\n    var relativeHeader: RelativeLayout? = null\n    var home: ImageView? = null\n    var editCcca: RelativeLayout? = null\n    var messageTxt: RelativeLayout? = null\n    var msgTxt: TextView? = null\n    var tab_type = \"ECAs\"\n    var extras: Bundle? = null\n    var mCCADetailModelArrayList: ArrayList<CCAReviewAfterSubmissionModel>? = null\n    var textViewCCAaItem: TextView? = null\n    var weekList: ArrayList<String>? = null\n    var absentDaysChoice2Array: ArrayList<String>? = null\n    var presentDaysChoice2Array: ArrayList<String>? = null\n    var upcomingDaysChoice2Array: ArrayList<String>? = null\n    var absentDaysChoice1Array: ArrayList<String>? = null\n    var presentDaysChoice1Array: ArrayList<String>? = null\n    var upcomingDaysChoice1Array: ArrayList<String>? = null\n    var datestringChoice1: ArrayList<CCAAttendanceModel>? = null\n    var datestringChoice2: ArrayList<CCAAttendanceModel>? = null\n    var submissiondateover = \"-1\"\n    var CCADetailModelArrayList: ArrayList<CCADetailModel>? = null\n    override fun onCreate(savedInstanceState: Bundle?) {\n        super.onCreate(savedInstanceState)\n        setContentView(R.layout.activity_ccas_review_edit_after_submission)\n        mContext = this\n        progressBar = findViewById(R.id.progress)\n        titleTextView = findViewById(R.id.heading)\n        back = findViewById(R.id.btn_left)\n        backRelative = findViewById(R.id.backRelative)\n        logoclick = findViewById(R.id.logoClickImgView)\n        extras = intent.extras\n        logoclick.setOnClickListener {\n            val mIntent = Intent(mContext, HomeActivity::class.java)\n            mIntent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP)\n\n            startActivity(mIntent)\n        }\n        backRelative.setOnClickListener {\n            finish()\n        }\n        if (extras != null) {\n            tab_type = extras!!.getString(\"tab_type\")!!\n            submissiondateover = extras!!.getString(\"submissiondateover\", \"-1\")\n        //    CCADetailModelArrayList =\n       //         extras!!.getSerializable(\"CCA_Detail\") as ArrayList<CCADetailModel>?\n            CCADetailModelArrayList=PreferenceManager.getDetailsArrayList(mContext)\n        }\n        weekList = java.util.ArrayList()\n        weekList!!.add(\"Sunday\")\n        weekList!!.add(\"Monday\")\n        weekList!!.add(\"Tuesday\")\n        weekList!!.add(\"Wednesday\")\n        weekList!!.add(\"Thursday\")\n        weekList!!.add(\"Friday\")\n        weekList!!.add(\"Saturday\")\n        absentDaysChoice2Array = java.util.ArrayList()\n        presentDaysChoice2Array = java.util.ArrayList()\n        upcomingDaysChoice2Array = java.util.ArrayList()\n        absentDaysChoice1Array = java.util.ArrayList()\n        presentDaysChoice1Array = java.util.ArrayList()\n        upcomingDaysChoice1Array = java.util.ArrayList()\n        datestringChoice1 = java.util.ArrayList()\n        datestringChoice2 = java.util.ArrayList()\n        relativeHeader = findViewById<View>(R.id.relativeHeader) as RelativeLayout\n        recycler_review = findViewById<View>(R.id.recycler_view_cca) as RecyclerView\n        textViewCCAaItem = findViewById<View>(R.id.textViewCCAaItem) as TextView\n        messageTxt = findViewById<View>(R.id.messageTxt) as RelativeLayout\n        msgTxt = findViewById<View>(R.id.msgTxt) as TextView\n\n        messageTxt!!.visibility = View.VISIBLE\n\n        editCcca = findViewById<View>(R.id.editCcca) as RelativeLayout\n\n        editCcca!!.setOnClickListener {\n            val intent = Intent(mContext, CCASelectionActivity::class.java)\n            //intent.putExtra(\n             //   \"CCA_Detail\",\n             //   CCADetailModelArrayList\n           // )\n            intent.putExtra(\"tab_type\", tab_type)\n            intent.putExtra(\"ccaedit\", 1)\n            Log.e(\"loation1\", CCADetailModelArrayList!!.get(0).choice1.toString())\n            Log.e(\"Location2\", CCADetailModelArrayList!!.get(0).location2.toString())\n           // PreferenceManager.saveDetailsArrayList(mContext, CCADetailModelArrayList)\n            startActivity(intent)\n        }\n//        home = headermanager.getLogoButton()\n//        home!!.setOnClickListener {\n//            val `in` = Intent(mContext, HomeListAppCompatActivity::class.java)\n//            `in`.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP)\n//            startActivity(`in`)\n//        }\n        recycler_review!!.setHasFixedSize(true)\n        recyclerViewLayoutManager = GridLayoutManager(mContext, 1)\n        recycler_review!!.layoutManager = recyclerViewLayoutManager\n        mCCADetailModelArrayList = ArrayList()\n//        textViewCCAaItem.setText(Html.fromHtml(PreferenceManager.getCCATitle(mContext) + \"<br/>\" + PreferenceManager.getStudNameForCCA(mContext)));\n        //        textViewCCAaItem.setText(Html.fromHtml(PreferenceManager.getCCATitle(mContext) + \"<br/>\" + PreferenceManager.getStudNameForCCA(mContext)));\n        if (PreferenceManager.getStudClassForCCA(mContext).equals(\"\")) {\n            textViewCCAaItem!!.text = Html.fromHtml(\n                PreferenceManager.getCCATitle(mContext)\n                    .toString() + \"<br/>\" + PreferenceManager.getStudentName(mContext)+ \"<br/>Year Group : \" + PreferenceManager.getStudentClass( mContext\n                )\n            )\n        } else {\n            textViewCCAaItem!!.text = Html.fromHtml(\n                PreferenceManager.getCCATitle(mContext)\n                    .toString() + \"<br/>\" + PreferenceManager.getStudNameForCCA(mContext) + \"<br/>Year Group : \" + PreferenceManager.getStudClassForCCA(\n                    mContext\n                )\n            )\n        }\n        var internetCheck = ConstantFunctions.internetCheck(mContext)\n        if (internetCheck) {\n            ccaReviewListAPI()\n\n        } else {\n            //  InternetCheckClass.showSuccessInternetAlert(mContext)\n        }\n    }\n\n    private fun ccaReviewListAPI() {\n        val body = CCAReviewRequestModel(\n            PreferenceManager.getStudIdForCCA(mContext)!!,\n            PreferenceManager.getCCAItemId(mContext)!!\n        )\n        val token = PreferenceManager.getaccesstoken(mContext)\n        val call: Call<CCAReviewResponseModel> =\n            ApiClient.getClient.ccaReview(body, \"Bearer $token\")\n        progressBar.visibility = View.VISIBLE\n        call.enqueue(object : Callback<CCAReviewResponseModel> {\n            override fun onResponse(\n                call: Call<CCAReviewResponseModel>,\n                response: Response<CCAReviewResponseModel>\n            ) {\n                progressBar.visibility = View.GONE\n                if (response.isSuccessful) {\n                    if (response.body() != null) {\n                        if (response.body()!!.status.toString() == \"100\") {\n\n                            if (response.body()!!.data!!.size > 0) {\n                                for (j in weekList!!.indices) {\n                                    for (i in 0 until response.body()!!.data!!.size) {\n                                        if (response.body()!!.data!![i]!!.day.equals(\n                                                weekList!!.get(j)\n                                                    .toString(), ignoreCase = true\n                                            )\n                                        ) {\n                                            addCCAReviewlist(\n                                                response.body()!!.data!![i]\n                                            )\n                                        }\n                                    }\n                                }\n                                val mCCAsActivityAdapter = CCAfinalReviewEditAfterSubmissionAdapter(\n                                    mContext,\n                                    mCCADetailModelArrayList!!\n                                )\n                                recycler_review!!.setAdapter(\n                                    mCCAsActivityAdapter\n                                )\n                            } else {\n                                val mCCAsActivityAdapter = CCAfinalReviewEditAfterSubmissionAdapter(\n                                    mContext,\n                                    mCCADetailModelArrayList!!\n                                )\n                                recycler_review!!.setAdapter(\n                                    mCCAsActivityAdapter\n                                )\n                                Toast.makeText(\n                                    mContext,\n                                    \"No ECA available\",\n                                    Toast.LENGTH_SHORT\n                                ).show()\n                            }\n                        } else {\n                            ConstantFunctions.showDialogueWithOk(\n                                mContext,\n                                getString(R.string.common_error),\n                                \"Alert\"\n                            )\n                        }\n                    } else {\n                        ConstantFunctions.showDialogueWithOk(\n                            mContext,\n                            getString(R.string.common_error),\n                            \"Alert\"\n                        )\n                    }\n                }\n            }\n\n            override fun onFailure(call: Call<CCAReviewResponseModel>, t: Throwable) {\n                progressBar.visibility = View.GONE\n                ConstantFunctions.showDialogueWithOk(\n                    mContext,\n                    getString(R.string.common_error),\n                    \"Alert\"\n                )\n            }\n\n\n        })\n    }\n\n    private fun addCCAReviewlist(dataObject: CCAReviewResponseModel.Data) {\n        val mCCAModel = CCAReviewAfterSubmissionModel()\n        mCCAModel.day = dataObject!!.day\n        datestringChoice1 = ArrayList()\n        datestringChoice2 = ArrayList()\n        if (dataObject.choice1 != null) {\n            val choice1  = dataObject.choice1\n            if (choice1 != null) {\n                if (choice1.cca_item_name != null) {\n                    mCCAModel.choice1 = choice1.cca_item_name\n                    Log.e(\"Satrttime\", choice1.cca_item_start_time!!)\n                    mCCAModel.cca_item_start_time = choice1.cca_item_start_time\n                    mCCAModel.cca_item_end_time = choice1.cca_item_end_time\n                    if (choice1.cca_item_description != null){\n                        mCCAModel.cca_item_description = choice1.cca_item_description\n//                        mCCAModel.cca_item_description_2 = \"\"\n                    }else{\n                        mCCAModel.cca_item_description = \"\"\n//                        mCCAModel.cca_item_description_2 = \"\"\n                    }\n                    if (choice1.cca_venue != null){\n                        mCCAModel.venue = choice1.cca_venue\n//                        mCCAModel.venue2 = \"\"\n                    }else{\n                        mCCAModel.venue = \"\"\n//                        mCCAModel.venue2 = \"\"\n                    }\n\n                    Log.e(\"des1\",choice1.cca_item_description.toString())\n                    mCCAModel.venue2 = \"\"\n                    mCCAModel.cca_item_description_2 = \"\"\n                    val absentDaysChoice1 = choice1.absentDays\n                    absentDaysChoice1Array = java.util.ArrayList()\n                    if (choice1.absentDays !=null) {\n                        for (i in 0 until absentDaysChoice1!!.size) {\n                            absentDaysChoice1Array!!.add(absentDaysChoice1[i]!!)\n                        }\n                    }\n                    presentDaysChoice1Array = java.util.ArrayList()\n                    if (choice1.presentDays != null) {\n                        val presentDaysChoice1 = choice1.presentDays\n                        for (i in 0 until presentDaysChoice1.size) {\n                            presentDaysChoice1Array!!.add(presentDaysChoice1[i]!!)\n                        }\n                    }\n                    upcomingDaysChoice1Array = java.util.ArrayList()\n                    if (choice1.upcomingDays !=null) {\n                        val upcomingDaysChoice1 = choice1.upcomingDays\n                        for (i in 0 until upcomingDaysChoice1.size) {\n                            upcomingDaysChoice1Array!!.add(upcomingDaysChoice1[i]!!)\n                        }\n                    }\n                } else {\n                    mCCAModel.choice1 = \"0\"\n                }\n            } else {\n                mCCAModel.choice1 = \"0\"\n            }\n        } else {\n            mCCAModel.choice1 = \"-1\"\n        }\n        if (dataObject.choice2 != null) {\n            val choice2 = dataObject.choice2\n            if (choice2 != null) {\n                if (choice2.cca_item_name != null) {\n                    mCCAModel.choice2 = choice2.cca_item_name\n                    Log.e(\"Satrttime2\", choice2.cca_item_start_time!!)\n                    mCCAModel.cca_item_start_time2 = choice2.cca_item_start_time\n                    mCCAModel.cca_item_end_time2 = choice2.cca_item_end_time\n                    val absentDaysChoice2 = choice2.absentDays\n                    Log.e(\"des\",choice2.cca_item_description.toString())\n                    if (choice2.cca_item_description != null){\n                        mCCAModel.cca_item_description_2 = choice2.cca_item_description\n//                        mCCAModel.cca_item_description = \"\"\n                    }else{\n                        mCCAModel.cca_item_description_2 = \"\"\n//                        mCCAModel.cca_item_description = \"\"\n                    }\n                    if (choice2.cca_venue != null){\n                        mCCAModel.venue2 = choice2.cca_venue\n//                        mCCAModel.venue = \"\"\n                    }else{\n                        mCCAModel.venue2 = \"\"\n//                        mCCAModel.venue = \"\"\n                    }\n\n                    if (choice2.absentDays != null) {\n                        absentDaysChoice2Array = java.util.ArrayList()\n                        for (i in 0 until absentDaysChoice2!!.size) {\n                            absentDaysChoice2Array!!.add(absentDaysChoice2[i]!!)\n                        }\n                    }\n                    presentDaysChoice2Array = java.util.ArrayList()\n                    val presentDaysChoice2 = choice2.presentDays\n                    if (choice2.presentDays != null) {\n                        for (i in 0 until presentDaysChoice2!!.size) {\n                            presentDaysChoice2Array!!.add(presentDaysChoice2[i]!!)\n                        }\n                    }\n                    upcomingDaysChoice2Array = java.util.ArrayList()\n                    val upcomingDaysChoice2 = choice2.upcomingDays\n                    if (choice2.upcomingDays != null) {\n                        for (i in 0 until upcomingDaysChoice2!!.size) {\n                            upcomingDaysChoice2Array!!.add(upcomingDaysChoice2[i]!!)\n                        }\n                    }\n                } else {\n                    mCCAModel.choice2 = \"0\"\n                }\n            } else {\n                mCCAModel.choice2 = \"0\"\n            }\n        } else {\n            mCCAModel.choice2 = \"-1\"\n        }\n\n        if (absentDaysChoice1Array!!.size > 0) {\n            for (i in absentDaysChoice1Array!!.indices) {\n                val mCCAAttendanceModel = CCAAttendanceModel()\n                mCCAAttendanceModel.dateAttend = absentDaysChoice1Array!![i]\n                mCCAAttendanceModel.statusCCA = \"a\"\n                datestringChoice1!!.add(mCCAAttendanceModel)\n            }\n        }\n\n        if (upcomingDaysChoice1Array!!.size > 0) {\n            for (i in upcomingDaysChoice1Array!!.indices) {\n                val mCCAAttendanceModel = CCAAttendanceModel()\n                mCCAAttendanceModel.dateAttend = upcomingDaysChoice1Array!![i]\n                mCCAAttendanceModel.statusCCA = \"u\"\n                datestringChoice1!!.add(mCCAAttendanceModel)\n            }\n        }\n\n        if (presentDaysChoice1Array!!.size > 0) {\n            for (i in presentDaysChoice1Array!!.indices) {\n                val mCCAAttendanceModel = CCAAttendanceModel()\n                mCCAAttendanceModel.dateAttend = presentDaysChoice1Array!![i]\n                mCCAAttendanceModel.statusCCA = \"p\"\n                datestringChoice1!!.add(mCCAAttendanceModel)\n            }\n        }\n        if (absentDaysChoice2Array!!.size > 0) {\n            for (i in absentDaysChoice2Array!!.indices) {\n                val mCCAAttendanceModel = CCAAttendanceModel()\n                mCCAAttendanceModel.dateAttend = absentDaysChoice2Array!![i]\n                mCCAAttendanceModel.statusCCA = \"a\"\n                datestringChoice2!!.add(mCCAAttendanceModel)\n            }\n        }\n        if (upcomingDaysChoice2Array!!.size > 0) {\n            for (i in upcomingDaysChoice2Array!!.indices) {\n                val mCCAAttendanceModel = CCAAttendanceModel()\n                mCCAAttendanceModel.dateAttend = upcomingDaysChoice2Array!![i]\n                mCCAAttendanceModel.statusCCA = \"u\"\n                datestringChoice2!!.add(mCCAAttendanceModel)\n            }\n        }\n        if (presentDaysChoice2Array!!.size > 0) {\n            for (i in presentDaysChoice2Array!!.indices) {\n                val mCCAAttendanceModel = CCAAttendanceModel()\n                mCCAAttendanceModel.dateAttend = presentDaysChoice2Array!![i]\n                mCCAAttendanceModel.statusCCA = \"p\"\n                datestringChoice2!!.add(mCCAAttendanceModel)\n            }\n        }\n        if (datestringChoice1!!.size > 0) {\n            Collections.sort(datestringChoice1, object : Comparator<CCAAttendanceModel?> {\n\n                override fun compare(s1: CCAAttendanceModel?, s2: CCAAttendanceModel?): Int {\n                    return s1!!.dateAttend!!.compareTo(s2!!.dateAttend!!)\n                }\n            })\n        }\n        if (datestringChoice2!!.size > 0) {\n            Collections.sort(datestringChoice1, object : Comparator<CCAAttendanceModel?> {\n\n                override fun compare(s1: CCAAttendanceModel?, s2: CCAAttendanceModel?): Int {\n                    return s1!!.dateAttend!!.compareTo(s2!!.dateAttend!!)\n                }\n            })\n        }\n        mCCAModel.calendarDaysChoice1 = datestringChoice1\n        mCCAModel.calendarDaysChoice2 = datestringChoice2\n\n            mCCADetailModelArrayList!!.add(mCCAModel)\n\n    }\n\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/nas/alreem/activity/cca/CCAsReviewEditAfterSubmissionActivity.kt b/app/src/main/java/com/nas/alreem/activity/cca/CCAsReviewEditAfterSubmissionActivity.kt
--- a/app/src/main/java/com/nas/alreem/activity/cca/CCAsReviewEditAfterSubmissionActivity.kt	(revision 29dbbedb1ce8c3fe2a8032d242fcce101acbc7b5)
+++ b/app/src/main/java/com/nas/alreem/activity/cca/CCAsReviewEditAfterSubmissionActivity.kt	(date 1690800036569)
@@ -114,7 +114,7 @@
             intent.putExtra("ccaedit", 1)
             Log.e("loation1", CCADetailModelArrayList!!.get(0).choice1.toString())
             Log.e("Location2", CCADetailModelArrayList!!.get(0).location2.toString())
-           // PreferenceManager.saveDetailsArrayList(mContext, CCADetailModelArrayList)
+            PreferenceManager.saveDetailsArrayList(mContext, CCADetailModelArrayList)
             startActivity(intent)
         }
 //        home = headermanager.getLogoButton()
@@ -132,7 +132,7 @@
         if (PreferenceManager.getStudClassForCCA(mContext).equals("")) {
             textViewCCAaItem!!.text = Html.fromHtml(
                 PreferenceManager.getCCATitle(mContext)
-                    .toString() + "<br/>" + PreferenceManager.getStudentName(mContext)+ "<br/>Year Group : " + PreferenceManager.getStudentClass( mContext
+                    .toString() + "<br/>" + PreferenceManager.getStudNameForCCA(mContext)+ "<br/>Year Group : " + PreferenceManager.getStudentClass( mContext
                 )
             )
         } else {
@@ -202,7 +202,7 @@
                                 )
                                 Toast.makeText(
                                     mContext,
-                                    "No ECA available",
+                                    "No EAP available",
                                     Toast.LENGTH_SHORT
                                 ).show()
                             }
Index: app/src/main/res/layout/fragment_payment.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\n<RelativeLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    xmlns:tools=\"http://schemas.android.com/tools\"\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n    android:id=\"@+id/relMain\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    android:background=\"@color/white\">\n\n\n\n    <LinearLayout\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:layout_centerInParent=\"true\"\n        android:gravity=\"center\">\n\n        <ProgressBar\n            android:id=\"@+id/progressDialogAdd\"\n            android:layout_width=\"40dp\"\n            android:layout_height=\"40dp\"\n            android:layout_centerInParent=\"true\"\n            android:indeterminateDrawable=\"@anim/customspinner\"\n            android:visibility=\"gone\"\n\n            />\n\n    </LinearLayout>\n\n    <include\n        android:id=\"@+id/includeRel\"\n        layout=\"@layout/header_bar_fragment\" />\n    <LinearLayout\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"match_parent\"\n        android:layout_below=\"@+id/includeRel\"\n        android:orientation=\"vertical\"\n        android:weightSum=\"100\">\n\n        <ImageView\n            android:id=\"@+id/bannerImageViewPager\"\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"0dp\"\n            android:layout_weight=\"30\"\n            android:scaleType=\"centerCrop\"/>\n\n\n        <RelativeLayout\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"0dp\"\n            android:layout_marginLeft=\"10dp\"\n            android:layout_marginRight=\"10dp\"\n            android:layout_weight=\"70\">\n\n            <ScrollView\n                android:layout_width=\"match_parent\"\n                android:layout_height=\"match_parent\"\n                android:overScrollMode=\"never\"\n                android:scrollbars=\"none\">\n\n                <RelativeLayout\n                    android:layout_width=\"match_parent\"\n                    android:layout_height=\"wrap_content\">\n\n\n                    <LinearLayout\n                        android:id=\"@+id/mainLinear\"\n                        android:layout_width=\"match_parent\"\n                        android:layout_height=\"wrap_content\"\n                        android:layout_below=\"@+id/descriptionTV\"\n                        android:layout_marginTop=\"10dp\"\n                        android:layout_marginBottom=\"5dp\"\n                        android:orientation=\"horizontal\"\n                        android:weightSum=\"100\">\n\n                        <RelativeLayout\n                            android:id=\"@+id/paymentRelative\"\n                            android:layout_width=\"0dp\"\n                            android:layout_height=\"wrap_content\"\n                            android:layout_marginRight=\"2dp\"\n                            android:layout_weight=\"50\"\n                            android:background=\"@drawable/sportsbtnblue\">\n\n                            <ImageView\n                                android:id=\"@+id/external\"\n                                android:layout_width=\"40dp\"\n                                android:layout_height=\"40dp\"\n                                android:layout_centerHorizontal=\"true\"\n                                android:layout_marginTop=\"3dp\"\n                                android:src=\"@drawable/paymenthere\" />\n\n                            <com.nas.alreem.commonviews.CustomTextViewSemiBold\n                                android:layout_width=\"wrap_content\"\n                                android:layout_height=\"wrap_content\"\n                                android:layout_below=\"@+id/external\"\n                                android:layout_centerHorizontal=\"true\"\n                                android:text=\"Pay Here\"\n                                android:textColor=\"@color/white\" />\n                        </RelativeLayout>\n\n                        <RelativeLayout\n                            android:id=\"@+id/informationRelative\"\n                            android:layout_width=\"0dp\"\n                            android:layout_height=\"wrap_content\"\n                            android:layout_marginLeft=\"2dp\"\n                            android:layout_weight=\"50\"\n                            android:background=\"@drawable/sportsbtngreen\">\n\n                            <ImageView\n                                android:id=\"@+id/information\"\n                                android:layout_width=\"40dp\"\n                                android:layout_height=\"40dp\"\n                                android:layout_centerHorizontal=\"true\"\n                                android:layout_marginTop=\"3dp\"\n                                android:src=\"@drawable/information_cca\" />\n\n                            <com.nas.alreem.commonviews.CustomTextViewSemiBold\n                                android:layout_width=\"wrap_content\"\n                                android:layout_height=\"wrap_content\"\n                                android:layout_below=\"@+id/information\"\n                                android:layout_centerHorizontal=\"true\"\n                                android:text=\"Information\"\n                                android:textColor=\"@color/white\" />\n                        </RelativeLayout>\n                    </LinearLayout>\n\n                    <RelativeLayout\n                        android:id=\"@+id/title\"\n                        android:layout_width=\"match_parent\"\n                        android:layout_height=\"wrap_content\"\n                        android:layout_marginTop=\"5dp\"\n                        android:visibility=\"gone\">\n\n                        <ImageView\n                            android:id=\"@+id/sendEmail\"\n                            android:layout_width=\"30dp\"\n                            android:layout_height=\"25dp\"\n                            android:layout_alignParentRight=\"true\"\n                            android:src=\"@drawable/mailiconpe\"\n                            android:visibility=\"visible\" />\n\n                        <com.nas.alreem.commonviews.CustomTextViewRegular\n                            android:id=\"@+id/descriptionTitle\"\n                            android:layout_width=\"match_parent\"\n                            android:layout_height=\"wrap_content\"\n                            android:layout_centerVertical=\"true\"\n                            android:layout_marginRight=\"10dp\"\n                            android:layout_toLeftOf=\"@+id/sendEmail\"\n                            android:text=\"Introduction:\"\n                            android:textColor=\"@color/black\"\n                            android:textSize=\"16sp\"\n                            android:visibility=\"invisible\" />\n                    </RelativeLayout>\n\n\n                    <com.nas.alreem.commonviews.CustomTextViewRegular\n                        android:id=\"@+id/descriptionTV\"\n                        android:layout_width=\"match_parent\"\n                        android:layout_height=\"wrap_content\"\n                        android:layout_below=\"@+id/title\"\n                        android:layout_marginTop=\"5dp\"\n                        android:text=\"Introduction\"\n                        android:textColor=\"@color/black\"\n                        android:textSize=\"16sp\"\n                        android:visibility=\"gone\" />\n\n\n                </RelativeLayout>\n            </ScrollView>\n        </RelativeLayout>\n    </LinearLayout>\n</RelativeLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/fragment_payment.xml b/app/src/main/res/layout/fragment_payment.xml
--- a/app/src/main/res/layout/fragment_payment.xml	(revision 29dbbedb1ce8c3fe2a8032d242fcce101acbc7b5)
+++ b/app/src/main/res/layout/fragment_payment.xml	(date 1690794436500)
@@ -42,7 +42,8 @@
             android:layout_width="match_parent"
             android:layout_height="0dp"
             android:layout_weight="30"
-            android:scaleType="centerCrop"/>
+            android:scaleType="centerCrop"
+            android:background="@drawable/default_banner"/>
 
 
         <RelativeLayout
Index: app/src/main/java/com/nas/alreem/activity/notifications/AudioPlayerDetailNew.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.nas.alreem.activity.notifications\n\nimport android.content.Context\nimport android.content.Intent\nimport android.content.res.Configuration\nimport android.media.MediaPlayer\nimport android.os.Bundle\nimport android.os.Handler\nimport android.util.Log\nimport android.view.View\nimport android.view.animation.Animation\nimport android.view.animation.AnimationUtils\nimport android.widget.*\nimport androidx.appcompat.app.AppCompatActivity\nimport com.nas.alreem.R\nimport com.nas.alreem.activity.home.HomeActivity\nimport com.nas.alreem.activity.notifications.model.MessageDetailApiModel\nimport com.nas.alreem.activity.notifications.model.MessageDetailModel\nimport com.nas.alreem.activity.notifications.model.MessageDetailNotificationModel\nimport com.nas.alreem.constants.ConstantFunctions\nimport com.nas.alreem.constants.DialogFunctions\nimport com.nas.alreem.constants.PreferenceManager\nimport com.nas.alreem.rest.ApiClient\nimport retrofit2.Call\nimport retrofit2.Callback\nimport retrofit2.Response\nimport tcking.github.com.giraffeplayer.GiraffePlayer\nimport tv.danmaku.ijk.media.player.IMediaPlayer\nprivate var mediaplayer: MediaPlayer? = null\nprivate var handler2 = Handler()\nprivate var seebbar: SeekBar? = null\nclass AudioPlayerDetailNew:AppCompatActivity() {\n    lateinit var extras: Bundle\n    lateinit var audio_title: String\n    lateinit var audio_id: String\n    lateinit var audio_updated: String\n    private lateinit var relativeHeader: RelativeLayout\n    private lateinit var backRelative: RelativeLayout\n    private lateinit var logoClickImgView: ImageView\n    private lateinit var btn_left: ImageView\n    private lateinit var heading: TextView\n    lateinit var playbutton_audio:ImageView\n    lateinit var duration_time:TextView\n    lateinit var textcurrent_time:TextView\n    lateinit var back_arrow:ImageView\n    var mesageDetailList = ArrayList<MessageDetailNotificationModel>()\n    lateinit var mContext: Context\n    var alert_type: String = \"\"\n    var created_at: String = \"\"\n    var title: String = \"\"\n    var message: String = \"\"\n    var updated_at: String = \"\"\n    var url: String = \"\"\n    var flag:Boolean = true\n    private lateinit var progressDialog: ProgressBar\n    override fun onCreate(savedInstanceState: Bundle?) {\n        super.onCreate(savedInstanceState)\n        setContentView(R.layout.activity_audio_player_details_new)\n        extras = intent.extras!!\n        audio_id = extras.getString(\"audio_id\")!!\n        audio_title = extras.getString(\"audio_title\")!!\n        audio_updated = extras.getString(\"audio_updated\")!!\n\n        mContext = this\n        heading = findViewById(R.id.heading)\n        btn_left = findViewById(R.id.btn_left)\n        logoClickImgView = findViewById(R.id.logoClickImgView)\n        backRelative = findViewById(R.id.backRelative)\n        heading.text = \"Notification\"\n        seebbar = findViewById(R.id.seebbar)\n        playbutton_audio = findViewById(R.id.playbutton)\n        textcurrent_time = findViewById(R.id.textcurrent_time)\n        duration_time = findViewById(R.id.duration_time)\n        back_arrow=findViewById(R.id.back_arrow)\n        mediaplayer = MediaPlayer()\n        seebbar!!.max = 100\n        btn_left.setOnClickListener(View.OnClickListener {\n            finish()\n        })\n        backRelative.setOnClickListener(View.OnClickListener {\n            finish()\n        })\n        logoClickImgView.setOnClickListener(View.OnClickListener {\n            val intent = Intent(mContext, HomeActivity::class.java)\n            intent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP)\n            startActivity(intent)\n        })\n\n        progressDialog = findViewById(R.id.progressDialog)\n        val aniRotate: Animation =\n            AnimationUtils.loadAnimation(mContext, R.anim.linear_interpolator)\n        progressDialog.startAnimation(aniRotate)\n        playbutton_audio.setOnClickListener {\n            if(flag)\n            {\n\n                playbutton_audio.setImageResource(R.drawable.ic_baseline_pause_circle_outline_24)\n                mediaplayer!!.start()\n            }\n            else\n            {\n                playbutton_audio.setImageResource(R.drawable.ic_baseline_play_circle_outline_24)\n                mediaplayer!!.pause()\n            }\n            flag = !flag\n        }\n        audiodetails()\n\n\n    }\n\n\n    fun audiodetails() {\n        val token = PreferenceManager.getaccesstoken(mContext)\n        val studentbody= MessageDetailApiModel(audio_id)\n        progressDialog.visibility = View.VISIBLE\n        val call: Call<MessageDetailModel> = ApiClient.getClient.notifictaionDetail(studentbody,\"Bearer \"+token)\n        call.enqueue(object : Callback<MessageDetailModel> {\n            override fun onFailure(call: Call<MessageDetailModel>, t: Throwable) {\n                  progressDialog.visibility = View.GONE\n                Log.e(\"Error\", t.localizedMessage)\n                progressDialog.visibility = View.GONE\n            }\n            override fun onResponse(call: Call<MessageDetailModel>, response: Response<MessageDetailModel>) {\n                progressDialog.visibility = View.GONE\n                 progressDialog.visibility = View.GONE\n                if (response.body()!!.status==100)\n\n                {\n                    title = response.body()!!.responseArray.notificationArray.title\n                    message = response.body()!!.responseArray.notificationArray.message\n                    alert_type = response.body()!!.responseArray.notificationArray.alert_type\n                    created_at = response.body()!!.responseArray.notificationArray.created_at\n                    updated_at = response.body()!!.responseArray.notificationArray.updated_at\n                    url = response.body()!!.responseArray.notificationArray.url\n                    if (mediaplayer!!.isPlaying()) {\n                        handler2.removeCallbacks(updater)\n                        mediaplayer!!.pause()\n                        playbutton_audio.setImageResource(R.drawable.ic_baseline_pause_circle_outline_24)\n                    } else {\n                        Log.e(\"suess\",\"success\")\n                        mediaplayer!!.start()\n                        playbutton_audio.setImageResource(R.drawable.ic_baseline_pause_circle_outline_24)\n                        try {\n                            updateseekbar()\n                        }catch (e:Exception)\n                        {\n\n                        }\n                    }\n                    setUpMediaPlayer(url)\n\n                   // println(\"MSGRESPONSEAUDIO:\" + response.body()!!.responseArray.notificationArray.url)\n                }   else\n                {\n\n                    DialogFunctions.commonErrorAlertDialog(mContext.resources.getString(R.string.alert), ConstantFunctions.commonErrorString(response.body()!!.status), mContext)\n                }\n\n\n            }\n\n        })\n\n    }\n    fun setUpMediaPlayer( filename: String) {\n\n\n\n\n        try {\n\n            mediaplayer!!.setDataSource(filename)\n\n            mediaplayer!!.setOnPreparedListener(MediaPlayer.OnPreparedListener { mp -> mp.start() })\n            mediaplayer!!.prepare()\n            duration_time.setText(\"/\" + milliseconds(player!!.getDuration().toLong()))\n\n        } catch (exception: Exception) {\n            //Toast.makeText(this, \"failed to load audio\" + exception.getMessage(), Toast.LENGTH_SHORT).show();\n            println(\"failed for load\" + exception.message)\n        }\n\n\n    }\n    val updater = Runnable {\n        try {\n            updateseekbar()\n            val currentduration: Long = player!!.getCurrentPosition().toLong()\n            textcurrent_time.text=(milliseconds(currentduration).toString())\n        }catch (e:Exception)\n        {\n\n        }\n\n\n    }\n    fun updateseekbar() {\n        Log.e(\"success\",\"success\")\n\n        Log.e(\"dfgdh\",\"success\")\n        try {\n            seebbar!!.setProgress((mediaplayer!!.getCurrentPosition().toFloat() / mediaplayer!!.getDuration() * 100).toInt())\n            System.out.print(\"seekbar\"+seebbar)\n            handler2.postDelayed(updater, 1000)\n        }catch (e:InterruptedException)\n        {\n            e.printStackTrace();\n        }\n\n        /* Toast.makeText(this, \"successs\", Toast.LENGTH_SHORT).show();*/\n\n    }\n    fun milliseconds(milliscnd: Long): String? {\n        var timer = \"\"\n        val secondString: String\n        val hour = (milliscnd / (1000 * 60 * 60)).toInt()\n        val min = (milliscnd % (1000 * 60 * 60)).toInt() / (1000 * 60)\n        val sec = (milliscnd % (1000 * 60 * 60)).toInt() % (1000 * 60) / 1000\n        if (hour > 0) {\n            timer = \"$hour;\"\n        }\n        secondString = if (sec < 10) {\n            \"0$sec\"\n        } else {\n            \"\" + sec\n        }\n        timer = \"$timer$min:$secondString\"\n        return timer\n    }\n    override fun onPause() {\n        super.onPause()\n        mediaplayer!!.pause()\n    }\n\n\n    override fun onDestroy() {\n        super.onDestroy()\n        mediaplayer!!.stop()\n        mediaplayer!!.release()\n    }\n\n\n\n    override fun onBackPressed() {\n\n        finish()\n\n    }\n\n\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/nas/alreem/activity/notifications/AudioPlayerDetailNew.kt b/app/src/main/java/com/nas/alreem/activity/notifications/AudioPlayerDetailNew.kt
--- a/app/src/main/java/com/nas/alreem/activity/notifications/AudioPlayerDetailNew.kt	(revision 29dbbedb1ce8c3fe2a8032d242fcce101acbc7b5)
+++ b/app/src/main/java/com/nas/alreem/activity/notifications/AudioPlayerDetailNew.kt	(date 1690631065412)
@@ -50,9 +50,11 @@
     var title: String = ""
     var message: String = ""
     var updated_at: String = ""
+    var currenrdr:String=""
+    var duration:String=""
     var url: String = ""
     var flag:Boolean = true
-    private lateinit var progressDialog: ProgressBar
+  //  private lateinit var progressDialog: ProgressBar
     override fun onCreate(savedInstanceState: Bundle?) {
         super.onCreate(savedInstanceState)
         setContentView(R.layout.activity_audio_player_details_new)
@@ -74,6 +76,8 @@
         back_arrow=findViewById(R.id.back_arrow)
         mediaplayer = MediaPlayer()
         seebbar!!.max = 100
+      //  duration_time.visibility=View.GONE
+       // textcurrent_time.visibility=View.GONE
         btn_left.setOnClickListener(View.OnClickListener {
             finish()
         })
@@ -86,10 +90,10 @@
             startActivity(intent)
         })
 
-        progressDialog = findViewById(R.id.progressDialog)
-        val aniRotate: Animation =
-            AnimationUtils.loadAnimation(mContext, R.anim.linear_interpolator)
-        progressDialog.startAnimation(aniRotate)
+       // progressDialog = findViewById(R.id.progressDialog)
+      //  val aniRotate: Animation =
+       //     AnimationUtils.loadAnimation(mContext, R.anim.linear_interpolator)
+      //  progressDialog.startAnimation(aniRotate)
         playbutton_audio.setOnClickListener {
             if(flag)
             {
@@ -113,17 +117,17 @@
     fun audiodetails() {
         val token = PreferenceManager.getaccesstoken(mContext)
         val studentbody= MessageDetailApiModel(audio_id)
-        progressDialog.visibility = View.VISIBLE
+       // progressDialog.visibility = View.VISIBLE
         val call: Call<MessageDetailModel> = ApiClient.getClient.notifictaionDetail(studentbody,"Bearer "+token)
         call.enqueue(object : Callback<MessageDetailModel> {
             override fun onFailure(call: Call<MessageDetailModel>, t: Throwable) {
-                  progressDialog.visibility = View.GONE
+                //  progressDialog.visibility = View.GONE
                 Log.e("Error", t.localizedMessage)
-                progressDialog.visibility = View.GONE
+              //  progressDialog.visibility = View.GONE
             }
             override fun onResponse(call: Call<MessageDetailModel>, response: Response<MessageDetailModel>) {
-                progressDialog.visibility = View.GONE
-                 progressDialog.visibility = View.GONE
+               // progressDialog.visibility = View.GONE
+                // progressDialog.visibility = View.GONE
                 if (response.body()!!.status==100)
 
                 {
@@ -136,7 +140,7 @@
                     if (mediaplayer!!.isPlaying()) {
                         handler2.removeCallbacks(updater)
                         mediaplayer!!.pause()
-                        playbutton_audio.setImageResource(R.drawable.ic_baseline_pause_circle_outline_24)
+                        playbutton_audio.setImageResource(R.drawable.ic_baseline_play_circle_outline_24)
                     } else {
                         Log.e("suess","success")
                         mediaplayer!!.start()
@@ -174,8 +178,12 @@
 
             mediaplayer!!.setOnPreparedListener(MediaPlayer.OnPreparedListener { mp -> mp.start() })
             mediaplayer!!.prepare()
-            duration_time.setText("/" + milliseconds(player!!.getDuration().toLong()))
-
+            duration_time.setText("/" + milliseconds(mediaplayer!!.getDuration().toLong()))
+            duration= milliseconds(mediaplayer!!.getDuration().toLong())!!
+           /* if(currenrdr.equals(duration))
+            {
+                playbutton_audio.setImageResource(R.drawable.ic_baseline_play_circle_outline_24)
+            }*/
         } catch (exception: Exception) {
             //Toast.makeText(this, "failed to load audio" + exception.getMessage(), Toast.LENGTH_SHORT).show();
             println("failed for load" + exception.message)
@@ -186,8 +194,10 @@
     val updater = Runnable {
         try {
             updateseekbar()
-            val currentduration: Long = player!!.getCurrentPosition().toLong()
+            val currentduration: Long = mediaplayer!!.getCurrentPosition().toLong()
             textcurrent_time.text=(milliseconds(currentduration).toString())
+            currenrdr=(milliseconds(currentduration).toString())
+            Log.e("testcurrentTime",(milliseconds(currentduration).toString()))
         }catch (e:Exception)
         {
 
@@ -201,6 +211,7 @@
         Log.e("dfgdh","success")
         try {
             seebbar!!.setProgress((mediaplayer!!.getCurrentPosition().toFloat() / mediaplayer!!.getDuration() * 100).toInt())
+           // Log.e("")
             System.out.print("seekbar"+seebbar)
             handler2.postDelayed(updater, 1000)
         }catch (e:InterruptedException)
Index: app/src/main/java/com/nas/alreem/activity/home/HomeActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.nas.alreem.activity.home\n\nimport android.Manifest\nimport android.annotation.SuppressLint\nimport android.content.ClipData\nimport android.content.Context\nimport android.content.Intent\nimport android.content.pm.PackageManager\nimport android.content.res.TypedArray\nimport android.graphics.Color\nimport android.os.Build\nimport android.os.Bundle\nimport android.util.Log\nimport android.view.View\nimport android.view.WindowManager\nimport android.widget.*\nimport androidx.activity.result.ActivityResultCallback\nimport androidx.activity.result.ActivityResultLauncher\nimport androidx.activity.result.contract.ActivityResultContracts\nimport androidx.annotation.RequiresApi\nimport androidx.appcompat.app.ActionBar\nimport androidx.appcompat.app.AppCompatActivity\nimport androidx.appcompat.widget.Toolbar\nimport androidx.core.app.ActivityCompat\nimport androidx.core.content.ContextCompat\nimport androidx.drawerlayout.widget.DrawerLayout\nimport androidx.fragment.app.Fragment\nimport androidx.fragment.app.FragmentManager\nimport com.google.android.material.snackbar.Snackbar\nimport com.nas.alreem.R\nimport com.nas.alreem.activity.home.adapter.HomeListAdapter\nimport com.nas.alreem.constants.DialogFunctions\nimport com.nas.alreem.constants.MyDragShadowBuilder\nimport com.nas.alreem.constants.PreferenceManager\nimport com.nas.alreem.fragment.about_us.AboutUsFragment\nimport com.nas.alreem.fragment.absence.AbsenceFragment\nimport com.nas.alreem.fragment.calendar.CalendarFragment\nimport com.nas.alreem.fragment.canteen.CanteenFragment\nimport com.nas.alreem.fragment.cca.CCAFragment\nimport com.nas.alreem.fragment.communication.CommunicationFragment\nimport com.nas.alreem.fragment.contact_us.ContactUsFragment\nimport com.nas.alreem.fragment.early_years.EarlyYearsFragment\nimport com.nas.alreem.fragment.gallery.GalleryFragment\nimport com.nas.alreem.fragment.home.HomeFragment\nimport com.nas.alreem.fragment.home.mContext\nimport com.nas.alreem.fragment.notifications.NotificationFragment\nimport com.nas.alreem.fragment.parent_meetings.ParentMeetingsFragment\nimport com.nas.alreem.fragment.parents_essentials.ParentsEssentialFragment\nimport com.nas.alreem.fragment.payments.PaymentFragment\nimport com.nas.alreem.fragment.permission_slip.PermissionSlipFragment\nimport com.nas.alreem.fragment.primary.PrimaryFragment\nimport com.nas.alreem.fragment.secondary.SecondaryFragment\nimport com.nas.alreem.fragment.settings.SettingsFragment\nimport com.nas.alreem.fragment.staff_directory.StaffDirectoryFragment\n\nclass HomeActivity : AppCompatActivity(), AdapterView.OnItemLongClickListener {\n\n    val manager = supportFragmentManager\n    lateinit var navigation_menu: ImageView\n    lateinit var settings_icon: ImageView\n    lateinit var shadowBuilder: MyDragShadowBuilder\n    lateinit var context: Context\n    lateinit var clipData: ClipData\n    lateinit var mListItemArray: Array<String>\n    var mListImgArray: TypedArray? = null\n    lateinit var linear_layout: LinearLayout\n    lateinit var drawer_layout: DrawerLayout\n    lateinit var toolbar: Toolbar\n    lateinit var logoClickImgView: ImageView\n    lateinit var homelist: ListView\n    var mFragment: Fragment? = null\n    var sPosition: Int = 0\n    lateinit var requestPermissionLauncher: ActivityResultLauncher<String>\n    @RequiresApi(Build.VERSION_CODES.M)\n    override fun onCreate(savedInstanceState: Bundle?) {\n        super.onCreate(savedInstanceState)\n        window.setFlags(\n            WindowManager.LayoutParams.FLAG_FULLSCREEN,\n            WindowManager.LayoutParams.FLAG_FULLSCREEN\n        )\n        setContentView(R.layout.activtiy_home)\n        Intent.FLAG_ACTIVITY_CLEAR_TASK\n        initializeUI()\n        showfragmenthome()\n\n    }\n\n    fun showfragmenthome() {\n        val transaction = manager.beginTransaction()\n        val fragment = HomeFragment()\n        transaction.replace(R.id.fragment_holder, fragment)\n        transaction.commit()\n    }\n\n    @SuppressLint(\"Recycle\", \"WrongViewCast\")\n    @RequiresApi(Build.VERSION_CODES.M)\n    private fun initializeUI() {\n\n\n        context = this\n        homelist = findViewById(R.id.homelistview)\n        drawer_layout = findViewById(R.id.drawer_layout)\n        linear_layout = findViewById(R.id.linear_layout)\n        var downarrow = findViewById<ImageView>(R.id.downarrow)\n\n        mListItemArray =\n            applicationContext.resources.getStringArray(R.array.navigation_item_names)\n        mListImgArray =\n            applicationContext.resources.obtainTypedArray(R.array.navigation_item_icons)\n        val width = (resources.displayMetrics.widthPixels / 1.7).toInt()\n        val params = linear_layout\n            .layoutParams as DrawerLayout.LayoutParams\n        params.width = width\n        linear_layout.layoutParams = params\n        val myListAdapter = HomeListAdapter(this, mListItemArray, mListImgArray!!)\n        homelist.adapter = myListAdapter\n        homelist.onItemLongClickListener = this\n        requestPermissionLauncher = registerForActivityResult(\n            ActivityResultContracts.RequestPermission(),\n            ActivityResultCallback<Boolean> { result ->\n                Log.e(\"result\", result.toString())\n                if (result) {\n                    // PERMISSION GRANTED\n                    Log.e(\"result\", result.toString())\n                    // Toast.makeText(mContext, String.valueOf(result), Toast.LENGTH_SHORT).show();\n                } else {\n                    // PERMISSION NOT GRANTED\n                    Log.e(\"denied\", result.toString())\n                    val snackbar = Snackbar.make(\n                        drawer_layout,\n                        \"Notification Permission Denied\",\n                        Snackbar.LENGTH_LONG\n                    )\n                        .setAction(\"Settings\") {\n                            val intent = Intent()\n                            intent.action = \"android.settings.APP_NOTIFICATION_SETTINGS\"\n                            intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK)\n                            intent.putExtra(\"app_package\", context.packageName)\n                            intent.putExtra(\"app_uid\", context.applicationInfo.uid)\n                            intent.putExtra(\n                                \"android.provider.extra.APP_PACKAGE\",\n                                context.packageName\n                            )\n                            startActivity(intent)\n                        }\n                    snackbar.setActionTextColor(Color.RED)\n\n                    val view = snackbar.view\n                    val tv = view\n                        .findViewById<View>(com.google.android.material.R.id.snackbar_text) as TextView\n                    tv.setTextColor(Color.WHITE)\n                    snackbar.show()\n\n\n                    // Toast.makeText(mContext, String.valueOf(result), Toast.LENGTH_SHORT).show();\n                }\n            }\n        )\n        askForNotificationPermission()\n\n        homelist.setOnItemClickListener { adapterView, view, position, id ->\n            val itemAtPos = adapterView.getItemAtPosition(position)\n            val itemIdAtPos = adapterView.getItemIdAtPosition(position)\n\n            if (PreferenceManager.getaccesstoken(context).equals(\"\"))\n            {\n              when(position)\n              {\n                  0->\n                  {\n                      mFragment = HomeFragment()\n                      replaceFragmentsSelected(position)\n                  }\n                  1->\n                  {\n                      //Notification\n                      DialogFunctions.commonErrorAlertDialog(context.resources.getString(R.string.alert),context.resources.getString(R.string.feature_only_for_registered_user),context)\n                  }\n                  2->\n                  {\n                      //Calendar\n                      DialogFunctions.commonErrorAlertDialog(context.resources.getString(R.string.alert),context.resources.getString(R.string.feature_only_for_registered_user),context)\n\n                  }\n                  3->\n                  {\n                      //payment\n                      //absence\n                      DialogFunctions.commonErrorAlertDialog(context.resources.getString(R.string.alert),context.resources.getString(R.string.feature_only_for_registered_user),context)\n\n                  }\n                  4->\n                  {\n                      //lunchbox\n                      //payment\n                      DialogFunctions.commonErrorAlertDialog(context.resources.getString(R.string.alert),context.resources.getString(R.string.feature_only_for_registered_user),context)\n\n                  }\n                 5->\n                  {\n                      //parents essential\n                      //lunchbox\n                      DialogFunctions.commonErrorAlertDialog(context.resources.getString(R.string.alert),context.resources.getString(R.string.feature_only_for_registered_user),context)\n\n                  }\n                  6->\n                  {\n                      //parents essential\n                      DialogFunctions.commonErrorAlertDialog(context.resources.getString(R.string.alert),context.resources.getString(R.string.feature_only_for_registered_user),context)\n\n                  }\n                  7->\n                  {\n                      //Early years\n                      mFragment = EarlyYearsFragment()\n                      replaceFragmentsSelected(position)\n                  }\n                  8->\n                  {\n                      //Primary\n                      mFragment = PrimaryFragment()\n                      replaceFragmentsSelected(position)\n                  }\n                  9->\n                  {\n                      //Secondary\n                      mFragment = SecondaryFragment()\n                      replaceFragmentsSelected(position)\n                  }\n                  10->\n                  {\n                      //Gallery\n                      //Enrichment\n                      DialogFunctions.commonErrorAlertDialog(context.resources.getString(R.string.alert),context.resources.getString(R.string.feature_only_for_registered_user),context)\n\n                  }\n                  11->\n                  {\n                      //Gallery\n                      //parent meetings\n                      DialogFunctions.commonErrorAlertDialog(context.resources.getString(R.string.alert),context.resources.getString(R.string.feature_only_for_registered_user),context)\n\n                  }\n                  12->\n                  {\n                      //Gallery\n                      //permission forms\n                      DialogFunctions.commonErrorAlertDialog(context.resources.getString(R.string.alert),context.resources.getString(R.string.feature_only_for_registered_user),context)\n\n                  }\n                  13->\n                  {\n                      //Gallery\n                      DialogFunctions.commonErrorAlertDialog(context.resources.getString(R.string.alert),context.resources.getString(R.string.feature_only_for_registered_user),context)\n\n                  }\n                  14->\n                  {\n                      //About Us\n                      mFragment = AboutUsFragment()\n                      replaceFragmentsSelected(position)\n                  }\n                  15->\n                  {\n                      // Contact Us\n                      if (ActivityCompat.checkSelfPermission(\n                              context,\n                              Manifest.permission.ACCESS_FINE_LOCATION\n                          ) != PackageManager.PERMISSION_GRANTED && ActivityCompat.checkSelfPermission(\n                              context,\n                              Manifest.permission.ACCESS_COARSE_LOCATION\n                          ) != PackageManager.PERMISSION_GRANTED && ActivityCompat.checkSelfPermission(\n                              context,\n                              Manifest.permission.CALL_PHONE\n                          ) != PackageManager.PERMISSION_GRANTED\n                      ) {\n                          checkPermission()\n\n\n                      }\n                      else\n                      {\n                          mFragment = ContactUsFragment()\n                          replaceFragmentsSelected(position)\n                      }\n                  }\n              }\n            }\n            else\n            {\n                when(position)\n                {\n                    0->\n                    {\n                        mFragment = HomeFragment()\n                        replaceFragmentsSelected(position)\n                    }\n                    1->\n                    {\n                        //Notification\n                        mFragment = NotificationFragment()\n                        replaceFragmentsSelected(position)\n                    }\n                    2->\n                    {\n                        //Calendar\n                        mFragment = CalendarFragment()\n                        replaceFragmentsSelected(position)\n                    }\n                    3->\n                    {\n                        //About Us\n                        mFragment = AbsenceFragment()\n                        replaceFragmentsSelected(position)\n                    }\n                    4->\n                    {\n                        //payment\n                        mFragment = PaymentFragment()\n                        replaceFragmentsSelected(position)\n                    }\n                    5->\n                    {\n                        mFragment = CanteenFragment()\n                        replaceFragmentsSelected(position)\n//                        DialogFunctions.commonErrorAlertDialog(\"Coming Soon!\",\"This Feature will be available shortly\",\n//                            mContext\n//                        )\n                    }\n                    6->\n                    {\n                        mFragment = ParentsEssentialFragment()\n                        replaceFragmentsSelected(position)\n//                        DialogFunctions.commonErrorAlertDialog(\"Coming Soon!\",\"This Feature will be available shortly\",\n//                            mContext\n//                        )\n                    }\n                    7->\n                    {\n                        //Early years\n                        mFragment = EarlyYearsFragment()\n                        replaceFragmentsSelected(position)\n                    }\n                    8->\n                    {\n                        //Primary\n                        mFragment = PrimaryFragment()\n                        replaceFragmentsSelected(position)\n                    }\n                    9->\n                    {\n                        //Secondary\n                        mFragment = SecondaryFragment()\n                        replaceFragmentsSelected(position)\n                    }\n                    10->\n                    {\n                        //Secondary\n                        mFragment = CCAFragment()\n                        replaceFragmentsSelected(position)\n                    }\n                    11->\n                    {\n                        //About Us\n                        mFragment = ParentMeetingsFragment()\n                        replaceFragmentsSelected(position)\n                    }\n\n                    12->\n                    {\n                        //About Us\n                        mFragment = PermissionSlipFragment()\n                        replaceFragmentsSelected(position)\n                    }\n                    13->\n                    {\n                        //Gallery\n                        mFragment = GalleryFragment()\n                        replaceFragmentsSelected(position)\n                    }\n                    14->\n                    {\n                        //About Us\n                        mFragment = AboutUsFragment()\n                        replaceFragmentsSelected(position)\n                    }\n                    15->\n                    {\n                        // Contact Us\n                        if (ActivityCompat.checkSelfPermission(\n                                context,\n                                Manifest.permission.ACCESS_FINE_LOCATION\n                            ) != PackageManager.PERMISSION_GRANTED && ActivityCompat.checkSelfPermission(\n                                context,\n                                Manifest.permission.ACCESS_COARSE_LOCATION\n                            ) != PackageManager.PERMISSION_GRANTED && ActivityCompat.checkSelfPermission(\n                                context,\n                                Manifest.permission.CALL_PHONE\n                            ) != PackageManager.PERMISSION_GRANTED\n                        ) {\n                            checkPermission()\n\n\n                        } else {\n                            mFragment = ContactUsFragment()\n                            replaceFragmentsSelected(position)\n                        }\n                    }\n\n\n\n\n                }\n            }\n\n\n\n        }\n\n        supportActionBar!!.displayOptions = ActionBar.DISPLAY_SHOW_CUSTOM\n        supportActionBar!!.setDisplayShowCustomEnabled(true)\n        supportActionBar!!.setCustomView(R.layout.custom_titlebar)\n        supportActionBar!!.elevation = 0F\n\n        var view = supportActionBar!!.customView\n        toolbar = view.parent as Toolbar\n        toolbar.setBackgroundColor(resources.getColor(R.color.white))\n        toolbar.setContentInsetsAbsolute(0, 0)\n\n        navigation_menu = view.findViewById(R.id.action_bar_back)\n        settings_icon = view.findViewById(R.id.action_bar_forward)\n        logoClickImgView = view.findViewById(R.id.logoClickImgView)\n        settings_icon.visibility = View.VISIBLE\n        homelist.setBackgroundColor(getColor(R.color.split_bg))\n        homelist.setOnScrollListener(object : AbsListView.OnScrollListener {\n            override fun onScrollStateChanged(view: AbsListView, scrollState: Int) {}\n            override fun onScroll(\n                view: AbsListView,\n                firstVisibleItem: Int,\n                visibleItemCount: Int,\n                totalItemCount: Int\n            ) {\n                if (view.id == homelist.id) {\n                    val currentFirstVisibleItem: Int = homelist.lastVisiblePosition\n\n                    if (currentFirstVisibleItem == totalItemCount - 1) {\n                        downarrow.visibility = View.INVISIBLE\n                    } else {\n                        downarrow.visibility = View.VISIBLE\n                    }\n                }\n            }\n        })\n        mListItemArray = context.resources.getStringArray(R.array.navigation_item_names)\n        mListImgArray = context.resources.obtainTypedArray(R.array.navigation_item_icons)\n        navigation_menu.setOnClickListener {\n            if (drawer_layout.isDrawerOpen(linear_layout)) {\n                drawer_layout.closeDrawer(linear_layout)\n            } else {\n                drawer_layout.openDrawer(linear_layout)\n            }\n        }\n\n        logoClickImgView.setOnClickListener(View.OnClickListener {\n            settings_icon.visibility = View.VISIBLE\n            if (drawer_layout.isDrawerOpen(linear_layout)) {\n                drawer_layout.closeDrawer(linear_layout)\n            }\n            Intent.FLAG_ACTIVITY_NEW_TASK or Intent.FLAG_ACTIVITY_CLEAR_TASK\n\n            mFragment = HomeFragment()\n            supportFragmentManager.popBackStack(null, FragmentManager.POP_BACK_STACK_INCLUSIVE)\n        })\n\n\n\n        settings_icon.setOnClickListener {\n            val fm = supportFragmentManager\n            val currentFragment =\n                fm.findFragmentById(R.id.fragment_holder)\n            if (drawer_layout.isDrawerOpen(linear_layout)) {\n                drawer_layout.closeDrawer(linear_layout)\n            }\n            mFragment = SettingsFragment()\n            if (mFragment != null) {\n                val fragmentManager =\n                    supportFragmentManager\n                fragmentManager.beginTransaction()\n                    .add(R.id.fragment_holder, mFragment!!, \"Settings\")\n                    .addToBackStack(\"Settings\").commit()\n\n                supportActionBar!!.setTitle(R.string.null_value)\n                settings_icon.visibility = View.INVISIBLE\n\n            }\n        }\n\n    }\n\n\n    override fun onItemLongClick(parent: AdapterView<*>?, view: View?, position: Int, id: Long): Boolean\n    {\n\n        shadowBuilder = MyDragShadowBuilder(view)\n        sPosition = position\n        val selecteditem = parent?.getItemIdAtPosition(position)\n        view?.setBackgroundColor(Color.parseColor(\"#47C2D1\"))\n        val data = ClipData.newPlainText(\"\", \"\")\n        view?.startDrag(data, shadowBuilder, view, 0)\n        view!!.visibility = View.VISIBLE\n        drawer_layout.closeDrawer(linear_layout)\n        return false\n    }\n\n    private fun replaceFragmentsSelected(position: Int) {\n        settings_icon.visibility = View.VISIBLE\n        if (mFragment != null) {\n            val fragmentManager = supportFragmentManager\n            fragmentManager\n                .beginTransaction()\n                .replace(\n                    R.id.fragment_holder, mFragment!!,\n                    mListItemArray[position]\n                )\n                .addToBackStack(mListItemArray[position]).commitAllowingStateLoss()\n            homelist.setItemChecked(position, true)\n            homelist.setSelection(position)\n            supportActionBar!!.setTitle(R.string.null_value)\n            if (drawer_layout.isDrawerOpen(linear_layout)) {\n                drawer_layout.closeDrawer(linear_layout)\n            }\n        }\n    }\n\n    override fun onBackPressed() {\n        super.onBackPressed()\n        if (drawer_layout.isDrawerOpen(linear_layout)) {\n            drawer_layout.closeDrawer(linear_layout)\n        }\n        settings_icon.visibility = View.VISIBLE\n\n    }\n\n    fun fragmentIntent(mFragment: Fragment?) {\n        if (mFragment != null) {\n            val fragmentManager = supportFragmentManager\n            fragmentManager.beginTransaction()\n                .add(R.id.fragment_holder, mFragment, \"\")\n                .addToBackStack(\"\").commitAllowingStateLoss() //commit\n        }\n    }\n\n\n\n    private fun askForNotificationPermission() {\n        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.TIRAMISU) {\n            if (ContextCompat.checkSelfPermission(this, Manifest.permission.POST_NOTIFICATIONS) ==\n                PackageManager.PERMISSION_GRANTED\n            ) {\n                // FCM SDK (and your app) can post notifications.\n            } else if (shouldShowRequestPermissionRationale(Manifest.permission.POST_NOTIFICATIONS)) {\n                // TODO: display an educational UI explaining to the user the features that will be enabled\n                //       by them granting the POST_NOTIFICATION permission. This UI should provide the user\n                //       \"OK\" and \"No thanks\" buttons. If the user selects \"OK,\" directly request the permission.\n                //       If the user selects \"No thanks,\" allow the user to continue without notifications.\n            } else {\n                // Directly ask for the permission\n                requestPermissionLauncher.launch(Manifest.permission.POST_NOTIFICATIONS)\n            }\n        }\n    }\n\n    override fun onResume() {\n        super.onResume()\n        Intent.FLAG_ACTIVITY_CLEAR_TASK\n\n    }\n    private fun checkPermission() {\n        if (ContextCompat.checkSelfPermission(context, Manifest.permission.ACCESS_FINE_LOCATION) != PackageManager.PERMISSION_GRANTED\n            || ContextCompat.checkSelfPermission(context, Manifest.permission.ACCESS_COARSE_LOCATION) != PackageManager.PERMISSION_GRANTED\n            || ContextCompat.checkSelfPermission(context, Manifest.permission.CALL_PHONE) != PackageManager.PERMISSION_GRANTED\n//            || ContextCompat.checkSelfPermission(context, Manifest.permission.ACCESS_NOTIFICATION_POLICY) != PackageManager.PERMISSION_GRANTED\n        ) {\n            ActivityCompat.requestPermissions(\n                this,\n                arrayOf(\n                    Manifest.permission.ACCESS_FINE_LOCATION,\n                    Manifest.permission.ACCESS_COARSE_LOCATION,\n                    Manifest.permission.CALL_PHONE\n//                    ,\n//                    Manifest.permission.ACCESS_NOTIFICATION_POLICY\n                ),\n                123\n            )\n        }\n    }\n    }
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/nas/alreem/activity/home/HomeActivity.kt b/app/src/main/java/com/nas/alreem/activity/home/HomeActivity.kt
--- a/app/src/main/java/com/nas/alreem/activity/home/HomeActivity.kt	(revision 29dbbedb1ce8c3fe2a8032d242fcce101acbc7b5)
+++ b/app/src/main/java/com/nas/alreem/activity/home/HomeActivity.kt	(date 1690789388587)
@@ -310,26 +310,29 @@
                     3->
                     {
                         //About Us
-                        mFragment = AbsenceFragment()
-                        replaceFragmentsSelected(position)
-                    }
-                    4->
-                    {
-                        //payment
                         mFragment = PaymentFragment()
                         replaceFragmentsSelected(position)
+
+
                     }
-                    5->
+                    4->
                     {
+                        //payment
                         mFragment = CanteenFragment()
                         replaceFragmentsSelected(position)
+                    }
+                    5->
+                    {
+
+                        mFragment = ParentsEssentialFragment()
+                        replaceFragmentsSelected(position)
 //                        DialogFunctions.commonErrorAlertDialog("Coming Soon!","This Feature will be available shortly",
 //                            mContext
 //                        )
                     }
                     6->
                     {
-                        mFragment = ParentsEssentialFragment()
+                        mFragment = AbsenceFragment()
                         replaceFragmentsSelected(position)
 //                        DialogFunctions.commonErrorAlertDialog("Coming Soon!","This Feature will be available shortly",
 //                            mContext
@@ -356,20 +359,23 @@
                     10->
                     {
                         //Secondary
-                        mFragment = CCAFragment()
+                        mFragment = PermissionSlipFragment()
                         replaceFragmentsSelected(position)
+
+
                     }
                     11->
                     {
                         //About Us
-                        mFragment = ParentMeetingsFragment()
+                        mFragment = CCAFragment()
                         replaceFragmentsSelected(position)
+
                     }
 
                     12->
                     {
                         //About Us
-                        mFragment = PermissionSlipFragment()
+                        mFragment = ParentMeetingsFragment()
                         replaceFragmentsSelected(position)
                     }
                     13->
@@ -381,12 +387,8 @@
                     14->
                     {
                         //About Us
-                        mFragment = AboutUsFragment()
-                        replaceFragmentsSelected(position)
-                    }
-                    15->
-                    {
-                        // Contact Us
+
+
                         if (ActivityCompat.checkSelfPermission(
                                 context,
                                 Manifest.permission.ACCESS_FINE_LOCATION
@@ -406,6 +408,12 @@
                             replaceFragmentsSelected(position)
                         }
                     }
+                    15->
+                    {
+                        // Contact Us
+                        mFragment = AboutUsFragment()
+                        replaceFragmentsSelected(position)
+                    }
 
 
 
Index: app/src/main/res/layout/adapter_cca_review_after_submit.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\n<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    android:id=\"@+id/linearChoice\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"wrap_content\"\n    android:layout_marginBottom=\"10dp\"\n    android:background=\"@color/white\"\n    android:orientation=\"vertical\">\n\n    <RelativeLayout\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\"\n        android:layout_gravity=\"center_vertical\"\n        android:background=\"@color/light_grey\">\n\n        <com.nas.alreem.commonviews.CustomTextViewSemiBold\n\n            android:id=\"@+id/textViewCCADay\"\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"wrap_content\"\n            android:layout_centerVertical=\"true\"\n            android:layout_toLeftOf=\"@+id/attendanceListIcon\"\n            android:padding=\"5dp\"\n            android:text=\"Day\"\n            android:textColor=\"#ff000000\"\n\n            android:textSize=\"16sp\" />\n\n        <ImageView\n            android:id=\"@+id/attendanceListIcon\"\n            android:layout_width=\"30dp\"\n            android:layout_height=\"30dp\"\n            android:layout_alignParentRight=\"true\"\n            android:layout_centerVertical=\"true\"\n            android:layout_marginStart=\"5dp\"\n            android:layout_marginTop=\"5dp\"\n            android:layout_marginEnd=\"5dp\"\n            android:layout_marginBottom=\"5dp\"\n            android:background=\"@drawable/attendance_cca\"\n            android:visibility=\"visible\" />\n\n    </RelativeLayout>\n\n    <LinearLayout\n        android:id=\"@+id/linearChoice1\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\"\n        android:layout_marginTop=\"5dp\"\n        android:orientation=\"horizontal\"\n        android:visibility=\"gone\">\n\n        <ImageView\n            android:id=\"@+id/point1Img\"\n            android:layout_width=\"20dp\"\n            android:layout_height=\"20dp\"\n            android:layout_marginLeft=\"10dp\"\n            android:layout_marginTop=\"2dp\"\n            android:background=\"@drawable/tealdot_icon\"\n            android:visibility=\"visible\" />\n        <RelativeLayout\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"wrap_content\"\n            android:layout_gravity=\"center_vertical\"\n            android:orientation=\"vertical\">\n            <com.nas.alreem.commonviews.CustomTextViewRegular\n\n                android:id=\"@+id/textViewCCAChoice1\"\n                android:layout_width=\"wrap_content\"\n                android:layout_height=\"wrap_content\"\n                android:layout_gravity=\"center_vertical\"\n                android:layout_marginLeft=\"5dp\"\n                android:layout_alignParentLeft=\"true\"\n                android:layout_marginRight=\"5dp\"\n                android:layout_toLeftOf=\"@+id/deleteChoice1\"\n                android:text=\"Choice 1:\"\n                android:textColor=\"#ff000000\"\n                android:textSize=\"16sp\" />\n\n            <TextView\n\n                android:id=\"@+id/textViewCCAaDateItemChoice1\"\n                android:layout_width=\"wrap_content\"\n                android:layout_height=\"wrap_content\"\n                android:layout_below=\"@+id/textViewCCAChoice1\"\n                android:layout_alignParentLeft=\"true\"\n                android:layout_marginLeft=\"5dp\"\n                android:layout_marginTop=\"2dp\"\n                android:layout_marginRight=\"5dp\"\n                android:layout_toLeftOf=\"@+id/deleteChoice1\"\n                android:text=\"None\"\n                android:textColor=\"@color/dark_grey1\"\n                android:textSize=\"14sp\" />\n            <TextView\n\n                android:id=\"@+id/locationTxt\"\n                android:layout_width=\"wrap_content\"\n                android:layout_height=\"wrap_content\"\n                android:layout_below=\"@+id/textViewCCAaDateItemChoice1\"\n                android:layout_alignParentLeft=\"true\"\n                android:layout_marginLeft=\"5dp\"\n                android:layout_marginTop=\"2dp\"\n                android:layout_marginRight=\"5dp\"\n                android:layout_toLeftOf=\"@+id/deleteChoice1\"\n                android:text=\"None\"\n                android:textColor=\"@color/dark_grey1\"\n                android:textSize=\"14sp\" />\n            <RelativeLayout\n                android:layout_width=\"match_parent\"\n                android:layout_height=\"wrap_content\"\n                android:layout_below=\"@+id/locationTxt\"\n                android:layout_marginRight=\"10dp\"\n                android:layout_alignParentLeft=\"true\">\n\n\n                <TextView\n                    android:id=\"@+id/descriptionTxt\"\n                    android:layout_width=\"match_parent\"\n                    android:layout_height=\"wrap_content\"\n                    android:layout_marginLeft=\"5dp\"\n                    android:layout_marginTop=\"2dp\"\n                    android:layout_marginRight=\"5dp\"\n                    android:layout_toLeftOf=\"@+id/readMore1\"\n                    android:maxLines=\"1\"\n                    android:text=\"None\"\n                    android:textColor=\"@color/dark_grey1\"\n                    android:textSize=\"14sp\" />\n\n                <TextView\n                    android:id=\"@+id/readMore1\"\n                    android:layout_width=\"wrap_content\"\n                    android:layout_height=\"wrap_content\"\n                    android:layout_alignParentRight=\"true\"\n                    android:text=\"Read more\"\n                    android:textColor=\"@color/split_bg\"\n                    android:visibility=\"visible\" />\n\n            </RelativeLayout>\n\n            <ImageView\n                android:id=\"@+id/deleteChoice1\"\n                android:layout_width=\"25dp\"\n                android:layout_height=\"25dp\"\n                android:layout_alignBaseline=\"@+id/textViewCCAChoice1\"\n                android:layout_alignParentRight=\"true\"\n                android:layout_marginEnd=\"10dp\"\n                android:background=\"@drawable/delete_red\"\n                android:visibility=\"visible\" />\n\n        </RelativeLayout>\n    </LinearLayout>\n\n    <LinearLayout\n        android:id=\"@+id/linearChoice2\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\"\n        android:layout_marginTop=\"5dp\"\n        android:orientation=\"horizontal\"\n        android:visibility=\"visible\">\n\n        <ImageView\n            android:id=\"@+id/point2Img\"\n            android:layout_width=\"20dp\"\n            android:layout_height=\"20dp\"\n            android:layout_marginTop=\"2dp\"\n            android:layout_marginLeft=\"10dp\"\n            android:background=\"@drawable/tealdot_icon\"\n            android:visibility=\"visible\" />\n        <RelativeLayout\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"wrap_content\"\n            android:layout_gravity=\"center_vertical\"\n            android:orientation=\"vertical\">\n            <com.nas.alreem.commonviews.CustomTextViewRegular\n\n                android:id=\"@+id/textViewCCAChoice2\"\n                android:layout_width=\"wrap_content\"\n                android:layout_height=\"wrap_content\"\n                android:layout_gravity=\"center_vertical\"\n                android:layout_marginLeft=\"5dp\"\n                android:layout_marginRight=\"5dp\"\n                android:text=\"Choice 2:\"\n                android:textColor=\"#ff000000\"\n                android:textSize=\"16sp\" />\n            <TextView\n                android:layout_below=\"@+id/textViewCCAChoice2\"\n\n                android:id=\"@+id/textViewCCAaDateItemChoice2\"\n                android:layout_width=\"wrap_content\"\n                android:layout_height=\"wrap_content\"\n                android:layout_marginLeft=\"5dp\"\n                android:layout_alignParentLeft=\"true\"\n                android:layout_marginRight=\"5dp\"\n                android:layout_marginTop=\"2dp\"\n                android:text=\"None\"\n                android:textColor=\"@color/dark_grey1\"\n                android:textSize=\"14sp\" />\n\n\n            <RelativeLayout\n                android:layout_width=\"match_parent\"\n                android:layout_height=\"wrap_content\"\n                android:layout_below=\"@+id/location2Txt\"\n                android:layout_marginRight=\"10dp\"\n                android:layout_alignParentLeft=\"true\">\n\n                <TextView\n                    android:id=\"@+id/description2Txt\"\n                    android:layout_width=\"match_parent\"\n                    android:layout_height=\"wrap_content\"\n                    android:layout_marginLeft=\"5dp\"\n                    android:layout_marginTop=\"2dp\"\n                    android:layout_marginRight=\"5dp\"\n                    android:layout_toLeftOf=\"@+id/readMore\"\n                    android:maxLines=\"1\"\n                    android:text=\"None\"\n                    android:textColor=\"@color/dark_grey1\"\n                    android:textSize=\"14sp\" />\n\n                <TextView\n                    android:id=\"@+id/readMore\"\n                    android:layout_width=\"wrap_content\"\n                    android:layout_height=\"wrap_content\"\n                    android:layout_alignParentRight=\"true\"\n                    android:text=\"Read more\"\n                    android:textColor=\"@color/split_bg\"\n                    android:visibility=\"visible\" />\n\n            </RelativeLayout>\n            <TextView\n                android:id=\"@+id/location2Txt\"\n                android:layout_width=\"wrap_content\"\n                android:layout_height=\"wrap_content\"\n                android:layout_below=\"@+id/textViewCCAaDateItemChoice2\"\n                android:layout_alignParentLeft=\"true\"\n                android:layout_marginLeft=\"5dp\"\n                android:layout_marginTop=\"2dp\"\n                android:layout_marginRight=\"5dp\"\n                android:layout_toLeftOf=\"@+id/deleteChoice2\"\n                android:text=\"None\"\n                android:textColor=\"@color/dark_grey1\"\n                android:textSize=\"14sp\" />\n            <ImageView\n                android:id=\"@+id/deleteChoice2\"\n                android:layout_width=\"25dp\"\n                android:layout_height=\"25dp\"\n                android:layout_alignBaseline=\"@+id/textViewCCAChoice2\"\n                android:layout_alignParentRight=\"true\"\n                android:layout_marginEnd=\"10dp\"\n                android:background=\"@drawable/delete_red\"\n                android:visibility=\"visible\" />\n\n        </RelativeLayout>\n    </LinearLayout>\n\n</LinearLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/adapter_cca_review_after_submit.xml b/app/src/main/res/layout/adapter_cca_review_after_submit.xml
--- a/app/src/main/res/layout/adapter_cca_review_after_submit.xml	(revision 29dbbedb1ce8c3fe2a8032d242fcce101acbc7b5)
+++ b/app/src/main/res/layout/adapter_cca_review_after_submit.xml	(date 1690523499997)
@@ -95,7 +95,7 @@
                 android:id="@+id/locationTxt"
                 android:layout_width="wrap_content"
                 android:layout_height="wrap_content"
-                android:layout_below="@+id/textViewCCAaDateItemChoice1"
+                android:layout_below="@+id/rell1"
                 android:layout_alignParentLeft="true"
                 android:layout_marginLeft="5dp"
                 android:layout_marginTop="2dp"
@@ -107,7 +107,8 @@
             <RelativeLayout
                 android:layout_width="match_parent"
                 android:layout_height="wrap_content"
-                android:layout_below="@+id/locationTxt"
+                android:layout_below="@+id/textViewCCAaDateItemChoice1"
+                android:id="@+id/rell1"
                 android:layout_marginRight="10dp"
                 android:layout_alignParentLeft="true">
 
@@ -199,7 +200,8 @@
             <RelativeLayout
                 android:layout_width="match_parent"
                 android:layout_height="wrap_content"
-                android:layout_below="@+id/location2Txt"
+                android:layout_below="@+id/textViewCCAaDateItemChoice2"
+                android:id="@+id/rell"
                 android:layout_marginRight="10dp"
                 android:layout_alignParentLeft="true">
 
@@ -230,7 +232,7 @@
                 android:id="@+id/location2Txt"
                 android:layout_width="wrap_content"
                 android:layout_height="wrap_content"
-                android:layout_below="@+id/textViewCCAaDateItemChoice2"
+                android:layout_below="@+id/rell"
                 android:layout_alignParentLeft="true"
                 android:layout_marginLeft="5dp"
                 android:layout_marginTop="2dp"
Index: app/src/main/res/layout/activity_permission_slip_detail.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\n<androidx.constraintlayout.widget.ConstraintLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\">\n\n    <RelativeLayout\n        android:id=\"@+id/relativeHeader\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\"\n        android:layout_alignParentTop=\"true\"\n        app:layout_constraintEnd_toEndOf=\"parent\"\n        app:layout_constraintStart_toStartOf=\"parent\"\n        app:layout_constraintTop_toTopOf=\"parent\">\n\n        <ImageView\n            android:id=\"@+id/relative_logo_header\"\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"wrap_content\"\n            android:src=\"@drawable/titlebar\" />\n\n        <ImageView\n            android:id=\"@+id/logoClickImgView\"\n            android:layout_width=\"wrap_content\"\n            android:layout_height=\"wrap_content\"\n            android:layout_above=\"@+id/heading\"\n            android:layout_alignTop=\"@+id/relative_logo_header\"\n            android:layout_centerHorizontal=\"true\"\n            android:background=\"@drawable/logotransperent\" />\n\n        <RelativeLayout\n            android:id=\"@+id/bottomRel\"\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"wrap_content\"\n            android:layout_above=\"@+id/heading\"\n            android:layout_alignParentTop=\"true\">\n\n\n            <RelativeLayout\n                android:id=\"@+id/backRelative\"\n                android:layout_width=\"45dp\"\n                android:layout_height=\"45dp\">\n\n                <ImageView\n                    android:id=\"@+id/btn_left\"\n                    android:layout_width=\"wrap_content\"\n                    android:layout_height=\"wrap_content\"\n                    android:layout_alignParentLeft=\"true\"\n                    android:layout_centerVertical=\"true\"\n                    android:background=\"@drawable/back\"\n                    android:visibility=\"visible\" />\n            </RelativeLayout>\n\n            <ImageView\n                android:id=\"@+id/btn_right\"\n                android:layout_width=\"wrap_content\"\n                android:layout_height=\"wrap_content\"\n                android:layout_alignParentRight=\"true\"\n                android:layout_centerVertical=\"true\"\n                android:visibility=\"invisible\" />\n        </RelativeLayout>\n\n        <com.nas.alreem.commonviews.CustomFontDJ5TextWhite\n            android:id=\"@+id/heading\"\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"40dp\"\n            android:layout_below=\"@id/relative_logo_header\"\n            android:background=\"@color/split_bg\"\n            android:gravity=\"center\"\n            android:paddingTop=\"5dp\"\n            android:paddingBottom=\"5dp\"\n            android:text=\"PerformingArts\"\n            android:textColor=\"@color/white\"\n            android:textSize=\"17dp\" />\n\n        <ImageView\n            android:id=\"@+id/btn_info\"\n            android:layout_width=\"35dp\"\n            android:layout_height=\"35dp\"\n            android:layout_alignBottom=\"@+id/heading\"\n            android:layout_alignParentRight=\"true\"\n            android:layout_centerVertical=\"true\"\n            android:layout_marginRight=\"2dp\"\n            android:layout_marginBottom=\"8dp\"\n            android:background=\"@drawable/infoptaicon\"\n            android:visibility=\"invisible\" />\n\n    </RelativeLayout>\n\n    <androidx.constraintlayout.widget.ConstraintLayout\n        android:id=\"@+id/con_txt\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"0dp\"\n        android:paddingBottom=\"16dp\"\n        app:layout_constraintBottom_toTopOf=\"@+id/con_txt2\"\n        app:layout_constraintEnd_toEndOf=\"parent\"\n        app:layout_constraintStart_toStartOf=\"parent\"\n        app:layout_constraintTop_toBottomOf=\"@+id/relativeHeader\">\n\n        <ScrollView\n            android:id=\"@+id/scrollView2\"\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"match_parent\"\n\n            app:layout_constraintBottom_toBottomOf=\"@id/con_txt\"\n            app:layout_constraintEnd_toEndOf=\"@id/con_txt\"\n            app:layout_constraintStart_toStartOf=\"@id/con_txt\"\n            app:layout_constraintTop_toTopOf=\"@id/con_txt\">\n\n            <com.nas.alreem.commonviews.CustomFontSansProTextBlack\n                android:id=\"@+id/descrtn_txt\"\n                android:layout_width=\"match_parent\"\n                android:layout_height=\"match_parent\"\n                android:layout_marginLeft=\"16dp\"\n                android:layout_marginTop=\"16dp\"\n                android:layout_marginRight=\"16dp\"\n                android:layout_marginBottom=\"38dp\"\n                android:paddingBottom=\"50dp\"\n                android:justificationMode=\"inter_word\"\n                android:lineSpacingExtra=\"5dp\"\n                android:textSize=\"18dp\"\n                android:autoLink=\"web\"\n                android:linksClickable=\"true\"/>\n\n        </ScrollView>\n\n        <include\n            android:id=\"@+id/progressDialog\"\n            layout=\"@layout/custom_progress_layout\"\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"match_parent\"\n            android:visibility=\"gone\"\n            app:layout_constraintBottom_toBottomOf=\"@+id/scrollView2\"\n            app:layout_constraintEnd_toEndOf=\"@+id/scrollView2\" />\n    </androidx.constraintlayout.widget.ConstraintLayout>\n\n    <androidx.constraintlayout.widget.ConstraintLayout\n        android:id=\"@+id/con_txt2\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\"\n        app:layout_constraintBottom_toBottomOf=\"parent\"\n        app:layout_constraintEnd_toEndOf=\"parent\"\n        app:layout_constraintStart_toStartOf=\"parent\"\n        app:layout_constraintTop_toBottomOf=\"@id/con_txt\">\n\n        <androidx.constraintlayout.widget.ConstraintLayout\n            android:id=\"@+id/status_linear\"\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"50dp\"\n            android:layout_margin=\"16dp\"\n            android:background=\"@drawable/event_spinner_grey\"\n            android:visibility=\"visible\"\n            android:weightSum=\"1\"\n            app:layout_constraintBottom_toBottomOf=\"parent\"\n            app:layout_constraintEnd_toEndOf=\"parent\"\n            app:layout_constraintStart_toStartOf=\"parent\"\n            app:layout_constraintTop_toTopOf=\"parent\">\n\n            <ImageView\n                android:id=\"@+id/image_stts\"\n                android:layout_width=\"50dp\"\n                android:layout_height=\"50dp\"\n                android:background=\"@drawable/ic_baseline_check_24\"\n                app:layout_constraintBottom_toBottomOf=\"parent\"\n                app:layout_constraintEnd_toStartOf=\"@+id/text_stts\"\n                app:layout_constraintTop_toTopOf=\"parent\" />\n\n            <com.nas.alreem.commonviews.CustomFontSansProTextBlackSemiBold\n                android:id=\"@+id/text_stts\"\n                android:layout_width=\"wrap_content\"\n                android:layout_height=\"50dp\"\n                android:layout_weight=\".8\"\n                android:gravity=\"center\"\n                android:text=\"Status\"\n                android:textSize=\"20dp\"\n                app:layout_constraintBottom_toBottomOf=\"parent\"\n                app:layout_constraintEnd_toEndOf=\"parent\"\n                app:layout_constraintStart_toStartOf=\"parent\"\n                app:layout_constraintTop_toTopOf=\"parent\" />\n\n        </androidx.constraintlayout.widget.ConstraintLayout>\n\n        <LinearLayout\n            android:id=\"@+id/declaration\"\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"wrap_content\"\n            android:layout_margin=\"8dp\"\n            android:orientation=\"horizontal\"\n            android:visibility=\"gone\"\n            android:weightSum=\"1\"\n            app:layout_constraintBottom_toTopOf=\"@+id/button_linear\"\n            app:layout_constraintEnd_toEndOf=\"parent\"\n            app:layout_constraintStart_toStartOf=\"parent\">\n\n            <RadioButton\n                android:id=\"@+id/check_btn\"\n                android:layout_width=\"0dp\"\n                android:layout_height=\"wrap_content\"\n                android:layout_gravity=\"center\"\n                android:layout_weight=\".1\"\n                android:clickable=\"true\" />\n\n            <com.nas.alreem.commonviews.CustomFontSansProTextBlack\n                android:id=\"@+id/declrtn_txt\"\n                android:layout_width=\"0dp\"\n                android:layout_height=\"wrap_content\"\n                android:layout_gravity=\"center\"\n                android:layout_marginTop=\"8dp\"\n                android:layout_marginBottom=\"8dp\"\n                android:layout_weight=\".8\"\n                android:lineSpacingExtra=\"2dp\"\n                android:textSize=\"14sp\" />\n        </LinearLayout>\n\n        <LinearLayout\n            android:id=\"@+id/button_linear\"\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"wrap_content\"\n            android:layout_margin=\"8dp\"\n            android:orientation=\"horizontal\"\n            android:visibility=\"gone\"\n            android:weightSum=\"1\"\n            app:layout_constraintBottom_toBottomOf=\"parent\"\n            app:layout_constraintEnd_toEndOf=\"parent\"\n            app:layout_constraintStart_toStartOf=\"parent\">\n\n            <Button\n                android:id=\"@+id/accepted_btn\"\n                android:layout_width=\"0dp\"\n                android:layout_height=\"match_parent\"\n                android:layout_marginRight=\"5dp\"\n                android:layout_weight=\".5\"\n                android:background=\"@drawable/event_spinner_grey\"\n                android:text=\"Accept\"\n                android:textColor=\"@color/black\" />\n\n            <Button\n                android:id=\"@+id/rejected_btn\"\n                android:layout_width=\"0dp\"\n                android:layout_height=\"match_parent\"\n                android:layout_marginLeft=\"5dp\"\n                android:layout_weight=\".5\"\n                android:background=\"@drawable/event_spinner_grey\"\n                android:gravity=\"center\"\n                android:text=\"Reject\"\n                android:textColor=\"@color/black\" />\n        </LinearLayout>\n    </androidx.constraintlayout.widget.ConstraintLayout>\n\n\n\n\n\n</androidx.constraintlayout.widget.ConstraintLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/activity_permission_slip_detail.xml b/app/src/main/res/layout/activity_permission_slip_detail.xml
--- a/app/src/main/res/layout/activity_permission_slip_detail.xml	(revision 29dbbedb1ce8c3fe2a8032d242fcce101acbc7b5)
+++ b/app/src/main/res/layout/activity_permission_slip_detail.xml	(date 1690523500093)
@@ -39,7 +39,9 @@
             <RelativeLayout
                 android:id="@+id/backRelative"
                 android:layout_width="45dp"
-                android:layout_height="45dp">
+                android:layout_height="45dp"
+                android:layout_centerVertical="true"
+                >
 
                 <ImageView
                     android:id="@+id/btn_left"
Index: app/src/main/res/layout/activity_chatterbox_list.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/activity_chatterbox_list.xml b/app/src/main/res/layout/activity_chatterbox_list.xml
new file mode 100644
--- /dev/null	(date 1690874068094)
+++ b/app/src/main/res/layout/activity_chatterbox_list.xml	(date 1690874068094)
@@ -0,0 +1,47 @@
+<?xml version="1.0" encoding="utf-8"?>
+<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
+ android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:background="@android:color/white">
+
+    <RelativeLayout
+        android:id="@+id/relativeHeader"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:layout_alignParentTop="true" />
+    <include
+        android:id="@+id/includeRel"
+        layout="@layout/layout_activity_header" />
+    <LinearLayout
+        android:layout_width="match_parent"
+        android:layout_height="match_parent"
+        android:layout_below="@+id/includeRel"
+        android:orientation="vertical"
+        android:weightSum="100">
+
+<!--
+        <com.mobatia.naisapp.manager.NonSwipeableViewPager
+            android:id="@+id/bannerImageViewPager"
+            android:layout_width="match_parent"
+            android:layout_height="0dp"
+            android:layout_weight="30"
+            android:background="@drawable/default_banner" />
+-->
+        <ImageView
+            android:id="@+id/bannerImageViewPager"
+            android:layout_width="match_parent"
+            android:layout_height="0dp"
+            android:layout_weight="30"
+            android:background="@drawable/default_banner"/>
+
+        <ListView
+            android:id="@+id/mTermsCalendarListView"
+            style="@style/ListStyleBlackTextTransparentSelector"
+            android:layout_width="match_parent"
+            android:layout_height="0dp"
+            android:layout_marginLeft="10dp"
+            android:layout_marginRight="10dp"
+            android:layout_weight="70" />
+    </LinearLayout>
+
+</RelativeLayout>
\ No newline at end of file
Index: app/src/main/java/com/nas/alreem/activity/cca/CCASelectionActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.nas.alreem.activity.cca\n\nimport android.content.Context\nimport android.content.Intent\nimport android.os.Bundle\nimport android.text.Html\nimport android.util.Log\nimport android.view.View\nimport android.view.animation.AnimationUtils\nimport android.widget.*\nimport androidx.appcompat.app.AppCompatActivity\nimport androidx.recyclerview.widget.GridLayoutManager\nimport androidx.recyclerview.widget.LinearLayoutManager\nimport androidx.recyclerview.widget.RecyclerView\nimport com.nas.alreem.R\nimport com.nas.alreem.activity.cca.adapter.CCAsActivityAdapter\nimport com.nas.alreem.activity.cca.adapter.CCAsWeekListAdapter\nimport com.nas.alreem.activity.cca.model.CCADetailModel\nimport com.nas.alreem.activity.cca.model.WeekListModel\nimport com.nas.alreem.activity.home.HomeActivity\nimport com.nas.alreem.appcontroller.AppController\nimport com.nas.alreem.constants.ConstantFunctions\nimport com.nas.alreem.constants.OnItemClickListener\nimport com.nas.alreem.constants.PreferenceManager\nimport com.nas.alreem.constants.addOnItemClickListener\nimport com.nas.alreem.recyclermanager.ItemOffsetDecoration\n\nclass CCASelectionActivity : AppCompatActivity() {\n    lateinit var mContext: Context\n    lateinit var titleTextView: TextView\n    lateinit var back: ImageView\n    lateinit var backRelative: RelativeLayout\n    lateinit var logoclick: ImageView\n    lateinit var progress: ProgressBar\n\n    var CCADetailModelArrayList: ArrayList<CCADetailModel>? = null\n\n    //    ArrayList<String> weekList;\n    var relativeHeader: RelativeLayout? = null\n    lateinit var msgRelative: RelativeLayout\n\n    var tab_type = \"ECAs\"\n    var extras: Bundle? = null\n\n    //    ArrayList<String> mCcaArrayList;\n    var recycler_review: RecyclerView? = null\n    var weekRecyclerList: RecyclerView? = null\n    var recyclerViewLayoutManager: GridLayoutManager? = null\n    var recyclerweekViewLayoutManager: GridLayoutManager? = null\n    var pos = 0\n    var ccaDetailpos = 0\n    var submitBtn: Button? = null\n    var nextBtn: Button? = null\n    var filled = false\n    var weekSelected = false\n    var weekPosition = 0\n    var flag = 0\n    var ccaedit = 0\n    var mCCAsWeekListAdapter: CCAsWeekListAdapter? = null\n    var TVselectedForWeek: TextView? = null\n    var textViewCCAaSelect: TextView? = null\n    var textViewStudName: TextView? = null\n    var messageTxt: TextView? = null\n    var mCCAsActivityAdapter: CCAsActivityAdapter? = null\n    override fun onCreate(savedInstanceState: Bundle?) {\n        super.onCreate(savedInstanceState)\n\n        setContentView(R.layout.activity_ccaselection)\n        mContext = this\n        initialiseUI()\n\n    }\n\n    private fun initialiseUI() {\n        titleTextView = findViewById(R.id.heading)\n        back = findViewById(R.id.btn_left)\n        backRelative = findViewById(R.id.backRelative)\n        logoclick = findViewById(R.id.logoClickImgView)\n        progress = findViewById(R.id.progress)\n        extras = intent.extras\n        logoclick.setOnClickListener {\n            val mIntent = Intent(mContext, HomeActivity::class.java)\n            mIntent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP)\n\n            startActivity(mIntent)\n        }\n        backRelative.setOnClickListener {\n            finish()\n        }\n        if (extras != null) {\n            tab_type = extras!!.getString(\"tab_type\")!!\n            ccaedit = extras!!.getInt(\"ccaedit\", 0)\n            //            pos = extras.getInt(\"pos\");\n            CCADetailModelArrayList =\n                PreferenceManager.getDetailsArrayList(mContext)\n            Log.e(\"Array\", CCADetailModelArrayList.toString())\n        }\n\n\n        AppController.weekList = ArrayList()\n        AppController.weekListWithData = ArrayList()\n//        weekList.add(\"Sunday\");\n//        weekList.add(\"Monday\");\n//        weekList.add(\"Tuesday\");\n//        weekList.add(\"Wednesday\");\n//        weekList.add(\"Thursday\");\n//        weekList.add(\"Friday\");\n//        weekList.add(\"Saturday\");\n        //        weekList.add(\"Sunday\");\n//        weekList.add(\"Monday\");\n//        weekList.add(\"Tuesday\");\n//        weekList.add(\"Wednesday\");\n//        weekList.add(\"Thursday\");\n//        weekList.add(\"Friday\");\n//        weekList.add(\"Saturday\");\n        for (i in 0..6) {\n            val mWeekListModel = WeekListModel()\n            mWeekListModel.weekDay=(getWeekday(i))\n            mWeekListModel.weekDayMMM=(getWeekdayMMM(i))\n            if (ccaedit == 0) {\n                mWeekListModel.choiceStatus=(\"0\")\n                mWeekListModel.choiceStatus1=(\"0\")\n            } else {\n                mWeekListModel.choiceStatus=(\"1\")\n                mWeekListModel.choiceStatus1=(\"1\")\n            }\n            AppController.weekList!!.add(mWeekListModel)\n        }\n        relativeHeader = findViewById<View>(R.id.relativeHeader) as RelativeLayout\n        msgRelative = findViewById<View>(R.id.msgRelative) as RelativeLayout\n        recycler_review = findViewById<View>(R.id.recycler_view_cca) as RecyclerView\n        weekRecyclerList = findViewById<View>(R.id.weekRecyclerList) as RecyclerView\n        TVselectedForWeek = findViewById<View>(R.id.TVselectedForWeek) as TextView\n        textViewCCAaSelect = findViewById<View>(R.id.textViewCCAaSelect) as TextView\n        textViewStudName = findViewById<View>(R.id.textViewStudName) as TextView\n        messageTxt = findViewById<View>(R.id.messageTxt) as TextView\n        submitBtn = findViewById<View>(R.id.submitBtn) as Button\n        nextBtn = findViewById<View>(R.id.nextBtn) as Button\n        nextBtn!!.getBackground().setAlpha(255)\n        submitBtn!!.getBackground().setAlpha(150)\n\n        val startAnimation = AnimationUtils.loadAnimation(\n            applicationContext, R.anim.blinking_animation\n        )\n        messageTxt!!.startAnimation(startAnimation)\n        if (PreferenceManager.getStudClassForCCA(mContext).equals(\"\")) {\n           // textViewStudName!!.setText(PreferenceManager.getStudNameForCCA(mContext))\n\n            textViewStudName!!.text = Html.fromHtml(PreferenceManager.getStudentName(\n                    mContext)+\"<br/>Year Group : \" + PreferenceManager.getStudentClass( mContext))\n        } else {\n            textViewStudName!!.text = Html.fromHtml(\n                PreferenceManager.getStudNameForCCA(mContext)\n                    .toString() + \"<br/>Year Group : \" + PreferenceManager.getStudClassForCCA(\n                    mContext\n                )\n            )\n        }\n        if (ccaedit == 0) {\n            ConstantFunctions.showDialogueWithOk(\n                mContext,\n                \"Please select a ECA or None for each choice and each day\",\n                \"Info\"\n            )\n\n            submitBtn!!.getBackground().setAlpha(150)\n            submitBtn!!.setVisibility(View.INVISIBLE)\n            AppController.filledFlag = 1\n        } else {\n            submitBtn!!.getBackground().setAlpha(255)\n            submitBtn!!.setVisibility(View.VISIBLE)\n            nextBtn!!.getBackground().setAlpha(255)\n            nextBtn!!.setVisibility(View.GONE)\n            AppController.filledFlag = 1\n        }\n\n        submitBtn!!.setOnClickListener(View.OnClickListener { //              for (int i=0;i<CCADetailModelArrayList.size();i++)\n            //              {\n            //                  System.out.println(\"Choice1 \"+CCADetailModelArrayList.get(i).getDay()+\":\"+CCADetailModelArrayList.get(i).getChoice1());\n            //                  System.out.println(\"Choice2 \"+CCADetailModelArrayList.get(i).getDay()+\":\"+CCADetailModelArrayList.get(i).getChoice2());\n            //              }\n            Log.e(\"filled1\",filled.toString())\n//            if (flag == 1) {\n//                filled = true\n//            }\n            Log.e(\"flag\",AppController.filledFlag.toString())\n\n            if(AppController.filledFlag == 1){\n//            if (filled) {\n                val mInent = Intent(mContext, CCAsReviewActivity::class.java)\n                Log.e(\"size selection\", CCADetailModelArrayList!!.size.toString())\n                AppController.CCADetailModelArrayList.clear()\n                for (i in CCADetailModelArrayList!!.indices){\n                    AppController.CCADetailModelArrayList.add(CCADetailModelArrayList!![i])\n                }\n                intent.putExtra(\"detail_array\", CCADetailModelArrayList)\n                System.out.print(\"detailArray\"+CCADetailModelArrayList)\n                startActivity(mInent)\n            } else {\n                ConstantFunctions.showDialogueWithOk(mContext,\"Select choice for all available days\",\"Alert\")\n\n            }\n        })\n\n\n        recycler_review!!.setHasFixedSize(true)\n        recyclerViewLayoutManager = GridLayoutManager(mContext, 1)\n        val spacing = 5 // 50px\n\n        val itemDecoration = ItemOffsetDecoration(mContext, spacing)\n        recycler_review!!.addItemDecoration(itemDecoration)\n        recycler_review!!.layoutManager = recyclerViewLayoutManager\n//        for (int i = 0; i < CCADetailModelArrayList.size(); i++)\n//            if (CCADetailModelArrayList.get(i).getDay().equalsIgnoreCase(\"Sunday\")) {\n//                {\n//                    ccaDetailpos=i;\n//                    CCAsActivityAdapter mCCAsActivityAdapter = new CCAsActivityAdapter(mContext, CCADetailModelArrayList.get(i).getCcaChoiceModel(), CCADetailModelArrayList.get(i).getCcaChoiceModel2(),0,AppController.weekList);\n//                    recycler_review.setAdapter(mCCAsActivityAdapter);\n//                    break;\n//                }\n//            }\n\n        //        for (int i = 0; i < CCADetailModelArrayList.size(); i++)\n//            if (CCADetailModelArrayList.get(i).getDay().equalsIgnoreCase(\"Sunday\")) {\n//                {\n//                    ccaDetailpos=i;\n//                    CCAsActivityAdapter mCCAsActivityAdapter = new CCAsActivityAdapter(mContext, CCADetailModelArrayList.get(i).getCcaChoiceModel(), CCADetailModelArrayList.get(i).getCcaChoiceModel2(),0,AppController.weekList);\n//                    recycler_review.setAdapter(mCCAsActivityAdapter);\n//                    break;\n//                }\n//            }\n        TVselectedForWeek!!.text = \"Sunday\"\n//        for (int j = 0; j < AppController.weekList.size(); j++) {\n//            for (int i = 0; i < CCADetailModelArrayList.size(); i++) {\n//                if (!AppController.weekList.get(j).getWeekDay().equalsIgnoreCase(CCADetailModelArrayList.get(i).getDay())) {\n//                    AppController.weekList.get(j).setChoiceStatus(\"2\");\n//                    AppController.weekList.get(j).setChoiceStatus1(\"2\");\n//                }\n//                else\n//                {\n//                    AppController.weekList.get(j).setChoiceStatus(\"0\");\n//                    AppController.weekList.get(j).setChoiceStatus1(\"0\");\n//                }\n//            }\n//        }\n\n        //        for (int j = 0; j < AppController.weekList.size(); j++) {\n//            for (int i = 0; i < CCADetailModelArrayList.size(); i++) {\n//                if (!AppController.weekList.get(j).getWeekDay().equalsIgnoreCase(CCADetailModelArrayList.get(i).getDay())) {\n//                    AppController.weekList.get(j).setChoiceStatus(\"2\");\n//                    AppController.weekList.get(j).setChoiceStatus1(\"2\");\n//                }\n//                else\n//                {\n//                    AppController.weekList.get(j).setChoiceStatus(\"0\");\n//                    AppController.weekList.get(j).setChoiceStatus1(\"0\");\n//                }\n//            }\n//        }\n        for (i in 0 until AppController.weekList!!.size) {\n            AppController.weekList!!.get(i).choiceStatus=(\"2\")\n            AppController.weekList!!.get(i).choiceStatus1=(\"2\")\n            AppController.weekList!!.get(i).dataInWeek=(\"0\")\n        }\n\n\n        for (i in 0 until AppController.weekList!!.size) {\n            for (j in CCADetailModelArrayList!!.indices) {\n                if (AppController.weekList!!.get(i).weekDay.equals(\n                        CCADetailModelArrayList!!.get(j).day)\n                ) {\n                    if (ccaedit == 0) {\n                        AppController.weekList!!.get(i).choiceStatus=(\"0\")\n                        AppController.weekList!!.get(i).choiceStatus1=(\"0\")\n                    } else {\n                        AppController.weekList!!.get(i).choiceStatus=(\"1\")\n                        AppController.weekList!!.get(i).choiceStatus1=(\"1\")\n                    }\n                    AppController.weekList!!.get(i).dataInWeek=(\"1\")\n                    AppController.weekListWithData!!.add(i)\n                }\n            }\n        }\n        for (i in this.CCADetailModelArrayList!!.indices) {\n            if (CCADetailModelArrayList!!.get(i).day.equals(\"Sunday\")) {\n                ccaDetailpos = i\n                textViewCCAaSelect!!.visibility = View.VISIBLE\n                TVselectedForWeek!!.visibility = View.VISIBLE\n                mCCAsActivityAdapter = CCAsActivityAdapter(\n                    mContext,\n                    CCADetailModelArrayList!!.get(i).ccaChoiceModel,\n                    CCADetailModelArrayList!!.get(i).ccaChoiceModel2,\n                    0,\n                    AppController.weekList,\n                    weekRecyclerList,ccaedit,CCADetailModelArrayList,nextBtn, submitBtn, filled,ccaDetailpos,msgRelative\n                )\n                recycler_review!!.adapter = mCCAsActivityAdapter\n                break\n            } else if (i == CCADetailModelArrayList!!!!.size - 1) {\n                if (!CCADetailModelArrayList!!.get(i).day\n                        .equals(\"Sunday\",ignoreCase = true)\n                ) {\n                    mCCAsActivityAdapter = CCAsActivityAdapter(mContext, 0)\n                    recycler_review!!.adapter = mCCAsActivityAdapter\n                    textViewCCAaSelect!!.visibility = View.GONE\n                    TVselectedForWeek!!.visibility = View.GONE\n                    AppController.weekList!!.get(0).choiceStatus=(\"2\")\n                    AppController.weekList!!.get(0).choiceStatus1=(\"2\")\n                    //                    Toast.makeText(mContext, \"ECA choice not available.\", Toast.LENGTH_SHORT).show();\n                }\n            }\n        }\n\n\n//        CCAsActivityAdapter mCCAsActivityAdapter = new CCAsActivityAdapter(mContext, CCADetailModelArrayList.get(0).getCcaChoiceModel(), CCADetailModelArrayList.get(0).getCcaChoiceModel2());\n//        recycler_review.setAdapter(mCCAsActivityAdapter);\n\n\n//        CCAsActivityAdapter mCCAsActivityAdapter = new CCAsActivityAdapter(mContext, CCADetailModelArrayList.get(0).getCcaChoiceModel(), CCADetailModelArrayList.get(0).getCcaChoiceModel2());\n//        recycler_review.setAdapter(mCCAsActivityAdapter);\n        weekRecyclerList!!.setHasFixedSize(true)\n//        recyclerweekViewLayoutManager = new GridLayoutManager(mContext, 7);\n        //        recyclerweekViewLayoutManager = new GridLayoutManager(mContext, 7);\n        val llm = LinearLayoutManager(mContext)\n        llm.orientation = LinearLayoutManager.HORIZONTAL\n//        weekRecyclerList.addItemDecoration(\n//                new DividerItemDecoration(mContext.getResources().getDrawable(R.drawable.list_divider)));\n//        weekRecyclerList.addItemDecoration(itemDecoration);\n        //        weekRecyclerList.addItemDecoration(\n//                new DividerItemDecoration(mContext.getResources().getDrawable(R.drawable.list_divider)));\n//        weekRecyclerList.addItemDecoration(itemDecoration);\n        weekRecyclerList!!.layoutManager = llm\n//        weekRecyclerList.setLayoutManager(recyclerweekViewLayoutManager);\n        //        weekRecyclerList.setLayoutManager(recyclerweekViewLayoutManager);\n        mCCAsWeekListAdapter = CCAsWeekListAdapter(mContext, AppController.weekList, weekPosition, msgRelative)\n        weekRecyclerList!!.adapter = mCCAsWeekListAdapter\n        weekRecyclerList!!.addOnItemClickListener(object : OnItemClickListener {\n            override fun onItemClicked(position: Int, view: View) {\n                for (i in CCADetailModelArrayList!!.indices) {\n                    if (AppController.weekList!!.get(position).weekDay.equals(\n                            CCADetailModelArrayList!!.get(i).day)) {\n                        pos = i\n                      ccaDetailpos = i\n                        weekSelected = true\n                        break\n                    } else {\n                        weekSelected = false\n                    }\n                    if (weekSelected) {\n                        break\n                    }\n                }\n                if (!weekSelected) {\n                    textViewCCAaSelect!!.visibility = View.GONE\n                    TVselectedForWeek!!.visibility = View.GONE\n                  msgRelative!!.setVisibility(View.GONE)\n                    val mCCAsActivityAdapter = CCAsActivityAdapter(mContext, 0)\n                    recycler_review!!.adapter = mCCAsActivityAdapter\n                    mCCAsActivityAdapter.notifyDataSetChanged()\n                    AppController.weekList!!.get(position).choiceStatus=(\"2\")\n                    AppController.weekList!!.get(position).choiceStatus1=(\"2\")\n                    Toast.makeText(mContext, \"ECA choice not available\", Toast.LENGTH_SHORT)\n                        .show()\n                } else {\n                    textViewCCAaSelect!!.visibility = View.VISIBLE\n                    TVselectedForWeek!!.visibility = View.VISIBLE\n                    msgRelative!!.setVisibility(View.VISIBLE)\n                    val mCCAsActivityAdapter = CCAsActivityAdapter(\n                        mContext,\n                        CCADetailModelArrayList!!.get(pos).ccaChoiceModel,\n                        CCADetailModelArrayList!!.get(pos).ccaChoiceModel2,\n                        position,\n                        AppController.weekList,\n                        weekRecyclerList,ccaedit,CCADetailModelArrayList,nextBtn, submitBtn, filled,ccaDetailpos,msgRelative\n                    )\n                    recycler_review!!.adapter = mCCAsActivityAdapter\n                    mCCAsActivityAdapter.notifyDataSetChanged()\n                }\n                for (j in 0 until AppController.weekList!!.size) {\n                    if (AppController.weekList!!.get(j).choiceStatus\n                            .equals(\"0\") || AppController.weekList!!.get(j)\n                            .choiceStatus1.equals(\"0\")\n                    ) {\n                        filled = false\n                        break\n                    } else {\n                        filled = true\n                    }\n                    if (!filled) {\n                        break\n                    }\n                }\n                if (filled) {\n                    submitBtn!!.background.alpha = 255\n                    submitBtn!!.setVisibility(View.VISIBLE)\n                    nextBtn!!.getBackground().setAlpha(255)\n                    nextBtn!!.setVisibility(View.GONE)\n                    AppController.filledFlag = 1\n                } else {\n                    submitBtn!!.getBackground().setAlpha(150)\n                    submitBtn!!.setVisibility(View.INVISIBLE)\n                    nextBtn!!.getBackground().setAlpha(255)\n                    nextBtn!!.setVisibility(View.VISIBLE)\n                }\n                weekPosition = position\n                mCCAsWeekListAdapter =\n                    CCAsWeekListAdapter(mContext, AppController.weekList, weekPosition,msgRelative)\n                weekRecyclerList!!.adapter = mCCAsWeekListAdapter\n                TVselectedForWeek!!.setText(AppController.weekList!!.get(position).weekDay)\n                //                        horizontalScrollView\n                if (weekPosition == 6) weekRecyclerList!!.scrollToPosition(6) else weekRecyclerList!!.scrollToPosition(\n                    0\n                )\n            }\n\n        })\n\n\n        for (j in 0 until AppController.weekList!!.size) {\n            if (AppController.weekList!!.get(j).dataInWeek.equals(\"1\")) {\n                for (i in CCADetailModelArrayList!!.indices) {\n                    if (AppController.weekList!!.get(j).weekDay.equals(\n                            CCADetailModelArrayList!!.get(i).day\n                        )\n                    ) {\n                        pos = i\n                        ccaDetailpos = i\n                        weekSelected = true\n                        break\n                    } else {\n                        weekSelected = false\n                    }\n                    if (weekSelected) {\n                        break\n                    }\n                }\n                if (!weekSelected) {\n                    textViewCCAaSelect!!.visibility = View.GONE\n                    TVselectedForWeek!!.visibility = View.GONE\n                    msgRelative!!.setVisibility(View.VISIBLE)\n                    val mCCAsActivityAdapter = CCAsActivityAdapter(mContext, 0)\n                    recycler_review!!.adapter = mCCAsActivityAdapter\n                    mCCAsActivityAdapter.notifyDataSetChanged()\n                    AppController.weekList!!.get(j).choiceStatus=(\"2\")\n                    AppController.weekList!!.get(j).choiceStatus1=(\"2\")\n                    Toast.makeText(mContext, \"ECA choice not available\", Toast.LENGTH_SHORT).show()\n                } else {\n                    textViewCCAaSelect!!.visibility = View.VISIBLE\n                    TVselectedForWeek!!.visibility = View.VISIBLE\n                    msgRelative!!.setVisibility(View.VISIBLE)\n                    val mCCAsActivityAdapter = CCAsActivityAdapter(\n                        mContext,\n                        CCADetailModelArrayList!!.get(pos).ccaChoiceModel,\n                        CCADetailModelArrayList!!.get(pos).ccaChoiceModel2,\n                        j,\n                        AppController.weekList,\n                        weekRecyclerList,ccaedit,CCADetailModelArrayList,nextBtn, submitBtn, filled,ccaDetailpos,msgRelative\n                    )\n                    recycler_review!!.adapter = mCCAsActivityAdapter\n                    mCCAsActivityAdapter.notifyDataSetChanged()\n                }\n                for (k in 0 until AppController.weekList!!.size) {\n                    if (AppController.weekList!!.get(k).choiceStatus\n                            .equals(\"0\") || AppController.weekList!!.get(k)\n                            .choiceStatus1.equals(\"0\")\n                    ) {\n                        filled = false\n                        msgRelative!!.setVisibility(View.VISIBLE)\n                        break\n                    } else {\n                        filled = true\n                    }\n                    if (!filled) {\n                        break\n                    }\n                }\n                if (filled) {\n                    submitBtn!!.getBackground().setAlpha(255)\n                    submitBtn!!.setVisibility(View.VISIBLE)\n                    nextBtn!!.getBackground().setAlpha(255)\n                    nextBtn!!.setVisibility(View.GONE)\n                    msgRelative!!.setVisibility(View.GONE)\n                    AppController.filledFlag = 1\n//                    msgRelative.setVisibility(View.GONE);\n                } else {\n                    msgRelative!!.setVisibility(View.VISIBLE)\n                    submitBtn!!.getBackground().setAlpha(150)\n                    submitBtn!!.setVisibility(View.INVISIBLE)\n                    nextBtn!!.getBackground().setAlpha(255)\n                    nextBtn!!.setVisibility(View.VISIBLE)\n                }\n                weekPosition = j\n                mCCAsWeekListAdapter =\n                    CCAsWeekListAdapter(mContext, AppController.weekList, weekPosition, msgRelative)\n                weekRecyclerList!!.adapter = mCCAsWeekListAdapter\n                TVselectedForWeek!!.setText(AppController.weekList!!.get(j).weekDay)\n                break\n            }\n        }\n\n        if (AppController.weekListWithData!!.size > 0) {\n            nextBtn!!.getBackground().setAlpha(255)\n            nextBtn!!.setVisibility(View.VISIBLE)\n        } else {\n            nextBtn!!.getBackground().setAlpha(255)\n            nextBtn!!.setVisibility(View.GONE)\n        }\n\n        nextBtn!!.setOnClickListener(View.OnClickListener {\n            Log.e(\"filled next\",filled.toString())\n            weekPosition = weekPosition + 1\n            if (AppController.weekListWithData!!.contains(weekPosition)) {\n                for (a in 0 until AppController.weekListWithData!!.size) {\n                    if (AppController.weekListWithData!!.get(a) === weekPosition) {\n                        //weekPosition = a;\n                        weekPosition = AppController.weekListWithData!!.get(a)\n                        break\n                    }\n                }\n\n                /*           for (int a=0;a<AppController.weekListWithData.size();a++)\n                        {\n                            if (weekPosition==AppController.weekListWithData.get(a)) {\n                                weekPosition = AppController.weekListWithData.get(a);\n                            }\n                        }\n                        weekPosition = AppController.weekListWithData.get(weekPosition);*/\n            } else {\n                if (weekPosition >= AppController.weekList!!.size - 1) {\n                    weekPosition = 0\n                }\n                if (AppController.weekListWithData!!.contains(weekPosition)) {\n                    //                        weekPosition = AppController.weekListWithData.get(weekPosition);\n                    for (a in 0 until AppController.weekListWithData!!.size) {\n                        //                            if (AppController.weekListWithData.contains(weekPosition)) {\n                        if (AppController.weekListWithData!!.get(a) === weekPosition) {\n                            //                                weekPosition = a;\n                            weekPosition = AppController.weekListWithData!!.get(a)\n                            break\n                        }\n                    }\n                } else {\n                    for (m in weekPosition until AppController.weekList!!.size) {\n                        if (AppController.weekListWithData!!.contains(m)) {\n                            weekPosition = m\n                            println(\"weekposition:m:$weekPosition\")\n                            break\n                        }\n                    }\n                    if (!AppController.weekListWithData!!.contains(weekPosition)) {\n                        weekPosition = 0\n                    }\n                }\n            }\n            for (j in weekPosition until AppController.weekList!!.size) {\n                if (AppController.weekList!!.get(j).dataInWeek.equals(\"1\")) {\n                    for (i in CCADetailModelArrayList!!.indices) {\n                        if (AppController.weekList!!.get(j).weekDay.equals(\n                                CCADetailModelArrayList!!.get(i).day,ignoreCase = true\n                            )\n                        ) {\n                            pos = i\n                            ccaDetailpos = i\n                            weekSelected = true\n                            break\n                        } else {\n                            weekSelected = false\n                        }\n                        if (weekSelected) {\n                            break\n                        }\n                    }\n                    if (!weekSelected) {\n                        textViewCCAaSelect!!.visibility = View.GONE\n                        TVselectedForWeek!!.visibility = View.GONE\n                        val mCCAsActivityAdapter = CCAsActivityAdapter(mContext, 0)\n                        recycler_review!!.adapter = mCCAsActivityAdapter\n                        mCCAsActivityAdapter.notifyDataSetChanged()\n                        AppController.weekList!!.get(j).choiceStatus = \"2\"\n                        AppController.weekList!!.get(j).choiceStatus1 = \"2\"\n                        //                            Toast.makeText(mContext, \"ECA choice not available.\", Toast.LENGTH_SHORT).show();\n                    } else {\n                        textViewCCAaSelect!!.visibility = View.VISIBLE\n                        TVselectedForWeek!!.visibility = View.VISIBLE\n                        val mCCAsActivityAdapter = CCAsActivityAdapter(\n                            mContext,\n                            CCADetailModelArrayList!!.get(pos).ccaChoiceModel,\n                            CCADetailModelArrayList!!.get(pos).ccaChoiceModel2,\n                            j,\n                            AppController.weekList,\n                            weekRecyclerList,ccaedit,CCADetailModelArrayList,nextBtn, submitBtn, filled,ccaDetailpos,msgRelative\n                        )\n                        recycler_review!!.adapter = mCCAsActivityAdapter\n                        mCCAsActivityAdapter.notifyDataSetChanged()\n                    }\n                    for (k in 0 until AppController.weekList!!.size) {\n                        if (AppController.weekList!!.get(k).choiceStatus\n                                .equals(\"0\") || AppController.weekList!!.get(k)\n                                .choiceStatus1.equals(\"0\",ignoreCase = true)\n                        ) {\n                            filled = false\n                            msgRelative!!.setVisibility(View.VISIBLE)\n                            break\n                        } else {\n                            filled = true\n                        }\n                        if (!filled) {\n                            break\n                        }\n                    }\n                    if (filled) {\n                        submitBtn!!.getBackground().setAlpha(255)\n                        submitBtn!!.setVisibility(View.VISIBLE)\n                        nextBtn!!.getBackground().setAlpha(255)\n                        nextBtn!!.setVisibility(View.GONE)\n                        msgRelative!!.setVisibility(View.GONE)\n                        nextBtn!!.setVisibility(View.GONE)\n                        AppController.filledFlag = 1\n                    } else {\n                        msgRelative!!.setVisibility(View.VISIBLE)\n                        submitBtn!!.getBackground().setAlpha(150)\n                        submitBtn!!.setVisibility(View.INVISIBLE)\n                        nextBtn!!.getBackground().setAlpha(255)\n                        nextBtn!!.setVisibility(View.VISIBLE)\n                    }\n                    weekPosition = j\n                    mCCAsWeekListAdapter =\n                        CCAsWeekListAdapter(mContext, AppController.weekList, weekPosition,msgRelative)\n                    weekRecyclerList!!.adapter = mCCAsWeekListAdapter\n                    TVselectedForWeek!!.text = AppController.weekList!![j].weekDay\n                    break\n                }\n            }\n            if (weekPosition == 6) {\n                weekRecyclerList!!.layoutManager!!.scrollToPosition(weekPosition)\n            } else {\n                weekRecyclerList!!.layoutManager!!.scrollToPosition(0)\n            }\n        })\n    }\n    fun getWeekday(weekDay: Int): String? {\n        var day = \"\"\n        when (weekDay) {\n            0 -> day = \"Sunday\"\n            1 -> day = \"Monday\"\n            2 -> day = \"Tuesday\"\n            3 -> day = \"Wednesday\"\n            4 -> day = \"Thursday\"\n            5 -> day = \"Friday\"\n            6 -> day = \"Saturday\"\n        }\n        return day\n    }\n\n    fun getWeekdayMMM(weekDay: Int): String? {\n        var day = \"\"\n        when (weekDay) {\n            0 -> day = \"SUN\"\n            1 -> day = \"MON\"\n            2 -> day = \"TUE\"\n            3 -> day = \"WED\"\n            4 -> day = \"THU\"\n            5 -> day = \"FRI\"\n            6 -> day = \"SAT\"\n        }\n        return day\n    }\n\n\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/nas/alreem/activity/cca/CCASelectionActivity.kt b/app/src/main/java/com/nas/alreem/activity/cca/CCASelectionActivity.kt
--- a/app/src/main/java/com/nas/alreem/activity/cca/CCASelectionActivity.kt	(revision 29dbbedb1ce8c3fe2a8032d242fcce101acbc7b5)
+++ b/app/src/main/java/com/nas/alreem/activity/cca/CCASelectionActivity.kt	(date 1690800036176)
@@ -146,8 +146,8 @@
         if (PreferenceManager.getStudClassForCCA(mContext).equals("")) {
            // textViewStudName!!.setText(PreferenceManager.getStudNameForCCA(mContext))
 
-            textViewStudName!!.text = Html.fromHtml(PreferenceManager.getStudentName(
-                    mContext)+"<br/>Year Group : " + PreferenceManager.getStudentClass( mContext))
+            textViewStudName!!.text = Html.fromHtml(PreferenceManager.getStudNameForCCA(
+                    mContext)+"<br/>Year Group : " + PreferenceManager.getStudClassForCCA( mContext))
         } else {
             textViewStudName!!.text = Html.fromHtml(
                 PreferenceManager.getStudNameForCCA(mContext)
@@ -159,7 +159,7 @@
         if (ccaedit == 0) {
             ConstantFunctions.showDialogueWithOk(
                 mContext,
-                "Please select a ECA or None for each choice and each day",
+                "Please select a EAP or None for each choice and each day",
                 "Info"
             )
 
@@ -359,7 +359,7 @@
                     mCCAsActivityAdapter.notifyDataSetChanged()
                     AppController.weekList!!.get(position).choiceStatus=("2")
                     AppController.weekList!!.get(position).choiceStatus1=("2")
-                    Toast.makeText(mContext, "ECA choice not available", Toast.LENGTH_SHORT)
+                    Toast.makeText(mContext, "EAP choice not available", Toast.LENGTH_SHORT)
                         .show()
                 } else {
                     textViewCCAaSelect!!.visibility = View.VISIBLE
@@ -443,7 +443,7 @@
                     mCCAsActivityAdapter.notifyDataSetChanged()
                     AppController.weekList!!.get(j).choiceStatus=("2")
                     AppController.weekList!!.get(j).choiceStatus1=("2")
-                    Toast.makeText(mContext, "ECA choice not available", Toast.LENGTH_SHORT).show()
+                    Toast.makeText(mContext, "EAP choice not available", Toast.LENGTH_SHORT).show()
                 } else {
                     textViewCCAaSelect!!.visibility = View.VISIBLE
                     TVselectedForWeek!!.visibility = View.VISIBLE
Index: app/src/main/res/layout/activity_ccaselection.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\n<RelativeLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n    android:background=\"@color/white\"\n    android:orientation=\"vertical\">\n\n    <RelativeLayout\n        android:id=\"@+id/relativeHeader\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\"\n        android:layout_alignParentTop=\"true\" >\n        <ImageView\n            android:id=\"@+id/relative_logo_header\"\n            android:layout_width=\"match_parent\"\n            android:src=\"@drawable/titlebar\"\n            android:layout_height=\"wrap_content\" />\n        <ImageView\n            android:id=\"@+id/logoClickImgView\"\n            android:layout_width=\"wrap_content\"\n            android:layout_height=\"wrap_content\"\n            android:layout_centerHorizontal=\"true\"\n            android:layout_alignTop=\"@+id/relative_logo_header\"\n            android:background=\"@drawable/logotransperent\"\n            android:layout_above=\"@+id/heading\" />\n\n        <RelativeLayout\n            android:id=\"@+id/bottomRel\"\n            android:layout_width=\"match_parent\"\n            android:layout_above=\"@+id/heading\"\n            android:layout_alignParentTop=\"true\"\n            android:layout_height=\"wrap_content\" >\n\n\n            <RelativeLayout\n                android:id=\"@+id/backRelative\"\n                android:layout_width=\"45dp\"\n                android:layout_centerVertical=\"true\"\n                android:layout_height=\"45dp\">\n\n                <ImageView\n                    android:id=\"@+id/btn_left\"\n                    android:layout_width=\"wrap_content\"\n                    android:layout_height=\"wrap_content\"\n                    android:layout_alignParentLeft=\"true\"\n                    android:layout_centerVertical=\"true\"\n                    android:background=\"@drawable/back\"\n                    android:visibility=\"visible\" />\n            </RelativeLayout>\n\n            <ImageView\n                android:id=\"@+id/btn_right\"\n                android:layout_width=\"wrap_content\"\n                android:layout_height=\"wrap_content\"\n                android:layout_alignParentRight=\"true\"\n                android:layout_centerVertical=\"true\"\n                android:visibility=\"invisible\"/>\n        </RelativeLayout>\n\n        <com.nas.alreem.commonviews.CustomFontDJ5TextWhite\n            android:id=\"@+id/heading\"\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"40dp\"\n            android:layout_below=\"@id/relative_logo_header\"\n            android:background=\"@color/split_bg\"\n            android:gravity=\"center\"\n            android:paddingTop=\"5dp\"\n            android:paddingBottom=\"5dp\"\n            android:text=\"Enrichment Options\"\n            android:textColor=\"@color/white\"\n            android:textSize=\"17dp\" />\n        <ImageView\n            android:id=\"@+id/btn_info\"\n            android:layout_width=\"35dp\"\n            android:layout_height=\"35dp\"\n            android:layout_alignParentRight=\"true\"\n            android:layout_marginBottom=\"8dp\"\n            android:layout_marginRight=\"2dp\"\n            android:layout_centerVertical=\"true\"\n            android:layout_alignBottom=\"@+id/heading\"\n            android:background=\"@drawable/infoptaicon\"\n            android:visibility=\"invisible\"/>\n\n    </RelativeLayout>\n\n\n    <androidx.recyclerview.widget.RecyclerView\n        android:id=\"@+id/weekRecyclerList\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"60dp\"\n        android:layout_below=\"@+id/relativeHeader\"\n        android:layout_marginLeft=\"1dp\"\n        android:background=\"@color/white\"\n        android:overScrollMode=\"never\"\n        android:scrollbars=\"vertical\" />\n    <View\n        android:layout_width=\"match_parent\"\n        android:id=\"@+id/listDivider\"\n        android:layout_height=\"1dp\"\n        android:visibility=\"visible\"\n        android:layout_below=\"@+id/weekRecyclerList\"\n\n        android:layout_gravity=\"center_horizontal\"\n        android:background=\"@color/grey\" />\n    <RelativeLayout\n        android:id=\"@+id/msgRelative\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\"\n        android:layout_below=\"@+id/listDivider\"\n        android:background=\"@color/cal_row_4\">\n        <TextView\n            android:id=\"@+id/messageTxt\"\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"wrap_content\"\n            android:textColor=\"@color/white\"\n            android:text=\"Select first choice &amp; second choice for this day\"\n            android:gravity=\"center\"/>\n    </RelativeLayout>\n\n    <RelativeLayout\n        android:id=\"@+id/weekRel\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\"\n        android:layout_below=\"@+id/msgRelative\"\n        >\n\n        <TextView\n            android:id=\"@+id/textViewCCAaSelect\"\n            android:layout_width=\"wrap_content\"\n            android:layout_height=\"wrap_content\"\n            android:layout_marginStart=\"5dp\"\n            android:layout_marginTop=\"5dp\"\n            android:layout_marginEnd=\"5dp\"\n            android:layout_marginBottom=\"5dp\"\n            android:textStyle=\"bold\"\n            android:text=\"Select Enrichment Choices for:\"\n            android:textColor=\"@color/black\"\n            android:textSize=\"15sp\" />\n\n       <com.nas.alreem.commonviews.button.CustomFontButtonSemiBoldBlack\n            android:id=\"@+id/TVselectedForWeek\"\n            android:layout_width=\"wrap_content\"\n            android:layout_height=\"wrap_content\"\n            android:layout_marginStart=\"5dp\"\n            android:layout_marginTop=\"5dp\"\n            android:layout_marginEnd=\"5dp\"\n            android:layout_marginBottom=\"5dp\"\n            android:layout_toRightOf=\"@+id/textViewCCAaSelect\"\n            android:text=\"Sunday\"\n            android:textColor=\"@color/black\"\n            android:textSize=\"15sp\" />\n\n    </RelativeLayout>\n\n    <com.nas.alreem.commonviews.CustomTextViewRegular\n        android:id=\"@+id/textViewStudName\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:layout_below=\"@+id/weekRel\"\n        android:layout_marginStart=\"5dp\"\n        android:layout_marginTop=\"5dp\"\n        android:layout_marginEnd=\"5dp\"\n        android:layout_marginBottom=\"5dp\"\n        android:text=\"Krishna\"\n        android:textColor=\"@color/black\"\n        android:textSize=\"15sp\" />\n\n    <androidx.recyclerview.widget.RecyclerView\n        android:id=\"@+id/recycler_view_cca\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\"\n        android:layout_above=\"@+id/submitBtn\"\n        android:layout_below=\"@+id/textViewStudName\"\n        android:layout_marginStart=\"5dp\"\n        android:layout_marginTop=\"5dp\"\n        android:layout_marginEnd=\"5dp\"\n        android:layout_marginBottom=\"5dp\"\n        android:background=\"@color/white\"\n        android:overScrollMode=\"never\"\n        android:scrollbars=\"vertical\" />\n\n    <Button\n        android:id=\"@+id/submitBtn\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\"\n        android:text=\"Continue\"\n        android:textAllCaps=\"false\"\n        android:layout_centerHorizontal=\"true\"\n        android:textColor=\"@color/white\"\n        android:background=\"@drawable/yellow_buttonsubmit_new\"\n        android:layout_above=\"@+id/imageViewInfo\"\n        android:gravity=\"center\"\n        android:textSize=\"16sp\"\n        android:layout_marginTop=\"5dp\"\n        android:layout_marginBottom=\"5dp\"\n        android:layout_marginLeft=\"15dp\"\n        android:layout_marginRight=\"15dp\"\n        android:visibility=\"visible\" />\n    <Button\n        android:id=\"@+id/nextBtn\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\"\n        android:text=\"Next\"\n        android:layout_centerHorizontal=\"true\"\n        android:textColor=\"@color/white\"\n        android:background=\"@drawable/yellow_buttonsubmit_new\"\n        android:layout_above=\"@+id/imageViewInfo\"\n        android:gravity=\"center\"\n        android:textSize=\"16sp\"\n        android:textAllCaps=\"true\"\n        android:layout_marginTop=\"5dp\"\n        android:layout_marginBottom=\"5dp\"\n        android:layout_marginLeft=\"15dp\"\n        android:layout_marginRight=\"15dp\"\n        android:visibility=\"visible\" />\n\n    <ImageView\n        android:id=\"@+id/imageViewInfo\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\"\n        android:layout_alignParentBottom=\"true\"\n        android:layout_marginTop=\"5dp\"\n        android:layout_marginBottom=\"5dp\"\n        android:src=\"@drawable/infoforccaregistration_new\" />\n\n    <!--        android:background=\"@drawable/curved_filled_layout_parents_association\"\n-->\n    <ProgressBar\n        android:id=\"@+id/progress\"\n        android:layout_width=\"40dp\"\n        android:layout_height=\"40dp\"\n        android:layout_centerInParent=\"true\"\n        android:indeterminateDrawable=\"@anim/customspinner\"\n        android:visibility=\"gone\"\n        app:layout_constraintBottom_toBottomOf=\"parent\"\n        app:layout_constraintEnd_toEndOf=\"parent\"\n        app:layout_constraintStart_toStartOf=\"parent\"\n        app:layout_constraintTop_toTopOf=\"parent\" />\n</RelativeLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/activity_ccaselection.xml b/app/src/main/res/layout/activity_ccaselection.xml
--- a/app/src/main/res/layout/activity_ccaselection.xml	(revision 29dbbedb1ce8c3fe2a8032d242fcce101acbc7b5)
+++ b/app/src/main/res/layout/activity_ccaselection.xml	(date 1690539435627)
@@ -125,7 +125,7 @@
         android:layout_below="@+id/msgRelative"
         >
 
-        <TextView
+        <com.nas.alreem.commonviews.CustomEditTextViewSemiBold
             android:id="@+id/textViewCCAaSelect"
             android:layout_width="wrap_content"
             android:layout_height="wrap_content"
@@ -134,7 +134,7 @@
             android:layout_marginEnd="5dp"
             android:layout_marginBottom="5dp"
             android:textStyle="bold"
-            android:text="Select Enrichment Choices for:"
+            android:text="Select EAP Choices for:"
             android:textColor="@color/black"
             android:textSize="15sp" />
 
Index: app/src/main/java/com/nas/alreem/recyclermanager/DividerItemDecoration.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/nas/alreem/recyclermanager/DividerItemDecoration.kt b/app/src/main/java/com/nas/alreem/recyclermanager/DividerItemDecoration.kt
new file mode 100644
--- /dev/null	(date 1690880593014)
+++ b/app/src/main/java/com/nas/alreem/recyclermanager/DividerItemDecoration.kt	(date 1690880593014)
@@ -0,0 +1,24 @@
+package com.nas.alreem.recyclermanager
+
+import android.graphics.Canvas
+import android.graphics.drawable.Drawable
+import androidx.recyclerview.widget.RecyclerView
+import androidx.recyclerview.widget.RecyclerView.ItemDecoration
+
+class DividerItemDecoration(private val mDivider: Drawable) :
+    ItemDecoration() {
+    override fun onDrawOver(canvas: Canvas, parent: RecyclerView, state: RecyclerView.State) {
+        val left = parent.paddingLeft
+        val right = parent.width - parent.paddingRight
+        val childCount = parent.childCount
+        for (i in 0 until childCount) {
+            val child = parent.getChildAt(i)
+            val params = child
+                .layoutParams as RecyclerView.LayoutParams
+            val top = child.bottom + params.bottomMargin
+            val bottom = top + mDivider.intrinsicHeight
+            mDivider.setBounds(left, top, right, bottom)
+            mDivider.draw(canvas)
+        }
+    }
+}
\ No newline at end of file
Index: app/src/main/java/com/nas/alreem/activity/about_us/adapter/FacilityRecyclerAdapterNew.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/nas/alreem/activity/about_us/adapter/FacilityRecyclerAdapterNew.kt b/app/src/main/java/com/nas/alreem/activity/about_us/adapter/FacilityRecyclerAdapterNew.kt
new file mode 100644
--- /dev/null	(date 1690880592935)
+++ b/app/src/main/java/com/nas/alreem/activity/about_us/adapter/FacilityRecyclerAdapterNew.kt	(date 1690880592935)
@@ -0,0 +1,58 @@
+package com.nas.alreem.activity.about_us.adapter
+
+import android.content.Context
+import android.view.LayoutInflater
+import android.view.View
+import android.view.ViewGroup
+import android.widget.ImageView
+import android.widget.TextView
+import androidx.recyclerview.widget.RecyclerView
+import com.nas.alreem.R
+import com.nas.alreem.fragment.about_us.model.AboutUsDataModel
+
+class FacilityRecyclerAdapterNew(
+    private val mContext: Context,
+    mnNewsLetterModelArrayList: ArrayList<AboutUsDataModel>
+) :
+    RecyclerView.Adapter<FacilityRecyclerAdapterNew.MyViewHolder>() {
+    private val mnNewsLetterModelArrayList: ArrayList<AboutUsDataModel>
+    var dept: String? = null
+
+    inner class MyViewHolder(view: View) : RecyclerView.ViewHolder(view) {
+        var imageIcon: ImageView
+        var pdfTitle: TextView
+
+        init {
+            imageIcon = view.findViewById<View>(R.id.imageIcon) as ImageView
+            pdfTitle = view.findViewById<View>(R.id.pdfTitle) as TextView
+        }
+    }
+
+    init {
+        this.mnNewsLetterModelArrayList = mnNewsLetterModelArrayList
+    }
+
+    override fun onCreateViewHolder(parent: ViewGroup, viewType: Int): MyViewHolder {
+        val itemView: View = LayoutInflater.from(parent.context)
+            .inflate(R.layout.custom_pdf_adapter_row_new, parent, false)
+        return MyViewHolder(itemView)
+    }
+
+    override fun onBindViewHolder(holder: MyViewHolder, position: Int) {
+//        holder.submenu.setText(mnNewsLetterModelArrayList.get(position).getSubmenu());
+        holder.pdfTitle.setText(mnNewsLetterModelArrayList[position].title)
+        holder.imageIcon.visibility = View.GONE
+        /*  if (mnNewsLetterModelArrayList.get(position).getItemPdfUrl().endsWith(".pdf")) {
+            holder.imageIcon.setBackgroundResource(R.drawable.pdfdownloadbutton);
+        }
+        else
+        {
+            holder.imageIcon.setBackgroundResource(R.drawable.webcontentviewbutton);
+
+        }*/
+    }
+
+    override fun getItemCount(): Int {
+        return mnNewsLetterModelArrayList.size
+    }
+}
\ No newline at end of file
Index: app/src/main/res/layout/activity_facility_grid.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/activity_facility_grid.xml b/app/src/main/res/layout/activity_facility_grid.xml
new file mode 100644
--- /dev/null	(date 1690880592989)
+++ b/app/src/main/res/layout/activity_facility_grid.xml	(date 1690880592989)
@@ -0,0 +1,240 @@
+<?xml version="1.0" encoding="utf-8"?>
+<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:id="@+id/relMain"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:background="@color/white"
+    tools:context="${relativePackage}.${activityClass}">
+
+    <RelativeLayout
+        android:id="@+id/relativeHeader"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:layout_alignParentTop="true" />
+    <include
+        android:id="@+id/includeRel"
+        layout="@layout/layout_activity_header" />
+    <LinearLayout
+        android:layout_width="match_parent"
+        android:layout_height="match_parent"
+        android:layout_below="@+id/includeRel"
+        android:orientation="vertical"
+        android:weightSum="100">
+
+<!--
+        <com.mobatia.naisapp.manager.NonSwipeableViewPager
+            android:id="@+id/bannerImagePager"
+            android:layout_width="match_parent"
+            android:layout_height="0dp"
+            android:layout_weight="30"
+            android:background="@drawable/facilities_banner" />
+-->
+        <ImageView
+            android:id="@+id/bannerImagePager"
+            android:layout_width="match_parent"
+            android:layout_height="0dp"
+            android:layout_weight="30"
+            android:background="@drawable/default_banner"/>
+
+        <RelativeLayout
+            android:layout_width="match_parent"
+            android:layout_height="0dp"
+            android:layout_marginLeft="10dp"
+            android:layout_marginRight="10dp"
+            android:layout_weight="70">
+
+            <ScrollView
+                android:layout_width="match_parent"
+                android:layout_height="match_parent"
+                android:overScrollMode="never"
+
+                android:scrollbars="none">
+
+                <RelativeLayout
+                    android:layout_width="match_parent"
+                    android:layout_height="wrap_content">
+
+                    <RelativeLayout
+                        android:id="@+id/title"
+                        android:layout_width="match_parent"
+                        android:layout_marginTop="5dp"
+                        android:layout_height="wrap_content">
+
+                        <ImageView
+                            android:id="@+id/sendEmail"
+                            android:layout_width="35dp"
+                            android:layout_height="35dp"
+                            android:layout_alignParentRight="true"
+                            android:src="@drawable/mailiconpe"
+                            android:visibility="visible" />
+
+                        <com.nas.alreem.commonviews.CustomFontSansProTextBlackSemiBold
+                            android:id="@+id/descriptionTitle"
+                            android:layout_width="match_parent"
+                            android:layout_height="wrap_content"
+                            android:layout_centerVertical="true"
+                            android:layout_marginRight="10dp"
+                            android:layout_toLeftOf="@+id/mailImageView"
+                            android:singleLine="true"
+                            android:text="@string/introduction"
+                            android:textColor="@color/black"
+                            android:textSize="16sp"
+                            android:visibility="visible" />
+                    </RelativeLayout>
+
+
+                    <com.nas.alreem.commonviews.CustomFontSansProTextBlack
+                        android:id="@+id/descriptionTV"
+                        android:layout_width="match_parent"
+                        android:layout_height="wrap_content"
+                        android:layout_below="@+id/title"
+                        android:layout_marginTop="5dp"
+                        android:text="Introduction"
+                        android:textColor="@color/black"
+                        android:textSize="16sp"
+                        android:visibility="gone" />
+                    <com.nas.alreem.commonviews.CustomTextViewRegular
+                        android:layout_width="wrap_content"
+                        android:layout_height="wrap_content"
+                        android:text="http://www.nordangliaeducation.com/our-schools/dubai/our-school/our-uniform"
+                        android:layout_marginLeft="10dp"
+                        android:singleLine="true"
+                        android:id="@+id/weburl"
+                        android:visibility="gone"
+                        android:layout_below="@+id/descriptionTV"
+                        android:layout_marginTop="10dp"
+                        android:layout_marginRight="10dp"
+                        android:textColor="@color/dark_blue"
+                        />
+                    <androidx.recyclerview.widget.RecyclerView
+                        android:id="@+id/mAboutUsListView"
+                        android:layout_width="match_parent"
+                        android:layout_height="match_parent"
+                        android:layout_below="@+id/weburl"
+                        android:layout_marginTop="5dp"
+                        android:background="@color/white"
+                        android:clipToPadding="false"
+                        android:overScrollMode="never"
+                        android:scrollbars="vertical" />
+                </RelativeLayout>
+            </ScrollView>
+        </RelativeLayout>
+
+
+    </LinearLayout>
+
+
+</RelativeLayout>
+<!--
+<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:background="@android:color/white">
+    <RelativeLayout
+        android:id="@+id/relativeHeader"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:layout_alignParentTop="true" />
+    <LinearLayout
+        android:layout_width="match_parent"
+        android:layout_height="match_parent"
+        android:layout_below="@+id/relativeHeader"
+        android:orientation="vertical"
+        android:weightSum="100">
+
+        <com.mobatia.naisapp.manager.NonSwipeableViewPager
+            android:id="@+id/bannerImageViewPager"
+            android:layout_width="match_parent"
+            android:layout_height="0dp"
+            android:layout_weight="30"
+            android:background="@drawable/staffdirectory" />
+
+        &lt;!&ndash;<ListView
+            android:id="@+id/mStaffDirectoryListView"
+            style="@style/ListStyleBlackTextTransparentSelector"
+            android:layout_width="match_parent"
+            android:layout_height="0dp"
+            android:layout_marginLeft="10dp"
+            android:layout_marginRight="10dp"
+            android:layout_weight="60" />&ndash;&gt;
+     &lt;!&ndash;   <android.support.v7.widget.RecyclerView
+            android:id="@+id/mStaffDirectoryListView"
+            android:layout_width="match_parent"
+            android:layout_height="0dp"
+            android:layout_weight="70"
+            android:overScrollMode="never"
+            android:layout_marginLeft="10dp"
+            android:layout_marginRight="10dp"
+            android:clipToPadding="false"
+            android:scrollbars="vertical"
+            android:background="@color/white"/>&ndash;&gt;
+        <LinearLayout
+            android:layout_width="match_parent"
+            android:layout_height="0dp"
+            android:layout_weight="20"
+            android:orientation="vertical">
+            <RelativeLayout
+                android:layout_width="match_parent"
+                android:layout_height="wrap_content"
+                android:orientation="horizontal"
+                >
+                <com.mobatia.naisapp.manager.CustomFontSansProTextBlackBold
+                    android:layout_width="wrap_content"
+                    android:layout_height="wrap_content"
+                    android:id="@+id/introduction"
+                    android:text="@string/introduction"
+                    android:layout_alignParentLeft="true"
+                    android:layout_centerHorizontal="true"
+                    android:layout_margin="10dp"
+                    />
+                <ImageView
+                    android:id="@+id/sendEmail"
+                    android:layout_width="wrap_content"
+                    android:layout_height="wrap_content"
+                    android:src="@drawable/emailalerticon"
+                    android:layout_margin="10dp"
+                    android:layout_centerHorizontal="true"
+                    android:background="@color/split_bg"
+                    android:layout_alignParentRight="true"/>
+            </RelativeLayout>
+            <LinearLayout
+                android:layout_width="match_parent"
+                android:layout_height="wrap_content"
+                android:orientation="vertical">
+                <com.mobatia.naisapp.manager.CustomFontSansProTextBlack
+                    android:layout_width="match_parent"
+                    android:layout_height="wrap_content"
+                    android:id="@+id/description"
+                    android:layout_marginLeft="10dp"
+                    android:layout_marginRight="10dp"
+                    android:text="@string/lores_ipsum"/>
+                <com.mobatia.naisapp.manager.CustomFontSansProTextWhiteWithoutColor
+                    android:layout_width="wrap_content"
+                    android:layout_height="wrap_content"
+                    android:text="http://www.nordangliaeducation.com/our-schools/dubai/our-school/our-uniform"
+                    android:layout_marginLeft="10dp"
+                    android:singleLine="true"
+                    android:id="@+id/weburl"
+                    android:visibility="gone"
+                    android:layout_marginTop="10dp"
+                    android:layout_marginRight="10dp"
+                    android:textColor="@color/dark_blue"
+                    />
+            </LinearLayout>
+        </LinearLayout>
+
+        <GridView
+            android:id="@+id/mAboutUsListView"
+            android:layout_width="match_parent"
+            android:layout_height="0dp"
+            android:layout_marginLeft="10dp"
+            android:layout_marginRight="10dp"
+            android:layout_weight="50"
+            android:columnWidth="45dp"
+            android:listSelector="@android:color/transparent"
+            android:numColumns="auto_fit"
+            />
+    </LinearLayout>
+
+</RelativeLayout>-->
Index: app/src/main/java/com/nas/alreem/activity/about_us/FacilityActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/nas/alreem/activity/about_us/FacilityActivity.kt b/app/src/main/java/com/nas/alreem/activity/about_us/FacilityActivity.kt
new file mode 100644
--- /dev/null	(date 1690880592956)
+++ b/app/src/main/java/com/nas/alreem/activity/about_us/FacilityActivity.kt	(date 1690880592956)
@@ -0,0 +1,337 @@
+package com.nas.alreem.activity.about_us
+
+import android.app.Activity
+import android.app.Dialog
+import android.content.Context
+import android.content.Intent
+import android.graphics.Color
+import android.graphics.drawable.ColorDrawable
+import android.os.Bundle
+import android.util.Log
+import android.view.View
+import android.view.Window
+import android.widget.*
+import androidx.recyclerview.widget.LinearLayoutManager
+import androidx.recyclerview.widget.RecyclerView
+import com.bumptech.glide.Glide
+import com.nas.alreem.R
+import com.nas.alreem.activity.about_us.adapter.FacilityRecyclerAdapterNew
+import com.nas.alreem.activity.home.HomeActivity
+import com.nas.alreem.activity.login.model.SignUpResponseModel
+import com.nas.alreem.constants.*
+import com.nas.alreem.fragment.about_us.model.AboutUsDataModel
+import com.nas.alreem.fragment.payments.model.SendEmailApiModel
+import com.nas.alreem.recyclermanager.DividerItemDecoration
+import com.nas.alreem.recyclermanager.ItemOffsetDecoration
+import com.nas.alreem.recyclermanager.RecyclerItemListener
+import com.nas.alreem.rest.ApiClient
+import org.json.JSONObject
+import retrofit2.Call
+import retrofit2.Callback
+import retrofit2.Response
+
+class FacilityActivity : Activity(){
+    var extras: Bundle? = null
+    var aboutusModelArrayList: ArrayList<AboutUsDataModel> = ArrayList<AboutUsDataModel>()
+    lateinit var  mContext: Context
+
+    //    private GridView mAboutUsList;
+    private var mAboutUsList: RecyclerView? = null
+    private val mBannerImage: ImageView? = null
+    private var sendEmail: ImageView? = null
+    var mTitleTextView: TextView? = null
+    var weburl: TextView? = null
+    var description: TextView? = null
+    var descriptionTitle: TextView? = null
+
+    //	private CustomAboutUsAdapter mAdapter;
+    private var mAboutUsListArray: ArrayList<AboutUsDataModel>? = null
+    var relMain: RelativeLayout? = null
+    var desc: String? = null
+    var title: String? = null
+    var bannerimg: String? = null
+    lateinit var bannerImagePager: ImageView
+
+    //    ViewPager bannerImagePager;
+    var relativeHeader: RelativeLayout? = null
+
+    var back: ImageView? = null
+    var home: ImageView? = null
+    var bannerUrlImageArray = ArrayList<String?>()
+    var contactEmail: String? = null
+    var text_dialog: EditText? = null
+    var text_content: EditText? = null
+    override fun onCreate(savedInstanceState: Bundle?) {
+        super.onCreate(savedInstanceState)
+        setContentView(R.layout.activity_facility_grid)
+        extras = intent.extras
+        initUI()
+    }
+
+    private fun initUI() {
+        if (extras != null) {
+            mAboutUsListArray = extras!!
+                .getSerializable("array") as ArrayList<AboutUsDataModel>?
+            desc = extras!!.getString("desc")
+            title = extras!!.getString("title")
+            bannerimg = extras!!.getString("banner_image")
+            println("Image url--$bannerimg")
+            if (bannerimg != "") {
+                bannerUrlImageArray.add(bannerimg)
+            }
+        }
+        relativeHeader = findViewById<View>(R.id.relativeHeader) as RelativeLayout
+        bannerImagePager = findViewById<View>(R.id.bannerImagePager) as ImageView
+        //        bannerImagePager= (ViewPager) findViewById(R.id.bannerImagePager);
+
+
+
+        back!!.setOnClickListener {
+            //AppUtils.hideKeyBoard(mContext)
+            finish()
+        }
+
+        home!!.setOnClickListener {
+            val `in` = Intent(
+                mContext,
+                HomeActivity::class.java
+            )
+            `in`.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP)
+            startActivity(`in`)
+        }
+        //        mAboutUsList = (GridView) findViewById(R.id.mAboutUsListView);
+        mAboutUsList = findViewById<View>(R.id.mAboutUsListView) as RecyclerView
+        description = findViewById<View>(R.id.descriptionTV) as TextView
+        descriptionTitle = findViewById<View>(R.id.descriptionTitle) as TextView
+        if (desc.equals("", ignoreCase = true)) {
+            description!!.visibility = View.GONE
+            descriptionTitle!!.visibility = View.GONE
+        } else {
+            description!!.text = desc
+            descriptionTitle!!.visibility = View.GONE
+            //			descriptionTitle.setVisibility(View.VISIBLE);
+            description!!.visibility = View.VISIBLE
+        }
+        weburl = findViewById<View>(R.id.weburl) as TextView
+        sendEmail = findViewById<View>(R.id.sendEmail) as ImageView
+        sendEmail!!.visibility = View.GONE
+
+//		mBannerImage = (ImageView) mRootView.findViewById(R.id.bannerImageView);
+        /*relMain = (RelativeLayout) findViewById(R.id.relMain);
+        relMain.setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View v) {
+
+            }
+        });*/
+
+/* mAbsenceListView.setHasFixedSize(true);
+        LinearLayoutManager llm = new LinearLayoutManager(mContext);
+        llm.setOrientation(LinearLayoutManager.VERTICAL);
+        mAbsenceListView.setLayoutManager(llm);
+        ItemOffsetDecoration itemDecoration = new ItemOffsetDecoration(mContext, 2);
+        mAbsenceListView.addItemDecoration(itemDecoration);*/mAboutUsList!!.setHasFixedSize(true)
+        //        mNewsLetterListView.addItemDecoration(new DividerItemDecoration(getResources().getDrawable(R.drawable.list_divider)));
+        /*    GridLayoutManager recyclerViewLayout= new GridLayoutManager(mContext, 4);
+        int spacing = 5; // 50px
+        ItemOffsetDecoration itemDecoration = new ItemOffsetDecoration(mContext,spacing);
+        mAboutUsList.addItemDecoration(itemDecoration);
+        mAboutUsList.setLayoutManager(recyclerViewLayout);*/
+        val llm = LinearLayoutManager(mContext)
+        llm.orientation = LinearLayoutManager.VERTICAL
+        mAboutUsList!!.layoutManager = llm
+        mAboutUsList!!.addItemDecoration(DividerItemDecoration(resources.getDrawable(R.drawable.list_divider_teal)))
+        val itemDecoration = ItemOffsetDecoration(mContext, 2)
+        mAboutUsList!!.addItemDecoration(itemDecoration)
+        if (bannerimg != "") {
+//            bannerImagePager.setAdapter(new ImagePagerDrawableAdapter(bannerUrlImageArray, mContext));
+            Glide.with(mContext).load(ConstantFunctions.replace(bannerimg!!)).centerCrop()
+                .into(bannerImagePager)
+        }
+        val mFacilityRecyclerAdapter = FacilityRecyclerAdapterNew(mContext, mAboutUsListArray!!)
+        mAboutUsList!!.adapter = mFacilityRecyclerAdapter
+        mAboutUsList!!.addOnItemTouchListener(
+            RecyclerItemListener(
+                applicationContext, mAboutUsList!!,
+                object : RecyclerItemListener.RecyclerTouchListener {
+                    override fun onClickItem(v: View?, position: Int) {
+                        if (mAboutUsListArray!!.size <= 1) {
+                            if (mAboutUsListArray!![position].url.endsWith(".pdf")) {
+                                val intent = Intent(
+                                    mContext,
+                                    PDFViewerActivity::class.java
+                                )
+                                intent.putExtra("pdf_url", "Facilities")
+                                startActivity(intent)
+                            } else {
+                                val intent = Intent(
+                                    mContext,
+                                    WebLinkActivity::class.java
+                                )
+                                intent.putExtra(
+                                    "url",
+                                    mAboutUsListArray!![position].url
+                                )
+                                intent.putExtra("tab_type", "Facilities")
+                                startActivity(intent)
+                            }
+                        } else {
+                            if (mAboutUsListArray!![position].url.endsWith(".pdf")) {
+                                val intent = Intent(
+                                    mContext,
+                                    PDFViewerActivity::class.java
+                                )
+                                intent.putExtra(
+                                    "pdf_url",
+                                    mAboutUsListArray!![position].url
+                                )
+                                startActivity(intent)
+                            } else {
+                                val intent = Intent(
+                                    mContext,
+                                    WebLinkActivity::class.java
+                                )
+                                intent.putExtra(
+                                    "url",
+                                    mAboutUsListArray!![position].url
+                                )
+                                intent.putExtra("tab_type", "Facilities")
+                                startActivity(intent)
+                            }
+                        }
+                    }
+
+                    override fun onLongClickItem(v: View?, position: Int) {
+                        println("On Long Click Item interface")
+                    }
+                })
+        )
+        //        mAboutUsList.setOnItemClickListener(new AdapterView.OnItemClickListener() {
+//            @Override
+//            public void onItemClick(AdapterView<?> parent, View view, int position, long id) {
+//               if(mAboutUsListArray.get(position).getItemPdfUrl().endsWith(".pdf")){
+//                   Intent intent = new Intent(mContext, PdfReaderActivity.class);
+//                   intent.putExtra("pdf_url",mAboutUsListArray.get(position).getItemPdfUrl());
+//                   startActivity(intent);
+//               }
+//               else
+//               {
+//                   Intent intent = new Intent(mContext, LoadUrlWebViewActivity.class);
+//                   intent.putExtra("url",mAboutUsListArray.get(position).getItemPdfUrl());
+//                   intent.putExtra("tab_type",mAboutUsListArray.get(position).getItemTitle());
+//                   startActivity(intent);
+//               }
+//            }
+//        });
+        sendEmail!!.setOnClickListener {
+            showSendEmailDialog(mContext!!)
+        }
+    }
+
+
+    private fun showSendEmailDialog(mContext: Context)
+    {
+        val dialog = Dialog(mContext)
+        dialog.requestWindowFeature(Window.FEATURE_NO_TITLE)
+        dialog.setCancelable(true)
+        dialog.setContentView(R.layout.dialog_send_email)
+        dialog.window!!.setBackgroundDrawableResource(android.R.color.transparent)
+        val btn_submit = dialog.findViewById<Button>(R.id.submitButton)
+        val btn_cancel = dialog.findViewById<Button>(R.id.cancelButton)
+        val text_dialog = dialog.findViewById<EditText?>(R.id.text_dialog)
+        val text_content = dialog.findViewById<EditText>(R.id.text_content)
+
+        btn_cancel.setOnClickListener(View.OnClickListener {
+            dialog.dismiss()
+        })
+
+        btn_submit.setOnClickListener {
+            if (text_dialog.text.toString().trim().equals("")) {
+                DialogFunctions.commonErrorAlertDialog(
+                    mContext.resources.getString(R.string.alert), resources.getString(R.string.enter_subject),
+                    mContext
+                )
+
+
+            } else {
+                if (text_content.text.toString().trim().equals("")) {
+                    DialogFunctions.commonErrorAlertDialog(
+                        mContext.resources.getString(R.string.alert), resources.getString(R.string.enter_content),
+                        mContext
+                    )
+
+                } else {
+                    // progressDialog.visibility = View.VISIBLE
+
+                    callSendEmailToStaffApi(text_dialog.text.toString().trim(), text_content.text.toString().trim(),
+                        contactEmail!!, dialog)
+                }
+            }
+        }
+        dialog.show()
+    }
+    fun callSendEmailToStaffApi(
+        title: String, message: String, staffEmail: String, dialog: Dialog)
+    {
+        val sendMailBody = SendEmailApiModel( staffEmail, title, message)
+        val call: Call<SignUpResponseModel> = ApiClient.getClient.sendEmailStaff(sendMailBody, "Bearer " + PreferenceManager.getaccesstoken(mContext!!))
+        call.enqueue(object : Callback<SignUpResponseModel> {
+            override fun onFailure(call: Call<SignUpResponseModel>, t: Throwable) {
+                Log.e("Failed", t.localizedMessage)
+                //progressDialog.visibility = View.GONE
+            }
+
+            override fun onResponse(call: Call<SignUpResponseModel>, response: Response<SignUpResponseModel>) {
+                val responsedata = response.body()
+                //progressDialog.visibility = View.GONE
+                Log.e("Response Signup", responsedata.toString())
+                if (responsedata != null) {
+                    try {
+
+
+                        if (response.body()!!.status==100) {
+                            dialog.dismiss()
+                            showSuccessAlert(
+                                mContext!!,
+                                "Email sent Successfully ",
+                                "Success",
+                                dialog
+                            )
+                        }else {
+                            DialogFunctions.commonErrorAlertDialog(
+                                mContext!!.resources.getString(R.string.alert),
+                                ConstantFunctions.commonErrorString(response.body()!!.status), mContext!!
+                            )
+
+                        }
+                    } catch (e: Exception) {
+                        e.printStackTrace()
+                    }
+                }
+            }
+
+        })
+    }
+
+
+    fun showSuccessAlert(context: Context, message: String, msgHead: String, mdialog: Dialog) {
+        val dialog = Dialog(context)
+        dialog.requestWindowFeature(Window.FEATURE_NO_TITLE)
+        dialog.window!!.setBackgroundDrawable(ColorDrawable(Color.TRANSPARENT))
+        dialog.setCancelable(false)
+        dialog.setContentView(R.layout.dialog_common_error_alert)
+        var iconImageView = dialog.findViewById(R.id.iconImageView) as ImageView
+        var alertHead = dialog.findViewById(R.id.alertHead) as TextView
+        var text_dialog = dialog.findViewById(R.id.messageTxt) as TextView
+        var btn_Ok = dialog.findViewById(R.id.btn_Ok) as Button
+        text_dialog.text = message
+        alertHead.text = msgHead
+        iconImageView.setImageResource(R.drawable.tick)
+        btn_Ok.setOnClickListener()
+        {
+            dialog.dismiss()
+            mdialog.dismiss()
+        }
+        dialog.show()
+    }
+}
\ No newline at end of file
Index: app/src/main/java/com/nas/alreem/activity/cca/InformationCCAActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.nas.alreem.activity.cca\n\nimport android.content.Context\nimport android.content.Intent\nimport android.os.Bundle\nimport android.util.Log\nimport android.view.View\nimport android.widget.ImageView\nimport android.widget.ProgressBar\nimport android.widget.RelativeLayout\nimport android.widget.TextView\nimport androidx.appcompat.app.AppCompatActivity\nimport androidx.core.content.ContextCompat\nimport androidx.recyclerview.widget.DividerItemDecoration\nimport androidx.recyclerview.widget.LinearLayoutManager\nimport androidx.recyclerview.widget.RecyclerView\nimport com.nas.alreem.R\nimport com.nas.alreem.activity.cca.adapter.InformationRecyclerAdapter\nimport com.nas.alreem.activity.cca.model.CCAInfoRequestModel\nimport com.nas.alreem.activity.cca.model.CCAInfoResponseModel\nimport com.nas.alreem.activity.cca.model.CCaInformationList\nimport com.nas.alreem.activity.home.HomeActivity\nimport com.nas.alreem.constants.*\nimport com.nas.alreem.rest.ApiClient\nimport retrofit2.Call\nimport retrofit2.Callback\nimport retrofit2.Response\n\nclass InformationCCAActivity : AppCompatActivity() {\n    lateinit var mContext: Context\n    lateinit var titleTextView: TextView\n    lateinit var back: ImageView\n    lateinit var backRelative: RelativeLayout\n    lateinit var logoclick: ImageView\n    lateinit var progressBar: ProgressBar\n    var extras: Bundle? = null\n    var tab_type: String? = null\n    var relativeHeader: RelativeLayout? = null\n//    var mStudentSpinner: LinearLayout? = null\n//    var studImg: ImageView? = null\n//    var studName: TextView? = null\n    var mnewsLetterListView: RecyclerView? = null\n//    var textViewYear: TextView? = null\n    var stud_id = \"\"\n    var stud_class = \"\"\n    var stud_name = \"\"\n    var stud_img = \"\"\n    var section = \"\"\n    private val mListViewArray: ArrayList<CCaInformationList> = ArrayList()\n    override fun onCreate(savedInstanceState: Bundle?) {\n        super.onCreate(savedInstanceState)\n        setContentView(R.layout.activity_information_ccaactivity)\n        mContext = this\n        initilaiseUI()\n        logoclick.setOnClickListener {\n            val mIntent = Intent(mContext, HomeActivity::class.java)\n            mIntent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP)\n\n            startActivity(mIntent)\n        }\n        backRelative.setOnClickListener {\n            finish()\n        }\n\n        if (ConstantFunctions.internetCheck(mContext))\n        {\n            getList()\n        }\n        else\n        {\n            DialogFunctions.showInternetAlertDialog(mContext)\n        }\n\n    }\n\n    private fun getList() {\n\n        val body = CCAInfoRequestModel(\"0\",\"10\")\n        val token = PreferenceManager.getaccesstoken(mContext)\n        val call: Call<CCAInfoResponseModel> =\n            ApiClient.getClient.getCCAInfo(body, \"Bearer $token\")\n        progressBar.visibility = View.VISIBLE\n        call.enqueue(object : Callback<CCAInfoResponseModel> {\n            override fun onResponse(\n                call: Call<CCAInfoResponseModel>,\n                response: Response<CCAInfoResponseModel>\n            ) {\n                progressBar.visibility = View.GONE\n\n                if (response.isSuccessful) {\n                    if (response.body() != null) {\n                        if (response.body()!!.status.toString() == \"100\") {\n\n                            if (response.body()!!.data.isNotEmpty()) {\n                                for (i in response.body()!!.data.indices) {\n                                    Log.e(\"respoje\", response.body()!!.data[i]!!.url.toString())\n                                    mListViewArray.add(response.body()!!.data!![i]!!)\n                                }\n                                mnewsLetterListView!!.adapter =\n                                    InformationRecyclerAdapter(mContext, mListViewArray)\n\n                            } else {\n                                ConstantFunctions.showDialogueWithOk(\n                                    mContext,\n                                    getString(R.string.common_error),\n                                    \"Alert\"\n                                )\n                            }\n                        } else {\n                            ConstantFunctions.showDialogueWithOk(\n                                mContext,\n                                getString(R.string.common_error),\n                                \"Alert\"\n                            )\n                        }\n                    } else {\n                        ConstantFunctions.showDialogueWithOk(\n                            mContext,\n                            getString(R.string.common_error),\n                            \"Alert\"\n                        )\n                    }\n                }\n            }\n\n            override fun onFailure(call: Call<CCAInfoResponseModel>, t: Throwable) {\n                progressBar.visibility = View.GONE\n\n                ConstantFunctions.showDialogueWithOk(\n                    mContext,\n                    getString(R.string.common_error),\n                    \"Alert\"\n                )\n            }\n\n\n        })\n    }\n\n    private fun initilaiseUI() {\n        extras = intent.extras\n        if (extras != null) {\n            tab_type = extras!!.getString(\"tab_type\")\n        }\n        progressBar = findViewById(R.id.progress)\n        logoclick = findViewById(R.id.logoClickImgView)\n        backRelative = findViewById(R.id.backRelative)\n        relativeHeader = findViewById<View>(R.id.relativeHeader) as RelativeLayout\n//        mStudentSpinner = findViewById<View>(R.id.studentSpinner) as LinearLayout\n//        studImg = findViewById<View>(R.id.imagicon) as ImageView\n//        studName = findViewById<View>(R.id.studentName) as TextView\n//        textViewYear = findViewById<View>(R.id.textViewYear) as TextView\n        mnewsLetterListView = findViewById<View>(R.id.mnewsLetterListView) as RecyclerView\n        mnewsLetterListView!!.setHasFixedSize(true)\n        val divider = DividerItemDecoration(mContext, DividerItemDecoration.VERTICAL)\n        divider.setDrawable(ContextCompat.getDrawable(mContext,R.drawable.list_divider_teal)!!)\n        mnewsLetterListView!!.addItemDecoration(divider)\n//        mnewsLetterListView!!.addItemDecoration(DividerItemDecoration(resources.getDrawable(R.drawable.list_divider_teal)))\n        logoclick.setOnClickListener {\n            val mIntent = Intent(mContext, HomeActivity::class.java)\n            mIntent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP)\n\n            startActivity(mIntent)\n        }\n        val llm = LinearLayoutManager(this)\n        llm.orientation = LinearLayoutManager.VERTICAL\n        mnewsLetterListView!!.layoutManager = llm\n        mnewsLetterListView!!.addOnItemClickListener(object : OnItemClickListener {\n            override fun onItemClicked(position: Int, view: View) {\n                if (mListViewArray[position].url!!.endsWith(\".pdf\")) {\n                    val intent = Intent(mContext, PDFViewerActivity::class.java)\n                    intent.putExtra(\"Url\", mListViewArray[position].url)\n                    intent.putExtra(\"title\", mListViewArray[position].title)\n                    startActivity(intent)\n                } else {\n                    val intent = Intent(mContext, WebLinkActivity::class.java)\n                    intent.putExtra(\"url\", mListViewArray[position].url)\n                    intent.putExtra(\"heading\", mListViewArray[position].title)\n                    mContext.startActivity(intent)\n                }\n            }\n\n        })\n\n    }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/nas/alreem/activity/cca/InformationCCAActivity.kt b/app/src/main/java/com/nas/alreem/activity/cca/InformationCCAActivity.kt
--- a/app/src/main/java/com/nas/alreem/activity/cca/InformationCCAActivity.kt	(revision 29dbbedb1ce8c3fe2a8032d242fcce101acbc7b5)
+++ b/app/src/main/java/com/nas/alreem/activity/cca/InformationCCAActivity.kt	(date 1690523499336)
@@ -102,7 +102,7 @@
                             } else {
                                 ConstantFunctions.showDialogueWithOk(
                                     mContext,
-                                    getString(R.string.common_error),
+                                    "No Data Found!",
                                     "Alert"
                                 )
                             }
Index: app/src/main/res/layout/activity_cca.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\n<RelativeLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n    android:orientation=\"vertical\"\n    android:background=\"@color/white\">\n\n    <RelativeLayout\n        android:id=\"@+id/relativeHeader\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\"\n        android:layout_alignParentTop=\"true\" >\n        <ImageView\n            android:id=\"@+id/relative_logo_header\"\n            android:layout_width=\"match_parent\"\n            android:src=\"@drawable/titlebar\"\n            android:layout_height=\"wrap_content\" />\n        <ImageView\n            android:id=\"@+id/logoClickImgView\"\n            android:layout_width=\"wrap_content\"\n            android:layout_height=\"wrap_content\"\n            android:layout_centerHorizontal=\"true\"\n            android:layout_alignTop=\"@+id/relative_logo_header\"\n            android:background=\"@drawable/logotransperent\"\n            android:layout_above=\"@+id/heading\" />\n\n        <RelativeLayout\n            android:id=\"@+id/bottomRel\"\n            android:layout_width=\"match_parent\"\n            android:layout_above=\"@+id/heading\"\n            android:layout_alignParentTop=\"true\"\n            android:layout_height=\"wrap_content\" >\n\n\n            <RelativeLayout\n                android:id=\"@+id/backRelative\"\n                android:layout_width=\"45dp\"\n                android:layout_centerVertical=\"true\"\n                android:layout_height=\"45dp\">\n\n                <ImageView\n                    android:id=\"@+id/btn_left\"\n                    android:layout_width=\"wrap_content\"\n                    android:layout_height=\"wrap_content\"\n                    android:layout_alignParentLeft=\"true\"\n                    android:layout_centerVertical=\"true\"\n                    android:background=\"@drawable/back\"\n                    android:visibility=\"visible\" />\n            </RelativeLayout>\n\n            <ImageView\n                android:id=\"@+id/btn_right\"\n                android:layout_width=\"wrap_content\"\n                android:layout_height=\"wrap_content\"\n                android:layout_alignParentRight=\"true\"\n                android:layout_centerVertical=\"true\"\n                android:visibility=\"invisible\"/>\n        </RelativeLayout>\n\n        <com.nas.alreem.commonviews.CustomFontDJ5TextWhite\n            android:id=\"@+id/heading\"\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"40dp\"\n            android:layout_below=\"@id/relative_logo_header\"\n            android:background=\"@color/split_bg\"\n            android:gravity=\"center\"\n            android:paddingTop=\"5dp\"\n            android:paddingBottom=\"5dp\"\n            android:text=\"Enrichment Options\"\n            android:textColor=\"@color/white\"\n            android:textSize=\"17dp\" />\n        <ImageView\n            android:id=\"@+id/btn_info\"\n            android:layout_width=\"35dp\"\n            android:layout_height=\"35dp\"\n            android:layout_alignParentRight=\"true\"\n            android:layout_marginBottom=\"8dp\"\n            android:layout_marginRight=\"2dp\"\n            android:layout_centerVertical=\"true\"\n            android:layout_alignBottom=\"@+id/heading\"\n            android:background=\"@drawable/infoptaicon\"\n            android:visibility=\"invisible\"/>\n\n    </RelativeLayout>\n    <LinearLayout\n        android:layout_above=\"@+id/info\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"match_parent\"\n        android:layout_below=\"@+id/relativeHeader\"\n        android:orientation=\"vertical\">\n        <TextView\n            android:id=\"@+id/select\"\n            android:layout_width=\"wrap_content\"\n            android:layout_height=\"wrap_content\"\n            android:gravity=\"left|center\"\n            android:text=\"Select your child:\"\n            android:layout_marginLeft=\"10dp\"\n            android:layout_marginRight=\"10dp\"\n            android:layout_marginTop=\"10dp\"\n            android:textSize=\"16sp\" />\n        <LinearLayout\n            android:id=\"@+id/studentSpinner\"\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"45dp\"\n            android:layout_gravity=\"center\"\n            android:layout_marginBottom=\"10dp\"\n            android:layout_marginLeft=\"10dp\"\n            android:layout_marginRight=\"10dp\"\n            android:layout_marginTop=\"10dp\"\n            android:background=\"@drawable/event_spinnerbg\"\n            android:gravity=\"center\"\n            android:orientation=\"horizontal\"\n            android:weightSum=\"100\">\n\n            <com.github.siyamed.shapeimageview.CircularImageView\n                android:id=\"@+id/imagicon\"\n                android:layout_width=\"35dp\"\n                android:layout_height=\"35dp\"\n                android:layout_margin=\"5dp\"\n                android:gravity=\"center\"\n                android:padding=\"5dp\"\n                android:scaleType=\"fitCenter\"\n                android:src=\"@drawable/boy\"\n                app:siBorderColor=\"#A0DAE5\"\n                app:siBorderWidth=\"1dp\" />\n\n            <TextView\n                android:id=\"@+id/studentName\"\n                android:layout_width=\"0dp\"\n                android:layout_height=\"match_parent\"\n                android:layout_weight=\"80\"\n                android:gravity=\"left|center\"\n                android:paddingLeft=\"10dp\"\n                android:textColor=\"@color/black\"\n                android:text=\"Select a child\"\n                android:textSize=\"16sp\" />\n\n            <View\n                android:layout_width=\"0dp\"\n                android:layout_height=\"match_parent\"\n                android:layout_weight=\"8\" />\n\n            <ImageView\n                android:layout_width=\"0dp\"\n                android:layout_height=\"30dp\"\n                android:layout_gravity=\"right|center\"\n                android:layout_weight=\"12\"\n                android:src=\"@drawable/arrowdownnew\"\n                android:visibility=\"visible\" />\n\n        </LinearLayout>\n        <TextView\n\n            android:id=\"@+id/textViewYear\"\n            android:layout_width=\"wrap_content\"\n            android:layout_height=\"wrap_content\"\n            android:text=\"Class:\"\n            android:layout_marginTop=\"5dp\"\n            android:layout_marginLeft=\"10dp\"\n            android:layout_marginRight=\"10dp\"\n            android:layout_marginBottom=\"5dp\"\n            android:textSize=\"16sp\"\n            android:visibility=\"gone\"\n            android:textColor=\"#ff000000\" />\n        <View\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"2dp\"\n            android:layout_marginLeft=\"10dp\"\n            android:layout_marginRight=\"10dp\"\n            android:visibility=\"gone\"\n\n            android:background=\"@color/light_grey\"\n            />\n\n        <TextView\n            android:textSize=\"16sp\"\n            android:id=\"@+id/enterTextView\"\n            android:layout_width=\"wrap_content\"\n            android:layout_height=\"wrap_content\"\n            android:text=\"Select Enrichment\"\n            android:layout_marginTop=\"5dp\"\n            android:visibility=\"visible\"\n            android:layout_marginLeft=\"10dp\"\n            android:layout_marginRight=\"10dp\"\n            android:textColor=\"#ff000000\" />\n\n        <androidx.recyclerview.widget.RecyclerView\n            android:id=\"@+id/recycler_view_cca\"\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"match_parent\"\n            android:overScrollMode=\"never\"\n            android:background=\"@color/white\"\n            android:layout_margin=\"10dp\"\n            android:scrollbars=\"vertical\" />\n    </LinearLayout>\n    <ImageView\n        android:id=\"@+id/info\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\"\n        android:layout_alignParentBottom=\"true\"\n        android:background=\"@color/background\"\n        android:src=\"@drawable/infobanner\"/>\n    <!--infobanner-->\n    <ProgressBar\n        android:id=\"@+id/progress\"\n        android:layout_width=\"40dp\"\n        android:layout_height=\"40dp\"\n        android:layout_centerInParent=\"true\"\n        android:indeterminateDrawable=\"@anim/customspinner\"\n        android:visibility=\"gone\"\n        app:layout_constraintBottom_toBottomOf=\"parent\"\n        app:layout_constraintEnd_toEndOf=\"parent\"\n        app:layout_constraintStart_toStartOf=\"parent\"\n        app:layout_constraintTop_toTopOf=\"parent\" />\n\n</RelativeLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/activity_cca.xml b/app/src/main/res/layout/activity_cca.xml
--- a/app/src/main/res/layout/activity_cca.xml	(revision 29dbbedb1ce8c3fe2a8032d242fcce101acbc7b5)
+++ b/app/src/main/res/layout/activity_cca.xml	(date 1690554390474)
@@ -89,7 +89,7 @@
         android:layout_height="match_parent"
         android:layout_below="@+id/relativeHeader"
         android:orientation="vertical">
-        <TextView
+        <com.nas.alreem.commonviews.CustomTextViewRegular
             android:id="@+id/select"
             android:layout_width="wrap_content"
             android:layout_height="wrap_content"
@@ -173,12 +173,12 @@
             android:background="@color/light_grey"
             />
 
-        <TextView
+        <com.nas.alreem.commonviews.CustomTextViewRegular
             android:textSize="16sp"
             android:id="@+id/enterTextView"
             android:layout_width="wrap_content"
             android:layout_height="wrap_content"
-            android:text="Select Enrichment"
+            android:text="Select EAP"
             android:layout_marginTop="5dp"
             android:visibility="visible"
             android:layout_marginLeft="10dp"
Index: app/src/main/java/com/nas/alreem/activity/cca/CCA_Activity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.nas.alreem.activity.cca\n\nimport android.app.Dialog\nimport android.content.Context\nimport android.content.Intent\nimport android.graphics.Color\nimport android.graphics.drawable.ColorDrawable\nimport android.os.Build\nimport android.os.Bundle\nimport android.util.Log\nimport android.view.View\nimport android.view.Window\nimport android.widget.*\nimport androidx.appcompat.app.AppCompatActivity\nimport androidx.core.content.ContextCompat\nimport androidx.recyclerview.widget.DividerItemDecoration\nimport androidx.recyclerview.widget.GridLayoutManager\nimport androidx.recyclerview.widget.LinearLayoutManager\nimport androidx.recyclerview.widget.RecyclerView\nimport com.bumptech.glide.Glide\nimport com.bumptech.glide.load.engine.DiskCacheStrategy\nimport com.bumptech.glide.load.resource.bitmap.CircleCrop\nimport com.nas.alreem.R\nimport com.nas.alreem.activity.cca.adapter.CCAsListActivityAdapter\nimport com.nas.alreem.activity.cca.model.*\nimport com.nas.alreem.activity.home.HomeActivity\nimport com.nas.alreem.activity.payments.adapter.StudentListAdapter\nimport com.nas.alreem.activity.payments.model.StudentList\nimport com.nas.alreem.activity.payments.model.StudentListModel\nimport com.nas.alreem.constants.ConstantFunctions\nimport com.nas.alreem.constants.OnItemClickListener\nimport com.nas.alreem.constants.PreferenceManager\nimport com.nas.alreem.constants.addOnItemClickListener\nimport com.nas.alreem.fragment.cca.CCAFragment\nimport com.nas.alreem.rest.ApiClient\nimport retrofit2.Call\nimport retrofit2.Callback\nimport retrofit2.Response\n\nclass CCA_Activity : AppCompatActivity() {\n    lateinit var mContext: Context\n    lateinit var titleTextView: TextView\n    lateinit var back: ImageView\n    lateinit var backRelative: RelativeLayout\n    lateinit var logoclick: ImageView\n    lateinit var progress: ProgressBar\n    var studentListArrayList = ArrayList<StudentList>()\n    var mCCAmodelArrayList: ArrayList<CCAModel>? = ArrayList()\n   var CCADetailModelArrayList: ArrayList<CCADetailModel>? = ArrayList()\n    var CCAchoiceModelArrayList: ArrayList<CCAchoiceModel>? = ArrayList()\n    var CCAchoiceModelArrayList2: ArrayList<CCAchoiceModel>? = ArrayList()\n   lateinit var studentName: TextView\n   lateinit var textViewYear: TextView\n   lateinit var enterTextView: TextView\n    var stud_id = \"\"\n    var stud_class = \"\"\n    var stud_name = \"\"\n    var mStudentSpinner: LinearLayout? = null\n    var relativeHeader: RelativeLayout? = null\n    lateinit var student_Name: String\n    lateinit var studentImg: String\n    lateinit var studentClass: String\n   lateinit var studImg: ImageView\n    var stud_img = \"\"\n\n    var tab_type = \"ECA Options\"\n    var extras: Bundle? = null\n    var recycler_review: RecyclerView? = null\n    var recyclerViewLayoutManager: GridLayoutManager? = null\n    var mCCAsActivityAdapter: CCAsListActivityAdapter? = null\n    override fun onCreate(savedInstanceState: Bundle?) {\n        super.onCreate(savedInstanceState)\n        setContentView(R.layout.activity_cca)\n        mContext = this\n        initilaiseUI()\n        logoclick.setOnClickListener {\n            val mIntent = Intent(mContext, HomeActivity::class.java)\n            mIntent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP)\n\n            startActivity(mIntent)\n        }\n        backRelative.setOnClickListener {\n            finish()\n        }\n        mStudentSpinner!!.setOnClickListener { showStudentsList(mContext,studentListArrayList) }\n        var internetCheck = ConstantFunctions.internetCheck(mContext)\n        if (internetCheck) {\n            getStudentList()\n\n        } else {\n            //  InternetCheckClass.showSuccessInternetAlert(mContext)\n        }\n    }\n\n    private fun showStudentsList(mContext: Context, mStudentArray: ArrayList<StudentList>) {\n        val dialog = Dialog(mContext)\n        dialog.requestWindowFeature(Window.FEATURE_NO_TITLE)\n        dialog.setContentView(R.layout.dialogue_student_list)\n        dialog.window!!.setBackgroundDrawable(ColorDrawable(Color.TRANSPARENT))\n        val dialogDismiss = dialog.findViewById<View>(R.id.btn_dismiss) as Button\n        val iconImageView = dialog.findViewById<View>(R.id.iconImageView) as ImageView\n        iconImageView.setImageResource(R.drawable.boy)\n        val socialMediaList =\n            dialog.findViewById<View>(R.id.studentListRecycler) as RecyclerView\n        //if(mSocialMediaArray.get())\n        //if(mSocialMediaArray.get())\n        val sdk = Build.VERSION.SDK_INT\n        if (sdk < Build.VERSION_CODES.JELLY_BEAN) {\n            dialogDismiss.setBackgroundDrawable(mContext.resources.getDrawable(R.drawable.button))\n        } else {\n            dialogDismiss.background = mContext.resources.getDrawable(R.drawable.button)\n        }\n\n        val divider = DividerItemDecoration(mContext, DividerItemDecoration.VERTICAL)\n        divider.setDrawable(ContextCompat.getDrawable(mContext,R.drawable.list_divider_teal)!!)\n        socialMediaList!!.addItemDecoration(divider)\n\n        socialMediaList.setHasFixedSize(true)\n        val llm = LinearLayoutManager(mContext)\n        llm.orientation = LinearLayoutManager.VERTICAL\n        socialMediaList.layoutManager = llm\n\n        val studentAdapter = StudentListAdapter(mContext, mStudentArray)\n        socialMediaList.adapter = studentAdapter\n        dialogDismiss.setOnClickListener { dialog.dismiss() }\n        socialMediaList.addOnItemClickListener(object :OnItemClickListener{\n            override fun onItemClicked(position: Int, view: View) {\n                dialog.dismiss()\n                studentName!!.setText(mStudentArray!!.get(position).name)\n                stud_id = mStudentArray!!.get(position).id.toString()\n                stud_name = mStudentArray.get(position).name.toString()\n                stud_class = mStudentArray.get(position).studentClass.toString()\n                stud_img = mStudentArray.get(position).photo.toString()\n                textViewYear!!.text = \"Class : \" + mStudentArray.get(position).studentClass\n               // PreferenceManager.setStudentID(mContext,stud_id)\n\n                if (stud_img != \"\") {\n                    Glide.with(mContext) //1\n                        .load(stud_img)\n                        .placeholder(R.drawable.student)\n                        .error(R.drawable.student)\n                        .skipMemoryCache(true) //2\n                        .diskCacheStrategy(DiskCacheStrategy.NONE) //3\n                        .transform(CircleCrop()) //4\n                        .into(studImg!!)\n                } else {\n                    studImg!!.setImageResource(R.drawable.boy)\n                }\n                PreferenceManager.setCCAStudentIdPosition(\n                    mContext,\n                    position.toString() + \"\"\n                )\n                getCCAListAPI(stud_id)\n            }\n\n        })\n\n        dialog.show()\n    }\n\n    private fun getStudentList() {\n        progress.visibility = View.VISIBLE\n        val token = PreferenceManager.getaccesstoken(mContext)\n        val call: Call<StudentListModel> = ApiClient.getClient.studentList(\"Bearer \"+token)\n        call.enqueue(object : Callback<StudentListModel> {\n            override fun onFailure(call: Call<StudentListModel>, t: Throwable) {\n                Log.e(\"Error\", t.localizedMessage)\n                progress.visibility = View.GONE\n            }\n            override fun onResponse(call: Call<StudentListModel>, response: Response<StudentListModel>) {\n                progress.visibility = View.GONE\n                //val arraySize :Int = response.body()!!.responseArray.studentList.size\n                if (response.body()!!.status==100)\n                {\n                    studentListArrayList.addAll(response.body()!!.responseArray.studentList)\n                    if (PreferenceManager.getStudIdForCCA(mContext).equals(\"\"))\n                    {\n                      //  Log.e(\"studentname\",student_Name)\n                        student_Name=studentListArrayList.get(0).name\n                        studentImg=studentListArrayList.get(0).photo\n                        stud_id=studentListArrayList.get(0).id\n                        studentClass=studentListArrayList.get(0).section\n                        Log.e(\"Student_idss\",stud_id)\n                       // PreferenceManager.setStudentID(mContext,studentId)\n                        PreferenceManager.setStudentName(mContext,student_Name)\n                        PreferenceManager.setStudentPhoto(mContext,studentImg)\n                        PreferenceManager.setStudentClass(mContext,studentClass)\n                        studentName.text=student_Name\n                        PreferenceManager.setCCAStudentIdPosition(mContext, \"0\")\n\n                        if(!studentImg.equals(\"\"))\n                        {\n                            Glide.with(mContext) //1\n                                .load(studentImg)\n                                .placeholder(R.drawable.student)\n                                .error(R.drawable.student)\n                                .skipMemoryCache(true) //2\n                                .diskCacheStrategy(DiskCacheStrategy.NONE) //3\n                                .transform(CircleCrop()) //4\n                                .into(studImg)\n                        }\n                        else{\n                            studImg.setImageResource(R.drawable.student)\n                        }\n\n                    }\n                    else{\n                        val studentSelectPosition = Integer.valueOf(\n                            PreferenceManager.getCCAStudentIdPosition(mContext)\n                        )\n                        student_Name= PreferenceManager.getStudentName(mContext)!!\n                        studentImg= PreferenceManager.getStudentPhoto(mContext)!!\n                        stud_id=  studentListArrayList!![studentSelectPosition].id.toString()\n                       // PreferenceManager.setStudentID(mContext, studentId)\n                       // PreferenceManager.setStudIdForCCA(mContext, studentId)\n                        Log.e(\"Studentid1\",stud_id)\n                        studentClass= PreferenceManager.getStudentClass(mContext)!!\n                        studentName.text=student_Name\n                        if(!studentImg.equals(\"\"))\n                        {\n                            Glide.with(mContext) //1\n                                .load(studentImg)\n                                .placeholder(R.drawable.student)\n                                .error(R.drawable.student)\n                                .skipMemoryCache(true) //2\n                                .diskCacheStrategy(DiskCacheStrategy.NONE) //3\n                                .transform(CircleCrop()) //4\n                                .into(studImg)\n                        }\n                        else{\n                            studImg.setImageResource(R.drawable.student)\n                        }\n                    }\n\n                    getCCAListAPI(stud_id)\n//                    var internetCheck = InternetCheckClass.isInternetAvailable(nContext)\n//                    if (internetCheck)\n//                    {\n//                        //callStudentLeaveInfo()\n//                    }\n//                    else{\n//                        InternetCheckClass.showSuccessInternetAlert(com.mobatia.bisad.fragment.home.mContext)\n//                    }\n\n                    //callStudentInfoApi()\n                }\n\n\n            }\n\n        })\n    }\n\n    private fun getCCAListAPI(studId: String) {\n        Log.e(\"studId\",studId)\n        val body = CCAListRequestModel(studId)\n        val token = PreferenceManager.getaccesstoken(mContext)\n        val call: Call<CCAListResponseModel> =\n            ApiClient.getClient.getCCAList( body,\"Bearer $token\")\n        progress.visibility = View.VISIBLE\n        call.enqueue(object : Callback<CCAListResponseModel> {\n            override fun onResponse(\n                call: Call<CCAListResponseModel>,\n                response: Response<CCAListResponseModel>\n            ) {\n                progress.visibility = View.GONE\n                    mCCAmodelArrayList = ArrayList()\n\n                    if (response.body() != null) {\n                        if (response.body()!!.status!!.equals(100)) {\n\n                            if (response.body()!!.data!!.isNotEmpty()) {\n                                for (i in response.body()!!.data!!.indices) {\n                                    enterTextView!!.visibility = View.VISIBLE\n                                    Log.e(\"isattentii\", response.body()!!.data!![i].isAttendee.toString())\n                                    mCCAmodelArrayList!!.add(addCCAlist(response.body()!!.data!![i]))\n                                }\n                                Log.e(\"arraty\", mCCAmodelArrayList!!.get(0).isAttendee.toString())\n                                Log.e(\"title\", mCCAmodelArrayList!!.get(0).title.toString())\n                                if (mCCAmodelArrayList!!.size > 0) {\n                                    mCCAsActivityAdapter = CCAsListActivityAdapter(\n                                        this@CCA_Activity,\n                                        mCCAmodelArrayList!!\n                                    )\n                                    recycler_review!!.adapter = mCCAsActivityAdapter\n                                }\n                            } else {\n                                mCCAsActivityAdapter =\n                                    CCAsListActivityAdapter(this@CCA_Activity, mCCAmodelArrayList!!)\n                                recycler_review!!.adapter = mCCAsActivityAdapter\n                                enterTextView!!.visibility = View.GONE\n                                Toast.makeText(\n                                    this@CCA_Activity,\n                                    \"No ECA available\",\n                                    Toast.LENGTH_SHORT\n                                ).show()\n                            }\n                        }else{\n                            Toast.makeText(mContext, \"Fail\", Toast.LENGTH_SHORT).show()\n                        }\n                    }\n//                    else if (response_code.equals(\"500\", ignoreCase = true)) {\n//                        AppUtils.showDialogAlertDismiss(\n//                            mContext as Activity,\n//                            \"Alert\",\n//                            getString(R.string.common_error),\n//                            R.drawable.exclamationicon,\n//                            R.drawable.round\n//                        )\n//                    } else if (response_code.equals(\"400\", ignoreCase = true)) {\n//                        AppUtils.getToken(mContext, object : GetTokenSuccess() {\n//                            fun tokenrenewed() {\n//                                getCCAListAPI(studentId)\n//                            }\n//                        })\n//                    } else if (response_code.equals(\"401\", ignoreCase = true)) {\n//                        AppUtils.getToken(mContext, object : GetTokenSuccess() {\n//                            fun tokenrenewed() {\n//                                getCCAListAPI(studentId)\n//                            }\n//                        })\n//                    } else if (response_code.equals(\"402\", ignoreCase = true)) {\n//                        AppUtils.getToken(mContext, object : GetTokenSuccess() {\n//                            fun tokenrenewed() {\n//                                getCCAListAPI(studentId)\n//                            }\n//                        })\n//                    }\n                    else {\n                        ConstantFunctions.showDialogueWithOk(mContext,getString(R.string.common_error),\"Alert\")\n                    }\n\n            }\n\n            override fun onFailure(call: Call<CCAListResponseModel>, t: Throwable) {\n                progress.visibility = View.GONE\n                ConstantFunctions.showDialogueWithOk(mContext,getString(R.string.common_error),\"Alert\")\n            }\n\n        })\n    }\n\n    private fun addCCAlist(dataObject: CCAListResponseModel.Data): CCAModel {\n        val mCCAModel = CCAModel()\n        mCCAModel.cca_days_id = dataObject!!.cca_days_id.toString()\n        mCCAModel.title = dataObject.title\n        mCCAModel.from_date = dataObject.from_date\n        mCCAModel.to_date = dataObject.to_date\n        mCCAModel.isAttendee = dataObject.isAttendee\n        mCCAModel.status = dataObject.status.toString()\n\n        mCCAModel.submission_dateTime = dataObject.submission_dateTime\n        mCCAModel.isSubmissionDateOver = dataObject.isSubmissiondateOver\n        val jsonCCADetailArray: ArrayList<CCAListResponseModel.Data.Detail>? = dataObject.details\n     //   Log.e(\"choice2adasda\", dataObject.details!![0]!!.choice2.toString())\n\n      //  Log.e(\"choice2adasda\", dataObject.details!![0]!!.choice2!![0]!!.attending_status.toString())\n        CCADetailModelArrayList = ArrayList<CCADetailModel>()\n        if (jsonCCADetailArray!!.isNotEmpty()) {\n            for (element in jsonCCADetailArray) {\n                val objectCCA = element\n                val mCCADetailModel = CCADetailModel()\n                mCCADetailModel.day = objectCCA!!.day\n\n                val jsonCCAChoiceArray = objectCCA.choice1\n                val jsonCCAChoiceArray2 = objectCCA.choice2\n                Log.e(\"choice1\",objectCCA.choice1.toString())\n                Log.e(\"choice2 atte\", objectCCA.choice1!![0]!!.attending_status.toString())\n                Log.e(\"choice2 atte\", objectCCA.choice2!![0]!!.attending_status.toString())\n                Log.e(\"choice2 atte\", jsonCCAChoiceArray2!![0]!!.attending_status.toString())\n                CCAchoiceModelArrayList = java.util.ArrayList<CCAchoiceModel>()\n                if (jsonCCAChoiceArray!!.size > 0) {\n                    var k = 0\n                    for (j in 0..jsonCCAChoiceArray.size) {\n                        val mCCADetailModelchoice = CCAchoiceModel()\n                        if (jsonCCAChoiceArray.size != j) {\n                            val objectCCAchoice = jsonCCAChoiceArray[j]\n                            mCCADetailModelchoice.cca_item_name = objectCCAchoice!!.cca_item_name\n                            mCCADetailModelchoice.cca_details_id = objectCCAchoice.cca_details_id.toString()\n                            mCCADetailModelchoice.isattending = objectCCAchoice.isAttendee\n                            mCCADetailModelchoice.cca_item_start_time = objectCCAchoice.cca_item_start_time\n                            mCCADetailModelchoice.cca_item_end_time = objectCCAchoice.cca_item_end_time\n                            mCCADetailModelchoice.venue = objectCCAchoice.venue\n                            mCCADetailModelchoice.description = objectCCAchoice.description\n\n\n                            if (objectCCAchoice.attending_status\n                                    .equals(\"0\", ignoreCase = true)\n                            ) {\n                                if (dataObject.isAttendee\n                                        .equals(\"2\", ignoreCase = true)\n                                ) {\n                                    mCCADetailModelchoice.status = \"1\"\n                                    mCCADetailModel.choice1 = objectCCAchoice.cca_item_name\n                                    mCCADetailModel.choice1Id = objectCCAchoice.cca_details_id.toString()\n                                } else {\n                                    mCCADetailModelchoice.status = \"0\"\n                                }\n                                k = k + 1\n                            } else {\n                                mCCADetailModelchoice.status = \"0\"\n                            }\n                            mCCADetailModelchoice.disableCccaiem = false\n                            mCCADetailModelchoice.dayChoice = objectCCAchoice.day\n                        } else {\n                            mCCADetailModelchoice.cca_item_name = \"None\"\n                            mCCADetailModelchoice.cca_details_id = \"-541\"\n                            mCCADetailModelchoice.venue = \"0\"\n                            mCCADetailModelchoice.isattending = \"0\"\n                            if (k == 0) {\n                                if (dataObject.isAttendee\n                                        .equals(\"2\", ignoreCase = true)\n                                ) {\n                                    mCCADetailModelchoice.status = \"1\"\n                                    mCCADetailModel.choice1 = \"None\"\n                                    mCCADetailModel.choice1Id = \"-541\"\n                                } else {\n                                    mCCADetailModelchoice.status = \"0\"\n                                }\n                            } else {\n                                mCCADetailModelchoice.status = \"0\"\n                            }\n                            mCCADetailModelchoice.disableCccaiem = false\n                            mCCADetailModelchoice.dayChoice = objectCCA.day\n                        }\n                        CCAchoiceModelArrayList!!.add(mCCADetailModelchoice)\n                    }\n                }\n                mCCADetailModel.ccaChoiceModel = CCAchoiceModelArrayList\n                CCAchoiceModelArrayList2 = ArrayList<CCAchoiceModel>()\n                if (jsonCCAChoiceArray2!!.isNotEmpty()) {\n                    var k = 0\n                    for (j in 0..jsonCCAChoiceArray2.size) {\n                        val mCCADetailModelchoice = CCAchoiceModel()\n                        if (jsonCCAChoiceArray2.size != j) {\n                            val objectCCAchoice = jsonCCAChoiceArray2[j]\n                            mCCADetailModelchoice.cca_item_name = objectCCAchoice!!.cca_item_name\n                            mCCADetailModelchoice.cca_details_id = objectCCAchoice.cca_details_id.toString()\n                            mCCADetailModelchoice.isattending = objectCCAchoice.isAttendee\n                            mCCADetailModelchoice.cca_item_start_time = objectCCAchoice.cca_item_start_time\n                            mCCADetailModelchoice.cca_item_end_time = objectCCAchoice.cca_item_end_time\n                            mCCADetailModelchoice.venue = objectCCAchoice.venue\n                            mCCADetailModelchoice.dayChoice = objectCCAchoice.day\n                            mCCADetailModelchoice.description = objectCCAchoice.description\n\n                            if (objectCCAchoice.attending_status\n                                    .equals(\"0\", ignoreCase = true)\n                            ) {\n                                if (dataObject.isAttendee\n                                        .equals(\"2\", ignoreCase = true)\n                                ) {\n                                    mCCADetailModelchoice.status = \"1\"\n                                    mCCADetailModel.choice2 = objectCCAchoice.cca_item_name\n                                    mCCADetailModel.choice2Id = objectCCAchoice.cca_details_id.toString()\n                                    Log.e(\"choice2qqq\",mCCADetailModel.choice2.toString())\n                                } else {\n                                    mCCADetailModelchoice.status = \"0\"\n                                }\n                                k += 1\n                            } else {\n                                mCCADetailModelchoice.status = \"0\"\n                            }\n                            mCCADetailModelchoice.disableCccaiem = false\n                        } else {\n                            mCCADetailModelchoice.cca_item_name = \"None\"\n                            mCCADetailModelchoice.cca_details_id = \"-541\"\n                            mCCADetailModelchoice.isattending = \"0\"\n                            mCCADetailModelchoice.venue = \"0\"\n                            if (k == 0) {\n                                if (dataObject.isAttendee\n                                        .equals(\"2\", ignoreCase = true)\n                                ) {\n                                    mCCADetailModelchoice.status = \"1\"\n                                    mCCADetailModel.choice2 = \"None\"\n                                    mCCADetailModel.choice2Id = \"-541\"\n                                } else {\n                                    mCCADetailModelchoice.status = \"0\"\n                                }\n                            } else {\n                                mCCADetailModelchoice.status = \"0\"\n                            }\n                            mCCADetailModelchoice.dayChoice = objectCCA.day\n                            mCCADetailModelchoice.disableCccaiem = false\n                        }\n                        CCAchoiceModelArrayList2!!.add(mCCADetailModelchoice)\n                    }\n                }\n                mCCADetailModel.ccaChoiceModel2 = CCAchoiceModelArrayList2\n                CCADetailModelArrayList!!.add(mCCADetailModel)\n            }\n        }\n        mCCAModel.details = CCADetailModelArrayList\n       // Log.e(\"mCCAModel\", mCCAModel.details!!.get(0).choice1.toString())\n        return mCCAModel\n    }\n\n    private fun initilaiseUI() {\n        progress = findViewById(R.id.progress)\n        titleTextView = findViewById(R.id.heading)\n        back = findViewById(R.id.btn_left)\n        backRelative = findViewById(R.id.backRelative)\n        logoclick = findViewById(R.id.logoClickImgView)\n        extras = intent.extras\n        if (extras != null) {\n            tab_type = extras!!.getString(\"tab_type\")!!\n        }\n        relativeHeader = findViewById<View>(R.id.relativeHeader) as RelativeLayout\n        recycler_review = findViewById<View>(R.id.recycler_view_cca) as RecyclerView\n        recycler_review!!.setHasFixedSize(true)\n        recyclerViewLayoutManager = GridLayoutManager(mContext, 1)\n        val spacing = 5 // 50px\n\n        val divider = DividerItemDecoration(mContext, DividerItemDecoration.VERTICAL)\n        divider.setDrawable(ContextCompat.getDrawable(mContext,R.drawable.list_divider_teal)!!)\n        recycler_review!!.addItemDecoration(divider)\n       // val itemDecoration = ItemOffsetDecoration(mContext, spacing)\n//        recycler_review!!.addItemDecoration(\n//            DividerItemDecoration(mContext.resources.getDrawable(R.drawable.list_divider))\n//        )\n  //      recycler_review!!.addItemDecoration(itemDecoration)\n        recycler_review!!.layoutManager = recyclerViewLayoutManager\n//        headermanager = HeaderManager(this@CCA_Activity, tab_type)\n//        headermanager.getHeader(relativeHeader, 0)\n//        back = headermanager.getLeftButton()\n//        headermanager.setButtonLeftSelector(\n//            R.drawable.back,\n//            R.drawable.back\n//        )\n//        back.setOnClickListener {\n//            AppUtils.hideKeyBoard(mContext)\n//            finish()\n//        }\n//        home = headermanager.getLogoButton()\n//        home.setOnClickListener(View.OnClickListener {\n//            val `in` = Intent(mContext, HomeListAppCompatActivity::class.java)\n//            `in`.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP)\n//            startActivity(`in`)\n//        })\n        studImg = findViewById(R.id.imagicon)\n\n        mStudentSpinner = findViewById<View>(R.id.studentSpinner) as LinearLayout\n        studentName = findViewById<View>(R.id.studentName) as TextView\n        enterTextView = findViewById<View>(R.id.enterTextView) as TextView\n        textViewYear = findViewById<View>(R.id.textViewYear) as TextView\n        recycler_review!!.addOnItemClickListener(object :OnItemClickListener{\n            override fun onItemClicked(position: Int, view: View) {\n                if (mCCAmodelArrayList!![position].status.equals(\"0\") || mCCAmodelArrayList!![position].status.equals(\n                        \"2\"\n                    )\n                ) {\n                    callStatusChangeApi(\n                        mCCAmodelArrayList!![position].cca_days_id,\n                        position,\n                        mCCAmodelArrayList!![position].status\n                    )\n                }\n                if (mCCAmodelArrayList!![position].isAttendee.equals(\"0\")) {\n                    if (mCCAmodelArrayList!![position].isSubmissionDateOver.equals(\n                            \"0\"\n                        )\n                    ) {\n                        if (mCCAmodelArrayList!![position].details!!.size > 0) {\n                            val intent = Intent(mContext, CCASelectionActivity::class.java)\n                            /*intent.putExtra(\n                                \"CCA_Detail\",\n                                mCCAmodelArrayList!![position].details\n                            )*/\n                            intent.putExtra(\"tab_type\", tab_type)\n                            PreferenceManager.saveDetailsArrayList(mContext, mCCAmodelArrayList!![position].details)\n                           // PreferenceManager.setStudentID(mContext, stud_id)\n                            PreferenceManager.setStudIdForCCA(mContext, stud_id)\n                            PreferenceManager.setStudNameForCCA(mContext, stud_name)\n                            PreferenceManager.setStudClassForCCA(mContext, stud_class)\n                            PreferenceManager.setCCATitle(\n                                mContext,\n                                mCCAmodelArrayList!![position].title\n                            )\n                            PreferenceManager.setCCAItemId(\n                                mContext,\n                                mCCAmodelArrayList!![position].cca_days_id\n                            )\n                            startActivity(intent)\n                        } else {\n                            ConstantFunctions.showDialogueWithOk(mContext,\"No Data Available\",\"Alert\")\n                        }\n                    } else {\n                        ConstantFunctions.showDialogueWithOk(mContext,\"CCA Sign-Up Closed\",\"Alert\")\n                        \n                    }\n                } else if (mCCAmodelArrayList!![position].isAttendee.equals(\"2\")) {\n                    if(mCCAmodelArrayList!!.get(position).isSubmissionDateOver.equals(\"0\"))\n                    {\n                        val intent =\n                            Intent(mContext, CCAsReviewEditAfterSubmissionActivity::class.java)\n                        Log.e(\"cca choice1s\", mCCAmodelArrayList!![position].details!!.get(0).choice1!!)\n                        Log.e(\"cca choice2s\", mCCAmodelArrayList!![position].details!!.get(0).choice2!!)\n                        intent.putExtra(\"tab_type\", tab_type)\n                        // intent.putExtra(\"CCA_Detail\", mCCAmodelArrayList!![position].details)\n                        intent.putExtra(\"submissiondateover\", mCCAmodelArrayList!![position].isSubmissionDateOver)\n                        PreferenceManager.saveDetailsArrayList(mContext, mCCAmodelArrayList!![position].details)\n                        //  PreferenceManager.setStudentID(mContext, stud_id)\n                        Log.e(\"id\",stud_id)\n                        PreferenceManager.setStudIdForCCA(mContext, stud_id)\n                        PreferenceManager.setStudNameForCCA(mContext, stud_name)\n                        PreferenceManager.setStudClassForCCA(mContext, stud_class)\n                        PreferenceManager.setCCATitle(mContext, mCCAmodelArrayList!![position].title)\n                        PreferenceManager.setCCAItemId(mContext, mCCAmodelArrayList!![position].cca_days_id)\n                        startActivity(intent)\n                    }\n                    else{\n                        val intent = Intent(mContext, CCAsReviewAfterSubmissionNoDeleteActivity::class.java)\n                        intent.putExtra(\"tab_type\", tab_type)\n                        //intent.putExtra(\"CCA_Detail\", mCCAmodelArrayList!![position].getDetails())\n                        intent.putExtra(\"submissiondateover\", mCCAmodelArrayList!![position].isSubmissionDateOver)\n                        PreferenceManager.saveDetailsArrayList(mContext, mCCAmodelArrayList!![position].details)\n                        PreferenceManager.setStudIdForCCA(mContext, stud_id)\n                        PreferenceManager.setStudNameForCCA(mContext, stud_name)\n                        PreferenceManager.setStudClassForCCA(mContext, stud_class)\n                        PreferenceManager.setCCATitle(mContext, mCCAmodelArrayList!![position].title)\n                        PreferenceManager.setCCAItemId(mContext, mCCAmodelArrayList!![position].cca_days_id)\n                        startActivity(intent)\n                    }\n\n                } else {\n                    val intent =\n                        Intent(mContext, CCAsReviewAfterSubmissionActivity::class.java)\n                    intent.putExtra(\"tab_type\", tab_type)\n                   // PreferenceManager.setStudentID(mContext, stud_id)\n                    PreferenceManager.setStudIdForCCA(mContext, stud_id)\n                    PreferenceManager.setStudNameForCCA(mContext, stud_name)\n                    PreferenceManager.setStudClassForCCA(mContext, stud_class)\n                    PreferenceManager.setCCATitle(mContext, mCCAmodelArrayList!![position].title)\n                    PreferenceManager.setCCAItemId(mContext, mCCAmodelArrayList!![position].cca_days_id)\n                    startActivity(intent)\n                }\n            }\n\n        })\n    }\n\n    private fun callStatusChangeApi(ccaDaysId: String?, eventPosition: Int, status: String?) {\n\n\n        var model= CCAReadStatusRequestModel(ccaDaysId,\"cca\")\n\n        val token = PreferenceManager.getaccesstoken(mContext)\n        val call: Call<CCASubmitResponseModel> =\n            ApiClient.getClient.readstatusupdate( model,\"Bearer $token\")\n       // progressBar.visibility = View.VISIBLE\n        call.enqueue(object : Callback<CCASubmitResponseModel> {\n            override fun onResponse(\n                call: Call<CCASubmitResponseModel>,\n                response: Response<CCASubmitResponseModel>\n            ) {\n               // progressBar.visibility = View.GONE\n                if (response.isSuccessful){\n                    if (response.body() != null){\n                        if (response.body()!!.status!!.equals(100)){\n\n                            if (status.equals(\"0\", ignoreCase = true) || status.equals(\n                                    \"2\",\n                                    ignoreCase = true\n                                )\n                            ) {\n                                mCCAmodelArrayList!![eventPosition].status=(\"1\")\n                                mCCAsActivityAdapter!!.notifyDataSetChanged()\n                            }\n                        }\n                        else if (response.body()!!.status!!.equals(109))\n                        {\n\n\n                        }\n                        else{\n\n                            Toast.makeText(mContext, \"Failure\", Toast.LENGTH_SHORT).show()\n                        }\n\n                    }else{\n\n                        ConstantFunctions.showDialogueWithOk(mContext,getString(R.string.common_error),\"Alert\")\n                    }\n                }else{\n\n                    ConstantFunctions.showDialogueWithOk(mContext,getString(R.string.common_error),\"Alert\")\n                }\n            }\n\n            override fun onFailure(call: Call<CCASubmitResponseModel>, t: Throwable) {\n               // progressBar.visibility = View.GONE\n                ConstantFunctions.showDialogueWithOk(mContext,getString(R.string.common_error),\"Alert\")\n            }\n\n        })\n    }\n\n    override fun onBackPressed() {\n        super.onBackPressed()\n        if (!PreferenceManager.getCcaOptionBadge(mContext).equals(\"0\")) {\n           CCAFragment(). ccaDot.setText(PreferenceManager.getCcaOptionBadge(mContext))\n        } else if (!PreferenceManager.getCcaOptionEditedBadge(mContext).equals(\"0\")) {\n            CCAFragment(). ccaDot.setText(PreferenceManager.getCcaOptionEditedBadge(mContext))\n        } else {\n            CCAFragment().ccaDot.setVisibility(View.GONE)\n        }\n    }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/nas/alreem/activity/cca/CCA_Activity.kt b/app/src/main/java/com/nas/alreem/activity/cca/CCA_Activity.kt
--- a/app/src/main/java/com/nas/alreem/activity/cca/CCA_Activity.kt	(revision 29dbbedb1ce8c3fe2a8032d242fcce101acbc7b5)
+++ b/app/src/main/java/com/nas/alreem/activity/cca/CCA_Activity.kt	(date 1690538516767)
@@ -27,11 +27,13 @@
 import com.nas.alreem.activity.payments.adapter.StudentListAdapter
 import com.nas.alreem.activity.payments.model.StudentList
 import com.nas.alreem.activity.payments.model.StudentListModel
+import com.nas.alreem.appcontroller.AppController
 import com.nas.alreem.constants.ConstantFunctions
 import com.nas.alreem.constants.OnItemClickListener
 import com.nas.alreem.constants.PreferenceManager
 import com.nas.alreem.constants.addOnItemClickListener
 import com.nas.alreem.fragment.cca.CCAFragment
+import com.nas.alreem.fragment.home.homeActivity
 import com.nas.alreem.rest.ApiClient
 import retrofit2.Call
 import retrofit2.Callback
@@ -41,6 +43,8 @@
     lateinit var mContext: Context
     lateinit var titleTextView: TextView
     lateinit var back: ImageView
+
+
     lateinit var backRelative: RelativeLayout
     lateinit var logoclick: ImageView
     lateinit var progress: ProgressBar
@@ -57,9 +61,9 @@
     var stud_name = ""
     var mStudentSpinner: LinearLayout? = null
     var relativeHeader: RelativeLayout? = null
-    lateinit var student_Name: String
-    lateinit var studentImg: String
-    lateinit var studentClass: String
+   // lateinit var student_Name: String
+   // lateinit var studentImg: String
+   // lateinit var studentClass: String
    lateinit var studImg: ImageView
     var stud_img = ""
 
@@ -79,6 +83,7 @@
 
             startActivity(mIntent)
         }
+
         backRelative.setOnClickListener {
             finish()
         }
@@ -164,7 +169,7 @@
         val call: Call<StudentListModel> = ApiClient.getClient.studentList("Bearer "+token)
         call.enqueue(object : Callback<StudentListModel> {
             override fun onFailure(call: Call<StudentListModel>, t: Throwable) {
-                Log.e("Error", t.localizedMessage)
+               // Log.e("Error", t.localizedMessage)
                 progress.visibility = View.GONE
             }
             override fun onResponse(call: Call<StudentListModel>, response: Response<StudentListModel>) {
@@ -176,22 +181,22 @@
                     if (PreferenceManager.getStudIdForCCA(mContext).equals(""))
                     {
                       //  Log.e("studentname",student_Name)
-                        student_Name=studentListArrayList.get(0).name
-                        studentImg=studentListArrayList.get(0).photo
+                        stud_name=studentListArrayList.get(0).name
+                        stud_img=studentListArrayList.get(0).photo
                         stud_id=studentListArrayList.get(0).id
-                        studentClass=studentListArrayList.get(0).section
-                        Log.e("Student_idss",stud_id)
+                        stud_class=studentListArrayList.get(0).section
+                       // Log.e("Student_idss",stud_id)
                        // PreferenceManager.setStudentID(mContext,studentId)
-                        PreferenceManager.setStudentName(mContext,student_Name)
-                        PreferenceManager.setStudentPhoto(mContext,studentImg)
-                        PreferenceManager.setStudentClass(mContext,studentClass)
-                        studentName.text=student_Name
+                      //  PreferenceManager.setStudentName(mContext,student_Name)
+                        //PreferenceManager.setStudentPhoto(mContext,studentImg)
+                      //  PreferenceManager.setStudentClass(mContext,studentClass)
+                        studentName.text=stud_name
                         PreferenceManager.setCCAStudentIdPosition(mContext, "0")
 
-                        if(!studentImg.equals(""))
+                        if(!stud_img.equals(""))
                         {
                             Glide.with(mContext) //1
-                                .load(studentImg)
+                                .load(stud_img)
                                 .placeholder(R.drawable.student)
                                 .error(R.drawable.student)
                                 .skipMemoryCache(true) //2
@@ -208,18 +213,18 @@
                         val studentSelectPosition = Integer.valueOf(
                             PreferenceManager.getCCAStudentIdPosition(mContext)
                         )
-                        student_Name= PreferenceManager.getStudentName(mContext)!!
-                        studentImg= PreferenceManager.getStudentPhoto(mContext)!!
+                        stud_name= studentListArrayList[studentSelectPosition].name!!
+                        stud_img= studentListArrayList[studentSelectPosition].photo!!
                         stud_id=  studentListArrayList!![studentSelectPosition].id.toString()
                        // PreferenceManager.setStudentID(mContext, studentId)
                        // PreferenceManager.setStudIdForCCA(mContext, studentId)
-                        Log.e("Studentid1",stud_id)
-                        studentClass= PreferenceManager.getStudentClass(mContext)!!
-                        studentName.text=student_Name
-                        if(!studentImg.equals(""))
+                      //  Log.e("Studentid1",stud_id)
+                        stud_class= studentListArrayList[studentSelectPosition].studentClass!!
+                        studentName.text=stud_name
+                        if(!stud_img.equals(""))
                         {
                             Glide.with(mContext) //1
-                                .load(studentImg)
+                                .load(stud_img)
                                 .placeholder(R.drawable.student)
                                 .error(R.drawable.student)
                                 .skipMemoryCache(true) //2
@@ -252,7 +257,7 @@
     }
 
     private fun getCCAListAPI(studId: String) {
-        Log.e("studId",studId)
+       // Log.e("studId",studId)
         val body = CCAListRequestModel(studId)
         val token = PreferenceManager.getaccesstoken(mContext)
         val call: Call<CCAListResponseModel> =
@@ -275,8 +280,8 @@
                                     Log.e("isattentii", response.body()!!.data!![i].isAttendee.toString())
                                     mCCAmodelArrayList!!.add(addCCAlist(response.body()!!.data!![i]))
                                 }
-                                Log.e("arraty", mCCAmodelArrayList!!.get(0).isAttendee.toString())
-                                Log.e("title", mCCAmodelArrayList!!.get(0).title.toString())
+                              //  Log.e("arraty", mCCAmodelArrayList!!.get(0).isAttendee.toString())
+                              //  Log.e("title", mCCAmodelArrayList!!.get(0).title.toString())
                                 if (mCCAmodelArrayList!!.size > 0) {
                                     mCCAsActivityAdapter = CCAsListActivityAdapter(
                                         this@CCA_Activity,
@@ -291,7 +296,7 @@
                                 enterTextView!!.visibility = View.GONE
                                 Toast.makeText(
                                     this@CCA_Activity,
-                                    "No ECA available",
+                                    "No EAP available",
                                     Toast.LENGTH_SHORT
                                 ).show()
                             }
@@ -364,10 +369,10 @@
 
                 val jsonCCAChoiceArray = objectCCA.choice1
                 val jsonCCAChoiceArray2 = objectCCA.choice2
-                Log.e("choice1",objectCCA.choice1.toString())
-                Log.e("choice2 atte", objectCCA.choice1!![0]!!.attending_status.toString())
-                Log.e("choice2 atte", objectCCA.choice2!![0]!!.attending_status.toString())
-                Log.e("choice2 atte", jsonCCAChoiceArray2!![0]!!.attending_status.toString())
+               // Log.e("choice1",objectCCA.choice1.toString())
+               // Log.e("choice2 atte", objectCCA.choice1!![0]!!.attending_status.toString())
+               // Log.e("choice2 atte", objectCCA.choice2!![0]!!.attending_status.toString())
+              //  Log.e("choice2 atte", jsonCCAChoiceArray2!![0]!!.attending_status.toString())
                 CCAchoiceModelArrayList = java.util.ArrayList<CCAchoiceModel>()
                 if (jsonCCAChoiceArray!!.size > 0) {
                     var k = 0
@@ -452,7 +457,7 @@
                                     mCCADetailModelchoice.status = "1"
                                     mCCADetailModel.choice2 = objectCCAchoice.cca_item_name
                                     mCCADetailModel.choice2Id = objectCCAchoice.cca_details_id.toString()
-                                    Log.e("choice2qqq",mCCADetailModel.choice2.toString())
+                                 //   Log.e("choice2qqq",mCCADetailModel.choice2.toString())
                                 } else {
                                     mCCADetailModelchoice.status = "0"
                                 }
@@ -584,7 +589,7 @@
                             ConstantFunctions.showDialogueWithOk(mContext,"No Data Available","Alert")
                         }
                     } else {
-                        ConstantFunctions.showDialogueWithOk(mContext,"CCA Sign-Up Closed","Alert")
+                        ConstantFunctions.showDialogueWithOk(mContext,"EAP Sign-Up Closed","Alert")
                         
                     }
                 } else if (mCCAmodelArrayList!![position].isAttendee.equals("2")) {
@@ -592,14 +597,14 @@
                     {
                         val intent =
                             Intent(mContext, CCAsReviewEditAfterSubmissionActivity::class.java)
-                        Log.e("cca choice1s", mCCAmodelArrayList!![position].details!!.get(0).choice1!!)
-                        Log.e("cca choice2s", mCCAmodelArrayList!![position].details!!.get(0).choice2!!)
+                      //  Log.e("cca choice1s", mCCAmodelArrayList!![position].details!!.get(0).choice1!!)
+                      //  Log.e("cca choice2s", mCCAmodelArrayList!![position].details!!.get(0).choice2!!)
                         intent.putExtra("tab_type", tab_type)
                         // intent.putExtra("CCA_Detail", mCCAmodelArrayList!![position].details)
                         intent.putExtra("submissiondateover", mCCAmodelArrayList!![position].isSubmissionDateOver)
                         PreferenceManager.saveDetailsArrayList(mContext, mCCAmodelArrayList!![position].details)
                         //  PreferenceManager.setStudentID(mContext, stud_id)
-                        Log.e("id",stud_id)
+                      //  Log.e("id",stud_id)
                         PreferenceManager.setStudIdForCCA(mContext, stud_id)
                         PreferenceManager.setStudNameForCCA(mContext, stud_name)
                         PreferenceManager.setStudClassForCCA(mContext, stud_class)
@@ -694,14 +699,5 @@
         })
     }
 
-    override fun onBackPressed() {
-        super.onBackPressed()
-        if (!PreferenceManager.getCcaOptionBadge(mContext).equals("0")) {
-           CCAFragment(). ccaDot.setText(PreferenceManager.getCcaOptionBadge(mContext))
-        } else if (!PreferenceManager.getCcaOptionEditedBadge(mContext).equals("0")) {
-            CCAFragment(). ccaDot.setText(PreferenceManager.getCcaOptionEditedBadge(mContext))
-        } else {
-            CCAFragment().ccaDot.setVisibility(View.GONE)
-        }
-    }
+
 }
\ No newline at end of file
Index: app/src/main/java/com/nas/alreem/activity/about_us/adapter/AccreditationsRecyclerViewAdapter.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/nas/alreem/activity/about_us/adapter/AccreditationsRecyclerViewAdapter.kt b/app/src/main/java/com/nas/alreem/activity/about_us/adapter/AccreditationsRecyclerViewAdapter.kt
new file mode 100644
--- /dev/null	(date 1690874068106)
+++ b/app/src/main/java/com/nas/alreem/activity/about_us/adapter/AccreditationsRecyclerViewAdapter.kt	(date 1690874068106)
@@ -0,0 +1,95 @@
+package com.nas.alreem.activity.about_us.adapter
+
+import android.content.Context
+import android.view.LayoutInflater
+import android.view.View
+import android.view.ViewGroup
+import android.widget.BaseAdapter
+import android.widget.ImageView
+import android.widget.TextView
+import com.nas.alreem.R
+import com.nas.alreem.fragment.about_us.model.AboutUsDataModel
+
+class AccreditationsRecyclerViewAdapter(
+    private val mContext: Context,
+    aboutusModelArrayList: ArrayList<AboutUsDataModel>
+) : BaseAdapter(){
+    private val mAboutusLists: ArrayList<String>? = null
+    private val aboutusModelArrayList: ArrayList<AboutUsDataModel>
+    private var view: View? = null
+    lateinit var mTitleTxt: TextView
+    private val mImageView: ImageView? = null
+    private val mTitle: String? = null
+    private val mTabId: String? = null
+
+    //	public CustomAboutUsAdapter(Context context,
+    //								ArrayList<AboutUsModel> arrList, String title, String tabId) {
+    //		this.mContext = context;
+    //		this.mAboutusList = arrList;
+    //		this.mTitle = title;
+    //		this.mTabId = tabId;
+    //	}
+    init {
+        this.aboutusModelArrayList = aboutusModelArrayList
+    }
+
+    //	public CustomAboutUsAdapter(Context context,
+    //								ArrayList<String> arrList) {
+    //		this.mContext = context;
+    //		this.mAboutusList = arrList;
+    //
+    //	}
+    /*
+     * (non-Javadoc)
+     *
+     * @see android.widget.Adapter#getCount()
+     */
+    override fun getCount(): Int {
+        // TODO Auto-generated method stub
+        return aboutusModelArrayList.size
+    }
+
+    /*
+     * (non-Javadoc)
+     *
+     * @see android.widget.Adapter#getItem(int)
+     */
+    override fun getItem(position: Int): Any {
+        // TODO Auto-generated method stub
+        return aboutusModelArrayList[position]
+    }
+
+    /*
+     * (non-Javadoc)
+     *
+     * @see android.widget.Adapter#getItemId(int)
+     */
+    override fun getItemId(position: Int): Long {
+        // TODO Auto-generated method stub
+        return position.toLong()
+    }
+
+    /*
+     * (non-Javadoc)
+     *
+     * @see android.widget.Adapter#getView(int, android.view.View,
+     * android.view.ViewGroup)
+     */
+    override fun getView(position: Int, convertView: View, parent: ViewGroup): View {
+        if (convertView == null) {
+            val inflate = LayoutInflater.from(mContext)
+            view = inflate.inflate(R.layout.adapter_primary_list, null)
+        } else {
+            view = convertView
+        }
+        try {
+            mTitleTxt = view!!.findViewById<View>(R.id.listTxtTitle) as TextView
+            mTitleTxt.setText(aboutusModelArrayList[position].title)
+        } catch (e: IndexOutOfBoundsException) {
+            e.printStackTrace()
+        } catch (e: Exception) {
+            e.printStackTrace()
+        }
+        return view!!
+    }
+}
\ No newline at end of file
Index: app/src/main/java/com/nas/alreem/activity/about_us/AccreditationsActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/nas/alreem/activity/about_us/AccreditationsActivity.kt b/app/src/main/java/com/nas/alreem/activity/about_us/AccreditationsActivity.kt
new file mode 100644
--- /dev/null	(date 1690874068075)
+++ b/app/src/main/java/com/nas/alreem/activity/about_us/AccreditationsActivity.kt	(date 1690874068075)
@@ -0,0 +1,108 @@
+package com.nas.alreem.activity.about_us
+
+import android.app.Activity
+import android.content.Context
+import android.content.Intent
+import android.os.Bundle
+import android.view.View
+import android.widget.AdapterView
+import android.widget.ImageView
+import android.widget.ListView
+import android.widget.RelativeLayout
+import com.bumptech.glide.Glide
+import com.nas.alreem.R
+import com.nas.alreem.activity.about_us.adapter.AccreditationsRecyclerViewAdapter
+import com.nas.alreem.activity.home.HomeActivity
+import com.nas.alreem.constants.ConstantFunctions
+import com.nas.alreem.constants.PDFViewerActivity
+import com.nas.alreem.constants.WebLinkActivity
+import com.nas.alreem.fragment.about_us.model.AboutUsDataModel
+
+class AccreditationsActivity : Activity(), AdapterView.OnItemClickListener
+    {
+    lateinit var mContext: Context
+    var extras: Bundle? = null
+    var tab_type: String? = null
+    var bannner_img: String? = null
+    var relativeHeader: RelativeLayout? = null
+
+    var back: ImageView? = null
+    var home: ImageView? = null
+    var mAboutUsListArray: ArrayList<AboutUsDataModel>? = null
+    lateinit var bannerImagePager: ImageView
+
+    //    ViewPager bannerImagePager;
+    var bannerUrlImageArray = ArrayList<String?>()
+    private var mTermsCalendarListView: ListView? = null
+    override fun onCreate(savedInstanceState: Bundle?) {
+        super.onCreate(savedInstanceState)
+        setContentView(R.layout.activity_chatterbox_list)
+        //		Thread.setDefaultUncaughtExceptionHandler(new ExceptionHandler(this,
+//				LoginActivity.class));
+        mContext = this
+        initialiseUI()
+    }
+
+    override fun onItemClick(parent: AdapterView<*>?, view: View, position: Int, id: Long) {
+        if (mAboutUsListArray!![position].url.endsWith(".pdf")) {
+            val intent = Intent(
+                mContext,
+                PDFViewerActivity::class.java
+            )
+            intent.putExtra("pdf_url", mAboutUsListArray!![position].url)
+            intent.putExtra("tab_type", "Accreditiations & Examinations")
+            startActivity(intent)
+        } else {
+            val intent = Intent(
+                mContext,
+                WebLinkActivity::class.java
+            )
+            intent.putExtra("url", mAboutUsListArray!![position].url)
+            intent.putExtra("tab_type", "Accreditiations & Examinations")
+            startActivity(intent)
+        }
+    }
+
+    fun initialiseUI() {
+        extras = intent.extras
+        if (extras != null) {
+            mAboutUsListArray = extras!!
+                .getSerializable("array") as ArrayList<AboutUsDataModel>?
+            bannner_img = extras!!.getString("banner_image")
+            println("Image url--$bannner_img")
+
+            //desc=extras.getString("desc");
+            //title=extras.getString("title");
+            if (bannner_img != "") {
+                bannerUrlImageArray.add(bannner_img)
+            }
+        }
+        relativeHeader = findViewById<View>(R.id.relativeHeader) as RelativeLayout
+        mTermsCalendarListView = findViewById<View>(R.id.mTermsCalendarListView) as ListView
+        bannerImagePager = findViewById<View>(R.id.bannerImageViewPager) as ImageView
+        //        bannerImagePager= (ViewPager) findViewById(R.id.bannerImageViewPager);
+        bannerImagePager!!.visibility = View.GONE
+
+
+
+        mTermsCalendarListView!!.onItemClickListener = this
+        back!!.setOnClickListener {
+          //  AppUtils.hideKeyBoard(mContext)
+            finish()
+        }
+
+        home!!.setOnClickListener {
+            val `in` = Intent(
+                mContext,
+                HomeActivity::class.java
+            )
+            `in`.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP)
+            startActivity(`in`)
+        }
+        //        bannerImagePager.setAdapter(new ImagePagerDrawableAdapter(bannerUrlImageArray, mContext));
+        Glide.with(mContext!!).load(ConstantFunctions.replace(bannner_img!!)).centerCrop()
+            .into(bannerImagePager!!)
+        val recyclerViewAdapter = AccreditationsRecyclerViewAdapter(mContext, mAboutUsListArray!!)
+        mTermsCalendarListView!!.adapter = recyclerViewAdapter
+    }
+}
\ No newline at end of file
Index: app/src/main/res/values/strings.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><resources>\n    <string name=\"app_name\">NAS Abu Dhabi</string>\n\n    <string-array name=\"navigation_item_names\">\n        <item>Home</item>\n        <item>Notifications</item>\n        <item>Calendar</item>\n        <item>Absence &amp; Early Pickup</item>\n        <item>Payments</item>\n        <item>Lunch Box</item>\n        <item>Parent Essentials</item>\n        <item>Early Years</item>\n        <item>Primary</item>\n        <item>Secondary</item>\n        <item>Enrichment</item>\n        <item>Parent Meetings</item>\n        <item>Permission Forms</item>\n        <item>Gallery</item>\n        <item>About Us</item>\n        <item>Contact Us</item>\n\n\n\n    </string-array>\n    <string name=\"loading\">Loading&#8230;</string>\n    <string-array name=\"navigation_item_icons\">\n        <item>@drawable/home</item>\n        <item>@drawable/notif</item>\n        <item>@drawable/calendar</item>\n        <item>@drawable/absence</item>\n        <item>@drawable/payment</item>\n        <item>@drawable/lunchbox_icon</item>\n        <item>@drawable/parent</item>\n        <item>@drawable/earlyyears</item>\n        <item>@drawable/primary</item>\n        <item>@drawable/secondary</item>\n        <item>@drawable/ccas</item>\n        <item>@drawable/parentevening</item>\n        <item>@drawable/permission_slip</item>\n        <item>@drawable/gallery</item>\n        <item>@drawable/aboutus</item>\n        <item>@drawable/contacts</item>\n\n\n\n    </string-array>\n    <string name=\"default_notification_channel_id\" translatable=\"false\">fcm_default_channel</string>\n    <string name=\"settings\">Settings</string>\n    <string name=\"username\">USER EMAIL</string>\n    <string name=\"password\">PASSWORD</string>\n    <string name=\"enter_email\">Please enter Email.</string>\n    <string name=\"enter_password\">Please enter Password.</string>\n    <string name=\"enter_valid_email\">Please enter a vaild Email.</string>\n    <string name=\"alert\">Alert</string>\n    <string name=\"sign_up\">Sign Up</string>\n    <string name=\"email\">Email</string>\n    <string name=\"success\">Success</string>\n    <string name=\"comming_up\">Coming Up</string>\n    <string name=\"may_be_later\">Maybe later</string>\n    <string name=\"cancel\">Cancel</string>\n    <string name=\"submit\">Submit</string>\n    <string name=\"forget_password\">Forget Password</string>\n    <string name=\"network_error\">Network Error</string>\n    <string name=\"network_error_msg\">Network error occurred. Please check your internet connection and try again later</string>\n    <string name=\"feature_only_for_registered_user\">This feature is only available for registered users.</string>\n    <string name=\"null_value\"></string>\n\n    <!--Settings-->\n    <string name=\"change_app_settings\">Change App Settings</string>\n    <string name=\"terms_of_service\">Terms of Service</string>\n    <string name=\"email_us\">Email Us</string>\n    <string name=\"tutorial\">Tutorial</string>\n    <string name=\"survey\">Survey</string>\n    <string name=\"change_password\">Change Password</string>\n    <string name=\"delete_my_account\">Delete My Account</string>\n    <string name=\"logout\">Logout</string>\n    <string name=\"do_you_logout\">Do you want to logout?</string>\n    <string name=\"do_you_delete\">Do you want to delete your account?</string>\n    <string name=\"confirm\">Confirm</string>\n    <string name=\"password_not_match\">Your new password and confirm password doesn\\'t match</string>\n    <string name=\"enter_current_password\">Enter your current password</string>\n    <string name=\"enter_new_password\">Enter your new password</string>\n    <string name=\"confirm_password\">Kindly confirm your new password</string>\n    <string name=\"enter_subject\">Please enter your subject</string>\n    <string name=\"enter_content\">Please enter your content</string>\n\n    <string name=\"hello_blank_fragment\">Hello blank fragment</string>\n    <string name=\"add_cal_success\">Event added to device calendar</string>\n    <string name=\"del_cal_success\">Event removed from device calendar</string>\n    <string name=\"del_cal_fail\">Event deletion failed</string>\n    <string name=\"add_all_cal_success\">Added all events to device calendar</string>\n    <string name=\"del_all_cal_success\">Removed all events from device calendar</string>\n    <string name=\"no_evnt_details\">Not enough details to add to calendar</string>\n    <string name=\"datexpirecontact\">Booking and cancellation date is over</string>\n\n    <string-array name=\"month31\">\n        <item>1</item>\n        <item>2</item>\n        <item>3</item>\n        <item>4</item>\n        <item>5</item>\n        <item>6</item>\n        <item>7</item>\n        <item>8</item>\n        <item>9</item>\n        <item>10</item>\n        <item>11</item>\n        <item>12</item>\n        <item>13</item>\n        <item>14</item>\n        <item>15</item>\n        <item>16</item>\n        <item>17</item>\n        <item>18</item>\n        <item>19</item>\n        <item>20</item>\n        <item>21</item>\n        <item>22</item>\n        <item>23</item>\n        <item>24</item>\n        <item>25</item>\n        <item>26</item>\n        <item>27</item>\n        <item>28</item>\n        <item>29</item>\n        <item>30</item>\n        <item>31</item>\n    </string-array>\n\n    <string-array name=\"month30\">\n        <item>1</item>\n        <item>2</item>\n        <item>3</item>\n        <item>4</item>\n        <item>5</item>\n        <item>6</item>\n        <item>7</item>\n        <item>8</item>\n        <item>9</item>\n        <item>10</item>\n        <item>11</item>\n        <item>12</item>\n        <item>13</item>\n        <item>14</item>\n        <item>15</item>\n        <item>16</item>\n        <item>17</item>\n        <item>18</item>\n        <item>19</item>\n        <item>20</item>\n        <item>21</item>\n        <item>22</item>\n        <item>23</item>\n        <item>24</item>\n        <item>25</item>\n        <item>26</item>\n        <item>27</item>\n        <item>28</item>\n        <item>29</item>\n        <item>30</item>\n    </string-array>\n    <string-array name=\"day\">\n        <item>DAY</item>\n    </string-array>\n    <string-array name=\"month29\">\n        <item>1</item>\n        <item>2</item>\n        <item>3</item>\n        <item>4</item>\n        <item>5</item>\n        <item>6</item>\n        <item>7</item>\n        <item>8</item>\n        <item>9</item>\n        <item>10</item>\n        <item>11</item>\n        <item>12</item>\n        <item>13</item>\n        <item>14</item>\n        <item>15</item>\n        <item>16</item>\n        <item>17</item>\n        <item>18</item>\n        <item>19</item>\n        <item>20</item>\n        <item>21</item>\n        <item>22</item>\n        <item>23</item>\n        <item>24</item>\n        <item>25</item>\n        <item>26</item>\n        <item>27</item>\n        <item>28</item>\n        <item>29</item>\n    </string-array>\n    <string-array name=\"month28\">\n        <item>1</item>\n        <item>2</item>\n        <item>3</item>\n        <item>4</item>\n        <item>5</item>\n        <item>6</item>\n        <item>7</item>\n        <item>8</item>\n        <item>9</item>\n        <item>10</item>\n        <item>11</item>\n        <item>12</item>\n        <item>13</item>\n        <item>14</item>\n        <item>15</item>\n        <item>16</item>\n        <item>17</item>\n        <item>18</item>\n        <item>19</item>\n        <item>20</item>\n        <item>21</item>\n        <item>22</item>\n        <item>23</item>\n        <item>24</item>\n        <item>25</item>\n        <item>26</item>\n        <item>26</item>\n        <item>27</item>\n        <item>28</item>\n    </string-array>\n    <string name=\"january\">January</string>\n    <string name=\"february\">February</string>\n    <string name=\"march\">March</string>\n    <string name=\"april\">April</string>\n    <string name=\"may\">May</string>\n    <string name=\"june\">June</string>\n    <string name=\"july\">July</string>\n    <string name=\"august\">August</string>\n    <string name=\"september\">September</string>\n    <string name=\"october\">October</string>\n    <string name=\"november\">November</string>\n    <string name=\"december\">December</string>\n    <string name=\"monday\">MON</string>\n    <string name=\"tuesday\">TUE</string>\n    <string name=\"wednesday\">WED</string>\n    <string name=\"thursday\">THU</string>\n    <string name=\"friday\">FRI</string>\n    <string name=\"saturday\">SAT</string>\n    <string name=\"sunday\">SUN</string>\n    <string name=\"jan_short\">JAN</string>\n    <string name=\"feb_short\">FEB</string>\n    <string name=\"mar_short\">MAR</string>\n    <string name=\"apr_short\">APR</string>\n    <string name=\"may_short\">MAY</string>\n    <string name=\"jun_short\">JUN</string>\n    <string name=\"jul_short\">JUL</string>\n    <string name=\"aug_short\">AUG</string>\n    <string name=\"sep_short\">SEP</string>\n    <string name=\"oct_short\">OCT</string>\n    <string name=\"nov_short\">NOV</string>\n    <string name=\"dec_short\">DEC</string>\n\n    <string-array name=\"Months\">\n        <item> January </item>\n        <item> February </item>\n        <item> March </item>\n        <item> April </item>\n        <item> May </item>\n        <item> June </item>\n        <item> July </item>\n        <item> August </item>\n        <item> September </item>\n        <item> October </item>\n        <item> November </item>\n        <item> December </item>\n    </string-array>\n    <string-array name=\"Weeks\">\n        <item> Sun</item>\n        <item> Mon</item>\n        <item> Tue</item>\n        <item> Wed</item>\n        <item> Thur</item>\n        <item> Fri</item>\n        <item> Sat</item>\n    </string-array>\n    <string name=\"review_confirm\"><![CDATA[Review & Confirm]]></string>\n\n    <array name=\"calendar_row_colors\">\n        <item>@color/cal_row_1</item>\n        <item>@color/cal_row_2</item>\n        <item>@color/cal_row_3</item>\n        <item>@color/cal_row_4</item>\n    </array>\n\n    <string name=\"Enrichment\">Enrichment</string>\n    <string name=\"common_error\">Cannot continue. Please try again later</string>\n\n\n\n    <string name=\"aed\">AED</string>\n    <string name=\"add_to_wallet\">Add to Wallet</string>\n    <string name=\"enter_amount\">Enter Amount</string>\n\n    <string name=\"new_version_available\">New Version Available</string>\n    <string name=\"deltechoicealertques\">\"    Do you want to delete this choice?\"</string>\n\n    <string name=\"force_update\">There is a newer version available for download! Please update the app by visiting the Google Play Store</string>\n    <string name=\"appregisteredHint\">App Registered Absences</string>\n    <string name=\"regNewAbsence\">Register New Absence</string>\n    <string name=\"regEarlypickup\">Register Early Pickup</string>\n    <string name=\"requestHint\">If you need to cancel a registered absence/early pickup please contact reception (phone or email).</string>\n\n\n\n</resources>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/values/strings.xml b/app/src/main/res/values/strings.xml
--- a/app/src/main/res/values/strings.xml	(revision 29dbbedb1ce8c3fe2a8032d242fcce101acbc7b5)
+++ b/app/src/main/res/values/strings.xml	(date 1690880592974)
@@ -5,19 +5,20 @@
         <item>Home</item>
         <item>Notifications</item>
         <item>Calendar</item>
-        <item>Absence &amp; Early Pickup</item>
         <item>Payments</item>
         <item>Lunch Box</item>
         <item>Parent Essentials</item>
+        <item>Absence &amp; Early Pickup</item>
         <item>Early Years</item>
         <item>Primary</item>
         <item>Secondary</item>
+        <item>Permission Forms</item>
         <item>Enrichment</item>
         <item>Parent Meetings</item>
-        <item>Permission Forms</item>
         <item>Gallery</item>
+        <item>Contact Us</item>
         <item>About Us</item>
-        <item>Contact Us</item>
+
 
 
 
@@ -27,19 +28,20 @@
         <item>@drawable/home</item>
         <item>@drawable/notif</item>
         <item>@drawable/calendar</item>
-        <item>@drawable/absence</item>
         <item>@drawable/payment</item>
         <item>@drawable/lunchbox_icon</item>
         <item>@drawable/parent</item>
+        <item>@drawable/absence</item>
         <item>@drawable/earlyyears</item>
         <item>@drawable/primary</item>
         <item>@drawable/secondary</item>
+        <item>@drawable/permission_slip</item>
         <item>@drawable/ccas</item>
         <item>@drawable/parentevening</item>
-        <item>@drawable/permission_slip</item>
         <item>@drawable/gallery</item>
+        <item>@drawable/contacts</item>
         <item>@drawable/aboutus</item>
-        <item>@drawable/contacts</item>
+
 
 
 
@@ -291,6 +293,7 @@
     <string name="Enrichment">Enrichment</string>
     <string name="common_error">Cannot continue. Please try again later</string>
 
+    <string name="introduction">Introduction:</string>
 
 
     <string name="aed">AED</string>
Index: app/src/main/res/layout/fragment_absence_pickup.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\n<androidx.constraintlayout.widget.ConstraintLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n    xmlns:tools=\"http://schemas.android.com/tools\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    android:background=\"@color/white\">\n\n    <include\n        android:id=\"@+id/includeRel\"\n        layout=\"@layout/header_bar_fragment\"\n        app:layout_constraintEnd_toEndOf=\"parent\"\n        app:layout_constraintStart_toStartOf=\"parent\"\n        app:layout_constraintTop_toTopOf=\"parent\" />\n\n    <LinearLayout\n        android:id=\"@+id/studentSpinner\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"45dp\"\n        android:layout_gravity=\"center\"\n        android:layout_marginLeft=\"10dp\"\n        android:layout_marginTop=\"10dp\"\n        android:layout_marginRight=\"10dp\"\n        android:background=\"@drawable/event_spinnerbg\"\n        android:gravity=\"center\"\n        android:orientation=\"horizontal\"\n        android:weightSum=\"100\"\n        app:layout_constraintEnd_toEndOf=\"parent\"\n        app:layout_constraintStart_toStartOf=\"parent\"\n        app:layout_constraintTop_toBottomOf=\"@id/includeRel\">\n\n        <ImageView\n            android:id=\"@+id/imagicon\"\n            android:layout_width=\"35dp\"\n            android:layout_height=\"35dp\"\n            android:layout_margin=\"5dp\"\n            android:gravity=\"center\"\n            android:padding=\"5dp\"\n            android:scaleType=\"fitCenter\"\n            android:src=\"@drawable/boy\" />\n\n        <com.nas.alreem.commonviews.CustomTextViewRegular\n            android:id=\"@+id/studentName\"\n            android:layout_width=\"0dp\"\n            android:layout_height=\"match_parent\"\n            android:layout_weight=\"80\"\n            android:gravity=\"left|center\"\n            android:paddingLeft=\"10dp\"\n            android:text=\"Select a child\"\n            android:textSize=\"16sp\" />\n\n        <View\n            android:layout_width=\"0dp\"\n            android:layout_height=\"match_parent\"\n            android:layout_weight=\"8\"></View>\n\n        <ImageView\n            android:layout_width=\"0dp\"\n            android:layout_height=\"30dp\"\n            android:layout_gravity=\"right|center\"\n            android:layout_weight=\"12\"\n            android:src=\"@drawable/arrowdownnew\"\n            android:visibility=\"visible\" />\n\n    </LinearLayout>\n\n    <LinearLayout\n        android:id=\"@+id/select_cat\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"40dp\"\n        android:layout_below=\"@+id/studentSpinner\"\n        android:layout_marginLeft=\"30dp\"\n        android:layout_marginTop=\"10dp\"\n        android:layout_marginRight=\"30dp\"\n        android:layout_marginBottom=\"10dp\"\n        android:background=\"@drawable/event_greyfill\"\n        android:orientation=\"horizontal\"\n        app:layout_constraintEnd_toEndOf=\"parent\"\n        app:layout_constraintStart_toStartOf=\"parent\"\n        app:layout_constraintTop_toBottomOf=\"@id/studentSpinner\">\n\n        <com.nas.alreem.commonviews.CustomTextViewRegular\n            android:id=\"@+id/absenc_btn\"\n            android:layout_width=\"0dp\"\n            android:layout_height=\"match_parent\"\n            android:layout_marginLeft=\"4dp\"\n            android:layout_marginTop=\"4dp\"\n            android:layout_marginBottom=\"4dp\"\n            android:layout_weight=\".5\"\n            android:background=\"@drawable/event_spinnerfill\"\n            android:gravity=\"center\"\n            android:text=\"Registered Absence\"\n            android:textColor=\"@color/black\" />\n\n        <com.nas.alreem.commonviews.CustomTextViewRegular\n            android:id=\"@+id/earlypickup_btn\"\n            android:layout_width=\"0dp\"\n            android:layout_height=\"match_parent\"\n            android:layout_marginTop=\"4dp\"\n            android:layout_marginRight=\"4dp\"\n            android:layout_marginBottom=\"4dp\"\n            android:layout_weight=\".5\"\n            android:gravity=\"center\"\n            android:text=\"Early Pickup\"\n            android:textColor=\"@color/black\" />\n\n    </LinearLayout>\n\n    <com.nas.alreem.commonviews.CustomTextViewRegular\n        android:id=\"@+id/appregisteredHint\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\"\n        android:layout_marginStart=\"5dp\"\n        android:layout_marginTop=\"5dp\"\n        android:layout_marginEnd=\"5dp\"\n        android:layout_marginBottom=\"5dp\"\n        android:gravity=\"center\"\n        android:text=\"@string/appregisteredHint\"\n        android:textColor=\"@color/black\"\n        android:textSize=\"16dp\"\n        android:visibility=\"visible\"\n        app:layout_constraintEnd_toEndOf=\"parent\"\n        app:layout_constraintStart_toStartOf=\"parent\"\n        app:layout_constraintTop_toBottomOf=\"@+id/select_cat\" />\n\n    <View\n        android:id=\"@+id/viewDivider\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"1dp\"\n        android:layout_marginLeft=\"10dp\"\n        android:layout_marginRight=\"10dp\"\n        android:background=\"@color/rel_eight\"\n        app:layout_constraintEnd_toEndOf=\"parent\"\n        app:layout_constraintStart_toStartOf=\"@+id/appregisteredHint\"\n        app:layout_constraintTop_toBottomOf=\"@+id/appregisteredHint\">\n\n    </View>\n\n    <androidx.constraintlayout.widget.Guideline\n        android:id=\"@+id/guideline\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:orientation=\"horizontal\"\n        app:layout_constraintGuide_percent=\"0.84\" />\n\n    <ProgressBar\n        android:id=\"@+id/progressDialogAdd\"\n        android:layout_width=\"40dp\"\n        android:layout_height=\"40dp\"\n        android:layout_centerInParent=\"true\"\n        android:indeterminateDrawable=\"@anim/customspinner\"\n        android:visibility=\"visible\"\n\n        app:layout_constraintBottom_toTopOf=\"@+id/newRequestAbsence\"\n        app:layout_constraintEnd_toEndOf=\"@+id/linearLayout\"\n        app:layout_constraintStart_toStartOf=\"@+id/linearLayout\"\n        app:layout_constraintTop_toBottomOf=\"@+id/appregisteredHint\" />\n\n    <LinearLayout\n        android:id=\"@+id/linearLayout\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"0dp\"\n        app:layout_constraintBottom_toTopOf=\"@+id/guideline\"\n        app:layout_constraintEnd_toEndOf=\"parent\"\n        app:layout_constraintStart_toStartOf=\"parent\"\n        app:layout_constraintTop_toBottomOf=\"@+id/viewDivider\"\n        tools:ignore=\"Orientation\">\n\n        <androidx.recyclerview.widget.RecyclerView\n            android:id=\"@+id/mAbsenceListView\"\n            style=\"@style/ListStyleBlackTextTransparentSelector\"\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"match_parent\"\n            android:layout_below=\"@+id/viewDivider\" />\n\n        <androidx.recyclerview.widget.RecyclerView\n            android:id=\"@+id/mPickupListView\"\n            style=\"@style/ListStyleBlackTextTransparentSelector\"\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"match_parent\"\n            android:layout_above=\"@+id/newRequestAbsence\"\n            android:layout_below=\"@+id/viewDivider\"\n            android:visibility=\"gone\" />\n    </LinearLayout>\n\n    <com.nas.alreem.commonviews.CustomTextViewSemiBold\n        android:id=\"@+id/newRequestAbsence\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\"\n        android:layout_marginStart=\"10dp\"\n        android:layout_marginTop=\"10dp\"\n        android:layout_marginEnd=\"10dp\"\n        android:layout_marginBottom=\"10dp\"\n        android:background=\"@drawable/buttonred_new\"\n        android:gravity=\"center\"\n        android:padding=\"10dp\"\n        android:text=\"@string/regNewAbsence\"\n        android:textColor=\"@color/white\"\n        android:textSize=\"18dp\"\n        android:visibility=\"visible\"\n        app:layout_constraintEnd_toEndOf=\"parent\"\n        app:layout_constraintStart_toStartOf=\"parent\"\n        app:layout_constraintTop_toBottomOf=\"@id/guideline\" />\n\n    <com.nas.alreem.commonviews.CustomTextViewSemiBold\n        android:id=\"@+id/newRequestEarly\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\"\n        android:layout_marginStart=\"10dp\"\n        android:layout_marginTop=\"10dp\"\n        android:layout_marginEnd=\"10dp\"\n        android:layout_marginBottom=\"10dp\"\n        android:background=\"@drawable/buttonred_new\"\n        android:gravity=\"center\"\n        android:padding=\"10dp\"\n        android:text=\"@string/regEarlypickup\"\n        android:textColor=\"@color/white\"\n        android:textSize=\"18dp\"\n        android:visibility=\"gone\"\n        app:layout_constraintEnd_toEndOf=\"parent\"\n        app:layout_constraintStart_toStartOf=\"parent\"\n        app:layout_constraintTop_toBottomOf=\"@id/guideline\" />\n\n    <Button\n        android:id=\"@+id/button\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\"\n        android:layout_alignParentBottom=\"true\"\n        android:alpha=\"0.1\"\n        android:background=\"@null\"\n        android:clickable=\"true\"\n        android:contextClickable=\"false\"\n        android:gravity=\"left|center_vertical\"\n        app:layout_constraintBottom_toBottomOf=\"parent\"\n        app:layout_constraintEnd_toEndOf=\"parent\"\n        app:layout_constraintStart_toStartOf=\"parent\" />\n\n    <com.nas.alreem.commonviews.CustomTextViewRegular\n        android:id=\"@+id/requestHint\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\"\n        android:gravity=\"left|center_vertical\"\n        android:text=\"@string/requestHint\"\n        android:textColor=\"@color/rel_eight\"\n        android:textSize=\"16dp\"\n        android:layout_marginLeft=\"10dp\"\n        android:layout_marginRight=\"10dp\"\n        android:layout_marginBottom=\"10dp\"\n        android:visibility=\"visible\"\n        app:layout_constraintBottom_toBottomOf=\"@+id/button\"\n        app:layout_constraintEnd_toEndOf=\"parent\"\n        app:layout_constraintStart_toStartOf=\"parent\"\n        app:layout_constraintTop_toTopOf=\"@id/guideline5\" />\n\n    <androidx.constraintlayout.widget.Guideline\n        android:id=\"@+id/guideline5\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:orientation=\"horizontal\"\n        app:layout_constraintGuide_percent=\"0.91\" />\n</androidx.constraintlayout.widget.ConstraintLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/fragment_absence_pickup.xml b/app/src/main/res/layout/fragment_absence_pickup.xml
--- a/app/src/main/res/layout/fragment_absence_pickup.xml	(revision 29dbbedb1ce8c3fe2a8032d242fcce101acbc7b5)
+++ b/app/src/main/res/layout/fragment_absence_pickup.xml	(date 1690523500427)
@@ -257,5 +257,5 @@
         android:layout_width="wrap_content"
         android:layout_height="wrap_content"
         android:orientation="horizontal"
-        app:layout_constraintGuide_percent="0.91" />
+        app:layout_constraintGuide_percent="0.94" />
 </androidx.constraintlayout.widget.ConstraintLayout>
\ No newline at end of file
Index: app/src/main/java/com/nas/alreem/activity/notifications/VideoMessageActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.nas.alreem.activity.notifications\n\nimport android.app.Activity\nimport android.content.Context\nimport android.content.Intent\nimport android.graphics.Bitmap\nimport android.graphics.Color\nimport android.os.Bundle\nimport android.util.Log\nimport android.view.View\nimport android.view.animation.Animation\nimport android.view.animation.AnimationUtils\nimport android.webkit.WebChromeClient\nimport android.webkit.WebSettings\nimport android.webkit.WebSettings.PluginState\nimport android.webkit.WebView\nimport android.webkit.WebViewClient\nimport android.widget.ImageView\nimport android.widget.ProgressBar\nimport android.widget.RelativeLayout\nimport android.widget.TextView\nimport androidx.appcompat.app.AppCompatActivity\nimport com.nas.alreem.R\nimport com.nas.alreem.activity.home.HomeActivity\nimport com.nas.alreem.activity.notifications.model.MessageDetailApiModel\nimport com.nas.alreem.activity.notifications.model.MessageDetailModel\nimport com.nas.alreem.constants.ConstantFunctions\nimport com.nas.alreem.constants.DialogFunctions\nimport com.nas.alreem.constants.PreferenceManager\nimport com.nas.alreem.rest.ApiClient\n\nimport retrofit2.Call\nimport retrofit2.Callback\nimport retrofit2.Response\nimport java.text.DateFormat\nimport java.text.SimpleDateFormat\nimport java.util.*\n\nprivate lateinit var relativeHeader: RelativeLayout\nprivate lateinit var backRelative: RelativeLayout\nprivate lateinit var logoClickImgView: ImageView\nprivate lateinit var btn_left: ImageView\nprivate lateinit var heading: TextView\nprivate lateinit var textcontent: WebView\nprivate lateinit var webView: WebView\nprivate lateinit var proWebView: ProgressBar\nclass VideoMessageActivity : AppCompatActivity(){\n    lateinit var mContext: Context\n    var id:String=\"\"\n    var title:String=\"\"\n    var idApi:String=\"\"\n    var titleApi:String=\"\"\n    var message:String=\"\"\n    var url:String=\"\"\n    var date:String=\"\"\n\n    override fun onCreate(savedInstanceState: Bundle?)\n    {\n        super.onCreate(savedInstanceState)\n        setContentView(R.layout.activity_video_message)\n        mContext=this\n\n        id=intent.getStringExtra(\"id\").toString()\n        title=intent.getStringExtra(\"title\").toString()\n        initUI()\n        callMessageDetailAPI()\n        getSettings()\n\n    }\n    fun initUI() {\n        relativeHeader = findViewById(R.id.relativeHeader)\n        heading = findViewById(R.id.heading)\n        btn_left = findViewById(R.id.btn_left)\n        logoClickImgView = findViewById(R.id.logoClickImgView)\n        textcontent = findViewById(R.id.txtContent)\n        webView = findViewById(R.id.webView)\n        proWebView = findViewById(R.id.progressDialog)\n        backRelative = findViewById(R.id.backRelative)\n        textcontent.visibility=View.INVISIBLE\n        heading.text = \"Notification\"\n        btn_left.setOnClickListener(View.OnClickListener {\n            finish()\n        })\n        backRelative.setOnClickListener(View.OnClickListener {\n            finish()\n        })\n        logoClickImgView.setOnClickListener(View.OnClickListener {\n            val intent = Intent(mContext, HomeActivity::class.java)\n            intent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP)\n            startActivity(intent)\n        })\n//        val aniRotate: Animation =\n//            AnimationUtils.loadAnimation(mContext, R.anim.linear_interpolator)\n//        progressDialog.startAnimation(aniRotate)\n    }\n    fun callMessageDetailAPI()\n    {\n        val token = PreferenceManager.getaccesstoken(mContext)\n        val studentbody= MessageDetailApiModel(id)\n        val call: Call<MessageDetailModel> = ApiClient.getClient.notifictaionDetail(studentbody,\"Bearer \"+token)\n        call.enqueue(object : Callback<MessageDetailModel> {\n            override fun onFailure(call: Call<MessageDetailModel>, t: Throwable) {\n//                progressDialog.visibility = View.GONE\n                Log.e(\"Error\", t.localizedMessage)\n            }\n            override fun onResponse(call: Call<MessageDetailModel>, response: Response<MessageDetailModel>) {\n//                progressDialog.visibility = View.GONE\n                if (response.body()!!.status==100)\n                {\n                    idApi=id\n                    titleApi=title\n                    message=response.body()!!.responseArray.notificationArray.message\n                    url=response.body()!!.responseArray.notificationArray.url\n                    date=response.body()!!.responseArray.notificationArray.created_at\n                    val inputFormat: DateFormat = SimpleDateFormat(\"yyyy-MM-dd HH:mm:ss\")\n                    val outputFormat: DateFormat = SimpleDateFormat(\"hh:mm a\")\n                    val outputFormatdate: DateFormat = SimpleDateFormat(\"dd-MMM-yyyy\")\n                    val inputDateStr = date\n                    val date: Date = inputFormat.parse(inputDateStr)\n                    val outputDateStr: String = outputFormat.format(date)\n                    val outputDateStr1: String = outputFormatdate.format(date)\n                    var pushNotificationDetail=\"<!DOCTYPE html>\\n\"+\n                            \"<html>\\n\" +\n                            \"<head>\\n\" +\n                            \"<style>\\n\" +\n                            \"\\n\" +\n                            \"@font-face {\\n\" +\n                            \"font-family: SourceSansPro-Semibold;\" +\n                            \"src: url(SourceSansPro-Semibold.ttf);\" +\n\n                            \"font-family: SourceSansPro-Regular;\" +\n                            \"src: url(SourceSansPro-Regular.ttf);\" +\n                            \"}\" +\n                            \".title {\" +\n                            \"font-family: SourceSansPro-Regular;\" +\n                            \"font-size:16px;\" +\n                            \"text-align:left;\" +\n                            \"color:\t#46C1D0;\" +\n                            \"text-align: ####TEXT_ALIGN####;\" +\n                            \"}\" +\n                            \".description {\" +\n                            \"font-family: SourceSansPro-Semibold;\" +\n                            \"text-align:justify;\" +\n                            \"font-size:14px;\" +\n                            \"color: #000000;\" +\n                            \"text-align: ####TEXT_ALIGN####;\" +\n                            \"}\" +\n                            \"</style>\\n\" + \"</head>\" +\n                            \"<body>\" +\n                            \"<p class='title'>\"+title\n\n                    pushNotificationDetail=pushNotificationDetail+ \"<p class='description'>\" +outputDateStr1 +\" \"+outputDateStr+  \"</p>\"\n                    if (!url.equals(\"\"))\n                    {\n                        pushNotificationDetail=pushNotificationDetail+\"<center><img src='\" + url + \"'width='100%', height='auto'>\"\n                    }\n                    pushNotificationDetail=pushNotificationDetail+\"</body>\\n</html>\"\n                    webView.webViewClient = HelloWebViewClient()\n                    webView.settings.javaScriptEnabled = true\n                    webView.settings.pluginState = PluginState.ON\n                    webView.settings.builtInZoomControls = false\n                    webView.settings.displayZoomControls = true\n                    webView.webViewClient = HelloWebViewClient()\n                    textcontent.settings.javaScriptEnabled = true\n                    textcontent.settings.pluginState = PluginState.ON\n                    textcontent.settings.builtInZoomControls = false\n                    textcontent.settings.displayZoomControls = true\n                    textcontent.loadData(\n                        pushNotificationDetail,\n                        \"text/html; charset=utf-8\",\n                        \"utf-8\"\n                    )\n                    var frameVideo= \"<html>\" + \"<br><iframe width=\\\"320\\\" height=\\\"250\\\" src=\\\"\"\n                    var url_Video= frameVideo+url+\"\\\" frameborder=\\\"0\\\" allowfullscreen></iframe></body></html>\"\n                    var urlYoutube=url_Video.replace(\"watch?v=\", \"embed/\")\n                    webView.loadData(urlYoutube, \"text/html\", \"utf-8\")\n                    proWebView.visibility = View.VISIBLE\n\n                }\n                else\n                {\n\n                    DialogFunctions.commonErrorAlertDialog(mContext.resources.getString(R.string.alert), ConstantFunctions.commonErrorString(response.body()!!.status), mContext)\n                }\n            }\n\n        })\n    }\n\n    fun getSettings()\n    {\n        webView.settings.javaScriptEnabled = true\n        webView.settings.setSupportZoom(false)\n        webView.settings.cacheMode=WebSettings.LOAD_NO_CACHE\n        webView.settings.javaScriptCanOpenWindowsAutomatically = true\n        webView.settings.domStorageEnabled = true\n        webView.settings.databaseEnabled = true\n        webView.settings.defaultTextEncodingName = \"utf-8\"\n        webView.settings.loadsImagesAutomatically = true\n        webView.settings.cacheMode = WebSettings.LOAD_NO_CACHE\n        webView.settings.allowFileAccess = true\n        webView.setBackgroundColor(Color.TRANSPARENT)\n        webView.setLayerType(WebView.LAYER_TYPE_SOFTWARE, null)\n\n\n        webView.webChromeClient = object : WebChromeClient() {\n            override fun onProgressChanged(view: WebView, newProgress: Int) {\n                proWebView.visibility = View.VISIBLE\n                println(\"testing2\")\n                if (newProgress == 100)\n                {\n                    println(\"testing1\")\n                    proWebView.visibility = View.GONE\n\n                }\n            }\n        }\n    }\n\n    private class HelloWebViewClient : WebViewClient() {\n        override fun shouldOverrideUrlLoading(\n            view: WebView,\n            url: String\n        ): Boolean {\n            return true\n        }\n\n        override fun onPageFinished(view: WebView, url: String) {\n            // TODO Auto-generated method stub\n            super.onPageFinished(view, url)\n            proWebView.visibility = View.GONE\n            textcontent.visibility = View.VISIBLE\n        }\n    }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/nas/alreem/activity/notifications/VideoMessageActivity.kt b/app/src/main/java/com/nas/alreem/activity/notifications/VideoMessageActivity.kt
--- a/app/src/main/java/com/nas/alreem/activity/notifications/VideoMessageActivity.kt	(revision 29dbbedb1ce8c3fe2a8032d242fcce101acbc7b5)
+++ b/app/src/main/java/com/nas/alreem/activity/notifications/VideoMessageActivity.kt	(date 1690800036470)
@@ -64,7 +64,7 @@
         title=intent.getStringExtra("title").toString()
         initUI()
         callMessageDetailAPI()
-        getSettings()
+      //  getSettings()
 
     }
     fun initUI() {
@@ -155,16 +155,29 @@
                         pushNotificationDetail=pushNotificationDetail+"<center><img src='" + url + "'width='100%', height='auto'>"
                     }
                     pushNotificationDetail=pushNotificationDetail+"</body>\n</html>"
-                    webView.webViewClient = HelloWebViewClient()
+                    //webView.webViewClient = HelloWebViewClient()
                     webView.settings.javaScriptEnabled = true
                     webView.settings.pluginState = PluginState.ON
                     webView.settings.builtInZoomControls = false
                     webView.settings.displayZoomControls = true
-                    webView.webViewClient = HelloWebViewClient()
+                   // webView.webViewClient = HelloWebViewClient()
                     textcontent.settings.javaScriptEnabled = true
                     textcontent.settings.pluginState = PluginState.ON
                     textcontent.settings.builtInZoomControls = false
                     textcontent.settings.displayZoomControls = true
+
+                    webView.webChromeClient = object : WebChromeClient() {
+                        override fun onProgressChanged(view: WebView, newProgress: Int) {
+                            proWebView.visibility = View.VISIBLE
+                            println("testing2")
+                            if (newProgress == 100)
+                            {
+                                println("testing1")
+                                proWebView.visibility = View.GONE
+
+                            }
+                        }
+                    }
                     textcontent.loadData(
                         pushNotificationDetail,
                         "text/html; charset=utf-8",
Index: app/src/main/java/com/nas/alreem/activity/survey/SurveyListActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.nas.alreem.activity.survey\n\nimport android.annotation.SuppressLint\nimport android.app.Activity\nimport android.app.Dialog\nimport android.content.Context\nimport android.content.Intent\nimport android.graphics.Color\nimport android.graphics.PorterDuff\nimport android.graphics.drawable.ColorDrawable\nimport android.os.Build\nimport android.os.Bundle\nimport android.util.Log\nimport android.view.View\nimport android.view.Window\nimport android.widget.*\nimport androidx.annotation.RequiresApi\nimport androidx.appcompat.app.AppCompatActivity\nimport androidx.recyclerview.widget.DefaultItemAnimator\nimport androidx.recyclerview.widget.LinearLayoutManager\nimport androidx.recyclerview.widget.RecyclerView\nimport androidx.viewpager.widget.ViewPager\nimport com.bumptech.glide.Glide\nimport com.google.gson.Gson\nimport com.google.gson.JsonObject\nimport com.nas.alreem.R\nimport com.nas.alreem.activity.home.HomeActivity\nimport com.nas.alreem.activity.login.model.SignUpResponseModel\nimport com.nas.alreem.activity.survey.adapter.SurveyListAdapter\nimport com.nas.alreem.activity.survey.adapter.SurveyQuestionPagerAdapter\nimport com.nas.alreem.activity.survey.model.*\nimport com.nas.alreem.constants.*\nimport com.nas.alreem.fragment.payments.model.SendEmailApiModel\nimport com.nas.alreem.rest.ApiClient\nimport retrofit2.Call\nimport retrofit2.Callback\nimport retrofit2.Response\n\nclass SurveyListActivity: AppCompatActivity(){\n    lateinit var mContext: Context\n    lateinit var heading: TextView\n    lateinit var logoClickImgView: ImageView\n    lateinit var progressDialogAdd: ProgressBar\n    lateinit var backRelative: RelativeLayout\n    lateinit var mListView: RecyclerView\n    lateinit var surveyDetailQuestionsArrayList:ArrayList<SurveyQuestionsModel>\n    lateinit var surveyArrayList:ArrayList<SurveyListDataModel>\n    lateinit var  mAnswerList:ArrayList<SurveySubmitDataModel>\n    lateinit var surveyAnswersArrayList: ArrayList<SurveyOfferedAnswersModel>\n\n\n    lateinit var survey_name:String\n   var survey_ID:Int=0\n    lateinit var survey_image:String\n    lateinit var survey_title:String\n    lateinit var survey_description:String\n    lateinit var survey_contact_email:String\n    var currentPageSurvey=0\n    var survey_satisfation_status = 0\n    private var surveySize = 1\n\n    override fun onCreate(savedInstanceState: Bundle?)\n    {\n        super.onCreate(savedInstanceState)\n        setContentView(R.layout.activity_survey_list)\n        mContext=this\n        initUI()\n        if (ConstantFunctions.internetCheck(mContext))\n        {\n            progressDialogAdd.visibility= View.VISIBLE\n            callSurveyList()\n        }\n        else\n        {\n            DialogFunctions.showInternetAlertDialog(mContext)\n        }\n\n    }\n    fun initUI()\n    {\n\n        mListView=findViewById(R.id.mListView)\n        var linearLayoutManager = LinearLayoutManager(mContext)\n        mListView.layoutManager = linearLayoutManager\n        mListView.itemAnimator = DefaultItemAnimator()\n        progressDialogAdd=findViewById(R.id.progressDialogAdd)\n        heading=findViewById(R.id.heading)\n        logoClickImgView=findViewById(R.id.logoClickImgView)\n        backRelative=findViewById(R.id.backRelative)\n        heading.text=\"Survey\"\n        logoClickImgView.setOnClickListener(View.OnClickListener {\n            val intent = Intent(mContext, HomeActivity::class.java)\n            intent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP)\n            startActivity(intent)\n        })\n\n        backRelative.setOnClickListener(View.OnClickListener {\n            finish()\n        })\n        mListView.addOnItemClickListener(object : OnItemClickListener {\n            @SuppressLint(\"SimpleDateFormat\", \"SetTextI18n\")\n            @RequiresApi(Build.VERSION_CODES.O)\n            override fun onItemClicked(position: Int, view: View)\n            {\n\n                callSurveyDetailApi(surveyArrayList.get(position).id.toString())\n\n            }\n        })\n\n    }\n\n    fun callSurveyList()\n    {\n        progressDialogAdd.visibility= View.VISIBLE\n        surveyArrayList= ArrayList()\n        val call: Call<SurveyListResponseModel> = ApiClient.getClient.surveyList(\"Bearer \"+ PreferenceManager.getaccesstoken(mContext))\n        call.enqueue(object : Callback<SurveyListResponseModel> {\n            override fun onFailure(call: Call<SurveyListResponseModel>, t: Throwable) {\n                Log.e(\"Failed\", t.localizedMessage)\n                progressDialogAdd.visibility= View.GONE\n            }\n            override fun onResponse(call: Call<SurveyListResponseModel>, response: Response<SurveyListResponseModel>) {\n                val responsedata = response.body()\n                progressDialogAdd.visibility= View.GONE\n                if (responsedata != null) {\n                    try {\n\n                        if (response.body()!!.status==100)\n                        {\n\n                            if (response.body()!!.responseArray!!.data.size>0)\n                            {\n                                surveyArrayList=response.body()!!.responseArray!!.data\n                                mListView.adapter = SurveyListAdapter(response.body()!!.responseArray!!.data, mContext)\n                            }\n                            else{\n\n                            }\n                        }\n                        else\n                        {\n\n                            DialogFunctions.commonErrorAlertDialog(mContext.resources.getString(R.string.alert), ConstantFunctions.commonErrorString(response.body()!!.status), mContext)\n                        }\n\n\n                    } catch (e: Exception) {\n                        e.printStackTrace()\n                    }\n                }\n            }\n\n        })\n    }\n\n    fun callSurveyDetailApi(surveyID:String)\n    {\n        surveyDetailQuestionsArrayList= ArrayList()\n        currentPageSurvey=0\n        progressDialogAdd.visibility= View.VISIBLE\n        var model=SurveyDetailApiModel(surveyID)\n        val call: Call<SurveyDetailResponseModel> = ApiClient.getClient.surveyDetail(model,\"Bearer \"+ PreferenceManager.getaccesstoken(mContext))\n        call.enqueue(object : Callback<SurveyDetailResponseModel> {\n            override fun onFailure(call: Call<SurveyDetailResponseModel>, t: Throwable) {\n                Log.e(\"Failed\", t.localizedMessage)\n                progressDialogAdd.visibility= View.GONE\n            }\n            override fun onResponse(call: Call<SurveyDetailResponseModel>, response: Response<SurveyDetailResponseModel>) {\n                val responsedata = response.body()\n                progressDialogAdd.visibility= View.GONE\n                if (responsedata != null) {\n                    try {\n\n                        if (response.body()!!.status==100)\n                        {\n                            survey_name=response.body()!!.responseArray!!.data!!.survey_name\n                            survey_ID=response.body()!!.responseArray!!.data!!.id\n                            survey_image=response.body()!!.responseArray!!.data!!.image\n                            survey_title=response.body()!!.responseArray!!.data!!.title\n                            survey_description=response.body()!!.responseArray!!.data!!.description\n                            survey_contact_email=response.body()!!.responseArray!!.data!!.contact_email\n                          //  surveyDetailQuestionsArrayList= response.body()!!.responseArray!!.data!!.questions!!\n                            Log.e(\"surveyDetailQuestions\",surveyDetailQuestionsArrayList.size.toString())\n                            if (response.body()!!.responseArray!!.data!!.questions!!.size > 0) {\n\n                                for ( j in  response.body()!!.responseArray!!.data!!.questions!!.indices)\n                                {\n                                    val mModel = SurveyQuestionsModel()\n                                    mModel.id=(response.body()!!.responseArray!!.data!!.questions!!.get(j).id)\n                                    mModel.question=(response.body()!!.responseArray!!.data!!.questions!!.get(j).question)\n                                    mModel.answer_type=(response.body()!!.responseArray!!.data!!.questions!!.get(j).answer_type)\n                                    mModel.answer=(response.body()!!.responseArray!!.data!!.questions!!.get(j).answer)\n                                    surveyAnswersArrayList = ArrayList()\n                                    if(response.body()!!.responseArray!!.data!!.questions!!.get(j).offered_answers!!.size>0)\n                                    {\n                                        Log.e(\"insideif\",\"insideif\")\n                                        for (k in response.body()!!.responseArray!!.data!!.questions!!.get(j).offered_answers!!.indices)\n                                        {\n                                            Log.e(\"insidefor\",\"insidefor\")\n                                            val nModel = SurveyOfferedAnswersModel()\n                                            nModel.id=(response.body()!!.responseArray!!.data!!.questions!!.get(j).offered_answers!!.get(k).id)\n                                            nModel.answer=(response.body()!!.responseArray!!.data!!.questions!!.get(j).offered_answers!!.get(k).answer)\n                                            nModel.label=(response.body()!!.responseArray!!.data!!.questions!!.get(j).offered_answers!!.get(k).label)\n                                            Log.e(\"answer\",response.body()!!.responseArray!!.data!!.questions!!.get(j).answer)\n                                            Log.e(\"id\",\n                                                response.body()!!.responseArray!!.data!!.questions!!.get(j).offered_answers!!.get(k).id.toString()\n                                            )\n                                            if (response.body()!!.responseArray!!.data!!.questions!!.get(j).answer.equals(\n                                                    response.body()!!.responseArray!!.data!!.questions!!.get(j).offered_answers!!.get(k).id.toString())\n                                            ) {\n                                                Log.e(\"insideifanswer\",\"insideifanswer\")\n                                                nModel.is_clicked=(true)\n                                            } else {\n                                                nModel.is_clicked=(false)\n                                            }\n\n                                            surveyAnswersArrayList.add(nModel)\n                                        }\n                                        if (surveyAnswersArrayList.size > 0) {\n                                            Log.e(\"insideifanswersurvey\",\"insideifanswersurvey\")\n                                            var isPositionClicked = false\n                                            var position = -1\n                                            for (m in surveyAnswersArrayList.indices) {\n                                                if (surveyAnswersArrayList[m].is_clicked) {\n                                                    isPositionClicked = true\n                                                    position = m\n                                                }\n                                            }\n                                            if (isPositionClicked) {\n                                                Log.e(\"insideifanswersurveypos\",\"insideifanswersurveypos\")\n                                                if (position == 0) {\n                                                    surveyAnswersArrayList[0].is_clicked0=(true)\n                                                } else if (position == 1) {\n                                                    surveyAnswersArrayList[0].is_clicked0=(true)\n                                                    surveyAnswersArrayList[1].is_clicked0=(true)\n                                                } else if (position == 2) {\n                                                    surveyAnswersArrayList[0].is_clicked0=(true)\n                                                    surveyAnswersArrayList[1].is_clicked0=(true)\n                                                    surveyAnswersArrayList[2].is_clicked0=(true)\n                                                } else if (position == 3) {\n                                                    surveyAnswersArrayList[0].is_clicked0=(true)\n                                                    surveyAnswersArrayList[1].is_clicked0=(true)\n                                                    surveyAnswersArrayList[2].is_clicked0=(true)\n                                                    surveyAnswersArrayList[3].is_clicked0=(true)\n                                                } else if (position == 4) {\n                                                    surveyAnswersArrayList[0].is_clicked0=(true)\n                                                    surveyAnswersArrayList[1].is_clicked0=(true)\n                                                    surveyAnswersArrayList[2].is_clicked0=(true)\n                                                    surveyAnswersArrayList[3].is_clicked0=(true)\n                                                    surveyAnswersArrayList[4].is_clicked0=(true)\n                                                } else {\n                                                    surveyAnswersArrayList[0].is_clicked0=(false)\n                                                    surveyAnswersArrayList[1].is_clicked0=(false)\n                                                    surveyAnswersArrayList[2].is_clicked0=(false)\n                                                    surveyAnswersArrayList[3].is_clicked0=(false)\n                                                    surveyAnswersArrayList[4].is_clicked0=(false)\n                                                }\n                                            }\n                                        }\n                                    }\n                                    mModel.offered_answers=(surveyAnswersArrayList)\n                                    surveyDetailQuestionsArrayList.add(mModel)\n                                }\n                            }\n\n                            showWelcomeSurveyDialog()\n\n                        }\n                        else\n                        {\n\n                            DialogFunctions.commonErrorAlertDialog(mContext.resources.getString(R.string.alert), ConstantFunctions.commonErrorString(response.body()!!.status), mContext)\n                        }\n\n\n                    } catch (e: Exception) {\n                        e.printStackTrace()\n                    }\n                }\n            }\n\n        })\n    }\n\n    fun callSurveySubmitApi(\n        survey_ID: Int,\n        JSON_STRING: String,\n        activity: Any?,\n        surveyArrayList: ArrayList<SurveyListDataModel>,\n        isThankyou: Boolean,\n        status: Int,\n        mAnswerList: ArrayList<SurveySubmitDataModel>\n    )\n    {\n        progressDialogAdd.visibility= View.VISIBLE\n\n        surveyDetailQuestionsArrayList= ArrayList()\n        currentPageSurvey=0\n\n        val paramObject = JsonObject().apply {\n            addProperty(\"data\", JSON_STRING)\n            addProperty(\"survey_id\",survey_ID)\n            addProperty(\"survey_satisfaction_status\",status)\n\n        }\n\n        Log.e(\"paramobject\", paramObject.toString())\n        var model=SurveySubmitApiModel(survey_ID.toString(), status.toString(),mAnswerList)\n        Log.e(\"model\", model.toString())\n        Log.e(\"model\", model.id .toString())\n        Log.e(\"model\", model.survey_satisfaction_status.toString())\n        Log.e(\"model\", model.questions.toString())\n\n         val call: Call<SurveySubmitResponseModel> = ApiClient.getClient.surveysubmit(model,\"Bearer \"+ PreferenceManager.getaccesstoken(mContext))\n         call.enqueue(object : Callback<SurveySubmitResponseModel> {\n             override fun onFailure(call: Call<SurveySubmitResponseModel>, t: Throwable) {\n                 Log.e(\"Failed\", t.localizedMessage)\n                 progressDialogAdd.visibility= View.GONE\n             }\n             override fun onResponse(call: Call<SurveySubmitResponseModel>, response: Response<SurveySubmitResponseModel>) {\n                 val responsedata = response.body()\n                 progressDialogAdd.visibility= View.GONE\n                 if (responsedata != null) {\n                     try {\n\n                         if (response.body()!!.status==100)\n                         {\n\n                             showSurveyThankYouDialog(mContext as Activity, isThankyou)\n                         }\n                         else\n                         {\n\n                             DialogFunctions.commonErrorAlertDialog(mContext.resources.getString(R.string.alert), ConstantFunctions.commonErrorString(response.body()!!.status), mContext)\n                         }\n\n\n                     } catch (e: Exception) {\n                         e.printStackTrace()\n                     }\n                 }\n             }\n\n         })\n    }\n\n    fun showSurveyThankYouDialog(\n        activity: Activity?,\n      //  surveyArrayList: ArrayList<SurveyModel?>?,\n        isThankyou: Boolean\n    ) {\n        val dialog = Dialog(activity!!)\n        dialog.requestWindowFeature(Window.FEATURE_NO_TITLE)\n        dialog.window!!.setBackgroundDrawable(ColorDrawable(Color.TRANSPARENT))\n        dialog.setCancelable(false)\n        dialog.setContentView(R.layout.dialog_survey_thank_you)\n        survey_satisfation_status = 0\n        //callSurveySubmitApi(URL_SURVEY_SUBMIT,surveyId,jsonData,getActivity(),surveyArrayList,isThankyou,survey_satisfation_status,dialog);\n        val btn_Ok = dialog.findViewById<View>(R.id.btn_Ok) as Button\n        btn_Ok.setOnClickListener {\n            if (isThankyou) {\n                showWelcomeSurveyDialog()\n            } else {\n            }\n            dialog.dismiss()\n        }\n        val emailImg = dialog.findViewById<View>(R.id.emailImg) as ImageView\n        if (survey_contact_email.equals(\"\", ignoreCase = true)) {\n            emailImg.visibility = View.GONE\n        } else {\n            emailImg.visibility = View.VISIBLE\n        }\n        emailImg.setOnClickListener {\n            showSendEmailDialog()\n        }\n        dialog.show()\n    }\n\n    fun showWelcomeSurveyDialog()\n    {\n        val dialog = Dialog(mContext)\n        dialog.requestWindowFeature(Window.FEATURE_NO_TITLE)\n        dialog.window!!.setBackgroundDrawable(ColorDrawable(Color.TRANSPARENT))\n        dialog.setCancelable(false)\n        dialog.setContentView(R.layout.dialog_survey_wlcome)\n        var bannerImg = dialog.findViewById(R.id.bannerImg) as ImageView\n        var titleTxt = dialog.findViewById(R.id.titleTxt) as TextView\n        var descriptionTxt = dialog.findViewById(R.id.descriptionTxt) as TextView\n        var skipBtn = dialog.findViewById(R.id.skipBtn) as Button\n        var startNowBtn = dialog.findViewById(R.id.startNowBtn) as Button\n\n        titleTxt.text=survey_title\n        descriptionTxt.text=survey_description\n        if (survey_image.equals(\"\"))\n        {\n            bannerImg.setImageResource(R.drawable.survey)\n        }\n        else{\n            Glide.with(mContext).load(survey_image).centerCrop().into(bannerImg)\n        }\n\n        skipBtn.setOnClickListener()\n        {\n           showCloseSurveyDialog(dialog)\n        }\n\n        startNowBtn.setOnClickListener()\n        {\n            if(surveyDetailQuestionsArrayList.size>0)\n            {\n                showQuestionAnswerSurvey()\n                dialog.dismiss()\n            }\n            else{\n                DialogFunctions.commonErrorAlertDialog(mContext.resources.getString(R.string.alert), \"No Survey Questions Available.\", mContext)\n                dialog.dismiss()\n            }\n\n        }\n        dialog.show()\n    }\n\n\n    fun showCloseSurveyDialog(dialogW: Dialog)\n    {\n        val dialog = Dialog(mContext)\n        dialog.requestWindowFeature(Window.FEATURE_NO_TITLE)\n        dialog.window!!.setBackgroundDrawable(ColorDrawable(Color.TRANSPARENT))\n        dialog.setCancelable(false)\n        dialog.setContentView(R.layout.dialog_survey_close)\n        var text_dialog = dialog.findViewById(R.id.text_dialog) as TextView\n        var btn_Ok = dialog.findViewById(R.id.btn_Ok) as Button\n        var btn_Cancel = dialog.findViewById(R.id.btn_Cancel) as Button\n        text_dialog.text=\"Are you sure you want to close this survey.\"\n\n        btn_Ok.setOnClickListener()\n        {\n            dialogW.dismiss()\n            dialog.dismiss()\n        }\n\n\n        btn_Cancel.setOnClickListener()\n        {\n            dialog.dismiss()\n        }\n        dialog.show()\n    }\n\n\n    fun showQuestionAnswerSurvey()\n    {\n        val dialog = Dialog(mContext)\n        dialog.requestWindowFeature(Window.FEATURE_NO_TITLE)\n        dialog.window!!.setBackgroundDrawable(ColorDrawable(Color.TRANSPARENT))\n        dialog.setCancelable(false)\n        dialog.setContentView(R.layout.dialog_question_answer_survey)\n        var currentQntTxt = dialog.findViewById(R.id.currentQntTxt) as TextView\n        var questionCount = dialog.findViewById(R.id.questionCount) as TextView\n        var surveyName = dialog.findViewById(R.id.surveyName) as TextView\n        var nxtQnt = dialog.findViewById(R.id.nxtQnt) as TextView\n        var closeImg = dialog.findViewById(R.id.closeImg) as ImageView\n        var emailImg = dialog.findViewById(R.id.emailImg) as ImageView\n        var previousBtn = dialog.findViewById(R.id.previousBtn) as ImageView\n        var nextQuestionBtn = dialog.findViewById(R.id.nextQuestionBtn) as ImageView\n        var progressBar = dialog.findViewById(R.id.progressBar) as ProgressBar\n        var surveyPager = dialog.findViewById(R.id.surveyPager) as ViewPager\n\n        closeImg.setOnClickListener(View.OnClickListener {\n            showCloseSurveyDialog(dialog)\n        })\n        if (surveyDetailQuestionsArrayList.size>9)\n        {\n            currentQntTxt.text=\"01\"\n            questionCount.text=\"/\"+surveyDetailQuestionsArrayList.size.toString()\n        }\n        else{\n            currentQntTxt.text=\"01\"\n            questionCount.text=\"/0\"+surveyDetailQuestionsArrayList.size.toString()\n        }\n\n        surveyName.text=survey_name\n\n        if (survey_contact_email.equals(\"\"))\n        {\n            emailImg.visibility=View.GONE\n        }\n        else{\n            emailImg.visibility=View.VISIBLE\n        }\n        emailImg.setOnClickListener(View.OnClickListener {\n\n            showSendEmailDialog()\n        })\n\n\n        progressBar.max=surveyDetailQuestionsArrayList.size\n        progressBar.progressDrawable.setColorFilter(mContext.resources.getColor(R.color.rel_one), PorterDuff.Mode.SRC_IN)\n\n        currentPageSurvey=1\n        surveyPager.setCurrentItem(currentPageSurvey-1)\n        progressBar.setProgress(currentPageSurvey)\n        var adapterPager=SurveyQuestionPagerAdapter(mContext,surveyDetailQuestionsArrayList)\n        surveyPager.adapter=adapterPager\n\n        if (currentPageSurvey==surveyDetailQuestionsArrayList.size)\n        {\n            previousBtn.visibility=View.INVISIBLE\n            nextQuestionBtn.visibility=View.INVISIBLE\n            nxtQnt.visibility=View.VISIBLE\n        }\n        else{\n            if (currentPageSurvey==1)\n            {\n                previousBtn.visibility=View.INVISIBLE\n                nextQuestionBtn.visibility=View.VISIBLE\n                nxtQnt.visibility=View.INVISIBLE\n            }\n            else{\n                previousBtn.visibility=View.INVISIBLE\n                nextQuestionBtn.visibility=View.VISIBLE\n                nxtQnt.visibility=View.INVISIBLE\n            }\n        }\n\n        nextQuestionBtn.setOnClickListener(View.OnClickListener {\n\n            if (currentPageSurvey==surveyDetailQuestionsArrayList.size)\n            {\n\n            }\n            else{\n                currentPageSurvey++\n                progressBar.setProgress(currentPageSurvey)\n                surveyPager.setCurrentItem(currentPageSurvey-1)\n                if (currentPageSurvey==surveyDetailQuestionsArrayList.size)\n                {\n                    nextQuestionBtn.visibility=View.INVISIBLE\n                    previousBtn.visibility=View.VISIBLE\n                    nxtQnt.visibility=View.VISIBLE\n                }\n                else{\n                    nextQuestionBtn.visibility=View.VISIBLE\n                    previousBtn.visibility=View.VISIBLE\n                    nxtQnt.visibility=View.INVISIBLE\n                }\n\n            }\n\n            if (surveyDetailQuestionsArrayList.size>9)\n            {\n                if (currentPageSurvey<9)\n                {\n                    currentQntTxt.text=\"0\"+currentPageSurvey.toString()\n                    questionCount.text=\"/\"+surveyDetailQuestionsArrayList.size.toString()\n                }\n                else{\n                    currentQntTxt.text=currentPageSurvey.toString()\n                    questionCount.text=\"/\"+surveyDetailQuestionsArrayList.size.toString()\n                }\n            }\n            else{\n                if (currentPageSurvey<9)\n                {\n                    currentQntTxt.text=\"0\"+currentPageSurvey.toString()\n                    questionCount.text=\"/\"+\"0\"+surveyDetailQuestionsArrayList.size.toString()\n                }\n                else{\n                    currentQntTxt.text=currentPageSurvey.toString()\n                    questionCount.text=\"/\"+\"0\"+surveyDetailQuestionsArrayList.size.toString()\n                }\n            }\n        })\n\n\n        previousBtn.setOnClickListener(View.OnClickListener {\n\n            if (currentPageSurvey==1)\n            {\n                previousBtn.visibility=View.INVISIBLE\n                nxtQnt.visibility=View.INVISIBLE\n                if (currentPageSurvey==surveyDetailQuestionsArrayList.size)\n                {\n                    nxtQnt.visibility=View.VISIBLE\n                }\n                else{\n                    nxtQnt.visibility=View.INVISIBLE\n                }\n            }\n            else{\n                currentPageSurvey--\n                progressBar.setProgress(currentPageSurvey)\n                surveyPager.setCurrentItem(currentPageSurvey-1)\n                if (currentPageSurvey==surveyDetailQuestionsArrayList.size)\n                {\n                    nextQuestionBtn.visibility=View.INVISIBLE\n                    previousBtn.visibility=View.VISIBLE\n                    nxtQnt.visibility=View.VISIBLE\n                }\n                else\n                {\n                    if(currentPageSurvey==1)\n                    {\n                        nextQuestionBtn.visibility=View.VISIBLE\n                        previousBtn.visibility=View.INVISIBLE\n                        nxtQnt.visibility=View.INVISIBLE\n                    }\n                    else\n                    {\n                        nextQuestionBtn.visibility=View.VISIBLE\n                        previousBtn.visibility=View.VISIBLE\n                        nxtQnt.visibility=View.INVISIBLE\n                    }\n\n                }\n\n            }\n\n            if (surveyDetailQuestionsArrayList.size>9)\n            {\n                if (currentPageSurvey<9)\n                {\n                    currentQntTxt.text=\"0\"+currentPageSurvey.toString()\n                    questionCount.text=\"/\"+surveyDetailQuestionsArrayList.size.toString()\n                }\n                else{\n                    currentQntTxt.text=currentPageSurvey.toString()\n                    questionCount.text=\"/\"+surveyDetailQuestionsArrayList.size.toString()\n                }\n            }\n            else{\n                if (currentPageSurvey<9)\n                {\n                    currentQntTxt.text=\"0\"+currentPageSurvey.toString()\n                    questionCount.text=\"/\"+\"0\"+surveyDetailQuestionsArrayList.size.toString()\n                }\n                else{\n                    currentQntTxt.text=currentPageSurvey.toString()\n                    questionCount.text=\"/\"+\"0\"+surveyDetailQuestionsArrayList.size.toString()\n                }\n\n            }\n        })\n\n        nxtQnt.setOnClickListener {\n            var isFound = false\n            var pos = -1\n            var emptyvalue = 0\n            for (i in surveyDetailQuestionsArrayList.indices) {\n                if (surveyDetailQuestionsArrayList.get(i).answer.equals(\"\")) {\n                    emptyvalue = emptyvalue + 1\n                    if (!isFound) {\n                        isFound = true\n                        pos = i\n                    }\n                }\n            }\n            if (isFound) {\n                mAnswerList = ArrayList<SurveySubmitDataModel>()\n                for (k in surveyDetailQuestionsArrayList.indices) {\n                    val model = SurveySubmitDataModel()\n                    model.question_id=(surveyDetailQuestionsArrayList.get(k).id.toString())\n                    model.answer_id=(surveyDetailQuestionsArrayList.get(k).answer)\n                    mAnswerList.add(model)\n                }\n                val gson = Gson()\n                val PassportArray = ArrayList<String>()\n                for (i in mAnswerList.indices) {\n                    val nmodel = SurveySubmitDataModel()\n                    nmodel.answer_id=(mAnswerList.get(i).answer_id)\n                    nmodel.question_id=(mAnswerList.get(i).question_id)\n                    val json = gson.toJson(nmodel)\n                    PassportArray.add(i, json)\n                }\n                val JSON_STRING = \"\" + PassportArray + \"\"\n                Log.e(\"JSON\", JSON_STRING)\n                if (emptyvalue == surveyDetailQuestionsArrayList.size) {\n                    val isEmpty = true\n                    showSurveyContinueDialog(\n                        mContext,\n                        survey_ID,\n                        JSON_STRING,\n                        surveyArrayList,\n                        progressBar,\n                        surveyPager,\n                        surveyDetailQuestionsArrayList,\n                        previousBtn,\n                        nextQuestionBtn,\n                        nxtQnt,\n                        currentQntTxt,\n                        questionCount,\n                        pos,\n                        dialog,\n                        isEmpty\n                    )\n                } else {\n                    val isEmpty = false\n                    showSurveyContinueDialog(\n                        mContext,\n                        survey_ID,\n                        JSON_STRING,\n                        surveyArrayList,\n                        progressBar,\n                        surveyPager,\n                        surveyDetailQuestionsArrayList,\n                        previousBtn,\n                        nextQuestionBtn,\n                        nxtQnt,\n                        currentQntTxt,\n                        questionCount,\n                        pos,\n                        dialog,\n                        isEmpty\n                    )\n                }\n            } else {\n                surveySize = surveySize - 1\n                if (surveySize <= 0) {\n                    mAnswerList = ArrayList<SurveySubmitDataModel>()\n                    for (k in surveyDetailQuestionsArrayList.indices) {\n                        val model = SurveySubmitDataModel()\n                        model.question_id=(surveyDetailQuestionsArrayList.get(k).id.toString())\n                        model.answer_id=(surveyDetailQuestionsArrayList.get(k).answer)\n                        mAnswerList.add(model)\n                        Log.e(\"Array\", mAnswerList.toString())\n                    }\n                    val gson = Gson()\n                    val PassportArray = java.util.ArrayList<String>()\n                    for (i in mAnswerList.indices) {\n                        val nmodel = SurveySubmitDataModel()\n                        nmodel.answer_id=(mAnswerList.get(i).answer_id)\n                        nmodel.question_id=(mAnswerList.get(i).question_id)\n                        val json = gson.toJson(nmodel)\n                        PassportArray.add(i, json)\n                    }\n                    val JSON_STRING = \"\" + PassportArray + \"\"\n                    Log.e(\"JSON\", JSON_STRING)\n                    dialog.dismiss()\n                    callSurveySubmitApi(\n                        survey_ID,\n                        JSON_STRING,\n                        mContext,\n                        surveyArrayList,\n                        false,\n                        1,mAnswerList\n                    )\n                } else {\n                    mAnswerList = ArrayList<SurveySubmitDataModel>()\n                    for (k in surveyDetailQuestionsArrayList.indices) {\n                        val model = SurveySubmitDataModel()\n                        model.question_id=(surveyDetailQuestionsArrayList.get(k).id.toString())\n                        model.answer_id=(surveyDetailQuestionsArrayList.get(k).answer)\n                        mAnswerList.add(model)\n                    }\n                    val gson = Gson()\n                    val PassportArray = java.util.ArrayList<String>()\n                    for (i in mAnswerList.indices) {\n                        val nmodel = SurveySubmitDataModel()\n                        nmodel.answer_id=(mAnswerList.get(i).answer_id)\n                        nmodel.question_id=(mAnswerList.get(i).question_id)\n                        val json = gson.toJson(nmodel)\n                        PassportArray.add(i, json)\n                    }\n                    val JSON_STRING = \"\" + PassportArray + \"\"\n                    Log.e(\"JSON\", JSON_STRING)\n                    dialog.dismiss()\n                    callSurveySubmitApi(\n                        survey_ID,\n                        JSON_STRING,\n                        mContext,\n                        surveyArrayList,\n                        true,\n                        1,\n                    mAnswerList\n                    )\n                }\n            }\n            Log.e(\"POS\", pos.toString())\n        }\n        dialog.show()\n    }\n\n\n\n    private fun showSendEmailDialog()\n    {\n        val dialog = Dialog(mContext)\n        dialog.requestWindowFeature(Window.FEATURE_NO_TITLE)\n        dialog.setCancelable(true)\n        dialog.setContentView(R.layout.dialog_send_email)\n        dialog.window!!.setBackgroundDrawableResource(android.R.color.transparent)\n        val btn_submit = dialog.findViewById<Button>(R.id.submitButton)\n        val btn_cancel = dialog.findViewById<Button>(R.id.cancelButton)\n        val text_dialog = dialog.findViewById<EditText?>(R.id.text_dialog)\n        val text_content = dialog.findViewById<EditText>(R.id.text_content)\n\n        btn_cancel.setOnClickListener(View.OnClickListener {\n            dialog.dismiss()\n        })\n\n        btn_submit.setOnClickListener {\n            if (text_dialog.text.toString().trim().equals(\"\")) {\n                DialogFunctions.commonErrorAlertDialog(mContext.resources.getString(R.string.alert), resources.getString(R.string.enter_subject), mContext)\n\n\n            } else {\n                if (text_content.text.toString().trim().equals(\"\")) {\n                    DialogFunctions.commonErrorAlertDialog(mContext.resources.getString(R.string.alert), resources.getString(R.string.enter_content), mContext)\n\n                } else {\n                    // progressDialog.visibility = View.VISIBLE\n\n                    sendEmail(text_dialog.text.toString().trim(), text_content.text.toString().trim(), survey_contact_email, dialog)\n                }\n            }\n        }\n        dialog.show()\n    }\n\n\n    fun sendEmail(title: String, message: String,  staffEmail: String, dialog: Dialog)\n    {\n        progressDialogAdd.visibility= View.VISIBLE\n\n        val sendMailBody = SendEmailApiModel( staffEmail, title, message)\n        val call: Call<SignUpResponseModel> = ApiClient.getClient.sendEmailStaff(sendMailBody, \"Bearer \" + PreferenceManager.getaccesstoken(mContext))\n        call.enqueue(object : Callback<SignUpResponseModel> {\n            override fun onFailure(call: Call<SignUpResponseModel>, t: Throwable) {\n                Log.e(\"Failed\", t.localizedMessage)\n                progressDialogAdd.visibility = View.GONE\n            }\n\n            override fun onResponse(call: Call<SignUpResponseModel>, response: Response<SignUpResponseModel>) {\n                val responsedata = response.body()\n                progressDialogAdd.visibility = View.GONE\n                Log.e(\"Response Signup\", responsedata.toString())\n                if (responsedata != null) {\n                    try {\n\n\n                        if (response.body()!!.status==100) {\n                            dialog.dismiss()\n                            showSuccessAlert(\n                                mContext,\n                                \"Email sent Successfully \",\n                                \"Success\",\n                                dialog\n                            )\n                        }else {\n                            DialogFunctions.commonErrorAlertDialog(\n                                mContext.resources.getString(R.string.alert),\n                                ConstantFunctions.commonErrorString(response.body()!!.status),\n                                mContext\n                            )\n\n                        }\n                    } catch (e: Exception) {\n                        e.printStackTrace()\n                    }\n                }\n            }\n\n        })\n    }\n\n\n    fun showSuccessAlert(context: Context, message: String, msgHead: String, mdialog: Dialog) {\n        val dialog = Dialog(context)\n        dialog.requestWindowFeature(Window.FEATURE_NO_TITLE)\n        dialog.window!!.setBackgroundDrawable(ColorDrawable(Color.TRANSPARENT))\n        dialog.setCancelable(false)\n        dialog.setContentView(R.layout.dialog_common_error_alert)\n        var iconImageView = dialog.findViewById(R.id.iconImageView) as ImageView\n        var alertHead = dialog.findViewById(R.id.alertHead) as TextView\n        var text_dialog = dialog.findViewById(R.id.messageTxt) as TextView\n        var btn_Ok = dialog.findViewById(R.id.btn_Ok) as Button\n        text_dialog.text = message\n        alertHead.text = msgHead\n        iconImageView.setImageResource(R.drawable.tick)\n        btn_Ok.setOnClickListener()\n        {\n            dialog.dismiss()\n            mdialog.dismiss()\n        }\n        dialog.show()\n    }\n    fun showSurveyContinueDialog(\n        activity: Context,\n        surveyID: Int,\n        JSON_STRING: String?,\n        surveyArrayList: ArrayList<SurveyListDataModel>,\n        progressBar: ProgressBar,\n        surveyPager: ViewPager,\n        surveyQuestionArrayList: ArrayList<SurveyQuestionsModel>,\n        previousBtn: ImageView,\n        nextQuestionBtn: ImageView,\n        nxtQnt: TextView,\n        currentQntTxt: TextView,\n        questionCount: TextView,\n        pos: Int,\n        nDialog: Dialog,\n        isEmpty: Boolean\n    ) {\n        val dialog = Dialog(activity!!)\n        dialog.requestWindowFeature(Window.FEATURE_NO_TITLE)\n        dialog.window!!.setBackgroundDrawable(ColorDrawable(Color.TRANSPARENT))\n        dialog.setCancelable(false)\n        dialog.setContentView(R.layout.dialog_continue_layout)\n        survey_satisfation_status = 0\n        //callSurveySubmitApi(URL_SURVEY_SUBMIT,surveyId,jsonData,getActivity(),surveyArrayList,isThankyou,survey_satisfation_status,dialog);\n        val btn_Ok = dialog.findViewById<View>(R.id.btn_Ok) as Button\n        val submit = dialog.findViewById<View>(R.id.submit) as Button\n        val thoughtsTxt = dialog.findViewById<View>(R.id.thoughtsTxt) as TextView\n        if (isEmpty) {\n            submit.isClickable = false\n            submit.alpha = 0.5f\n            thoughtsTxt.text = \"Appreciate atleast one feedback from you.\"\n        } else {\n            submit.isClickable = true\n            submit.alpha = 1.0f\n            thoughtsTxt.text =\n                \"There is an unanswered question on this survey. Would you like to continue?\"\n        }\n        submit.setOnClickListener {\n            if (!isEmpty) {\n                nDialog.dismiss()\n                Log.e(\"SURVEY SIZE\", surveySize.toString())\n                surveySize = surveySize - 1\n                if (surveySize <= 0) {\n                    Log.e(\"SURVEY SIZE \", surveySize.toString())\n                    callSurveySubmitApi(\n                        surveyID,\n                        JSON_STRING!!,\n                        activity,\n                        surveyArrayList,\n                        false,\n                        1,\n mAnswerList\n                    )\n                } else {\n                    callSurveySubmitApi(\n                        surveyID,\n                        JSON_STRING!!,\n                        activity,\n                        surveyArrayList,\n                        true,\n                        1,\n mAnswerList\n                    )\n                }\n                dialog.dismiss()\n            }\n        }\n        btn_Ok.setOnClickListener {\n            currentPageSurvey = pos + 1\n            progressBar.progress = currentPageSurvey\n            surveyPager.currentItem = currentPageSurvey - 1\n            Log.e(\"WORKING\", \"SURVEY COUNT$currentPageSurvey\")\n            if (surveyQuestionArrayList.size > 1) {\n                if (currentPageSurvey != surveyQuestionArrayList.size) {\n                    if (currentPageSurvey == 1) {\n                        previousBtn.visibility = View.INVISIBLE\n                        nextQuestionBtn.visibility = View.VISIBLE\n                        nxtQnt.visibility = View.INVISIBLE\n                    } else {\n                        if (currentPageSurvey == 1) {\n                            previousBtn.visibility = View.INVISIBLE\n                            nextQuestionBtn.visibility = View.VISIBLE\n                            nxtQnt.visibility = View.INVISIBLE\n                        } else {\n                            previousBtn.visibility = View.VISIBLE\n                            nextQuestionBtn.visibility = View.VISIBLE\n                            nxtQnt.visibility = View.INVISIBLE\n                        }\n                    }\n                } else {\n                    previousBtn.visibility = View.VISIBLE\n                    nextQuestionBtn.visibility = View.INVISIBLE\n                    nxtQnt.visibility = View.VISIBLE\n                }\n            } else {\n                if (currentPageSurvey == 1) {\n                    previousBtn.visibility = View.INVISIBLE\n                    nextQuestionBtn.visibility = View.INVISIBLE\n                    nxtQnt.visibility = View.VISIBLE\n                }\n            }\n            if (surveyQuestionArrayList.size > 9) {\n                if (currentPageSurvey < 9) {\n                    currentQntTxt.text = \"0$currentPageSurvey\"\n                    questionCount.text = \"/\" + surveyQuestionArrayList.size.toString()\n                } else {\n                    currentQntTxt.setText(currentPageSurvey.toString())\n                    questionCount.text = \"/\" + surveyQuestionArrayList.size.toString()\n                }\n            } else {\n                if (currentPageSurvey < 9) {\n                    currentQntTxt.text = \"0$currentPageSurvey\"\n                    questionCount.text = \"/\" + \"0\" + surveyQuestionArrayList.size.toString()\n                } else {\n                    currentQntTxt.setText(currentPageSurvey.toString())\n                    questionCount.text = \"/\" + \"0\" + surveyQuestionArrayList.size.toString()\n                }\n            }\n            dialog.dismiss()\n        }\n        dialog.show()\n    }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/nas/alreem/activity/survey/SurveyListActivity.kt b/app/src/main/java/com/nas/alreem/activity/survey/SurveyListActivity.kt
--- a/app/src/main/java/com/nas/alreem/activity/survey/SurveyListActivity.kt	(revision 29dbbedb1ce8c3fe2a8032d242fcce101acbc7b5)
+++ b/app/src/main/java/com/nas/alreem/activity/survey/SurveyListActivity.kt	(date 1690523500506)
@@ -135,7 +135,7 @@
                                 mListView.adapter = SurveyListAdapter(response.body()!!.responseArray!!.data, mContext)
                             }
                             else{
-
+                                DialogFunctions.commonErrorAlertDialog(mContext.resources.getString(R.string.alert), "No Data Found!", mContext)
                             }
                         }
                         else
Index: app/src/main/java/com/nas/alreem/activity/cca/ExternalProviderActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.nas.alreem.activity.cca\n\nimport android.content.Context\nimport android.content.Intent\nimport android.os.Bundle\nimport android.util.Log\nimport android.view.View\nimport android.widget.ImageView\nimport android.widget.ProgressBar\nimport android.widget.RelativeLayout\nimport android.widget.TextView\nimport androidx.appcompat.app.AppCompatActivity\nimport androidx.core.content.ContextCompat\nimport androidx.recyclerview.widget.DividerItemDecoration\nimport androidx.recyclerview.widget.LinearLayoutManager\nimport androidx.recyclerview.widget.RecyclerView\nimport com.bumptech.glide.Glide\nimport com.nas.alreem.R\nimport com.nas.alreem.activity.cca.adapter.ExternalProviderRecyclerAdapter\nimport com.nas.alreem.activity.cca.model.ExternalProvidersRequestModel\nimport com.nas.alreem.activity.cca.model.ExternalProvidersResponseModel\nimport com.nas.alreem.activity.home.HomeActivity\nimport com.nas.alreem.constants.*\nimport com.nas.alreem.rest.ApiClient\n\nimport retrofit2.Call\nimport retrofit2.Callback\nimport retrofit2.Response\n\nclass ExternalProviderActivity : AppCompatActivity() {\n    lateinit var mContext: Context\n    lateinit var titleTextView: TextView\n    lateinit var back: ImageView\n    lateinit var backRelative: RelativeLayout\n    lateinit var logoclick: ImageView\n    lateinit var bannerImage: ImageView\n    lateinit var progressBar: ProgressBar\n    var extras: Bundle? = null\n    var tab_type: String? = null\n    var relativeHeader: RelativeLayout? = null\n//    var mStudentSpinner: LinearLayout? = null\n//    var studImg: ImageView? = null\n//    var studName: TextView? = null\n    var mnewsLetterListView: RecyclerView? = null\n//    var textViewYear: TextView? = null\n    var stud_id = \"\"\n    var stud_class = \"\"\n    var stud_name = \"\"\n    var stud_img = \"\"\n    var section = \"\"\n    private val mListViewArray: ArrayList<ExternalProvidersResponseModel.Data.Lists>? = ArrayList()\n\n\n    override fun onCreate(savedInstanceState: Bundle?) {\n        super.onCreate(savedInstanceState)\n        setContentView(R.layout.activity_external_provider)\n        mContext = this\n        initilaiseUI()\n        logoclick.setOnClickListener {\n            val mIntent = Intent(mContext, HomeActivity::class.java)\n            mIntent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP)\n\n            startActivity(mIntent)\n        }\n        backRelative.setOnClickListener {\n            finish()\n        }\n\n\n            getList()\n\n    }\n\n    private fun getList() {\n        val token = PreferenceManager.getaccesstoken(mContext)\n        val body = ExternalProvidersRequestModel(\"0\",\"10\")\n        val call: Call<ExternalProvidersResponseModel> =\n            ApiClient.getClient.getExternalProviders( body,\"Bearer $token\")\n        progressBar.visibility = View.VISIBLE\n        call.enqueue(object : Callback<ExternalProvidersResponseModel> {\n            override fun onResponse(\n                call: Call<ExternalProvidersResponseModel>,\n                response: Response<ExternalProvidersResponseModel>\n            ) {\n                progressBar.visibility = View.GONE\n                if (response.isSuccessful){\n                    if (response.body() != null){\n                        if (response.body()!!.status == 100){\n\n                            val bannerImageUrl: String = response.body()!!.data!!.banner_image.toString()\n                            if (!response.body()!!.data!!.banner_image!!.equals(\"\")){\n                                Glide.with(mContext!!).load(ConstantFunctions.replace(bannerImageUrl)).fitCenter()\n\n                                    .centerCrop().into(bannerImage!!)\n                            }\n\n\n\n                            if (response.body()!!.data!!.lists!!.size > 0) {\n                                for (i in response.body()!!.data!!.lists!!.indices) {\n\n                                    mListViewArray!!.add(response.body()!!.data!!.lists!![i]!!)\n                                }\n                                mnewsLetterListView!!.adapter =\n                                    ExternalProviderRecyclerAdapter(mContext, mListViewArray!!)\n                            }\n\n                        }else{\n                            ConstantFunctions.showDialogueWithOk(mContext,getString(R.string.common_error),\"Alert\")\n                        }\n                    }else{\n                        ConstantFunctions.showDialogueWithOk(mContext,getString(R.string.common_error),\"Alert\")\n                    }\n                }else{\n                   ConstantFunctions.showDialogueWithOk(mContext,getString(R.string.common_error),\"Alert\")\n                }\n            }\n\n            override fun onFailure(call: Call<ExternalProvidersResponseModel>, t: Throwable) {\n                progressBar.visibility = View.GONE\n                ConstantFunctions.showDialogueWithOk(mContext,getString(R.string.common_error),\"Alert\")\n            }\n\n        })\n    }\n\n    private fun initilaiseUI() {\n        titleTextView = findViewById(R.id.heading)\n        back = findViewById(R.id.btn_left)\n        backRelative = findViewById(R.id.backRelative)\n        logoclick = findViewById(R.id.logoClickImgView)\n        bannerImage = findViewById(R.id.bannerImagePager)\n        progressBar = findViewById(R.id.progress)\n        extras = intent.extras\n        if (extras != null) {\n            tab_type = extras!!.getString(\"tab_type\")\n        }\n        relativeHeader = findViewById<View>(R.id.relativeHeader) as RelativeLayout\n//        mStudentSpinner = findViewById<View>(R.id.studentSpinner) as LinearLayout\n//        studImg = findViewById<View>(R.id.imagicon) as ImageView\n//        studName = findViewById<View>(R.id.studentName) as TextView\n//        textViewYear = findViewById<View>(R.id.textViewYear) as TextView\n        mnewsLetterListView = findViewById<View>(R.id.mnewsLetterListView) as RecyclerView\n        mnewsLetterListView!!.setHasFixedSize(true)\n        val divider = DividerItemDecoration(mContext, DividerItemDecoration.VERTICAL)\n        divider.setDrawable(ContextCompat.getDrawable(mContext,R.drawable.list_divider_teal)!!)\n        mnewsLetterListView!!.addItemDecoration(divider)\n//        mnewsLetterListView!!.addItemDecoration(DividerItemDecoration(resources.getDrawable(R.drawable.list_divider_teal)))\n        logoclick.setOnClickListener {\n            val mIntent = Intent(mContext, HomeActivity::class.java)\n            mIntent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP)\n\n            startActivity(mIntent)\n        }\n        val llm = LinearLayoutManager(this)\n        llm.orientation = LinearLayoutManager.VERTICAL\n        mnewsLetterListView!!.layoutManager = llm\n        mnewsLetterListView!!.addOnItemClickListener(object : OnItemClickListener {\n            override fun onItemClicked(position: Int, view: View) {\n                //uncomment\n\n                if (mListViewArray!![position].file!!.endsWith(\".pdf\")) {\n                    val intent = Intent(mContext, PDFViewerActivity::class.java)\n                    intent.putExtra(\"Url\", mListViewArray[position].file)\n                    intent.putExtra(\"title\", mListViewArray[position].title)\n                    startActivity(intent)\n                } else {\n                    val intent = Intent(mContext, WebLinkActivity::class.java)\n                    intent.putExtra(\"url\", mListViewArray[position].file)\n                    intent.putExtra(\"heading\", mListViewArray[position].title)\n                    Log.e(\"webview_url\", mListViewArray[position].file.toString())\n                    mContext.startActivity(intent)\n                }\n            }\n\n        })\n\n    }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/nas/alreem/activity/cca/ExternalProviderActivity.kt b/app/src/main/java/com/nas/alreem/activity/cca/ExternalProviderActivity.kt
--- a/app/src/main/java/com/nas/alreem/activity/cca/ExternalProviderActivity.kt	(revision 29dbbedb1ce8c3fe2a8032d242fcce101acbc7b5)
+++ b/app/src/main/java/com/nas/alreem/activity/cca/ExternalProviderActivity.kt	(date 1690523500664)
@@ -33,7 +33,7 @@
     lateinit var back: ImageView
     lateinit var backRelative: RelativeLayout
     lateinit var logoclick: ImageView
-    lateinit var bannerImage: ImageView
+   // lateinit var bannerImage: ImageView
     lateinit var progressBar: ProgressBar
     var extras: Bundle? = null
     var tab_type: String? = null
@@ -88,11 +88,11 @@
                         if (response.body()!!.status == 100){
 
                             val bannerImageUrl: String = response.body()!!.data!!.banner_image.toString()
-                            if (!response.body()!!.data!!.banner_image!!.equals("")){
+                           /* if (!response.body()!!.data!!.banner_image!!.equals("")){
                                 Glide.with(mContext!!).load(ConstantFunctions.replace(bannerImageUrl)).fitCenter()
 
                                     .centerCrop().into(bannerImage!!)
-                            }
+                            }*/
 
 
 
@@ -129,7 +129,7 @@
         back = findViewById(R.id.btn_left)
         backRelative = findViewById(R.id.backRelative)
         logoclick = findViewById(R.id.logoClickImgView)
-        bannerImage = findViewById(R.id.bannerImagePager)
+       // bannerImage = findViewById(R.id.bannerImagePager)
         progressBar = findViewById(R.id.progress)
         extras = intent.extras
         if (extras != null) {
Index: app/src/main/java/com/nas/alreem/fragment/cca/CCAFragment.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.nas.alreem.fragment.cca\n\nimport android.app.Dialog\nimport android.content.Context\nimport android.content.Intent\nimport android.graphics.Color\nimport android.graphics.drawable.ColorDrawable\nimport android.os.Bundle\nimport android.util.Log\nimport android.view.*\nimport android.widget.*\nimport androidx.fragment.app.Fragment\nimport com.bumptech.glide.Glide\nimport com.nas.alreem.R\nimport com.nas.alreem.activity.cca.CCA_Activity\nimport com.nas.alreem.activity.cca.ExternalProviderActivity\nimport com.nas.alreem.activity.cca.InformationCCAActivity\nimport com.nas.alreem.activity.login.model.SignUpResponseModel\nimport com.nas.alreem.constants.ConstantFunctions\nimport com.nas.alreem.constants.DialogFunctions\nimport com.nas.alreem.constants.PreferenceManager\nimport com.nas.alreem.fragment.cca.model.BannerResponseModelCCa\nimport com.nas.alreem.fragment.payments.model.SendEmailApiModel\nimport com.nas.alreem.rest.ApiClient\nimport retrofit2.Call\nimport retrofit2.Callback\nimport retrofit2.Response\n\n\nclass CCAFragment : Fragment() {\n    var mTitleTextView: TextView? = null\n    var descriptionTV: TextView? = null\n    lateinit var ccaDot: TextView\n    private var mRootView: View? = null\n    private var mContext: Context? = null\n    private val mTitle: String? = null\n    private val mTabId: String? = null\n    var mtitleRel: LinearLayout? = null\n    var externalCCA: RelativeLayout? = null\n    var informationCCA: RelativeLayout? = null\n    var bannerImagePager: ImageView? = null\n    var mailImageView: ImageView? = null\n    var ccaOption: RelativeLayout? = null\n    var contactEmail = \"\"\n    private var description = \"\"\n    var text_content: TextView? = null\n    var text_dialog: TextView? = null\n    lateinit var progress: ProgressBar\n\n\n    override fun onCreateView(\n        inflater: LayoutInflater, container: ViewGroup?,\n        savedInstanceState: Bundle?\n    ): View? {\n        // Inflate the layout for this fragment\n        mRootView = inflater.inflate(\n            R.layout.fragment_cca_main, container,\n            false\n        )\n\n        mContext = activity\n        initialiseUI()\n\n        return mRootView\n    }\n\n    private fun initialiseUI() {\n        mTitleTextView = mRootView!!.findViewById<View>(R.id.titleTextView) as TextView\n        descriptionTV = mRootView!!.findViewById<View>(R.id.descriptionTitle) as TextView\n        ccaDot = mRootView!!.findViewById<View>(R.id.ccaDot) as TextView\n        mTitleTextView!!.setText(R.string.Enrichment)\n        mtitleRel = mRootView!!.findViewById<View>(R.id.title) as LinearLayout\n        progress = mRootView!!.findViewById(R.id.progress)\n\n        externalCCA = mRootView!!.findViewById<View>(R.id.epRelative) as RelativeLayout\n        ccaOption = mRootView!!.findViewById<View>(R.id.CcaOptionRelative) as RelativeLayout\n        informationCCA = mRootView!!.findViewById<View>(R.id.informationRelative) as RelativeLayout\n        bannerImagePager = mRootView!!.findViewById<View>(R.id.bannerImagePager) as ImageView\n        mailImageView = mRootView!!.findViewById<View>(R.id.mailImageView) as ImageView\n\n        if (ConstantFunctions.internetCheck(mContext!!))\n        {\n            getList()\n        }\n        else\n        {\n            DialogFunctions.showInternetAlertDialog(mContext!!)\n        }\n\n        externalCCA!!.setOnClickListener {\n            val intent = Intent(mContext, ExternalProviderActivity::class.java)\n            intent.putExtra(\"tab_type\", \"External Providers\")\n            startActivity(intent)\n        }\n        informationCCA!!.setOnClickListener {\n            val intent = Intent(mContext, InformationCCAActivity::class.java)\n            intent.putExtra(\"tab_type\", \"Information\")\n            startActivity(intent)\n        }\n        ccaOption!!.setOnClickListener {\n            if (!PreferenceManager.getUserCode(mContext!!).equals(\"\")) {\n                PreferenceManager.setStudIdForCCA(mContext!!, \"\")\n               // PreferenceManager.setStudentID(mContext!!, \"\")\n\n                val intent = Intent(mContext, CCA_Activity::class.java)\n                intent.putExtra(\"tab_type\", \"ECA Options\")\n                startActivity(intent)\n            } else {\n               ConstantFunctions.showDialogueWithOk(mContext!!,\"This feature is available for Registered users only\",\"Alert\")\n            }\n        }\n        mailImageView!!.setOnClickListener {\n            showSendEmailDialog(mContext!!)\n        }\n\n\n    }\n\n\n    private fun showSendEmailDialog(mContext: Context)\n    {\n        val dialog = Dialog(mContext)\n        dialog.requestWindowFeature(Window.FEATURE_NO_TITLE)\n        dialog.setCancelable(true)\n        dialog.setContentView(R.layout.dialog_send_email)\n        dialog.window!!.setBackgroundDrawableResource(android.R.color.transparent)\n        val btn_submit = dialog.findViewById<Button>(R.id.submitButton)\n        val btn_cancel = dialog.findViewById<Button>(R.id.cancelButton)\n        val text_dialog = dialog.findViewById<EditText?>(R.id.text_dialog)\n        val text_content = dialog.findViewById<EditText>(R.id.text_content)\n\n        btn_cancel.setOnClickListener(View.OnClickListener {\n            dialog.dismiss()\n        })\n\n        btn_submit.setOnClickListener {\n            if (text_dialog.text.toString().trim().equals(\"\")) {\n                DialogFunctions.commonErrorAlertDialog(\n                    mContext.resources.getString(R.string.alert), resources.getString(R.string.enter_subject),\n                    mContext\n                )\n\n\n            } else {\n                if (text_content.text.toString().trim().equals(\"\")) {\n                    DialogFunctions.commonErrorAlertDialog(\n                        mContext.resources.getString(R.string.alert), resources.getString(R.string.enter_content),\n                        mContext\n                    )\n\n                } else {\n                    // progressDialog.visibility = View.VISIBLE\n\n                    callSendEmailToStaffApi(text_dialog.text.toString().trim(), text_content.text.toString().trim(), contactEmail, dialog)\n                }\n            }\n        }\n        dialog.show()\n    }\n    fun callSendEmailToStaffApi(\n        title: String, message: String, staffEmail: String, dialog: Dialog)\n    {\n        val sendMailBody = SendEmailApiModel( staffEmail, title, message)\n        val call: Call<SignUpResponseModel> = ApiClient.getClient.sendEmailStaff(sendMailBody, \"Bearer \" + PreferenceManager.getaccesstoken(mContext!!))\n        call.enqueue(object : Callback<SignUpResponseModel> {\n            override fun onFailure(call: Call<SignUpResponseModel>, t: Throwable) {\n                Log.e(\"Failed\", t.localizedMessage)\n                //progressDialog.visibility = View.GONE\n            }\n\n            override fun onResponse(call: Call<SignUpResponseModel>, response: Response<SignUpResponseModel>) {\n                val responsedata = response.body()\n                //progressDialog.visibility = View.GONE\n                Log.e(\"Response Signup\", responsedata.toString())\n                if (responsedata != null) {\n                    try {\n\n\n                        if (response.body()!!.status==100) {\n                            dialog.dismiss()\n                            showSuccessAlert(\n                                mContext!!,\n                                \"Email sent Successfully \",\n                                \"Success\",\n                                dialog\n                            )\n                        }else {\n                            DialogFunctions.commonErrorAlertDialog(\n                                mContext!!.resources.getString(R.string.alert),\n                                ConstantFunctions.commonErrorString(response.body()!!.status), mContext!!\n                            )\n\n                        }\n                    } catch (e: Exception) {\n                        e.printStackTrace()\n                    }\n                }\n            }\n\n        })\n    }\n\n    private fun getList() {\n        progress.visibility = View.VISIBLE\n        val token = PreferenceManager.getaccesstoken(mContext!!)\n        val call: Call<BannerResponseModelCCa> =\n            ApiClient.getClient.getBanner( \"Bearer $token\")\n        call.enqueue(object : Callback<BannerResponseModelCCa> {\n            override fun onResponse(\n                call: Call<BannerResponseModelCCa>,\n                response: Response<BannerResponseModelCCa>\n            ) {\n                progress.visibility = View.GONE\n\n                if (response.isSuccessful){\n                    if (response.body() != null){\n                        if (response.body()!!.status.toString() == \"100\"){\n                            val bannerImage: String = response.body()!!.data!!.banner_image!!\n                            description = response.body()!!.data!!.description!!\n                            contactEmail = response.body()!!.data!!.contact_email!!\n//\n                            PreferenceManager.setCcaOptionBadge(\n                                mContext!!,\n                                response.body()!!.data!!.cca_badge\n                            )\n                            PreferenceManager.setCcaOptionEditedBadge(\n                                mContext!!,\n                                response.body()!!.data!!.cca_edited_badge\n                            )\n                            if (PreferenceManager.getCcaOptionBadge(mContext!!)!!.equals(0) &&\n                                PreferenceManager.getCcaOptionEditedBadge(mContext!!)!!.equals(0)\n                            ) {\n                                ccaDot.setVisibility(View.GONE)\n                            } else if (PreferenceManager.getCcaOptionBadge(mContext!!)!!.equals(0) &&\n                                !PreferenceManager.getCcaOptionEditedBadge(mContext!!)!!.equals(0)\n                            ) {\n                                ccaDot.setVisibility(View.VISIBLE)\n                               ccaDot.setText(response.body()!!.data!!.cca_edited_badge)\n                               ccaDot.setBackgroundResource(R.drawable.shape_circle_navy)\n                            } else if (!PreferenceManager.getCcaOptionBadge(mContext!!)!!.equals(0)\n                                && PreferenceManager.getCcaOptionEditedBadge(\n                                    mContext!!).equals(0)\n                            ) {\n                                ccaDot.setVisibility(View.VISIBLE)\n                               ccaDot.setText(response.body()!!.data!!.cca_badge.toString())\n                                ccaDot.setBackgroundResource(R.drawable.shape_circle_red)\n                            } else if (!PreferenceManager.getCcaOptionBadge(mContext!!).equals(0)\n                                && !PreferenceManager.getCcaOptionEditedBadge(mContext!!)!!.equals(0)\n                            ) {\n                               ccaDot.setVisibility(View.VISIBLE)\n                                ccaDot.setText(response.body()!!.data!!.cca_badge)\n                                ccaDot.setBackgroundResource(\n                                    R.drawable.shape_circle_red\n                                )\n                            }\n                            if (!bannerImage.equals(\"\", ignoreCase = true)) {\n                                Glide.with(mContext!!).load(ConstantFunctions.replace(bannerImage)).fitCenter()\n\n                                    .centerCrop().into(bannerImagePager!!)\n\n//\t\t\t\t\t\t\t\t\t\t\tbannerUrlImageArray = new ArrayList<>();\n//\t\t\t\t\t\t\t\t\t\t\tbannerUrlImageArray.add(bannerImage);\n//\t\t\t\t\t\t\t\t\t\t\tbannerImagePager.setAdapter(new ImagePagerDrawableAdapter(bannerUrlImageArray, getActivity()));\n                            } else {\n                                bannerImagePager!!.setBackgroundResource(R.drawable.default_banner)\n//\t\t\t\t\t\t\t\t\t\t\tbannerImagePager.setBackgroundResource(R.drawable.ccas_banner);\n                            }\n                            println(\"contact mail$contactEmail\")\n                            if (description.equals(\"\", ignoreCase = true) && contactEmail.equals(\n                                    \"\",\n                                    ignoreCase = true\n                                )\n                            ) {\n                                mtitleRel!!.visibility = View.GONE\n                            } else {\n                                mtitleRel!!.visibility = View.VISIBLE\n                            }\n                            if (description.equals(\"\", ignoreCase = true)) {\n                                descriptionTV!!.visibility = View.GONE\n                                //  descriptionTitle.setVisibility(View.GONE);\n                            } else {\n                                descriptionTV!!.text = description\n                                descriptionTV!!.visibility = View.VISIBLE\n                                mtitleRel!!.visibility = View.VISIBLE\n                                // mtitleRel.setVisibility(View.VISIBLE);\n                            }\n                            if (contactEmail.equals(\"\", ignoreCase = true)) {\n                                println(\"contact mail1\")\n                                mailImageView!!.visibility = View.GONE\n                            } else {\n                                println(\"contact mail2\")\n                                mtitleRel!!.visibility = View.VISIBLE\n                                mailImageView!!.visibility = View.VISIBLE\n                            }\n                            // CCAFRegisterRel.setVisibility(View.VISIBLE);\n                            // CCAFRegisterRel.setVisibility(View.VISIBLE);\n\n                        }else{\n                            ConstantFunctions.showDialogueWithOk(mContext!!,getString(R.string.common_error),\"Alert\")\n                        }\n                    }else{\n                        ConstantFunctions.showDialogueWithOk(mContext!!,getString(R.string.common_error),\"Alert\")\n                    }\n                }else{\n                    ConstantFunctions.showDialogueWithOk(mContext!!,getString(R.string.common_error),\"Alert\")\n                }\n            }\n\n            override fun onFailure(call: Call<BannerResponseModelCCa>, t: Throwable) {\n                progress.visibility = View.GONE\n\n                 ConstantFunctions.showDialogueWithOk(mContext!!,getString(R.string.common_error),\"Alert\")\n            }\n\n        })\n    }\n    fun showSuccessAlert(context: Context, message: String, msgHead: String, mdialog: Dialog) {\n        val dialog = Dialog(context)\n        dialog.requestWindowFeature(Window.FEATURE_NO_TITLE)\n        dialog.window!!.setBackgroundDrawable(ColorDrawable(Color.TRANSPARENT))\n        dialog.setCancelable(false)\n        dialog.setContentView(R.layout.dialog_common_error_alert)\n        var iconImageView = dialog.findViewById(R.id.iconImageView) as ImageView\n        var alertHead = dialog.findViewById(R.id.alertHead) as TextView\n        var text_dialog = dialog.findViewById(R.id.messageTxt) as TextView\n        var btn_Ok = dialog.findViewById(R.id.btn_Ok) as Button\n        text_dialog.text = message\n        alertHead.text = msgHead\n        iconImageView.setImageResource(R.drawable.tick)\n        btn_Ok.setOnClickListener()\n        {\n            dialog.dismiss()\n            mdialog.dismiss()\n        }\n        dialog.show()\n    }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/nas/alreem/fragment/cca/CCAFragment.kt b/app/src/main/java/com/nas/alreem/fragment/cca/CCAFragment.kt
--- a/app/src/main/java/com/nas/alreem/fragment/cca/CCAFragment.kt	(revision 29dbbedb1ce8c3fe2a8032d242fcce101acbc7b5)
+++ b/app/src/main/java/com/nas/alreem/fragment/cca/CCAFragment.kt	(date 1690523918015)
@@ -11,11 +11,14 @@
 import android.widget.*
 import androidx.fragment.app.Fragment
 import com.bumptech.glide.Glide
+import com.bumptech.glide.load.engine.DiskCacheStrategy
+import com.bumptech.glide.load.resource.bitmap.CircleCrop
 import com.nas.alreem.R
 import com.nas.alreem.activity.cca.CCA_Activity
 import com.nas.alreem.activity.cca.ExternalProviderActivity
 import com.nas.alreem.activity.cca.InformationCCAActivity
 import com.nas.alreem.activity.login.model.SignUpResponseModel
+import com.nas.alreem.appcontroller.AppController
 import com.nas.alreem.constants.ConstantFunctions
 import com.nas.alreem.constants.DialogFunctions
 import com.nas.alreem.constants.PreferenceManager
@@ -27,12 +30,12 @@
 import retrofit2.Response
 
 
-class CCAFragment : Fragment() {
+  class CCAFragment : Fragment() {
     var mTitleTextView: TextView? = null
     var descriptionTV: TextView? = null
-    lateinit var ccaDot: TextView
+    var ccaDot: TextView? = null
     private var mRootView: View? = null
-    private var mContext: Context? = null
+    lateinit var mContext: Context
     private val mTitle: String? = null
     private val mTabId: String? = null
     var mtitleRel: LinearLayout? = null
@@ -58,7 +61,7 @@
             false
         )
 
-        mContext = activity
+        mContext = requireActivity()
         initialiseUI()
 
         return mRootView
@@ -68,6 +71,7 @@
         mTitleTextView = mRootView!!.findViewById<View>(R.id.titleTextView) as TextView
         descriptionTV = mRootView!!.findViewById<View>(R.id.descriptionTitle) as TextView
         ccaDot = mRootView!!.findViewById<View>(R.id.ccaDot) as TextView
+       // AppController.ccdots=ccaDot
         mTitleTextView!!.setText(R.string.Enrichment)
         mtitleRel = mRootView!!.findViewById<View>(R.id.title) as LinearLayout
         progress = mRootView!!.findViewById(R.id.progress)
@@ -230,26 +234,26 @@
                             if (PreferenceManager.getCcaOptionBadge(mContext!!)!!.equals(0) &&
                                 PreferenceManager.getCcaOptionEditedBadge(mContext!!)!!.equals(0)
                             ) {
-                                ccaDot.setVisibility(View.GONE)
+                                ccaDot!!.setVisibility(View.GONE)
                             } else if (PreferenceManager.getCcaOptionBadge(mContext!!)!!.equals(0) &&
                                 !PreferenceManager.getCcaOptionEditedBadge(mContext!!)!!.equals(0)
                             ) {
-                                ccaDot.setVisibility(View.VISIBLE)
-                               ccaDot.setText(response.body()!!.data!!.cca_edited_badge)
-                               ccaDot.setBackgroundResource(R.drawable.shape_circle_navy)
+                                ccaDot!!.setVisibility(View.VISIBLE)
+                               ccaDot!!.setText(response.body()!!.data!!.cca_edited_badge)
+                               ccaDot!!.setBackgroundResource(R.drawable.shape_circle_navy)
                             } else if (!PreferenceManager.getCcaOptionBadge(mContext!!)!!.equals(0)
                                 && PreferenceManager.getCcaOptionEditedBadge(
                                     mContext!!).equals(0)
                             ) {
-                                ccaDot.setVisibility(View.VISIBLE)
-                               ccaDot.setText(response.body()!!.data!!.cca_badge.toString())
-                                ccaDot.setBackgroundResource(R.drawable.shape_circle_red)
+                                ccaDot!!.setVisibility(View.VISIBLE)
+                               ccaDot!!.setText(response.body()!!.data!!.cca_badge.toString())
+                                ccaDot!!.setBackgroundResource(R.drawable.shape_circle_red)
                             } else if (!PreferenceManager.getCcaOptionBadge(mContext!!).equals(0)
                                 && !PreferenceManager.getCcaOptionEditedBadge(mContext!!)!!.equals(0)
                             ) {
-                               ccaDot.setVisibility(View.VISIBLE)
-                                ccaDot.setText(response.body()!!.data!!.cca_badge)
-                                ccaDot.setBackgroundResource(
+                               ccaDot!!.setVisibility(View.VISIBLE)
+                                ccaDot!!.setText(response.body()!!.data!!.cca_badge)
+                                ccaDot!!.setBackgroundResource(
                                     R.drawable.shape_circle_red
                                 )
                             }
@@ -334,4 +338,18 @@
         }
         dialog.show()
     }
+
+      override fun onResume() {
+          super.onResume()
+          Log.e("TEST","call 1")
+          getList()
+          /*if (!PreferenceManager.getCcaOptionBadge(mContext).equals("0")) {
+              ccaDot!!.setText(PreferenceManager.getCcaOptionBadge(mContext))
+          } else if (!PreferenceManager.getCcaOptionEditedBadge(mContext).equals("0")) {
+              ccaDot!!.setText(PreferenceManager.getCcaOptionEditedBadge(mContext))
+          } else {
+              ccaDot!!.setVisibility(View.GONE)
+          }*/
+
+      }
 }
\ No newline at end of file
Index: app/src/main/res/layout/layout_activity_header.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\n<RelativeLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"wrap_content\">\n    <RelativeLayout\n        android:id=\"@+id/relativeHeader\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\"\n        android:layout_alignParentTop=\"true\" >\n        <ImageView\n            android:id=\"@+id/relative_logo_header\"\n            android:layout_width=\"match_parent\"\n            android:src=\"@drawable/titlebar\"\n            android:layout_height=\"wrap_content\" />\n        <ImageView\n            android:id=\"@+id/logoClickImgView\"\n            android:layout_width=\"wrap_content\"\n            android:layout_height=\"wrap_content\"\n            android:layout_centerHorizontal=\"true\"\n            android:layout_alignTop=\"@+id/relative_logo_header\"\n            android:background=\"@drawable/logotransperent\"\n            android:layout_above=\"@+id/heading\" />\n\n        <RelativeLayout\n            android:id=\"@+id/bottomRel\"\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"wrap_content\"\n            android:layout_above=\"@+id/heading\"\n            android:layout_alignParentTop=\"true\">\n\n            <ImageView\n                android:id=\"@+id/btn_right\"\n                android:layout_width=\"wrap_content\"\n                android:layout_height=\"wrap_content\"\n                android:layout_alignParentRight=\"true\"\n                android:layout_centerVertical=\"true\"\n                android:visibility=\"invisible\" />\n\n\n            <RelativeLayout\n                android:id=\"@+id/backRelative\"\n                android:layout_width=\"45dp\"\n                android:layout_height=\"45dp\">\n\n                <ImageView\n                    android:id=\"@+id/btn_left\"\n                    android:layout_width=\"wrap_content\"\n                    android:layout_height=\"wrap_content\"\n                    android:layout_alignParentLeft=\"true\"\n                    android:layout_centerVertical=\"true\"\n                    android:background=\"@drawable/back\"\n                    android:visibility=\"visible\" />\n            </RelativeLayout>\n        </RelativeLayout>\n\n        <com.nas.alreem.commonviews.CustomFontDJ5TextWhite\n            android:id=\"@+id/heading\"\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"40dp\"\n            android:layout_below=\"@id/relative_logo_header\"\n            android:layout_marginBottom=\"0dp\"\n            android:background=\"@color/split_bg\"\n            android:gravity=\"center\"\n            android:paddingTop=\"5dp\"\n            android:paddingBottom=\"5dp\"\n            android:text=\"PerformingArts\"\n            android:textColor=\"@color/white\"\n            android:textSize=\"17dp\" />\n        <ImageView\n            android:id=\"@+id/btn_info\"\n            android:layout_width=\"35dp\"\n            android:layout_height=\"35dp\"\n            android:layout_alignParentRight=\"true\"\n            android:layout_marginBottom=\"8dp\"\n            android:layout_marginRight=\"2dp\"\n            android:layout_centerVertical=\"true\"\n            android:layout_alignBottom=\"@+id/heading\"\n            android:background=\"@drawable/infoptaicon\"\n            android:visibility=\"invisible\"/>\n\n    </RelativeLayout>\n\n</RelativeLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/layout_activity_header.xml b/app/src/main/res/layout/layout_activity_header.xml
--- a/app/src/main/res/layout/layout_activity_header.xml	(revision 29dbbedb1ce8c3fe2a8032d242fcce101acbc7b5)
+++ b/app/src/main/res/layout/layout_activity_header.xml	(date 1690523918141)
@@ -40,7 +40,8 @@
             <RelativeLayout
                 android:id="@+id/backRelative"
                 android:layout_width="45dp"
-                android:layout_height="45dp">
+                android:layout_height="45dp"
+                android:layout_centerVertical="true">
 
                 <ImageView
                     android:id="@+id/btn_left"
Index: app/src/main/res/layout/activity_external_provider.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\n<RelativeLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n    android:orientation=\"vertical\"\n    android:background=\"@color/white\">\n    <RelativeLayout\n        android:id=\"@+id/relativeHeader\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\"\n        android:layout_alignParentTop=\"true\" >\n        <ImageView\n            android:id=\"@+id/relative_logo_header\"\n            android:layout_width=\"match_parent\"\n            android:src=\"@drawable/titlebar\"\n            android:layout_height=\"wrap_content\" />\n        <ImageView\n            android:id=\"@+id/logoClickImgView\"\n            android:layout_width=\"wrap_content\"\n            android:layout_height=\"wrap_content\"\n            android:layout_centerHorizontal=\"true\"\n            android:layout_alignTop=\"@+id/relative_logo_header\"\n            android:background=\"@drawable/logotransperent\"\n            android:layout_above=\"@+id/heading\" />\n\n        <RelativeLayout\n            android:id=\"@+id/bottomRel\"\n            android:layout_width=\"match_parent\"\n            android:layout_above=\"@+id/heading\"\n            android:layout_alignParentTop=\"true\"\n            android:layout_height=\"wrap_content\" >\n\n\n            <RelativeLayout\n                android:id=\"@+id/backRelative\"\n                android:layout_width=\"45dp\"\n                android:layout_centerVertical=\"true\"\n                android:layout_height=\"45dp\">\n\n                <ImageView\n                    android:id=\"@+id/btn_left\"\n                    android:layout_width=\"wrap_content\"\n                    android:layout_height=\"wrap_content\"\n                    android:layout_alignParentLeft=\"true\"\n                    android:layout_centerVertical=\"true\"\n                    android:background=\"@drawable/back\"\n                    android:visibility=\"visible\" />\n            </RelativeLayout>\n\n            <ImageView\n                android:id=\"@+id/btn_right\"\n                android:layout_width=\"wrap_content\"\n                android:layout_height=\"wrap_content\"\n                android:layout_alignParentRight=\"true\"\n                android:layout_centerVertical=\"true\"\n                android:visibility=\"invisible\"/>\n        </RelativeLayout>\n\n        <com.nas.alreem.commonviews.CustomFontDJ5TextWhite\n            android:id=\"@+id/heading\"\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"40dp\"\n            android:layout_below=\"@id/relative_logo_header\"\n            android:background=\"@color/split_bg\"\n            android:gravity=\"center\"\n            android:paddingTop=\"5dp\"\n            android:paddingBottom=\"5dp\"\n            android:text=\"External Providers\"\n            android:textColor=\"@color/white\"\n            android:textSize=\"17dp\" />\n        <ImageView\n            android:id=\"@+id/btn_info\"\n            android:layout_width=\"35dp\"\n            android:layout_height=\"35dp\"\n            android:layout_alignParentRight=\"true\"\n            android:layout_marginBottom=\"8dp\"\n            android:layout_marginRight=\"2dp\"\n            android:layout_centerVertical=\"true\"\n            android:layout_alignBottom=\"@+id/heading\"\n            android:background=\"@drawable/infoptaicon\"\n            android:visibility=\"invisible\"/>\n\n    </RelativeLayout>\n\n    <LinearLayout\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"match_parent\"\n        android:layout_below=\"@+id/relativeHeader\"\n        android:orientation=\"vertical\"\n        android:background=\"@color/white\"\n        >\n        <ImageView\n            android:id=\"@+id/bannerImagePager\"\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"0dp\"\n            android:layout_weight=\"30\"\n            android:background=\"@drawable/default_banner\"/>\n        <androidx.recyclerview.widget.RecyclerView\n            android:id=\"@+id/mnewsLetterListView\"\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"0dp\"\n            android:overScrollMode=\"never\"\n            android:layout_weight=\"70\"\n            android:clipToPadding=\"false\"\n            android:scrollbars=\"vertical\"\n            android:background=\"@color/white\"\n            android:layout_marginLeft=\"5dp\"\n            android:layout_marginRight=\"10dp\"/>\n    </LinearLayout>\n    <ProgressBar\n        android:id=\"@+id/progress\"\n        android:layout_width=\"40dp\"\n        android:layout_height=\"40dp\"\n        android:layout_centerInParent=\"true\"\n        android:indeterminateDrawable=\"@anim/customspinner\"\n        android:visibility=\"gone\"\n        app:layout_constraintBottom_toBottomOf=\"parent\"\n        app:layout_constraintEnd_toEndOf=\"parent\"\n        app:layout_constraintStart_toStartOf=\"parent\"\n        app:layout_constraintTop_toTopOf=\"parent\" />\n</RelativeLayout>\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/activity_external_provider.xml b/app/src/main/res/layout/activity_external_provider.xml
--- a/app/src/main/res/layout/activity_external_provider.xml	(revision 29dbbedb1ce8c3fe2a8032d242fcce101acbc7b5)
+++ b/app/src/main/res/layout/activity_external_provider.xml	(date 1690523918221)
@@ -90,12 +90,7 @@
         android:orientation="vertical"
         android:background="@color/white"
         >
-        <ImageView
-            android:id="@+id/bannerImagePager"
-            android:layout_width="match_parent"
-            android:layout_height="0dp"
-            android:layout_weight="30"
-            android:background="@drawable/default_banner"/>
+
         <androidx.recyclerview.widget.RecyclerView
             android:id="@+id/mnewsLetterListView"
             android:layout_width="match_parent"
