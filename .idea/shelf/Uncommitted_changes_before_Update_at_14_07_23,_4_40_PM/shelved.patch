Index: app/src/main/res/layout/activity_parent_meeting_detail.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/activity_parent_meeting_detail.xml b/app/src/main/res/layout/activity_parent_meeting_detail.xml
new file mode 100644
--- /dev/null	(date 1688998162000)
+++ b/app/src/main/res/layout/activity_parent_meeting_detail.xml	(date 1688998162000)
@@ -0,0 +1,461 @@
+<?xml version="1.0" encoding="utf-8"?>
+<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:background="@android:color/white">
+
+    <include
+        android:id="@+id/includeRel"
+        layout="@layout/layout_activity_header" />
+
+    <LinearLayout
+        android:layout_width="match_parent"
+        android:layout_height="match_parent"
+        android:layout_above="@+id/imageViewSlotInfo"
+        android:layout_below="@+id/includeRel"
+        android:orientation="vertical"
+        android:weightSum="100">
+
+        <com.nas.alreem.commonviews.CustomFontSansProTextBlack
+            android:id="@+id/dateTextView"
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:layout_marginTop="10dp"
+            android:gravity="center"
+            android:paddingBottom="2dp"
+            android:paddingTop="2dp"
+
+            android:singleLine="true"
+            android:text="Select a date:"
+            android:textSize="18sp" />
+
+        <LinearLayout
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:orientation="horizontal"
+            android:paddingBottom="2dp"
+            android:paddingTop="2dp"
+            android:weightSum="100">
+
+            <com.nas.alreem.commonviews.CustomFontSansProTextBlack
+                android:id="@+id/listTxtClass"
+                android:layout_width="0dp"
+                android:layout_height="wrap_content"
+                android:layout_marginLeft="10dp"
+                android:layout_marginTop="5dp"
+                android:layout_weight="20"
+                android:singleLine="true"
+                android:text="Student   :"
+                android:textSize="15sp" />
+
+            <com.nas.alreem.commonviews.CustomFontSansProTextBlackSemiBold
+                android:id="@+id/studentNameTV"
+                android:layout_width="0dp"
+                android:layout_height="wrap_content"
+                android:layout_marginRight="10dp"
+                android:layout_marginTop="5dp"
+                android:layout_weight="80"
+                android:text="Select a date:"
+                android:textSize="15sp" />
+
+        </LinearLayout>
+
+        <LinearLayout
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:orientation="horizontal"
+            android:paddingBottom="2dp"
+            android:paddingTop="2dp"
+            android:weightSum="100">
+
+            <com.nas.alreem.commonviews.CustomFontSansProTextBlack
+                android:id="@+id/studentClass"
+                android:layout_width="0dp"
+                android:layout_height="wrap_content"
+                android:layout_marginLeft="10dp"
+                android:layout_weight="20"
+                android:singleLine="true"
+                android:text="Class        :"
+                android:textSize="15sp" />
+
+            <com.nas.alreem.commonviews.CustomFontSansProTextBlackSemiBold
+                android:id="@+id/studentClassTV"
+                android:layout_width="0dp"
+                android:layout_height="wrap_content"
+                android:layout_marginRight="10dp"
+                android:layout_weight="80"
+                android:singleLine="true"
+                android:text="Select a date:"
+                android:textSize="15sp" />
+
+        </LinearLayout>
+
+        <LinearLayout
+            android:id="@+id/staffLinear"
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:orientation="horizontal"
+            android:paddingBottom="2dp"
+            android:paddingTop="2dp"
+            android:weightSum="100">
+
+            <com.nas.alreem.commonviews.CustomFontSansProTextBlack
+                android:id="@+id/staff"
+                android:layout_width="0dp"
+                android:layout_height="wrap_content"
+                android:layout_marginLeft="10dp"
+                android:layout_weight="20"
+                android:singleLine="true"
+                android:text="Staff           :" />
+
+            <RelativeLayout
+                android:layout_width="0dp"
+                android:layout_height="wrap_content"
+                android:layout_marginRight="10dp"
+                android:layout_weight="80">
+
+                <com.nas.alreem.commonviews.CustomFontSansProTextBlackSemiBold
+                    android:id="@+id/staffTV"
+                    android:layout_width="wrap_content"
+                    android:layout_height="wrap_content"
+                    android:layout_alignParentLeft="true"
+                    android:layout_toLeftOf="@+id/cancelTextView"
+                    android:text="Select a date:"
+                    android:textSize="15sp" />
+
+                <com.nas.alreem.commonviews.CustomTextViewRegular
+                    android:id="@+id/cancelTextView"
+                    android:layout_width="wrap_content"
+                    android:layout_height="wrap_content"
+                    android:layout_alignParentRight="true"
+                    android:background="@drawable/slotcancelbyuser_curved_rel_layout"
+                    android:gravity="center"
+                    android:paddingBottom="2dp"
+                    android:paddingLeft="25dp"
+                    android:paddingRight="25dp"
+                    android:paddingTop="2dp"
+                    android:singleLine="true"
+                    android:text="Cancel"
+                    android:textColor="@color/white"
+                    android:textSize="15sp"
+                    android:visibility="invisible" />
+            </RelativeLayout>
+        </LinearLayout>
+        <Button
+            android:id="@+id/vpmlBtn"
+            android:layout_width="250dp"
+            android:layout_height="30dp"
+            android:layout_marginLeft="10dp"
+            android:layout_marginRight="10dp"
+            android:text="Click here for VPM Link"
+            android:textColor="@color/white"
+            android:visibility="gone"
+            android:background="@drawable/button_blue"/>
+
+        <RelativeLayout
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content">
+
+            <com.nas.alreem.commonviews.CustomFontSansProTextBlack
+                android:id="@+id/choose"
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:layout_marginLeft="10dp"
+                android:layout_marginRight="10dp"
+                android:paddingBottom="2dp"
+                android:paddingTop="2dp"
+                android:singleLine="true"
+                android:text="Choose a time slot" />
+
+            <com.nas.alreem.commonviews.CustomTextViewRegular
+                android:id="@+id/reviewConfirmTextView"
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:layout_alignParentRight="true"
+                android:layout_centerVertical="true"
+                android:layout_marginRight="10dp"
+                android:background="@drawable/slotbookedbyuser_curved_rel_layout"
+                android:gravity="center"
+                android:paddingBottom="3dp"
+                android:paddingLeft="15dp"
+                android:paddingRight="15dp"
+                android:paddingTop="3dp"
+                android:layout_marginTop="5dp"
+                android:singleLine="true"
+                android:text="REVIEW &amp; CONFIRM"
+                android:textColor="@color/white"
+                android:textSize="15sp"
+                android:visibility="gone" />
+
+        </RelativeLayout>
+
+        <androidx.recyclerview.widget.RecyclerView
+            android:id="@+id/recycler_view_alloted_time"
+            android:layout_width="match_parent"
+            android:layout_height="match_parent"
+            android:layout_marginBottom="10dp"
+            android:layout_marginLeft="10dp"
+            android:layout_marginRight="10dp"
+            android:layout_marginTop="5dp"
+            android:overScrollMode="never"
+            android:scrollbars="vertical" />
+    </LinearLayout>
+
+    <ImageView
+        android:id="@+id/infoRoomImg"
+        android:layout_width="40dp"
+        android:layout_height="40dp"
+        android:layout_alignParentRight="true"
+        android:layout_below="@+id/includeRel"
+        android:src="@drawable/infoicon_new" />
+
+    <ImageView
+        android:id="@+id/imageViewSlotInfo"
+        android:layout_width="match_parent"
+        android:layout_height="50dp"
+        android:layout_alignParentBottom="true"
+        android:src="@drawable/infoforparentseveningslot" />
+    <ProgressBar
+        android:id="@+id/progressDialogAdd"
+        android:layout_width="40dp"
+        android:layout_height="40dp"
+        android:layout_centerInParent="true"
+        android:indeterminateDrawable="@anim/customspinner"
+        android:visibility="gone"
+
+        />
+</RelativeLayout>
+
+<!--
+<?xml version="1.0" encoding="utf-8"?>
+<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent">
+
+
+    <include
+        android:id="@+id/includeRel"
+        layout="@layout/layout_activity_header" />
+
+    <com.nas.alreem.commonviews.CustomFontSansProTextBlackSemiBold
+        android:id="@+id/dateheader"
+        android:layout_width="match_parent"
+        android:layout_height="35dp"
+        android:layout_marginTop="10dp"
+        android:gravity="center"
+        android:text="date"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintTop_toBottomOf="@+id/includeRel" />
+
+    <ImageView
+        android:id="@+id/infoRoomImg"
+        android:layout_width="40dp"
+        android:layout_height="40dp"
+        android:layout_below="@+id/includeRel"
+        android:layout_alignParentRight="true"
+        android:src="@drawable/infoicon_new"
+        app:layout_constraintBottom_toBottomOf="@+id/dateheader"
+        app:layout_constraintEnd_toEndOf="@+id/dateheader" />
+
+    <LinearLayout
+        android:id="@+id/linearLayout"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:orientation="horizontal"
+        android:paddingTop="2dp"
+        android:paddingBottom="2dp"
+        android:weightSum="100"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintTop_toBottomOf="@+id/dateheader">
+
+        <com.nas.alreem.commonviews.CustomFontSansProTextBlack
+            android:id="@+id/listTxtClass"
+            android:layout_width="0dp"
+            android:layout_height="wrap_content"
+            android:layout_marginLeft="10dp"
+            android:layout_marginTop="5dp"
+            android:layout_weight="20"
+            android:singleLine="true"
+            android:text="Student   :"
+            android:textColor="@color/black"
+            android:textSize="15sp" />
+
+        <com.nas.alreem.commonviews.CustomFontSansProTextBlack
+            android:id="@+id/studentNameTV"
+            android:layout_width="0dp"
+            android:layout_height="wrap_content"
+            android:layout_marginTop="5dp"
+            android:layout_marginRight="10dp"
+            android:layout_weight="80"
+            android:text="Select a date:"
+            android:textColor="@color/black"
+            android:textSize="15sp"
+            android:textStyle="bold" />
+    </LinearLayout>
+
+    <LinearLayout
+        android:id="@+id/linearLayout2"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:orientation="horizontal"
+        android:paddingTop="2dp"
+        android:paddingBottom="2dp"
+        android:weightSum="100"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintTop_toBottomOf="@+id/linearLayout">
+
+        <com.nas.alreem.commonviews.CustomFontSansProTextBlack
+            android:id="@+id/studentClass"
+            android:layout_width="0dp"
+            android:layout_height="wrap_content"
+            android:layout_marginLeft="10dp"
+            android:layout_weight="20"
+            android:singleLine="true"
+            android:text="Class        :"
+            android:textColor="@color/black"
+            android:textSize="15sp" />
+
+        <RelativeLayout
+            android:layout_width="0dp"
+            android:layout_height="wrap_content"
+            android:layout_marginRight="10dp"
+            android:layout_weight="80">
+
+            <com.nas.alreem.commonviews.CustomFontSansProTextBlack
+                android:id="@+id/studentclassTV"
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:layout_alignParentLeft="true"
+                android:layout_toLeftOf="@+id/cancelTextView"
+                android:text="Select a date:"
+                android:textColor="@color/black"
+                android:textSize="15sp" />
+
+            <com.nas.alreem.commonviews.CustomTextViewSemiBold
+                android:id="@+id/cancelTextView"
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:layout_alignParentRight="true"
+                android:background="@color/red"
+                android:gravity="center"
+                android:paddingLeft="25dp"
+                android:paddingTop="2dp"
+                android:paddingRight="25dp"
+                android:paddingBottom="2dp"
+                android:singleLine="true"
+                android:text="Cancel"
+                android:textColor="@color/white"
+                android:textSize="15sp"
+                android:visibility="gone" />
+        </RelativeLayout>
+
+    </LinearLayout>
+
+    <LinearLayout
+        android:id="@+id/staffLinear"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:orientation="horizontal"
+        android:paddingTop="2dp"
+        android:paddingBottom="2dp"
+        android:weightSum="100"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintTop_toBottomOf="@+id/linearLayout2">
+
+        <com.nas.alreem.commonviews.CustomFontSansProTextBlack
+            android:id="@+id/staff"
+            android:layout_width="0dp"
+            android:layout_height="wrap_content"
+            android:layout_marginLeft="10dp"
+            android:layout_weight="20"
+            android:singleLine="true"
+            android:text="Staff           :"
+            android:textColor="@color/black" />
+
+        <RelativeLayout
+            android:layout_width="0dp"
+            android:layout_height="wrap_content"
+            android:layout_marginRight="10dp"
+            android:layout_weight="80">
+
+            <com.nas.alreem.commonviews.CustomFontSansProTextBlack
+                android:id="@+id/staffTV"
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:layout_alignParentLeft="true"
+                android:layout_toLeftOf="@+id/confirmTextView"
+                android:text="Select a date:"
+                android:textColor="@color/black"
+                android:textSize="15sp" />
+
+            <com.nas.alreem.commonviews.CustomTextViewSemiBold
+                android:id="@+id/confirmTextView"
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:layout_alignParentRight="true"
+                android:background="@color/colorAccent"
+                android:gravity="center"
+                android:paddingLeft="25dp"
+                android:paddingTop="2dp"
+                android:paddingRight="25dp"
+                android:paddingBottom="2dp"
+                android:singleLine="true"
+                android:text="@string/review_confirm"
+                android:textColor="@color/white"
+                android:textSize="15sp"
+                android:visibility="gone" />
+        </RelativeLayout>
+    </LinearLayout>
+
+    <androidx.recyclerview.widget.RecyclerView
+        android:id="@+id/recycler_timeslot"
+        android:layout_width="match_parent"
+        android:layout_height="0dp"
+        android:layout_marginLeft="10dp"
+        android:layout_marginRight="10dp"
+        android:layout_marginTop="20dp"
+        android:overScrollMode="never"
+        android:scrollbars="vertical"
+        app:layout_constraintBottom_toTopOf="@+id/imageViewSlotInfo"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintTop_toBottomOf="@+id/staffLinear">
+
+    </androidx.recyclerview.widget.RecyclerView>
+
+    <include
+        android:id="@+id/progressDialog"
+        layout="@layout/custom_progress_layout"
+        android:layout_width="match_parent"
+        android:layout_height="match_parent"
+        android:visibility="gone"
+        app:layout_constraintBottom_toBottomOf="@+id/recycler_timeslot"
+        app:layout_constraintEnd_toEndOf="@+id/recycler_timeslot"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintTop_toBottomOf="@+id/staffLinear" />
+    <ImageView
+        android:id="@+id/imageViewSlotInfo"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:layout_alignParentBottom="true"
+        android:src="@drawable/infoforparentseveningslot"
+        app:layout_constraintBottom_toBottomOf="parent"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintStart_toStartOf="parent" />
+
+    <ProgressBar
+        android:id="@+id/progressDialogAdd"
+        android:layout_width="40dp"
+        android:layout_height="40dp"
+        android:layout_centerInParent="true"
+        android:indeterminateDrawable="@anim/customspinner"
+        android:visibility="gone"
+
+        />
+</androidx.constraintlayout.widget.ConstraintLayout>-->
Index: app/src/main/res/drawable/event_spinnerfill.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/drawable/event_spinnerfill.xml b/app/src/main/res/drawable/event_spinnerfill.xml
new file mode 100644
--- /dev/null	(date 1686893732000)
+++ b/app/src/main/res/drawable/event_spinnerfill.xml	(date 1686893732000)
@@ -0,0 +1,18 @@
+<?xml version="1.0" encoding="utf-8"?>
+<shape xmlns:android="http://schemas.android.com/apk/res/android" >
+
+    <solid android:color="@color/split_bg" />
+
+    <stroke
+        android:width="3dp"
+        android:color="@color/split_bg" />
+
+    <corners android:radius="5dp" />
+
+    <padding
+        android:bottom="0dp"
+        android:left="0dp"
+        android:right="0dp"
+        android:top="0dp" />
+
+</shape>
\ No newline at end of file
Index: app/src/main/java/com/nas/alreem/activity/absence/model/ListAbsenceApiModel.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/nas/alreem/activity/absence/model/ListAbsenceApiModel.kt b/app/src/main/java/com/nas/alreem/activity/absence/model/ListAbsenceApiModel.kt
new file mode 100644
--- /dev/null	(date 1688393338000)
+++ b/app/src/main/java/com/nas/alreem/activity/absence/model/ListAbsenceApiModel.kt	(date 1688393338000)
@@ -0,0 +1,9 @@
+package com.nas.alreem.activity.absence.model
+
+import com.google.gson.annotations.SerializedName
+
+class ListAbsenceApiModel  (
+    @SerializedName("student_id") val student_id: String,
+    @SerializedName("start") val start: Int,
+    @SerializedName("limit") val limit: Int
+)
\ No newline at end of file
Index: app/src/main/java/com/nas/alreem/fragment/parent_meetings/model/ListStaffPtaModel.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/nas/alreem/fragment/parent_meetings/model/ListStaffPtaModel.kt b/app/src/main/java/com/nas/alreem/fragment/parent_meetings/model/ListStaffPtaModel.kt
new file mode 100644
--- /dev/null	(date 1688972972000)
+++ b/app/src/main/java/com/nas/alreem/fragment/parent_meetings/model/ListStaffPtaModel.kt	(date 1688972972000)
@@ -0,0 +1,9 @@
+package com.nas.alreem.fragment.parent_meetings.model
+
+import com.google.gson.annotations.SerializedName
+
+class ListStaffPtaModel(
+    @SerializedName("status")var status:Int,
+    @SerializedName("message")var message:String,
+    @SerializedName("data")var data:ArrayList<StaffInfoDetail>
+)
\ No newline at end of file
Index: app/src/main/java/com/nas/alreem/activity/parent_meetings/model/PtaConfirmApiModel.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/nas/alreem/activity/parent_meetings/model/PtaConfirmApiModel.kt b/app/src/main/java/com/nas/alreem/activity/parent_meetings/model/PtaConfirmApiModel.kt
new file mode 100644
--- /dev/null	(date 1689048350000)
+++ b/app/src/main/java/com/nas/alreem/activity/parent_meetings/model/PtaConfirmApiModel.kt	(date 1689048350000)
@@ -0,0 +1,7 @@
+package com.nas.alreem.activity.parent_meetings.model
+
+import com.google.gson.annotations.SerializedName
+
+class PtaConfirmApiModel (
+    @SerializedName("pta_time_slot_booking_ids")var pta_time_slot_booking_ids:String
+)
\ No newline at end of file
Index: app/src/main/res/values/styles.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\n<resources>\n    <style name=\"SpinnerStyle\" parent=\"@android:style/Widget.Spinner\">\n        <item name=\"android:textColor\">@color/white</item>\n        <item name=\"android:divider\">@drawable/list_divider</item>\n        <item name=\"android:overScrollMode\">never</item>\n        <item name=\"android:scrollbars\">none</item>\n        <item name=\"android:dividerHeight\">1dp</item>\n        <item name=\"android:cacheColorHint\">@color/transparent</item>\n        <item name=\"android:popupBackground\">@drawable/spinner_bg</item>\n        <item name=\"android:dropDownListViewStyle\">@style/mySpinnerStyle</item>\n\n    </style>\n    <style name=\"mySpinnerStyle\" parent=\"android:Widget.ListView.DropDown\">\n        <item name=\"android:divider\">@color/white</item>\n        <item name=\"android:dividerHeight\">1dp</item>\n    </style>\n\n    <style name=\"calendar_style\" parent=\"@android:style/TextAppearance.Large\">\n        <item name=\"android:textColor\">@color/white</item>\n        <item name=\"android:textStyle\">bold</item>\n        <item name=\"android:textSize\">20sp</item>\n    </style>\n    <style name=\"textstyleWhiteNopadding\" parent=\"@android:style/Widget.TextView\">\n        <item name=\"android:textColor\">@color/white</item>\n        <item name=\"android:textSize\">16sp</item>\n        <item name=\"android:gravity\">center_vertical</item>\n        <item name=\"android:textAppearance\">?android:attr/textAppearanceMedium</item>\n    </style>\n    <style name=\"textstyleblackSlot\" parent=\"@android:style/Widget.TextView\">\n        <item name=\"android:textColor\">@color/black</item>\n        <item name=\"android:textSize\">14sp</item>\n        <item name=\"android:paddingTop\">2dp</item>\n        <item name=\"android:paddingBottom\">2dp</item>\n        <item name=\"android:gravity\">center_vertical</item>\n        <item name=\"android:textAppearance\">?android:attr/textAppearanceMedium</item>\n    </style>\n\n    <style name=\"textstyleblackSlot1\" parent=\"@android:style/Widget.TextView\">\n        <item name=\"android:textColor\">@color/black</item>\n        <item name=\"android:textSize\">12sp</item>\n        <item name=\"android:paddingTop\">2dp</item>\n        <item name=\"android:paddingBottom\">2dp</item>\n        <item name=\"android:gravity\">center_horizontal</item>\n        <item name=\"android:textAppearance\">?android:attr/textAppearanceMedium</item>\n    </style>\n\n    <style name=\"textstyleblackSlot2\" parent=\"@android:style/Widget.TextView\">\n        <item name=\"android:textColor\">@color/black</item>\n        <item name=\"android:textSize\">12sp</item>\n        <item name=\"android:paddingTop\">2dp</item>\n        <item name=\"android:paddingBottom\">2dp</item>\n        <item name=\"android:textAppearance\">?android:attr/textAppearanceMedium</item>\n    </style>\n\n    <style name=\"textstyleblackroom\" parent=\"@android:style/Widget.TextView\">\n        <item name=\"android:textColor\">@color/black</item>\n        <item name=\"android:textSize\">16sp</item>\n        <item name=\"android:paddingTop\">2dp</item>\n        <item name=\"android:paddingBottom\">2dp</item>\n        <item name=\"android:gravity\">center_vertical</item>\n        <item name=\"android:textAppearance\">?android:attr/textAppearanceMedium</item>\n    </style>\n\n    <style name=\"textstyleblackrooms\" parent=\"@android:style/Widget.TextView\">\n        <item name=\"android:textColor\">@color/black</item>\n        <item name=\"android:textSize\">16sp</item>\n        <item name=\"android:paddingBottom\">2dp</item>\n        <item name=\"android:gravity\">center_vertical</item>\n        <item name=\"android:textAppearance\">?android:attr/textAppearanceMedium</item>\n    </style>\n    <style name=\"textstyleblack\" parent=\"@android:style/Widget.TextView\">\n        <item name=\"android:textColor\">@color/black</item>\n        <item name=\"android:textSize\">16sp</item>\n        <item name=\"android:paddingTop\">5dp</item>\n        <item name=\"android:paddingBottom\">5dp</item>\n        <item name=\"android:gravity\">center_vertical</item>\n        <item name=\"android:textAppearance\">?android:attr/textAppearanceMedium</item>\n    </style>\n</resources>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/values/styles.xml b/app/src/main/res/values/styles.xml
--- a/app/src/main/res/values/styles.xml	(revision b2ad66f8612edd03349ffa4aaee582fd0005cdb4)
+++ b/app/src/main/res/values/styles.xml	(date 1688366580000)
@@ -77,4 +77,25 @@
         <item name="android:gravity">center_vertical</item>
         <item name="android:textAppearance">?android:attr/textAppearanceMedium</item>
     </style>
+    <style name="MyDatePickerStyle" parent="Theme.AppCompat.Light.Dialog">
+        <item name="colorAccent">#FF018786</item>
+        <!--selected Item color-->
+        <item name="colorControlActivated">#FF018786</item>
+        <!-- arrow bordercolor(<>)-->
+        <!-- Highlight item color-->
+        <item name="colorControlHighlight">#0A8600</item>
+        <!--Calender Background color -->
+        <item name="android:windowBackground">#FAFAFA</item>
+        <!-- Ok Cancel Color-->
+        <item name="android:textColor">#FF018786</item>
+        <!-- Week TextColor-->
+        <item name="android:textColorSecondary">#757575</item>
+        <!-- Calender Number color arrow color (< >) -->
+        <item name="android:textColorPrimary">#212121</item>
+        <!--day , month-->
+        <item name="android:textColorPrimaryInverse">#f1f1f1</item>
+        <!-- year-->
+        <item name="android:textColorSecondaryInverse">#f1f1f1</item>
+
+    </style>
 </resources>
\ No newline at end of file
Index: app/src/main/res/layout/adapter_timeslot.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/adapter_timeslot.xml b/app/src/main/res/layout/adapter_timeslot.xml
new file mode 100644
--- /dev/null	(date 1688992910000)
+++ b/app/src/main/res/layout/adapter_timeslot.xml	(date 1688992910000)
@@ -0,0 +1,65 @@
+<?xml version="1.0" encoding="utf-8"?>
+<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:card_view="http://schemas.android.com/tools"
+    android:layout_width="wrap_content"
+    android:layout_height="wrap_content"
+    android:layout_margin="8dp"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    android:background="@color/white">
+
+    <androidx.cardview.widget.CardView
+        android:id="@+id/card_view"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:elevation="1dp"
+        card_view:cardUseCompatPadding="true"
+        app:cardBackgroundColor="@color/white"
+        card_view:cardCornerRadius="1dp">
+
+        <LinearLayout
+            android:id="@+id/gridClickRelative"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:paddingLeft="2dp"
+            android:paddingRight="2dp"
+            android:gravity="center"
+            android:orientation="horizontal">
+
+            <TextView
+                android:id="@+id/timeFrom"
+                android:paddingTop="2dp"
+                style="@style/textstyleblackSlot1"
+                android:paddingBottom="2dp"
+                android:layout_width="40dp"
+                android:layout_height="wrap_content"
+                android:layout_marginBottom="5dp"
+                android:layout_marginTop="5dp"
+                android:layout_marginLeft="2dp"
+                android:gravity="center_horizontal"
+                android:text="01:00 am" />
+
+
+            <TextView
+                android:id="@+id/textViewTo"
+                style="@style/textstyleblackSlot"
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:layout_gravity="center_vertical"
+                android:layout_marginBottom="5dp"
+                android:layout_marginTop="5dp"
+                android:singleLine="true"
+                android:text=" - " />
+
+            <TextView
+                android:id="@+id/timeTo"
+                style="@style/textstyleblackSlot1"
+                android:layout_width="40dp"
+                android:layout_height="wrap_content"
+                android:layout_marginRight="2dp"
+                android:layout_marginBottom="5dp"
+                android:layout_marginTop="5dp"
+                android:gravity="center_horizontal"
+                android:text="01:00\npm" />
+        </LinearLayout>
+    </androidx.cardview.widget.CardView>
+</RelativeLayout>
\ No newline at end of file
Index: app/src/main/res/layout/adapter_paymentcatlist_recycler.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\n<RelativeLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"wrap_content\" >\n\n    <RelativeLayout\n        android:id=\"@+id/relSub\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\"\n        android:padding=\"5dp\" >\n<LinearLayout\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"wrap_content\"\n    android:layout_centerInParent=\"true\"\n    android:weightSum=\"5\"\n    android:orientation=\"vertical\"\n    android:layout_marginLeft=\"10dp\"\n    android:layout_marginRight=\"5dp\"\n    android:layout_toLeftOf=\"@+id/statusLayout\">\n    <com.nas.alreem.commonviews.CustomTextViewRegular\n        android:id=\"@+id/listTxtTitle\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\"\n        android:singleLine=\"true\"\n        android:layout_weight=\"3\"\n        android:textColor=\"@color/black\"\n        android:text=\"Category\" />\n<com.nas.alreem.commonviews.CustomTextViewRegular\n    android:id=\"@+id/date\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"wrap_content\"\n    android:singleLine=\"true\"\n    android:layout_weight=\"2\"\n    android:text=\"Date\"/>\n\n</LinearLayout>\n\n\n\n        <include\n            android:id=\"@+id/statusLayout\"\n            layout=\"@layout/layout_updated\"\n            android:layout_width=\"wrap_content\"\n            android:layout_height=\"wrap_content\"\n            android:layout_centerInParent=\"true\"\n            android:layout_marginRight=\"5dp\"\n            android:layout_toLeftOf=\"@+id/arrowImg\"\n            android:visibility=\"gone\" />\n        <ImageView\n            android:id=\"@+id/arrowImg\"\n            android:layout_width=\"20dp\"\n            android:layout_height=\"25dp\"\n            android:layout_alignParentRight=\"true\"\n            android:layout_centerVertical=\"true\"\n            android:src=\"@drawable/arrow\" />\n    </RelativeLayout>\n\n    <ImageView\n        android:id=\"@+id/viewLine\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"1dp\"\n        android:background=\"@color/blue\"\n        android:layout_below=\"@+id/relSub\"\n        android:layout_marginBottom=\"2dp\"/>\n</RelativeLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/adapter_paymentcatlist_recycler.xml b/app/src/main/res/layout/adapter_paymentcatlist_recycler.xml
--- a/app/src/main/res/layout/adapter_paymentcatlist_recycler.xml	(revision b2ad66f8612edd03349ffa4aaee582fd0005cdb4)
+++ b/app/src/main/res/layout/adapter_paymentcatlist_recycler.xml	(date 1689330498913)
@@ -8,44 +8,57 @@
         android:layout_width="match_parent"
         android:layout_height="wrap_content"
         android:padding="5dp" >
-<LinearLayout
-    android:layout_width="match_parent"
-    android:layout_height="wrap_content"
-    android:layout_centerInParent="true"
-    android:weightSum="5"
-    android:orientation="vertical"
-    android:layout_marginLeft="10dp"
-    android:layout_marginRight="5dp"
-    android:layout_toLeftOf="@+id/statusLayout">
-    <com.nas.alreem.commonviews.CustomTextViewRegular
-        android:id="@+id/listTxtTitle"
-        android:layout_width="match_parent"
-        android:layout_height="wrap_content"
-        android:singleLine="true"
-        android:layout_weight="3"
-        android:textColor="@color/black"
-        android:text="Category" />
-<com.nas.alreem.commonviews.CustomTextViewRegular
-    android:id="@+id/date"
-    android:layout_width="match_parent"
-    android:layout_height="wrap_content"
-    android:singleLine="true"
-    android:layout_weight="2"
-    android:text="Date"/>
+        <LinearLayout
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:layout_centerInParent="true"
+            android:weightSum="5"
+            android:orientation="vertical"
+            android:layout_marginLeft="4dp"
+            android:layout_marginRight="5dp"
+            android:layout_toLeftOf="@+id/statusLayout">
+            <com.nas.alreem.commonviews.CustomTextViewRegular
+                android:id="@+id/listTxtTitle"
+                android:layout_width="match_parent"
+                android:layout_height="wrap_content"
+                android:singleLine="true"
+                android:layout_weight="3"
+                android:textColor="@color/black"
+                android:text="Category" />
+            <com.nas.alreem.commonviews.CustomTextViewRegular
+                android:id="@+id/date"
+                android:layout_width="match_parent"
+                android:layout_height="wrap_content"
+                android:singleLine="true"
+                android:layout_weight="2"
+                android:text="Date"/>
 
-</LinearLayout>
+        </LinearLayout>
 
 
 
-        <include
+        <RelativeLayout
             android:id="@+id/statusLayout"
-            layout="@layout/layout_updated"
             android:layout_width="wrap_content"
             android:layout_height="wrap_content"
             android:layout_centerInParent="true"
             android:layout_marginRight="5dp"
             android:layout_toLeftOf="@+id/arrowImg"
-            android:visibility="gone" />
+            android:visibility="gone" >
+
+            <com.nas.alreem.commonviews.CustomTextViewRegular
+                android:id="@+id/status"
+                android:layout_width="75dp"
+                android:layout_height="30dp"
+                android:textSize="12dp"
+                android:fontFamily="arial"
+                android:textColor="@color/white"
+                android:paddingRight="5dp"
+                android:paddingBottom="2dp"
+                android:paddingTop="2dp"
+                android:paddingLeft="5dp"
+                android:gravity="center"/>
+        </RelativeLayout>
         <ImageView
             android:id="@+id/arrowImg"
             android:layout_width="20dp"
@@ -60,6 +73,7 @@
         android:layout_width="match_parent"
         android:layout_height="1dp"
         android:background="@color/blue"
+        android:visibility="visible"
         android:layout_below="@+id/relSub"
         android:layout_marginBottom="2dp"/>
 </RelativeLayout>
\ No newline at end of file
Index: app/src/main/java/com/nas/alreem/fragment/parent_meetings/adapter/RequestAbsenceRecyclerAdapter.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/nas/alreem/fragment/parent_meetings/adapter/RequestAbsenceRecyclerAdapter.kt b/app/src/main/java/com/nas/alreem/fragment/parent_meetings/adapter/RequestAbsenceRecyclerAdapter.kt
new file mode 100644
--- /dev/null	(date 1688446904000)
+++ b/app/src/main/java/com/nas/alreem/fragment/parent_meetings/adapter/RequestAbsenceRecyclerAdapter.kt	(date 1688446904000)
@@ -0,0 +1,58 @@
+package com.nas.alreem.fragment.parent_meetings.adapter
+
+import android.view.LayoutInflater
+import android.view.View
+import android.view.ViewGroup
+import android.widget.TextView
+import androidx.annotation.NonNull
+import androidx.recyclerview.widget.RecyclerView
+import com.nas.alreem.R
+import com.nas.alreem.activity.absence.model.AbsenceRequestListModel
+import com.nas.alreem.fragment.absence.model.AbsenceRequestListDetailModel
+import java.text.DateFormat
+import java.text.SimpleDateFormat
+import java.util.Date
+
+internal class RequestAbsenceRecyclerAdapter (private var studentInfoList: List<AbsenceRequestListModel>) :
+    RecyclerView.Adapter<RequestAbsenceRecyclerAdapter.MyViewHolder>() {
+    internal inner class MyViewHolder(view: View) : RecyclerView.ViewHolder(view) {
+        var listDate: TextView = view.findViewById(R.id.listDate)
+        var listStatus: TextView =view.findViewById(R.id.listStatus)
+    }
+    @NonNull
+    override fun onCreateViewHolder(parent: ViewGroup, viewType: Int): MyViewHolder {
+        val itemView = LayoutInflater.from(parent.context)
+            .inflate(R.layout.adapter_absence_leave_recycelr, parent, false)
+        return MyViewHolder(itemView)
+    }
+    override fun onBindViewHolder(holder: MyViewHolder, position: Int) {
+        holder.listStatus.visibility = View.GONE
+        val movie = studentInfoList[position]
+
+        val fromDate=movie.from_date
+        val inputFormat: DateFormat = SimpleDateFormat("yyyy-MM-dd")
+        val outputFormat: DateFormat = SimpleDateFormat("dd MMM yyyy")
+        val inputDateStr = fromDate
+        val date: Date = inputFormat.parse(inputDateStr)
+        val outputDateStr: String = outputFormat.format(date)
+
+        if (movie.to_date!=""){
+            val toDate=movie.to_date
+            val inputFormat1: DateFormat = SimpleDateFormat("yyyy-MM-dd")
+            val outputFormat1: DateFormat = SimpleDateFormat("dd MMM yyyy")
+            val inputDateStr1 = toDate
+            val date1: Date = inputFormat1.parse(inputDateStr1)
+            val outputDateStr1: String = outputFormat1.format(date1)
+            holder.listDate.text = outputDateStr+" - "+outputDateStr1
+        }
+        else{
+            holder.listDate.text = outputDateStr
+        }
+
+
+
+    }
+    override fun getItemCount(): Int {
+        return studentInfoList.size
+    }
+}
\ No newline at end of file
Index: app/src/main/res/layout/parent_meetings_calendar_activity.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/parent_meetings_calendar_activity.xml b/app/src/main/res/layout/parent_meetings_calendar_activity.xml
new file mode 100644
--- /dev/null	(date 1689158291395)
+++ b/app/src/main/res/layout/parent_meetings_calendar_activity.xml	(date 1689158291395)
@@ -0,0 +1,687 @@
+<?xml version="1.0" encoding="utf-8"?>
+<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    android:background="@color/white">
+
+    <include
+        android:id="@+id/includeRel"
+        layout="@layout/layout_activity_header" />
+
+    <LinearLayout
+        android:id="@+id/ttle"
+        android:layout_width="match_parent"
+        android:layout_height="35dp"
+        android:layout_marginStart="10dp"
+        android:layout_marginEnd="10dp"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintTop_toBottomOf="@+id/includeRel">
+
+        <com.nas.alreem.commonviews.CustomFontSansProTextBlack
+            android:layout_width="match_parent"
+            android:layout_height="match_parent"
+            android:layout_margin="10dp"
+            android:text="Select  a date : " />
+    </LinearLayout>
+
+    <LinearLayout
+        android:id="@+id/calendar_title"
+        android:layout_width="match_parent"
+        android:layout_height="40dp"
+        android:orientation="horizontal"
+        android:weightSum="1"
+        android:layout_marginLeft="10dp"
+        android:layout_marginRight="10dp"
+        app:layout_constraintTop_toBottomOf="@+id/ttle">
+
+        <ImageView
+            android:id="@+id/arrow_back"
+            android:layout_width="0dp"
+            android:layout_height="40dp"
+            android:layout_weight=".1"
+            android:background="@color/colorAccent"
+            android:src="@drawable/ic_arrow_left" />
+
+        <com.nas.alreem.commonviews.CustomTextViewBold
+            android:id="@+id/Header"
+            android:layout_width="0dp"
+            android:layout_height="40dp"
+            android:layout_gravity="center"
+            android:layout_weight=".8"
+            android:background="@color/colorAccent"
+            android:gravity="center"
+            android:textColor="@color/white"
+            android:textStyle="bold" />
+
+        <ImageView
+            android:id="@+id/arrow_nxt"
+            android:layout_width="0dp"
+            android:layout_height="40dp"
+            android:layout_weight=".1"
+            android:background="@color/colorAccent"
+            android:src="@drawable/ic_arrow_right" />
+
+    </LinearLayout>
+
+    <LinearLayout
+        android:id="@+id/calendar_week_days"
+        android:layout_width="match_parent"
+        android:layout_height="40dp"
+        android:orientation="horizontal"
+        android:weightSum="7"
+        android:layout_marginLeft="10dp"
+        android:layout_marginRight="10dp"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintTop_toBottomOf="@+id/calendar_title" >
+
+        <com.nas.alreem.commonviews.CustomFontSansProTextBlackSemiBold
+            android:id="@+id/firstday"
+            android:layout_width="0dp"
+            android:layout_height="40dp"
+            android:layout_marginRight="5dp"
+            android:layout_weight="1"
+            android:textSize="12dp"
+            android:layout_gravity="center"
+            android:gravity="center"
+            android:backgroundTint="@color/white"
+            android:text="SUN" />
+
+        <com.nas.alreem.commonviews.CustomFontSansProTextBlackSemiBold
+            android:id="@+id/secondday"
+            android:layout_width="0dp"
+            android:layout_height="40dp"
+            android:layout_weight="1"
+            android:layout_gravity="center"
+            android:gravity="center"
+            android:text="MON"
+            android:textSize="12dp"
+            android:layout_marginRight="5dp"
+            android:backgroundTint="@color/white"/>
+        <com.nas.alreem.commonviews.CustomFontSansProTextBlackSemiBold
+            android:id="@+id/thirdday"
+            android:layout_width="0dp"
+            android:layout_height="40dp"
+            android:layout_weight="1"
+            android:text="TUE"
+            android:textSize="12dp"
+            android:layout_gravity="center"
+            android:gravity="center"
+            android:layout_marginRight="5dp"
+            android:backgroundTint="@color/white"/>
+        <com.nas.alreem.commonviews.CustomFontSansProTextBlackSemiBold
+            android:id="@+id/fourthday"
+            android:layout_width="0dp"
+            android:layout_height="40dp"
+            android:layout_weight="1"
+            android:text="WED"
+            android:layout_gravity="center"
+            android:gravity="center"
+            android:textSize="12dp"
+            android:layout_marginRight="5dp"
+            android:backgroundTint="@color/white"/>
+        <com.nas.alreem.commonviews.CustomFontSansProTextBlackSemiBold
+            android:id="@+id/fifthday"
+            android:layout_width="0dp"
+            android:layout_height="40dp"
+            android:layout_weight="1"
+            android:text="THU"
+            android:layout_gravity="center"
+            android:gravity="center"
+            android:textSize="12dp"
+            android:layout_marginRight="5dp"
+            android:backgroundTint="@color/white"/>
+        <com.nas.alreem.commonviews.CustomFontSansProTextBlackSemiBold
+            android:id="@+id/sixthday"
+            android:layout_width="0dp"
+            android:layout_height="40dp"
+            android:layout_weight="1"
+            android:text="FRI"
+            android:layout_gravity="center"
+            android:gravity="center"
+            android:textSize="12dp"
+            android:layout_marginRight="5dp"
+            android:backgroundTint="@color/white"/>
+        <com.nas.alreem.commonviews.CustomFontSansProTextBlackSemiBold
+            android:id="@+id/seventhday"
+            android:layout_width="0dp"
+            android:layout_height="40dp"
+            android:layout_weight="1"
+            android:text="SAT"
+            android:layout_gravity="center"
+            android:gravity="center"
+            android:textSize="12dp"
+            android:backgroundTint="@color/white"/>
+    </LinearLayout>
+
+    <LinearLayout
+        android:id="@+id/days_layout_r1"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:orientation="horizontal"
+        android:weightSum="7"
+        android:layout_marginLeft="10dp"
+        android:layout_marginRight="10dp"
+        app:layout_constraintBottom_toBottomOf="parent"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintHorizontal_bias="0.0"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintTop_toBottomOf="@+id/calendar_week_days"
+        app:layout_constraintVertical_bias="0.005">
+        <TextView
+            android:id="@+id/textview_0"
+            android:layout_width="0dp"
+            android:layout_height="40dp"
+            android:layout_weight="1"
+            android:gravity="center"
+            android:textColor="@color/black"
+            android:background="@color/white"
+            android:layout_marginLeft="5dp"
+            android:layout_marginRight="10dp"/>
+        <TextView
+            android:id="@+id/textview_1"
+            android:layout_width="0dp"
+            android:layout_height="40dp"
+            android:layout_weight="1"
+            android:gravity="center"
+            android:textColor="@color/black"
+            android:background="@color/white"
+            android:layout_marginRight="10dp"/>
+        <TextView
+            android:id="@+id/textview_2"
+            android:layout_width="0dp"
+            android:layout_height="40dp"
+            android:layout_weight="1"
+            android:textColor="@color/black"
+            android:background="@color/white"
+            android:gravity="center"
+            android:layout_marginRight="10dp"/>
+        <TextView
+            android:id="@+id/textview_3"
+            android:layout_width="0dp"
+            android:layout_height="40dp"
+            android:layout_weight="1"
+            android:gravity="center"
+            android:textColor="@color/black"
+            android:background="@color/white"
+            android:layout_marginRight="10dp"/>
+        <TextView
+            android:id="@+id/textview_4"
+            android:layout_width="0dp"
+            android:layout_height="40dp"
+            android:layout_weight="1"
+            android:gravity="center"
+            android:textColor="@color/black"
+            android:background="@color/white"
+            android:layout_marginRight="10dp"/>
+        <TextView
+            android:id="@+id/textview_5"
+            android:layout_width="0dp"
+            android:layout_height="40dp"
+            android:layout_weight="1"
+            android:gravity="center"
+            android:textColor="@color/black"
+            android:background="@color/white"
+            android:layout_marginRight="10dp"/>
+        <TextView
+            android:id="@+id/textview_6"
+            android:layout_width="0dp"
+            android:layout_height="40dp"
+            android:layout_weight="1"
+            android:gravity="center"
+            android:textColor="@color/black"
+            android:background="@color/white"
+            android:layout_marginRight="10dp"/>
+
+    </LinearLayout>
+
+    <LinearLayout
+        android:id="@+id/days_layout_r2"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:orientation="horizontal"
+        android:weightSum="7"
+
+        android:layout_marginLeft="10dp"
+        android:layout_marginRight="10dp"
+        android:layout_marginTop="5dp"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintTop_toBottomOf="@+id/days_layout_r1">
+
+        <TextView
+            android:id="@+id/textview_7"
+            android:layout_width="0dp"
+            android:layout_height="40dp"
+            android:layout_marginLeft="5dp"
+            android:layout_marginRight="10dp"
+            android:layout_weight="1"
+            android:gravity="center"
+            android:textColor="@color/black"
+            android:background="@color/white" />
+
+        <TextView
+            android:id="@+id/textview_8"
+            android:layout_width="0dp"
+            android:layout_height="40dp"
+            android:layout_marginRight="10dp"
+            android:layout_weight="1"
+            android:textColor="@color/black"
+            android:gravity="center"
+            android:background="@color/white" />
+
+        <TextView
+            android:id="@+id/textview_9"
+            android:layout_width="0dp"
+            android:layout_height="40dp"
+            android:layout_marginRight="10dp"
+            android:layout_weight="1"
+            android:gravity="center"
+            android:textColor="@color/black"
+            android:background="@color/white" />
+
+        <TextView
+            android:id="@+id/textview_10"
+            android:layout_width="0dp"
+            android:layout_height="40dp"
+            android:layout_marginRight="10dp"
+            android:layout_weight="1"
+            android:textColor="@color/black"
+            android:gravity="center"
+            android:background="@color/white" />
+
+        <TextView
+            android:id="@+id/textview_11"
+            android:layout_width="0dp"
+            android:layout_height="40dp"
+            android:textColor="@color/black"
+            android:layout_marginRight="10dp"
+            android:layout_weight="1"
+            android:gravity="center"
+            android:background="@color/white" />
+
+        <TextView
+            android:id="@+id/textview_12"
+            android:layout_width="0dp"
+            android:layout_height="40dp"
+            android:layout_marginRight="10dp"
+            android:layout_weight="1"
+            android:textColor="@color/black"
+            android:gravity="center"
+            android:background="@color/white" />
+
+        <TextView
+            android:id="@+id/textview_13"
+            android:layout_width="0dp"
+            android:layout_height="40dp"
+            android:layout_marginRight="10dp"
+            android:layout_weight="1"
+            android:textColor="@color/black"
+            android:gravity="center"
+            android:background="@color/white" />
+
+    </LinearLayout>
+    <LinearLayout
+        android:id="@+id/days_layout_r3"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:orientation="horizontal"
+        android:weightSum="7"
+        android:layout_marginLeft="10dp"
+        android:layout_marginRight="10dp"
+        android:layout_marginTop="5dp"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintTop_toBottomOf="@+id/days_layout_r2">
+
+        <TextView
+            android:id="@+id/textview_14"
+            android:layout_width="0dp"
+            android:layout_height="40dp"
+            android:layout_marginLeft="5dp"
+            android:layout_marginRight="10dp"
+            android:layout_weight="1"
+            android:textColor="@color/black"
+            android:gravity="center"
+            android:background="@color/white" />
+
+        <TextView
+            android:id="@+id/textview_15"
+            android:layout_width="0dp"
+            android:layout_height="40dp"
+            android:layout_marginRight="10dp"
+            android:layout_weight="1"
+            android:gravity="center"
+            android:textColor="@color/black"
+            android:background="@color/white" />
+
+        <TextView
+            android:id="@+id/textview_16"
+            android:layout_width="0dp"
+            android:layout_height="40dp"
+            android:layout_marginRight="10dp"
+            android:layout_weight="1"
+            android:textColor="@color/black"
+            android:gravity="center"
+            android:background="@color/white" />
+
+        <TextView
+            android:id="@+id/textview_17"
+            android:layout_width="0dp"
+            android:layout_height="40dp"
+            android:layout_marginRight="10dp"
+            android:layout_weight="1"
+            android:textColor="@color/black"
+            android:gravity="center"
+            android:background="@color/white" />
+
+        <TextView
+            android:id="@+id/textview_18"
+            android:layout_width="0dp"
+            android:layout_height="40dp"
+            android:layout_marginRight="10dp"
+            android:layout_weight="1"
+            android:textColor="@color/black"
+            android:gravity="center"
+            android:background="@color/white" />
+
+        <TextView
+            android:id="@+id/textview_19"
+            android:layout_width="0dp"
+            android:layout_height="40dp"
+            android:layout_marginRight="10dp"
+            android:layout_weight="1"
+            android:gravity="center"
+            android:textColor="@color/black"
+            android:background="@color/white" />
+
+        <TextView
+            android:id="@+id/textview_20"
+            android:layout_width="0dp"
+            android:layout_height="40dp"
+            android:layout_marginRight="10dp"
+            android:layout_weight="1"
+            android:gravity="center"
+            android:textColor="@color/black"
+            android:background="@color/white" />
+
+    </LinearLayout>
+    <LinearLayout
+        android:id="@+id/days_layout_r4"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:orientation="horizontal"
+        android:weightSum="7"
+        android:layout_marginLeft="10dp"
+        android:layout_marginRight="10dp"
+        android:layout_marginTop="5dp"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintTop_toBottomOf="@+id/days_layout_r3">
+
+        <TextView
+            android:id="@+id/textview_21"
+            android:layout_width="0dp"
+            android:layout_height="40dp"
+            android:layout_marginLeft="5dp"
+            android:layout_marginRight="10dp"
+            android:layout_weight="1"
+            android:gravity="center"
+            android:textColor="@color/black"
+            android:background="@color/white" />
+
+        <TextView
+            android:id="@+id/textview_22"
+            android:layout_width="0dp"
+            android:layout_height="40dp"
+            android:layout_marginRight="10dp"
+            android:layout_weight="1"
+            android:gravity="center"
+            android:textColor="@color/black"
+            android:background="@color/white" />
+
+        <TextView
+            android:id="@+id/textview_23"
+            android:layout_width="0dp"
+            android:layout_height="40dp"
+            android:layout_marginRight="10dp"
+            android:layout_weight="1"
+            android:gravity="center"
+            android:textColor="@color/black"
+            android:background="@color/white" />
+
+        <TextView
+            android:id="@+id/textview_24"
+            android:layout_width="0dp"
+            android:layout_height="40dp"
+            android:layout_marginRight="10dp"
+            android:layout_weight="1"
+            android:gravity="center"
+            android:background="@color/white" />
+
+        <TextView
+            android:id="@+id/textview_25"
+            android:layout_width="0dp"
+            android:layout_height="40dp"
+            android:layout_marginRight="10dp"
+            android:layout_weight="1"
+            android:gravity="center"
+            android:textColor="@color/black"
+            android:background="@color/white" />
+
+        <TextView
+            android:id="@+id/textview_26"
+            android:layout_width="0dp"
+            android:layout_height="40dp"
+            android:layout_marginRight="10dp"
+            android:layout_weight="1"
+            android:gravity="center"
+            android:textColor="@color/black"
+            android:background="@color/white" />
+
+        <TextView
+            android:id="@+id/textview_27"
+            android:layout_width="0dp"
+            android:layout_height="40dp"
+            android:layout_marginRight="10dp"
+            android:layout_weight="1"
+            android:gravity="center"
+            android:textColor="@color/black"
+            android:background="@color/white" />
+
+    </LinearLayout>
+    <LinearLayout
+        android:id="@+id/days_layout_r5"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:orientation="horizontal"
+        android:weightSum="7"
+        android:layout_marginLeft="10dp"
+        android:layout_marginRight="10dp"
+        android:layout_marginTop="5dp"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintTop_toBottomOf="@+id/days_layout_r4">
+
+        <TextView
+            android:id="@+id/textview_28"
+            android:layout_width="0dp"
+            android:layout_height="40dp"
+            android:layout_marginLeft="5dp"
+            android:layout_marginRight="10dp"
+            android:layout_weight="1"
+            android:gravity="center"
+            android:textColor="@color/black"
+            android:background="@color/white" />
+
+        <TextView
+            android:id="@+id/textview_29"
+            android:layout_width="0dp"
+            android:layout_height="40dp"
+            android:layout_marginRight="10dp"
+            android:layout_weight="1"
+            android:gravity="center"
+            android:background="@color/white" />
+
+        <TextView
+            android:id="@+id/textview_30"
+            android:layout_width="0dp"
+            android:layout_height="40dp"
+            android:layout_marginRight="10dp"
+            android:layout_weight="1"
+            android:gravity="center"
+            android:textColor="@color/black"
+            android:background="@color/white" />
+
+        <TextView
+            android:id="@+id/textview_31"
+            android:layout_width="0dp"
+            android:layout_height="40dp"
+            android:layout_marginRight="10dp"
+            android:layout_weight="1"
+            android:gravity="center"
+            android:textColor="@color/black"
+            android:background="@color/white" />
+
+        <TextView
+            android:id="@+id/textview_32"
+            android:layout_width="0dp"
+            android:layout_height="40dp"
+            android:layout_marginRight="10dp"
+            android:layout_weight="1"
+            android:gravity="center"
+            android:textColor="@color/black"
+            android:background="@color/white" />
+
+        <TextView
+            android:id="@+id/textview_33"
+            android:layout_width="0dp"
+            android:layout_height="40dp"
+            android:layout_marginRight="10dp"
+            android:layout_weight="1"
+            android:gravity="center"
+            android:textColor="@color/black"
+            android:background="@color/white" />
+
+        <TextView
+            android:id="@+id/textview_34"
+            android:layout_width="0dp"
+            android:layout_height="40dp"
+            android:layout_marginRight="10dp"
+            android:layout_weight="1"
+            android:gravity="center"
+            android:textColor="@color/black"
+            android:background="@color/white" />
+
+    </LinearLayout>
+    <LinearLayout
+        android:id="@+id/days_layout_r6"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:orientation="horizontal"
+        android:weightSum="7"
+        android:layout_marginLeft="10dp"
+        android:layout_marginRight="10dp"
+        android:layout_marginTop="5dp"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintTop_toBottomOf="@+id/days_layout_r5">
+
+        <TextView
+            android:id="@+id/textview_35"
+            android:layout_width="0dp"
+            android:layout_height="40dp"
+            android:layout_marginLeft="5dp"
+            android:layout_marginRight="10dp"
+            android:layout_weight="1"
+            android:gravity="center"
+            android:textColor="@color/black"
+            android:background="@color/white" />
+
+        <TextView
+            android:id="@+id/textview_36"
+            android:layout_width="0dp"
+            android:layout_height="40dp"
+            android:layout_marginRight="10dp"
+            android:layout_weight="1"
+            android:gravity="center"
+            android:textColor="@color/black"
+            android:background="@color/white" />
+
+        <TextView
+            android:id="@+id/textview_37"
+            android:layout_width="0dp"
+            android:layout_height="40dp"
+            android:layout_marginRight="10dp"
+            android:layout_weight="1"
+            android:gravity="center"
+            android:textColor="@color/black"
+            android:background="@color/white" />
+
+        <TextView
+            android:id="@+id/textview_38"
+            android:layout_width="0dp"
+            android:layout_height="40dp"
+            android:layout_marginRight="10dp"
+            android:layout_weight="1"
+            android:gravity="center"
+            android:textColor="@color/black"
+            android:background="@color/white" />
+
+        <TextView
+            android:id="@+id/textview_39"
+            android:layout_width="0dp"
+            android:layout_height="40dp"
+            android:layout_marginRight="10dp"
+            android:layout_weight="1"
+            android:gravity="center"
+            android:textColor="@color/black"
+            android:background="@color/white" />
+
+        <TextView
+            android:id="@+id/textview_40"
+            android:layout_width="0dp"
+            android:layout_height="40dp"
+            android:layout_marginRight="10dp"
+            android:layout_weight="1"
+            android:gravity="center"
+            android:textColor="@color/black"
+            android:background="@color/white" />
+
+        <TextView
+            android:id="@+id/textview_41"
+            android:layout_width="0dp"
+            android:layout_height="40dp"
+            android:layout_marginRight="10dp"
+            android:layout_weight="1"
+            android:gravity="center"
+            android:textColor="@color/black"
+            android:background="@color/white" />
+
+    </LinearLayout>
+    <!-- <GridView
+         android:id="@+id/days_grid"
+         android:layout_width="match_parent"
+         android:layout_height="0dp"
+         android:horizontalSpacing="6dp"
+         android:numColumns="7"
+         android:verticalSpacing="6dp"
+         app:layout_constraintBottom_toBottomOf="parent"
+         app:layout_constraintEnd_toEndOf="parent"
+         app:layout_constraintStart_toStartOf="parent"
+         app:layout_constraintTop_toBottomOf="@+id/calendar_week_days" />-->
+    <ProgressBar
+        android:id="@+id/progressDialogAdd"
+        android:layout_width="40dp"
+        android:layout_height="40dp"
+        android:layout_centerInParent="true"
+        android:indeterminateDrawable="@anim/customspinner"
+        android:visibility="gone"
+
+        app:layout_constraintBottom_toBottomOf="parent"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintTop_toTopOf="@+id/includeRel" />
+</androidx.constraintlayout.widget.ConstraintLayout>
\ No newline at end of file
Index: app/src/main/res/drawable-xxhdpi/slotbookedbyuser_curved_rel_layout.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/drawable-xxhdpi/slotbookedbyuser_curved_rel_layout.xml b/app/src/main/res/drawable-xxhdpi/slotbookedbyuser_curved_rel_layout.xml
new file mode 100644
--- /dev/null	(date 1686893738000)
+++ b/app/src/main/res/drawable-xxhdpi/slotbookedbyuser_curved_rel_layout.xml	(date 1686893738000)
@@ -0,0 +1,18 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<shape xmlns:android="http://schemas.android.com/apk/res/android" >
+
+    <solid android:color="@color/split_bg" />
+
+    <stroke
+        android:width="1dp"
+        android:color="@color/split_bg" />
+
+    <corners android:radius="5dp" />
+
+    <padding
+        android:bottom="0dp"
+        android:left="0dp"
+        android:right="0dp"
+        android:top="0dp" />
+
+</shape>
\ No newline at end of file
Index: app/src/main/res/drawable-xxhdpi/parent_slot_new.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/drawable-xxhdpi/parent_slot_new.xml b/app/src/main/res/drawable-xxhdpi/parent_slot_new.xml
new file mode 100644
--- /dev/null	(date 1686893742000)
+++ b/app/src/main/res/drawable-xxhdpi/parent_slot_new.xml	(date 1686893742000)
@@ -0,0 +1,18 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<shape xmlns:android="http://schemas.android.com/apk/res/android" >
+
+    <solid android:color="@color/parents_slot_color" />
+
+    <stroke
+        android:width="1dp"
+        android:color="@color/parents_slot_color" />
+
+    <corners android:radius="5dp" />
+
+    <padding
+        android:bottom="0dp"
+        android:left="0dp"
+        android:right="0dp"
+        android:top="0dp" />
+
+</shape>
\ No newline at end of file
Index: app/src/main/java/com/nas/alreem/activity/parent_meetings/adapter/ReviewAdapter.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/nas/alreem/activity/parent_meetings/adapter/ReviewAdapter.kt b/app/src/main/java/com/nas/alreem/activity/parent_meetings/adapter/ReviewAdapter.kt
new file mode 100644
--- /dev/null	(date 1689149205284)
+++ b/app/src/main/java/com/nas/alreem/activity/parent_meetings/adapter/ReviewAdapter.kt	(date 1689149205284)
@@ -0,0 +1,496 @@
+package com.nas.alreem.activity.parent_meetings.adapter
+
+import android.app.Dialog
+import android.content.Context
+import android.content.Intent
+import android.graphics.Color
+import android.graphics.drawable.ColorDrawable
+import android.net.Uri
+import android.util.Log
+import android.view.LayoutInflater
+import android.view.View
+import android.view.ViewGroup
+import android.view.Window
+import android.widget.Button
+import android.widget.ImageView
+import android.widget.ProgressBar
+import android.widget.RelativeLayout
+import android.widget.TextView
+import androidx.annotation.NonNull
+import androidx.recyclerview.widget.LinearLayoutManager
+import androidx.recyclerview.widget.RecyclerView
+import com.bumptech.glide.Glide
+import com.bumptech.glide.load.engine.DiskCacheStrategy
+import com.bumptech.glide.load.resource.bitmap.CircleCrop
+import com.nas.alreem.R
+import com.nas.alreem.activity.parent_meetings.ReviewAppointmentsRecyclerViewActivity
+import com.nas.alreem.activity.parent_meetings.model.*
+import com.nas.alreem.constants.ConstantFunctions
+import com.nas.alreem.constants.DialogFunctions
+import com.nas.alreem.constants.PreferenceManager
+import com.nas.alreem.rest.ApiClient
+import retrofit2.Call
+import retrofit2.Callback
+import retrofit2.Response
+import java.text.DateFormat
+import java.text.SimpleDateFormat
+import java.util.Calendar
+import java.util.Date
+import java.util.Locale
+
+internal class ReviewAdapter (var mContext: Context, var review_list:ArrayList<ReviewListModel>,
+                              var reviewActivity:ReviewAppointmentsRecyclerViewActivity,
+                              var progressDialogAdd: ProgressBar, var review_rec: RecyclerView,
+                              var idList:ArrayList<Int>, var confirm_tv: TextView
+) :
+    RecyclerView.Adapter<ReviewAdapter.MyViewHolder>() {
+    lateinit var id_list:ArrayList<Int>
+    var confimVisibility:Boolean=false
+    internal inner class MyViewHolder(view: View) : RecyclerView.ViewHolder(view) {
+
+        var student_name: TextView =view.findViewById(R.id.studNameTV)
+        var student_class: TextView =view.findViewById(R.id.classNameTV)
+        var staff_name: TextView =view.findViewById(R.id.staffNameTV)
+        var start_date: TextView =view.findViewById(R.id.reserveDateTimeTextView)
+        var end_date: TextView =view.findViewById(R.id.expireDateTimeTextView)
+        var student_image: ImageView =view.findViewById(R.id.imgView)
+        var cancel_img: ImageView =view.findViewById(R.id.cancelAppointment)
+        var confirm_img: ImageView =view.findViewById(R.id.confirmAppointment)
+        var confirm_imgview: ImageView =view.findViewById(R.id.confirmationImageview)
+        var addtocalendar_img: ImageView =view.findViewById(R.id.addTocalendar)
+        var vpml_img: Button =view.findViewById(R.id.vpml)
+
+
+    }
+    @NonNull
+    override fun onCreateViewHolder(parent: ViewGroup, viewType: Int): MyViewHolder {
+        val itemView = LayoutInflater.from(parent.context)
+            .inflate(R.layout.adapter_review_list, parent, false)
+        return MyViewHolder(itemView)
+    }
+    override fun onBindViewHolder(holder: MyViewHolder, position: Int) {
+progressDialogAdd.visibility=View.GONE
+        // reviewActivity.fnctiondemo()
+        holder.student_name.text = review_list[position].student
+        holder.student_class.text = review_list[position].class_name
+        holder.staff_name.text = review_list[position].staff
+        var date_sel=review_list[position].date
+        Log.e("dt",date_sel.toString())
+        val inputFormat: DateFormat = SimpleDateFormat("yyyy-MM-dd")
+        val outputFormat: DateFormat = SimpleDateFormat("dd MMM yyyy")
+        val inputDateStr = date_sel
+        val date: Date = inputFormat.parse(inputDateStr)
+        var date_frmt = outputFormat.format(date)
+        Log.e("datefrmt",date_frmt.toString())
+        var st_time=review_list[position].start_time
+        val inputFormat2: DateFormat = SimpleDateFormat("hh:mm:ss")
+        val outputFormat2: DateFormat = SimpleDateFormat("hh:mm aa")
+        val inputDateStr2 = st_time
+        val date2: Date = inputFormat2.parse(inputDateStr2)
+        var st_date_frmt = outputFormat2.format(date2)
+        var end_date=review_list[position].end_time
+        val inputFormat3: DateFormat = SimpleDateFormat("hh:mm:ss")
+        val outputFormat3: DateFormat = SimpleDateFormat("hh:mm aa")
+        val inputDateStr3 = end_date
+        val date3: Date = inputFormat3.parse(inputDateStr3)
+        var end_date_frmt = outputFormat3.format(date3)
+        var book_endDate=review_list[position].book_end_date
+        val inputFormat4: DateFormat = SimpleDateFormat("yyyy-MM-dd")
+        val outputFormat4: DateFormat = SimpleDateFormat("dd MMM yyyy")
+        val inputDateStr4 = book_endDate
+        val date4: Date = inputFormat4.parse(inputDateStr4)
+        var bookend_date_frmt = outputFormat4.format(date4)
+
+        var st_date=date_frmt + " "+st_date_frmt+" - "+end_date_frmt
+        Log.e("dateline",st_date.toString())
+        holder.start_date.text = st_date
+        var en_date=bookend_date_frmt
+        holder.end_date.text = "Confirm/Cancellation closes at "+ en_date
+
+        var photo=review_list[position].student_photo
+        if (review_list[position].student_photo.isEmpty()){
+            holder.student_image.setImageResource(R.drawable.student)
+        }
+        else{
+            Glide.with(mContext) //1
+                .load(photo)
+                .placeholder(R.drawable.student)
+                .error(R.drawable.student)
+                .skipMemoryCache(true) //2
+                .diskCacheStrategy(DiskCacheStrategy.NONE) //3
+                .transform(CircleCrop()) //4
+                .into(holder.student_image)
+        }
+        if(review_list[position].status.equals("3")&&review_list[position].booking_open.equals("y")){
+            holder.confirm_img.visibility = View.GONE
+            holder.cancel_img.visibility = View.VISIBLE
+            holder.addtocalendar_img.visibility = View.VISIBLE
+            if(review_list[position].vpml.equals("")){
+                holder.vpml_img.visibility = View.GONE
+            }
+            else{
+                holder.vpml_img.visibility = View.VISIBLE
+            }
+        }else if (review_list[position].status.equals("2")&&review_list[position].booking_open.equals("y")){
+            holder.confirm_imgview.setBackgroundResource(R.drawable.doubtinparticipatingsmallicon)
+            holder.confirm_img.visibility = View.VISIBLE
+            holder.confirm_img.setBackgroundResource(R.drawable.confirm)
+            holder.cancel_img.visibility = View.VISIBLE
+            holder.addtocalendar_img.visibility = View.GONE
+            holder.vpml_img.visibility = View.GONE
+        }
+        else if(review_list[position].status.equals("3")&&review_list[position].booking_open.equals("n")){
+            holder.confirm_imgview.setBackgroundResource(R.drawable.tick_icon)
+            holder.addtocalendar_img.visibility = View.VISIBLE
+            holder.confirm_img.visibility = View.GONE
+            holder.cancel_img.visibility = View.VISIBLE
+            holder.confirm_img.setImageResource(R.drawable.confirm_dis)
+            holder.cancel_img.setImageResource(R.drawable.cancel_dis)
+            if (review_list[position].vpml.equals("")) {
+                holder.vpml_img.visibility = View.GONE
+            } else {
+                holder.vpml_img.visibility = View.VISIBLE
+            }
+        }
+        else if(review_list[position].status.equals("2")&&review_list[position].booking_open.equals("n")){
+            holder.confirm_imgview.setBackgroundResource(R.drawable.doubtinparticipatingsmallicon)
+            holder.addtocalendar_img.visibility = View.GONE
+            holder.confirm_img.visibility = View.VISIBLE
+            holder.cancel_img.visibility = View.VISIBLE
+            holder.confirm_img.setImageResource(R.drawable.confirm_dis)
+            holder.cancel_img.setImageResource(R.drawable.cancel_dis)
+            holder.vpml_img.visibility = View.GONE
+        }
+        holder.confirm_img.setOnClickListener {
+            id_list= ArrayList()
+            var id_sel=review_list[position].id.toInt()
+            id_list.add(id_sel)
+            showerrorConfirm(mContext,"Do you want to confirm appointment?","Alert",id_list)
+
+            //confirmPtaApi(id_list)
+        }
+        holder.cancel_img.setOnClickListener {
+            id_list= ArrayList()
+            var id_sel=review_list[position].id.toInt()
+            id_list.add(id_sel)
+            showerrorCancel(mContext,"Do you want to cancel appointment?","Alert",review_list[position].pta_time_slot_id,review_list[position].student_id)
+        }
+        holder.vpml_img.setOnClickListener {
+            if(review_list[position].vpml.equals("")){
+
+            }else {
+                val i = Intent(Intent.ACTION_VIEW, Uri.parse(review_list[position].vpml))
+                mContext.startActivity(i)
+            }
+        }
+        holder.addtocalendar_img.setOnClickListener {
+            var startTime: Long = 0
+            var endTime: Long = 0
+            var vpmlURL = ""
+            try {
+//                    Date dateStart = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").parse(mVideosModelArrayList.get(0).getDateAppointment());
+                val dateStart = SimpleDateFormat("yyyy-MM-dd HH:mm:ss", Locale.ENGLISH).parse(
+                    review_list[position].date
+                        .toString() + " " + review_list[position].start_time
+                )
+                startTime = dateStart.time
+                val dateEnd = SimpleDateFormat("yyyy-MM-dd HH:mm:ss", Locale.ENGLISH).parse(
+                    review_list[position].date
+                        .toString() + " " + review_list[position].end_time
+                )
+                endTime = dateEnd.time
+                println("Start time$startTime:::::::::: endTime$endTime")
+                vpmlURL = if (review_list[position].vpml.equals("")) {
+                    ""
+                } else {
+                    review_list[position].vpml
+                }
+            } catch (e: Exception) {
+            }
+
+            val cal = Calendar.getInstance()
+            val intent = Intent(Intent.ACTION_EDIT)
+            intent.type = "vnd.android.cursor.item/event"
+            intent.putExtra("beginTime", startTime)
+            intent.putExtra("allDay", true)
+            intent.putExtra("rrule", "FREQ=YEARLY")
+            intent.putExtra("endTime", endTime)
+            intent.putExtra("title", "PARENT MEETING")
+            intent.putExtra("description", vpmlURL)
+           mContext.startActivity(intent)
+        }
+
+
+    }
+    override fun getItemCount(): Int {
+
+        return review_list.size
+
+    }
+
+    private fun reviewlistcall() {
+        progressDialogAdd.visibility = View.VISIBLE
+        val token = PreferenceManager.getaccesstoken(mContext)
+
+        val call: Call<PtaReviewListResponseModel> = ApiClient.getClient.ptaReviewList("Bearer "+token)
+        call.enqueue(object : Callback<PtaReviewListResponseModel> {
+            override fun onFailure(call: Call<PtaReviewListResponseModel>, t: Throwable) {
+                Log.e("Error", t.localizedMessage)
+                progressDialogAdd.visibility = View.GONE
+            }
+            override fun onResponse(call: Call<PtaReviewListResponseModel>, response: Response<PtaReviewListResponseModel>) {
+                progressDialogAdd.visibility = View.GONE
+                //val arraySize :Int = response.body()!!.responseArray.studentList.size
+                if (response.body()!!.status==100)
+                {
+                    review_list.addAll(response.body()!!.data)
+                    if (review_list.size>0){
+                        review_rec.layoutManager= LinearLayoutManager(mContext)
+                        var review_adapter= ReviewAdapter(mContext,review_list,ReviewAppointmentsRecyclerViewActivity(),
+                            progressDialogAdd,review_rec,idList,confirm_tv)
+                        review_rec.adapter=review_adapter
+                    }else{
+                        DialogFunctions.commonErrorAlertDialog("Alert","No Appointments Available.",mContext)
+                    }
+
+                    for (i in review_list.indices){
+                        if (review_list[i].status.equals("2")&&review_list[i].booking_open.equals("y")){
+                            idList.add(review_list[i].id.toInt())
+                            // confirm_tv.visibility=View.VISIBLE
+                            confimVisibility=true
+
+                        }/*else{
+                            confirm_tv.visibility=View.GONE
+                        }*/
+                    }
+                    if (confimVisibility==true){
+                        confirm_tv.visibility=View.VISIBLE
+                    }else{
+                        confirm_tv.visibility=View.GONE
+                    }
+                } else
+                {
+
+                    DialogFunctions.commonErrorAlertDialog(mContext.resources.getString(R.string.alert), ConstantFunctions.commonErrorString(response.body()!!.status), mContext)
+                }
+
+
+            }
+
+        })
+
+    }
+    private fun postSelectedSlot(idList: Int,stud_id:String){
+        progressDialogAdd.visibility = View.VISIBLE
+        val token = PreferenceManager.getaccesstoken(mContext)
+        var idString:String=idList.toString()
+        val ptaInsertSuccessBody = PtaInsertApiModel(stud_id,idList)
+        val call: Call<PtaInsertModel> = ApiClient.getClient.pta_insert(ptaInsertSuccessBody,"Bearer "+token)
+        call.enqueue(object : Callback<PtaInsertModel> {
+            override fun onFailure(call: Call<PtaInsertModel>, t: Throwable) {
+                Log.e("Error", t.localizedMessage)
+                progressDialogAdd.visibility = View.GONE
+            }
+            override fun onResponse(call: Call<PtaInsertModel>, response: Response<PtaInsertModel>) {
+                progressDialogAdd.visibility = View.GONE
+                //val arraySize :Int = response.body()!!.responseArray.studentList.size
+                if (response.body()!!.status==100)
+                {
+
+                    DialogFunctions.showDialogAlertSingleBtn(
+                        mContext ,
+                        "Alert",
+                        "Reserved Only – Please review and confirm booking",
+                        R.drawable.tick,
+                        R.drawable.round
+                    )
+                    reviewlistcall()
+                } else if (response.body()!!.status == 109) {
+                    DialogFunctions.showDialogAlertSingleBtn(
+                        mContext,
+                        "Success",
+                        "Successfully cancelled appointment.",
+                        R.drawable.tick,
+                        R.drawable.round
+                    )
+                    reviewlistcall()
+                } else if (response.body()!!.status == 126) {
+                    DialogFunctions.showDialogAlertSingleBtn(
+                        mContext ,
+                        "Alert",
+                        "Slot is already booked by an another user",
+                        R.drawable.exclamationicon,
+                        R.drawable.round
+                    )
+//                                    getPtaAllotedDateList();
+                } else if (response.body()!!.status == 124) {
+                    DialogFunctions.showDialogAlertSingleBtn(
+                        mContext ,
+                        "Alert",
+                        "Timeslot not found",
+                        R.drawable.exclamationicon,
+                        R.drawable.round
+                    )
+                } else if (response.body()!!.status == 125) {
+                    DialogFunctions.showDialogAlertSingleBtn(
+                        mContext,
+                        "Alert",mContext.getString(R.string.datexpirecontact),
+                        R.drawable.exclamationicon,
+                        R.drawable.round
+                    )
+                }else if (response.body()!!.status == 127) {
+                    DialogFunctions.showDialogAlertSingleBtn(
+                        mContext,
+                        "Success",
+                        "Successfully confirmed appointment.",
+                        R.drawable.tick,
+                        R.drawable.round
+                    )
+                    reviewlistcall()
+                }
+                else
+                {
+
+                    DialogFunctions.commonErrorAlertDialog(mContext.resources.getString(R.string.alert), ConstantFunctions.commonErrorString(response.body()!!.status), mContext)
+                }
+
+
+            }
+
+        })
+    }
+    private fun showSuccess(context: Context,message : String,msgHead : String)
+    {
+        val dialog = Dialog(context)
+        dialog.requestWindowFeature(Window.FEATURE_NO_TITLE)
+        dialog.window!!.setBackgroundDrawable(ColorDrawable(Color.TRANSPARENT))
+        dialog.setCancelable(false)
+        dialog.setContentView(R.layout.dialog_success_alert)
+        var iconImageView = dialog.findViewById(R.id.iconImageView) as ImageView
+        iconImageView.setImageResource(R.drawable.tick)
+        var alertHead = dialog.findViewById(R.id.alertHead) as TextView
+        var text_dialog = dialog.findViewById(R.id.text_dialog) as TextView
+        var btn_Ok = dialog.findViewById(R.id.btn_Ok) as Button
+        text_dialog.text = message
+        alertHead.text = msgHead
+        btn_Ok.setOnClickListener()
+        {
+            dialog.dismiss()
+            reviewlistcall()
+            /* reviewActivity.init()
+             reviewActivity.reviewlistcall()*/
+            /* val intent = Intent(context, ReviewAppointmentsRecyclerViewActivity::class.java)
+             context.startActivity(intent)*/
+
+
+        }
+        dialog.show()
+    }
+
+    private fun showerror(context: Context,message : String,msgHead : String)
+    {
+        val dialog = Dialog(context)
+        dialog.requestWindowFeature(Window.FEATURE_NO_TITLE)
+        dialog.window!!.setBackgroundDrawable(ColorDrawable(Color.TRANSPARENT))
+        dialog.setCancelable(false)
+        dialog.setContentView(R.layout.dialog_common_error_alert)
+        var iconImageView = dialog.findViewById(R.id.iconImageView) as ImageView
+        iconImageView.setImageResource(R.drawable.questionmark_icon)
+        var alertHead = dialog.findViewById(R.id.alertHead) as TextView
+        var text_dialog = dialog.findViewById(R.id.text_dialog) as TextView
+        var btn_Ok = dialog.findViewById(R.id.btn_Ok) as Button
+        text_dialog.text = message
+        alertHead.text = msgHead
+        btn_Ok.setOnClickListener()
+        {
+            dialog.dismiss()
+
+
+        }
+        dialog.show()
+    }
+    private fun showerrorCancel(context: Context,message : String,msgHead : String,id_list:Int,stud_id:String)
+    {
+        val dialog = Dialog(context)
+        dialog.requestWindowFeature(Window.FEATURE_NO_TITLE)
+        dialog.window!!.setBackgroundDrawable(ColorDrawable(Color.TRANSPARENT))
+        dialog.setCancelable(false)
+        dialog.setContentView(R.layout.dialog_ok_cancel)
+        var iconImageView = dialog.findViewById(R.id.iconImageView) as ImageView
+        iconImageView.setImageResource(R.drawable.questionmark_icon)
+        var alertHead = dialog.findViewById(R.id.alertHead) as TextView
+        var text_dialog = dialog.findViewById(R.id.text_dialog) as TextView
+        var btn_Ok = dialog.findViewById(R.id.btn_Ok) as Button
+        var btn_Cancel = dialog.findViewById(R.id.btn_Cancel) as Button
+        text_dialog.text = message
+        alertHead.text = msgHead
+        btn_Ok.setOnClickListener()
+        {
+            dialog.dismiss()
+            postSelectedSlot(id_list,stud_id)
+            //cancelPtaApi(id_list)
+
+        }
+        btn_Cancel.setOnClickListener {
+            dialog.dismiss()
+        }
+        dialog.show()
+    }
+    private fun showerrorConfirm(context: Context,message : String,msgHead : String,id_list:ArrayList<Int>)
+    {
+        val dialog = Dialog(context)
+        dialog.requestWindowFeature(Window.FEATURE_NO_TITLE)
+        dialog.window!!.setBackgroundDrawable(ColorDrawable(Color.TRANSPARENT))
+        dialog.setCancelable(false)
+        dialog.setContentView(R.layout.dialog_ok_cancel)
+        var iconImageView = dialog.findViewById(R.id.iconImageView) as ImageView
+        iconImageView.setImageResource(R.drawable.questionmark_icon)
+        var alertHead = dialog.findViewById(R.id.alertHead) as TextView
+        var text_dialog = dialog.findViewById(R.id.text_dialog) as TextView
+        var btn_Ok = dialog.findViewById(R.id.btn_Ok) as Button
+        var btn_Cancel = dialog.findViewById(R.id.btn_Cancel) as Button
+        text_dialog.text = message
+        alertHead.text = msgHead
+        btn_Ok.setOnClickListener()
+        {
+            dialog.dismiss()
+            //postSelectedSlot(id_list,stud_id)
+            confirmPtaApi(id_list)
+
+        }
+        btn_Cancel.setOnClickListener {
+            dialog.dismiss()
+        }
+        dialog.show()
+    }
+    private fun confirmPtaApi(idList: ArrayList<Int>){
+        progressDialogAdd.visibility = View.VISIBLE
+        val token = PreferenceManager.getaccesstoken(mContext)
+        var idString:String=idList.toString()
+        val ptaconfirmSuccessBody = PtaConfirmApiModel(idString)
+        val call: Call<PtaConfirmModel> = ApiClient.getClient.pta_confirm(ptaconfirmSuccessBody,"Bearer "+token)
+        call.enqueue(object : Callback<PtaConfirmModel> {
+            override fun onFailure(call: Call<PtaConfirmModel>, t: Throwable) {
+                Log.e("Error", t.localizedMessage)
+                progressDialogAdd.visibility = View.GONE
+            }
+            override fun onResponse(call: Call<PtaConfirmModel>, response: Response<PtaConfirmModel>) {
+                progressDialogAdd.visibility = View.GONE
+                //val arraySize :Int = response.body()!!.responseArray.studentList.size
+                if (response.body()!!.status==100)
+                {
+                    DialogFunctions.commonSuccessAlertDialog("Success","Successfully confirmed appointment.",mContext)
+
+                } else
+                {
+
+                    DialogFunctions.commonErrorAlertDialog(mContext.resources.getString(R.string.alert), ConstantFunctions.commonErrorString(response.body()!!.status), mContext)
+                }
+
+
+            }
+
+        })
+
+    }
+}
\ No newline at end of file
Index: app/src/main/java/com/nas/alreem/activity/parent_meetings/model/PtaConfirmModel.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/nas/alreem/activity/parent_meetings/model/PtaConfirmModel.kt b/app/src/main/java/com/nas/alreem/activity/parent_meetings/model/PtaConfirmModel.kt
new file mode 100644
--- /dev/null	(date 1689048528000)
+++ b/app/src/main/java/com/nas/alreem/activity/parent_meetings/model/PtaConfirmModel.kt	(date 1689048528000)
@@ -0,0 +1,7 @@
+package com.nas.alreem.activity.parent_meetings.model
+
+import com.google.gson.annotations.SerializedName
+
+class PtaConfirmModel (
+    @SerializedName("status")var status:Int
+)
\ No newline at end of file
Index: app/src/main/res/layout/activity_staff_directory.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/activity_staff_directory.xml b/app/src/main/res/layout/activity_staff_directory.xml
new file mode 100644
--- /dev/null	(date 1688537862000)
+++ b/app/src/main/res/layout/activity_staff_directory.xml	(date 1688537862000)
@@ -0,0 +1,85 @@
+<?xml version="1.0" encoding="utf-8"?>
+<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:background="@android:color/white">
+    <include
+        android:id="@+id/includeRel"
+        layout="@layout/layout_activity_header" />
+    <LinearLayout
+        android:id="@+id/linearSearch"
+        android:layout_width="match_parent"
+        android:layout_height="40dp"
+        android:layout_gravity="center"
+        android:paddingLeft="5dp"
+        android:layout_marginLeft="5dp"
+        android:layout_marginRight="5dp"
+        android:layout_marginTop="5dp"
+        android:layout_below="@+id/includeRel"
+        android:background="@drawable/search_bg_rounded"
+        android:orientation="horizontal"
+        android:weightSum="100">
+
+        <com.nas.alreem.commonviews.CustomFontSansProEditTextNoColor
+            android:id="@+id/searchEditText"
+            android:layout_width="0dp"
+            android:layout_height="match_parent"
+            android:layout_weight="90"
+            android:background="@android:color/transparent"
+            android:completionThreshold="1"
+            android:imeOptions="actionDone"
+            android:layout_marginRight="2dp"
+            android:hint="Search..."
+            android:gravity="left|center_vertical"
+            android:paddingLeft="10dp"
+            android:paddingRight="5dp"
+            android:textColor="@color/black"
+            android:inputType="text" />
+        <View
+            android:layout_width="0dp"
+            android:layout_height="35dp"
+            android:layout_weight="0.5"
+            android:layout_marginRight="2dp"
+            android:layout_marginTop="2dp"
+            android:background="@color/light_grey" />
+
+        <ImageView
+            android:id="@+id/btnImgsearch"
+            android:layout_width="0dp"
+            android:layout_height="match_parent"
+            android:layout_gravity="center"
+            android:layout_weight="9.5"
+            android:layout_marginRight="2dp"
+            android:src="@drawable/searchiconsmall" />
+
+    </LinearLayout>
+
+    <LinearLayout
+        android:layout_width="match_parent"
+        android:layout_height="match_parent"
+        android:layout_below="@+id/linearSearch"
+        android:layout_marginTop="5dp"
+
+        android:orientation="vertical"
+        android:weightSum="100">
+        <androidx.recyclerview.widget.RecyclerView
+            android:id="@+id/mStaffDirectoryListView"
+            android:layout_width="match_parent"
+            android:layout_height="match_parent"
+            android:overScrollMode="never"
+            android:layout_marginLeft="10dp"
+            android:layout_marginRight="10dp"
+            android:clipToPadding="false"
+            android:scrollbars="vertical"
+            android:background="@color/white"/>
+    </LinearLayout>
+    <ProgressBar
+        android:id="@+id/progressDialogAdd"
+        android:layout_width="40dp"
+        android:layout_height="40dp"
+        android:layout_centerInParent="true"
+        android:indeterminateDrawable="@anim/customspinner"
+        android:visibility="gone"
+
+        />
+</RelativeLayout>
\ No newline at end of file
Index: app/src/main/res/layout/fragment_absence_earlypickup.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/fragment_absence_earlypickup.xml b/app/src/main/res/layout/fragment_absence_earlypickup.xml
new file mode 100644
--- /dev/null	(date 1687863362000)
+++ b/app/src/main/res/layout/fragment_absence_earlypickup.xml	(date 1687863362000)
@@ -0,0 +1,250 @@
+<?xml version="1.0" encoding="utf-8"?>
+<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:tools="http://schemas.android.com/tools"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    android:id="@+id/relMain"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:background="@color/white">
+
+    <include
+        android:id="@+id/includeRel"
+        layout="@layout/header_bar_fragment"/>
+    <LinearLayout
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_centerInParent="true"
+        android:gravity="center">
+        <!--<include
+            android:id="@+id/progressDialog"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            layout="@layout/custom_progress_layout"
+            android:visibility="visible" />-->
+
+    </LinearLayout>
+
+    <RelativeLayout
+        android:id="@+id/belowViewRelative"
+        android:layout_width="match_parent"
+        android:layout_height="match_parent"
+        android:layout_below="@+id/includeRel"
+        android:visibility="visible"
+
+        >
+
+        <LinearLayout
+            android:id="@+id/studentSpinner"
+            android:layout_width="match_parent"
+            android:layout_height="45dp"
+            android:layout_gravity="center"
+            android:layout_marginLeft="10dp"
+            android:layout_marginTop="10dp"
+            android:layout_marginRight="10dp"
+            android:background="@drawable/event_spinnerbg"
+            android:gravity="center"
+            android:orientation="horizontal"
+            android:weightSum="100">
+
+            <ImageView
+                android:id="@+id/imagicon"
+                android:layout_width="35dp"
+                android:layout_height="35dp"
+                android:layout_margin="5dp"
+                android:gravity="center"
+                android:padding="5dp"
+                android:scaleType="fitCenter"
+                android:src="@drawable/boy" />
+
+            <com.nas.alreem.commonviews.CustomTextViewRegular
+                android:id="@+id/studentName"
+                android:layout_width="0dp"
+                android:layout_height="match_parent"
+                android:layout_weight="80"
+                android:gravity="left|center"
+                android:paddingLeft="10dp"
+                android:text="Select a child"
+                android:textSize="16sp" />
+
+            <View
+                android:layout_width="0dp"
+                android:layout_height="match_parent"
+                android:layout_weight="8"></View>
+
+            <ImageView
+                android:layout_width="0dp"
+                android:layout_height="30dp"
+                android:layout_gravity="right|center"
+                android:layout_weight="12"
+                android:src="@drawable/arrowdownnew"
+                android:visibility="visible" />
+
+        </LinearLayout>
+
+        <LinearLayout
+            android:id="@+id/select_cat"
+            android:layout_width="match_parent"
+            android:layout_height="40dp"
+            android:layout_below="@+id/studentSpinner"
+            android:layout_marginBottom="10dp"
+            android:layout_marginTop="10dp"
+            android:layout_marginLeft="30dp"
+            android:layout_marginRight="30dp"
+            android:background="@drawable/event_greyfill"
+            android:orientation="horizontal">
+
+            <com.nas.alreem.commonviews.CustomTextViewRegular
+                android:id="@+id/absenc_btn"
+                android:layout_width="0dp"
+                android:layout_height="match_parent"
+                android:layout_weight=".5"
+                android:layout_marginLeft="4dp"
+                android:layout_marginTop="4dp"
+                android:layout_marginBottom="4dp"
+                android:gravity="center"
+                android:background="@drawable/event_spinnerfill"
+                android:text="Registered Absence"
+                android:textColor="@color/black" />
+
+            <com.nas.alreem.commonviews.CustomTextViewRegular
+                android:id="@+id/earlypickup_btn"
+                android:layout_width="0dp"
+                android:layout_height="match_parent"
+                android:layout_weight=".5"
+                android:layout_marginRight="4dp"
+                android:layout_marginTop="4dp"
+                android:layout_marginBottom="4dp"
+                android:text="Early Pickup"
+                android:gravity="center"
+                android:textColor="@color/black" />
+
+        </LinearLayout>
+
+        <com.nas.alreem.commonviews.CustomTextViewRegular
+            android:id="@+id/appregisteredHint"
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:layout_below="@+id/select_cat"
+            android:layout_marginStart="5dp"
+            android:layout_marginTop="5dp"
+            android:layout_marginEnd="5dp"
+            android:layout_marginBottom="5dp"
+            android:gravity="center"
+            android:text="@string/appregisteredHint"
+            android:textColor="@color/black"
+            android:textSize="16dp"
+            android:visibility="visible" />
+
+        <View
+            android:id="@+id/viewDivider"
+            android:layout_width="match_parent"
+            android:layout_height="1dp"
+            android:layout_below="@+id/appregisteredHint"
+            android:layout_marginLeft="10dp"
+            android:layout_marginRight="10dp"
+            android:background="@color/rel_eight">
+
+        </View>
+        <LinearLayout
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:layout_centerInParent="true"
+            android:gravity="center">
+
+            <ProgressBar
+                android:id="@+id/progressDialogAdd"
+                android:layout_width="40dp"
+                android:layout_height="40dp"
+                android:layout_centerInParent="true"
+                android:indeterminateDrawable="@anim/customspinner"
+                android:visibility="gone"
+
+                />
+
+        </LinearLayout>
+
+        <LinearLayout
+            android:layout_width="match_parent"
+            android:layout_height="match_parent"
+            android:layout_above="@+id/newRequestEarly"
+            android:layout_below="@+id/viewDivider"
+            tools:ignore="Orientation">
+
+            <androidx.recyclerview.widget.RecyclerView
+                android:id="@+id/mAbsenceListView"
+                style="@style/ListStyleBlackTextTransparentSelector"
+                android:layout_width="match_parent"
+                android:layout_height="match_parent"
+                android:layout_above="@+id/newRequestAbsence"
+                android:layout_below="@+id/viewDivider" />
+
+            <androidx.recyclerview.widget.RecyclerView
+                android:id="@+id/mPickupListView"
+                style="@style/ListStyleBlackTextTransparentSelector"
+                android:layout_width="match_parent"
+                android:layout_height="match_parent"
+                android:layout_above="@+id/newRequestAbsence"
+                android:layout_below="@+id/viewDivider"
+                android:visibility="gone" />
+        </LinearLayout>
+        <com.nas.alreem.commonviews.CustomTextViewSemiBold
+            android:id="@+id/newRequestAbsence"
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:layout_above="@+id/requestHint"
+            android:layout_marginStart="10dp"
+            android:layout_marginTop="10dp"
+            android:layout_marginEnd="10dp"
+            android:layout_marginBottom="10dp"
+            android:background="@drawable/buttonred_new"
+            android:gravity="center"
+            android:padding="10dp"
+            android:text="@string/regNewAbsence"
+            android:textColor="@color/white"
+            android:textSize="18dp"
+            android:visibility="visible" />
+
+        <com.nas.alreem.commonviews.CustomTextViewSemiBold
+            android:id="@+id/newRequestEarly"
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:layout_above="@+id/requestHint"
+            android:layout_marginStart="10dp"
+            android:layout_marginTop="10dp"
+            android:layout_marginEnd="10dp"
+            android:layout_marginBottom="10dp"
+            android:background="@drawable/buttonred_new"
+            android:gravity="center"
+            android:padding="10dp"
+            android:text="@string/regEarlypickup"
+            android:textColor="@color/white"
+            android:textSize="18dp"
+            android:visibility="gone" />
+        <Button
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:layout_alignParentBottom="true"
+            android:layout_marginLeft="10dp"
+            android:layout_marginRight="10dp"
+            android:layout_marginBottom="10dp"
+            android:alpha="0.1"
+            android:background="@null"
+            android:clickable="true"
+            android:contextClickable="false"
+            android:gravity="left|center_vertical" />
+
+        <com.nas.alreem.commonviews.CustomTextViewRegular
+            android:id="@+id/requestHint"
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:layout_alignParentBottom="true"
+            android:layout_marginLeft="10dp"
+            android:layout_marginRight="10dp"
+            android:layout_marginBottom="10dp"
+            android:gravity="left|center_vertical"
+            android:text="@string/requestHint"
+            android:textColor="@color/rel_eight"
+            android:textSize="16dp"
+            android:visibility="visible" />
+    </RelativeLayout>
+</RelativeLayout>
\ No newline at end of file
Index: app/src/main/java/com/nas/alreem/fragment/absence/model/AbsenceRequestListDetailModel.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/nas/alreem/fragment/absence/model/AbsenceRequestListDetailModel.kt b/app/src/main/java/com/nas/alreem/fragment/absence/model/AbsenceRequestListDetailModel.kt
new file mode 100644
--- /dev/null	(date 1687861318000)
+++ b/app/src/main/java/com/nas/alreem/fragment/absence/model/AbsenceRequestListDetailModel.kt	(date 1687861318000)
@@ -0,0 +1,12 @@
+package com.nas.alreem.fragment.absence.model
+
+import com.google.gson.annotations.SerializedName
+
+class AbsenceRequestListDetailModel (
+
+    @SerializedName("id") val id: String,
+    @SerializedName("from_date") val from_date: String,
+    @SerializedName("to_date") val to_date: String = "",
+    @SerializedName("reason") val reason: String
+
+)
Index: app/src/main/java/com/nas/alreem/activity/staff_directory/model/StaffCatResponseArrayModel.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/nas/alreem/activity/staff_directory/model/StaffCatResponseArrayModel.kt b/app/src/main/java/com/nas/alreem/activity/staff_directory/model/StaffCatResponseArrayModel.kt
new file mode 100644
--- /dev/null	(date 1688538880000)
+++ b/app/src/main/java/com/nas/alreem/activity/staff_directory/model/StaffCatResponseArrayModel.kt	(date 1688538880000)
@@ -0,0 +1,7 @@
+package com.nas.alreem.activity.staff_directory.model
+
+import com.google.gson.annotations.SerializedName
+
+class StaffCatResponseArrayModel(
+    @SerializedName("departments")var departments:ArrayList<StaffDeptListModel>
+)
\ No newline at end of file
Index: app/src/main/java/com/nas/alreem/activity/payments/PaymentDetailActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.nas.alreem.activity.payments\n\nimport android.app.Activity\nimport android.content.Context\nimport android.content.Intent\nimport android.graphics.Bitmap\nimport android.net.Uri\nimport android.os.Build\nimport android.os.Bundle\nimport android.os.Environment\nimport android.os.Handler\nimport android.print.PrintAttributes\nimport android.print.PrintJob\nimport android.print.PrintManager\nimport android.util.Log\nimport android.view.View\nimport android.view.animation.Animation\nimport android.view.animation.AnimationUtils\nimport android.view.animation.RotateAnimation\nimport android.webkit.WebView\nimport android.webkit.WebViewClient\nimport android.widget.*\nimport androidx.appcompat.app.AppCompatActivity\nimport androidx.core.content.FileProvider\nimport com.nas.alreem.R\nimport com.nas.alreem.activity.home.HomeActivity\nimport com.nas.alreem.activity.payments.model.payment_gateway.PaymentGatewayApiModel\nimport com.nas.alreem.activity.payments.model.payment_gateway.PaymentGatewayModel\nimport com.nas.alreem.activity.payments.model.payment_submit.PaymentSubmitApiModel\nimport com.nas.alreem.activity.payments.model.payment_submit.PaymentSubmitModel\nimport com.nas.alreem.activity.payments.model.payment_token.PaymentTokenApiModel\nimport com.nas.alreem.activity.payments.model.payment_token.PaymentTokenModel\nimport com.nas.alreem.constants.ConstantFunctions\nimport com.nas.alreem.constants.DialogFunctions\nimport com.nas.alreem.constants.PreferenceManager\nimport com.nas.alreem.rest.ApiClient\nimport payment.sdk.android.PaymentClient\nimport payment.sdk.android.cardpayment.CardPaymentData\nimport payment.sdk.android.cardpayment.CardPaymentRequest\nimport retrofit2.Call\nimport retrofit2.Callback\nimport retrofit2.Response\nimport java.io.BufferedReader\n\nimport java.io.File\nimport java.io.InputStreamReader\nimport java.text.DateFormat\nimport java.text.SimpleDateFormat\nimport java.util.*\n\nclass PaymentDetailActivity : AppCompatActivity() {\n    lateinit var context: Context\n    lateinit var totalLinear: LinearLayout\n    lateinit var printLinear: LinearLayout\n    lateinit var printLinearClick: LinearLayout\n    lateinit var mainLinear: LinearLayout\n    lateinit var downloadLinear: LinearLayout\n    lateinit var shareLinear: LinearLayout\n    lateinit var totalAmount: TextView\n    lateinit var descriptionTitle: TextView\n    lateinit var description: TextView\n    lateinit var duedate: TextView\n    lateinit var payTotalButton: Button\n    lateinit var paymentWeb: WebView\n    lateinit var bannerImageViewPager: ImageView\n    lateinit var paidImg: ImageView\n    lateinit var mProgressRelLayout: ProgressBar\n    var handler = Handler()\n    lateinit var printJob: PrintJob\n    var runnable: Runnable? = null\n    var status:String=\"\"\n    var id:String=\"\"\n    var student_name:String=\"\"\n    var account_code:String=\"\"\n    var pupil_code:String=\"\"\n    var academic_year:String=\"\"\n    var invoice_ref:String=\"\"\n    var invoice_description:String=\"\"\n    var current_amount:String=\"\"\n    var vat_percentage:String=\"\"\n    var vat_amount:String=\"\"\n    var total_amount:String=\"\"\n    var due:String=\"\"\n    var due_date:String=\"\"\n    var paid_date:String?=\"\"\n    var payment_type:String=\"\"\n    var paid_by:String?=\"\"\n    var title=\"\"\n    var thankyou_note=\"\"\n    var payment_type_print: String=\"\"\n    var order_id:String=\"\"\n    var orderRef=\"\"\n    lateinit var anim: RotateAnimation\n    var pdfUri: Uri? = null\n    lateinit var activity: Activity\n\n    lateinit var heading: TextView\n    lateinit var logoClickImgView: ImageView\n    lateinit var backRelative: RelativeLayout\n\n    override fun onCreate(savedInstanceState: Bundle?) {\n        super.onCreate(savedInstanceState)\n        setContentView(R.layout.activity_paymentdetails)\n        init()\n    }\n\n    private fun init(){\n        context=this\n        activity=this\n        title=intent.getStringExtra(\"title\").toString()\n        status=intent.getStringExtra(\"status\").toString()\n        id=intent.getStringExtra(\"id\").toString()\n        student_name=intent.getStringExtra(\"student_name\").toString()\n        account_code=intent.getStringExtra(\"account_code\").toString()\n        pupil_code=intent.getStringExtra(\"pupil_code\").toString()\n        academic_year=intent.getStringExtra(\"academic_year\").toString()\n        invoice_ref=intent.getStringExtra(\"invoice_ref\").toString()\n        invoice_description=intent.getStringExtra(\"invoice_description\").toString()\n        current_amount=intent.getStringExtra(\"current_amount\").toString()\n        vat_percentage=intent.getStringExtra(\"vat_percentage\").toString()\n        vat_amount=intent.getStringExtra(\"vat_amount\").toString()\n        total_amount=intent.getStringExtra(\"total_amount\").toString()\n        due=intent.getStringExtra(\"due_date\").toString()\n        paid_date=intent.getStringExtra(\"paid_date\").toString()\n        payment_type=intent.getStringExtra(\"payment_type\").toString()\n        paid_by=intent.getStringExtra(\"paid_by\").toString()\n        thankyou_note=intent.getStringExtra(\"thankyou_note\").toString()\n        val inputFormat: DateFormat = SimpleDateFormat(\"yyyy-MM-dd\")\n        val outputFormat: DateFormat = SimpleDateFormat(\"dd MMM yyyy\")\n        val inputDateStr = due\n        val date: Date = inputFormat.parse(inputDateStr)\n        due_date = outputFormat.format(date)\n        Log.e(\"due\",due_date.toString())\n        heading=findViewById(R.id.heading)\n        backRelative=findViewById(R.id.backRelative)\n        logoClickImgView=findViewById(R.id.logoClickImgView)\n        heading.text=\"Payment\"\n        backRelative.setOnClickListener(View.OnClickListener {\n            finish()\n        })\n\n        logoClickImgView.setOnClickListener(View.OnClickListener {\n            val intent = Intent(context, HomeActivity::class.java)\n            intent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP)\n            startActivity(intent)\n        })\n\n        totalLinear = findViewById(R.id.totalLinear)\n        totalAmount = findViewById(R.id.totalAmount)\n        totalAmount.setText(total_amount)\n        printLinear = findViewById(R.id.printLinear)\n        printLinearClick = findViewById(R.id.printLinearClick)\n        paymentWeb = findViewById(R.id.paymentWeb)\n        mainLinear = findViewById(R.id.mainLinear)\n        descriptionTitle = findViewById(R.id.descriptionTitle)\n        descriptionTitle.setText(title)\n        description = findViewById(R.id.description)\n        description.setText(invoice_description)\n        duedate=findViewById(R.id.duedate)\n        duedate.setText(\"Due Date : \" + due_date)\n        payTotalButton = findViewById(R.id.payTotalButton)\n        downloadLinear = findViewById(R.id.downloadLinear)\n        shareLinear = findViewById(R.id.shareLinear)\n        paidImg = findViewById(R.id.paidImg)\n        mProgressRelLayout = findViewById(R.id.progressDialogAdd)\n        bannerImageViewPager = findViewById(R.id.bannerImageViewPager)\n\n        mainLinear.visibility = View.VISIBLE\n        paymentWeb.visibility = View.GONE\n\n        payment_type_print=payment_type\n\n        if (status.equals(\"0\")){\n            payTotalButton.visibility = View.VISIBLE\n            totalLinear.visibility = View.VISIBLE\n            printLinear.visibility= View.GONE\n            paidImg.visibility = View.GONE\n            mainLinear.visibility = View.VISIBLE\n            paymentWeb.visibility = View.GONE\n            mProgressRelLayout.setVisibility(View.GONE)\n            duedate.visibility= View.VISIBLE\n            // payment_date = Calendar.DATE.toString()\n            runnable?.let { handler.removeCallbacks(it) }\n        }else{\n            payTotalButton.visibility = View.GONE\n            totalLinear.visibility = View.VISIBLE\n            paidImg.visibility = View.VISIBLE\n            mainLinear.visibility = View.VISIBLE\n            printLinear.visibility= View.VISIBLE\n            mProgressRelLayout.setVisibility(View.GONE)\n            paymentWeb.visibility = View.GONE\n            duedate.visibility= View.GONE\n            runnable?.let { handler.removeCallbacks(it) }\n        }\n        printLinearClick.setOnClickListener(){\n            if (Build.VERSION.SDK_INT > Build.VERSION_CODES.KITKAT) {\n                paymentWeb.loadUrl(\"about:blank\")\n                setWebViewSettingsPrint()\n                loadWebViewWithDataPrint()\n                createWebPrintJob(paymentWeb)\n            }  else {\n                Toast.makeText(\n                    context,\n                    \"Print is not supported below Android KITKAT Version\",\n                    Toast.LENGTH_SHORT\n                ).show()\n            }\n        }\n        downloadLinear.setOnClickListener(){\n            if (Build.VERSION.SDK_INT > Build.VERSION_CODES.KITKAT) {\n                paymentWeb.loadUrl(\"about:blank\")\n                setWebViewSettingsPrint()\n                loadWebViewWithDataPrint()\n                createWebPrintJob(paymentWeb)\n            } else {\n                Toast.makeText(\n                    context,\n                    \"Print is not supported below Android KITKAT Version\",\n                    Toast.LENGTH_SHORT\n                ).show()\n            }\n\n        }\n        shareLinear.setOnClickListener(){\n\n            //sharePdfFilePrint()\n            shareFile()\n\n\n        }\n        payTotalButton.setOnClickListener(){\n            Log.e(\"click\",\"1\")\n            getpaymenttoken()\n\n        }\n\n    }\n    private fun getpaymenttoken(){\n        mProgressRelLayout.visibility= View.VISIBLE\n        val token = PreferenceManager.getaccesstoken(context)\n        val paymentTokenBody = PaymentTokenApiModel( PreferenceManager.getStudentID(context).toString())\n        val call: Call<PaymentTokenModel> =\n            ApiClient.getClient.payment_token(paymentTokenBody, \"Bearer \" + token)\n        call.enqueue(object : Callback<PaymentTokenModel> {\n            override fun onFailure(call: Call<PaymentTokenModel>, t: Throwable) {\n                Log.e(\"Failed\", t.localizedMessage)\n                mProgressRelLayout.visibility = View.GONE\n            }\n\n            override fun onResponse(call: Call<PaymentTokenModel>, response: Response<PaymentTokenModel>) {\n                val responsedata = response.body()\n                //progressDialog.visibility = View.GONE\n                Log.e(\"Response Signup\", responsedata.toString())\n                if (responsedata != null) {\n                    try {\n\n                        if (response.body()!!.status==100) {\n                            var payment_token=responsedata.responseArray.access_token\n                            val tsLong = System.currentTimeMillis() / 1000\n                            val ts = tsLong.toString()\n                            var mechantorderRef=invoice_ref+\"-\"+ts\n                            Log.e(\"m\",mechantorderRef)\n                            val amountDouble: Double = total_amount.toDouble() * 100\n                            val amuntInt = amountDouble.toInt()\n                            val strDoubleAmount = amuntInt.toString()\n                            Log.e(\"amount\",strDoubleAmount)\n                            //order_id= \"BISAD\" + id + \"S\" + studentId\n                            callForPayment(payment_token,strDoubleAmount)\n\n\n                        }\n                        else {\n                            DialogFunctions.commonErrorAlertDialog(context.resources.getString(R.string.alert), ConstantFunctions.commonErrorString(response.body()!!.status), context)\n\n                        }\n\n                    } catch (e: Exception) {\n                        e.printStackTrace()\n                    }\n                }\n            }\n\n        })\n    }\n    private fun callForPayment(payment_token:String,amount:String){\n        Log.e(\"paymentcall\",\"true\")\n        mProgressRelLayout.visibility= View.VISIBLE\n        val tsLong = System.currentTimeMillis() / 1000\n        val ts = tsLong.toString()\n        var mechantorderRef=invoice_ref+\"-\"+ts\n        val token = PreferenceManager.getaccesstoken(context)\n        val paymentGatewayBody = PaymentGatewayApiModel(amount,PreferenceManager.getEmailId(context).toString(),\n            mechantorderRef,student_name,\"\",\"ABUBHABI\",\"\",\"Abu Dhabi\",\n            payment_token)\n        val call: Call<PaymentGatewayModel> =\n            ApiClient.getClient.payment_gateway(paymentGatewayBody, \"Bearer \" + token)\n        call.enqueue(object : Callback<PaymentGatewayModel> {\n            override fun onFailure(call: Call<PaymentGatewayModel>, t: Throwable) {\n                Log.e(\"Failed\", t.localizedMessage)\n                mProgressRelLayout.visibility = View.GONE\n            }\n\n            override fun onResponse(call: Call<PaymentGatewayModel>, response: Response<PaymentGatewayModel>) {\n                val responsedata = response.body()\n                //progressDialog.visibility = View.GONE\n                Log.e(\"Response Signup\", responsedata.toString())\n                if (responsedata != null) {\n                    try {\n\n                        if (response.body()!!.status==100) {\n\n                            orderRef=responsedata.responseArray.order_reference\n                            var orderPageUrl=responsedata.responseArray.order_paypage_url\n                            var auth=responsedata.responseArray.authorization\n                            val Code: String = orderPageUrl.split(\"=\").toTypedArray().get(1)\n                            Log.e(\"code\",Code)\n                            Log.e(\"auth\",auth)\n                            mProgressRelLayout.visibility = View.GONE\n                            val request: CardPaymentRequest = CardPaymentRequest.Builder().gatewayUrl(auth).code(Code).build()\n\n                            val paymentClient = PaymentClient(activity, \"fdhasfd\")\n                            paymentClient.launchCardPayment(request, 101)\n\n\n                        }else {\n                            DialogFunctions.commonErrorAlertDialog(context.resources.getString(R.string.alert), ConstantFunctions.commonErrorString(response.body()!!.status), context)\n\n                        }\n\n                    } catch (e: Exception) {\n                        e.printStackTrace()\n                    }\n                }\n            }\n\n        })\n    }\n    override fun onActivityResult(requestCode: Int, resultCode: Int, data: Intent?) {\n        super.onActivityResult(requestCode, resultCode, data)\n        Log.d(\"request_code\", requestCode.toString())\n        Log.d(\"resultt_code\", resultCode.toString())\n        if (data == null) {\n            mProgressRelLayout.visibility= View.GONE\n            Toast.makeText(context, \"transaction cancelled\", Toast.LENGTH_SHORT).show()\n        } else {\n            if (requestCode == 101) {\n                mProgressRelLayout.visibility= View.GONE\n                val cardPaymentData = CardPaymentData.getFromIntent(data)\n                Log.d(\"PAYMM\", cardPaymentData.code.toString())\n                Log.d(\"PAYMM\", cardPaymentData.reason.toString())\n                if (cardPaymentData.code == 2) {\n\n                    paySuccessApi()\n\n                } else {\n                    Toast.makeText(context, \"Transaction failed\", Toast.LENGTH_SHORT).show()\n                }\n            }\n        }\n    }\n    private fun paySuccessApi(){\n        mProgressRelLayout.visibility= View.VISIBLE\n        val token =PreferenceManager.getaccesstoken(context)\n        val paymentSuccessBody = PaymentSubmitApiModel(PreferenceManager.getStudentID(context).toString(),\n            id,orderRef)\n        val call: Call<PaymentSubmitModel> =\n            ApiClient.getClient.submit_payment(paymentSuccessBody, \"Bearer \" + token)\n        call.enqueue(object : Callback<PaymentSubmitModel> {\n            override fun onFailure(call: Call<PaymentSubmitModel>, t: Throwable) {\n                Log.e(\"Failed\", t.localizedMessage)\n                mProgressRelLayout.visibility= View.GONE\n            }\n\n            override fun onResponse(call: Call<PaymentSubmitModel>, response: Response<PaymentSubmitModel>) {\n                val responsedata = response.body()\n                //progressDialog.visibility = View.GONE\n                Log.e(\"Response Signup\", responsedata.toString())\n                if (responsedata != null) {\n                    try {\n\n                        if (response.body()!!.status==100) {\n                            mProgressRelLayout.visibility= View.GONE\n                            status=response.body()!!.payment_details.status.toString()\n                            id=response.body()!!.payment_details.id.toString()\n                            student_name=response.body()!!.payment_details.student_name\n                            account_code=response.body()!!.payment_details.account_code\n                            pupil_code=response.body()!!.payment_details.pupil_code\n                            academic_year=response.body()!!.payment_details.academic_year\n                            invoice_ref=response.body()!!.payment_details.invoice_ref\n                            invoice_description=response.body()!!.payment_details.invoice_description\n                            current_amount=response.body()!!.payment_details.current_amount\n                            vat_percentage=response.body()!!.payment_details.vat_percentage\n                            vat_amount=response.body()!!.payment_details.vat_amount\n                            total_amount=response.body()!!.payment_details.total_amount\n                            due=response.body()!!.payment_details.due_date\n                            paid_date=response.body()!!.payment_details.paid_date\n                            payment_type=response.body()!!.payment_details.payment_type\n                            payment_type_print=payment_type\n                            paid_by=response.body()!!.payment_details.paid_by\n                            thankyou_note=response.body()!!.payment_details.thankyou_note\n                            val inputFormat: DateFormat = SimpleDateFormat(\"yyyy-MM-dd\")\n                            val outputFormat: DateFormat = SimpleDateFormat(\"dd MMM yyyy\")\n                            val inputDateStr = due\n                            val date: Date = inputFormat.parse(inputDateStr)\n                            due_date = outputFormat.format(date)\n                            payTotalButton.visibility = View.GONE\n                            totalLinear.visibility = View.VISIBLE\n                            paidImg.visibility = View.VISIBLE\n                            mainLinear.visibility = View.VISIBLE\n                            printLinear.visibility = View.VISIBLE\n                            Toast.makeText(context, \"Payment Successfull,Your payment is complete.\", Toast.LENGTH_SHORT).show()\n\n                        }else\n                        {\n                            DialogFunctions.commonErrorAlertDialog(context.resources.getString(R.string.alert), ConstantFunctions.commonErrorString(response.body()!!.status), context)\n\n                        }\n\n                    } catch (e: Exception) {\n                        e.printStackTrace()\n                    }\n                }\n            }\n\n        })\n    }\n    private fun setWebViewSettingsPrint() {\n        mProgressRelLayout.visibility = View.VISIBLE\n        anim = RotateAnimation(\n            0F, 360F, Animation.RELATIVE_TO_SELF, 0.5f,\n            Animation.RELATIVE_TO_SELF, 0.5f\n        )\n        anim.setInterpolator(context, android.R.interpolator.linear)\n        anim.repeatCount = Animation.INFINITE\n        anim.duration = 1000\n        mProgressRelLayout.animation = anim\n        mProgressRelLayout.startAnimation(anim)\n        paymentWeb.settings.javaScriptEnabled = true\n        paymentWeb.clearCache(true)\n        paymentWeb.settings.domStorageEnabled = true\n        paymentWeb.settings.javaScriptCanOpenWindowsAutomatically = true\n        paymentWeb.settings.setSupportMultipleWindows(true)\n        paymentWeb.webViewClient = MyPrintWebViewClient()\n    }\n\n    fun loadWebViewWithDataPrint() {\n        var trn_pay=PreferenceManager.getTrnPayment(context)\n        var br = BufferedReader(InputStreamReader(assets.open(\"receipfee.html\")))\n        PaymentReceiptActivity().loadWebViewWithDataPrint(paymentWeb,br,student_name,\n            account_code,\n            pupil_code,academic_year,invoice_ref,invoice_description,current_amount,vat_percentage,\n            vat_amount,total_amount,due_date,paid_date,payment_type,paid_by,title,\n            payment_type_print,order_id,orderRef,thankyou_note,trn_pay\n        )\n\n\n    }\n\n    private fun createWebPrintJob(webView: WebView) {\n        mProgressRelLayout.clearAnimation()\n        mProgressRelLayout.visibility = View.GONE\n        paymentWeb.visibility = View.GONE\n        val printManager = getSystemService(PRINT_SERVICE) as PrintManager\n\n        val printAdapter = webView.createPrintDocumentAdapter()\n        val jobName = getString(R.string.app_name) + \"_Pay\" + \"ABUDHABI\"\n        val builder = PrintAttributes.Builder()\n        builder.setMediaSize(PrintAttributes.MediaSize.ISO_A4)\n        if (printManager != null) {\n            printJob = printManager.print(jobName, printAdapter, builder.build())\n        }\n        if (printJob!!.isCompleted()) {\n//            Toast.makeText(getApplicationContext(), R.string.print_complete, Toast.LENGTH_LONG).show();\n        } else if (printJob!!.isFailed()) {\n            Toast.makeText(applicationContext, \"Print failed\", Toast.LENGTH_SHORT).show()\n        }\n    }\n    private class MyPrintWebViewClient : WebViewClient() {\n        override fun onPageFinished(view: WebView, url: String) {\n\n        }\n\n        override fun onPageStarted(view: WebView?, url: String?, favicon: Bitmap?) {\n            super.onPageStarted(view, url,favicon)\n\n        }\n    }\n    fun shareFile(){\n\n        startdownloadingforshare()\n        val aName = intent.getStringExtra(\"iName\")\n        val shareIntent = Intent(Intent.ACTION_SEND)\n        shareIntent.putExtra(\n            Intent.EXTRA_STREAM,  uriFromFile(context, File(this.getExternalFilesDir(pdfUri.toString()\n        )?.absolutePath.toString(), \"$aName\")\n            ))\n        shareIntent.flags = Intent.FLAG_GRANT_READ_URI_PERMISSION\n        shareIntent.type = \"application/pdf\"\n        startActivity(Intent.createChooser(shareIntent, \"share..\"))\n    }\n    fun uriFromFile(context: Context, file: File): Uri {\n        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.N)\n        {\n            return FileProvider.getUriForFile(context, \"com.nas.alreem\" + \".provider\", file)\n        }\n        else\n        {\n            return Uri.fromFile(file)\n        }\n    }\n    private fun getFilepath(filename: String): String? {\n        return File(\n            Environment.getExternalStorageDirectory().absolutePath,\n            \"/Download/$filename\"\n        ).path\n    }\n    private fun startdownloadingforshare() {\n        if (Build.VERSION.SDK_INT > Build.VERSION_CODES.KITKAT) {\n            paymentWeb.loadUrl(\"about:blank\")\n            setWebViewSettingsPrint()\n            loadWebViewWithDataPrint()\n            createWebPrintJob(paymentWeb)\n        } else {\n            Toast.makeText(\n                context,\n                \"Print is not supported below Android KITKAT Version\",\n                Toast.LENGTH_SHORT\n            ).show()\n        }\n    }\n\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/nas/alreem/activity/payments/PaymentDetailActivity.kt b/app/src/main/java/com/nas/alreem/activity/payments/PaymentDetailActivity.kt
--- a/app/src/main/java/com/nas/alreem/activity/payments/PaymentDetailActivity.kt	(revision b2ad66f8612edd03349ffa4aaee582fd0005cdb4)
+++ b/app/src/main/java/com/nas/alreem/activity/payments/PaymentDetailActivity.kt	(date 1689330782424)
@@ -134,7 +134,7 @@
         heading=findViewById(R.id.heading)
         backRelative=findViewById(R.id.backRelative)
         logoClickImgView=findViewById(R.id.logoClickImgView)
-        heading.text="Payment"
+        heading.text="Payment Details"
         backRelative.setOnClickListener(View.OnClickListener {
             finish()
         })
@@ -492,7 +492,7 @@
         val shareIntent = Intent(Intent.ACTION_SEND)
         shareIntent.putExtra(
             Intent.EXTRA_STREAM,  uriFromFile(context, File(this.getExternalFilesDir(pdfUri.toString()
-        )?.absolutePath.toString(), "$aName")
+            )?.absolutePath.toString(), "$aName")
             ))
         shareIntent.flags = Intent.FLAG_GRANT_READ_URI_PERMISSION
         shareIntent.type = "application/pdf"
Index: app/src/main/java/com/nas/alreem/fragment/absence/model/EarlyPickupListModel.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/nas/alreem/fragment/absence/model/EarlyPickupListModel.kt b/app/src/main/java/com/nas/alreem/fragment/absence/model/EarlyPickupListModel.kt
new file mode 100644
--- /dev/null	(date 1687866066000)
+++ b/app/src/main/java/com/nas/alreem/fragment/absence/model/EarlyPickupListModel.kt	(date 1687866066000)
@@ -0,0 +1,29 @@
+package com.nas.alreem.fragment.absence.model
+
+import com.google.gson.annotations.SerializedName
+
+class EarlyPickupListModel (
+    @SerializedName("id")
+    val id: Int = 0,
+
+    @SerializedName("pickup_date")
+    val pickup_date: String = "",
+
+    @SerializedName("pickup_time")
+    var pickup_time: String = "",
+
+    @SerializedName("pickup_by_whom")
+    val pickup_by_whom: String = "",
+
+    @SerializedName("reason")
+    val reason: String = "",
+
+    @SerializedName("status")
+    val status: Int = 0,
+
+    @SerializedName("class_name")
+    val class_name: String = "",
+
+    @SerializedName("reason_for_rejection")
+    val reason_for_rejection: String = ""
+)
\ No newline at end of file
Index: app/src/main/res/layout/frament_parent_meetings.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/frament_parent_meetings.xml b/app/src/main/res/layout/frament_parent_meetings.xml
new file mode 100644
--- /dev/null	(date 1687508624000)
+++ b/app/src/main/res/layout/frament_parent_meetings.xml	(date 1687508624000)
@@ -0,0 +1,175 @@
+<?xml version="1.0" encoding="utf-8"?>
+<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:tools="http://schemas.android.com/tools"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    android:id="@+id/relMain"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:background="@color/white">
+    <RelativeLayout
+        android:id="@+id/titleRel"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content">
+
+        <include
+            android:id="@+id/includeRel"
+            layout="@layout/header_bar_fragment"
+            />
+
+        <ImageView
+            android:id="@+id/infoImg"
+            android:layout_width="30dp"
+            android:layout_height="30dp"
+            android:layout_alignParentRight="true"
+            android:layout_centerVertical="true"
+            android:layout_marginRight="5dp"
+            android:background="@drawable/infoptaicon"
+            android:visibility="visible" />
+    </RelativeLayout>
+    <LinearLayout
+        android:layout_width="match_parent"
+        android:layout_height="match_parent"
+        android:weightSum="100"
+        android:layout_below="@+id/titleRel"
+        android:orientation="vertical"
+        >
+        <RelativeLayout
+            android:id="@+id/studentRelative"
+
+            android:layout_width="match_parent"
+            android:layout_height="0dp"
+            android:background="#FBB425"
+            android:layout_margin="10dp"
+            android:layout_weight="50">
+            <com.nas.alreem.commonviews.CustomFontSansProTextBlack
+                android:id="@+id/selectStudentTitle"
+                android:paddingTop="5dp"
+                android:paddingBottom="5dp"
+                android:layout_width="match_parent"
+                android:layout_height="wrap_content"
+                android:gravity="center"
+                android:textSize="18dp"
+                android:textStyle="bold"
+                android:text="Select Child"
+                android:singleLine="true" />
+
+
+            <ImageView
+                android:id="@+id/selectStudentImgView"
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:layout_centerInParent="true"
+                android:src="@drawable/addiconinparentsevng"
+                app:siBorderColor="#FBB425"
+                app:siBorderWidth="1dp" />
+
+            <com.nas.alreem.commonviews.CustomFontSansProTextBlack
+                android:id="@+id/studentNameTV"
+                style="@style/textstyleblack"
+                android:layout_width="match_parent"
+                android:layout_height="wrap_content"
+                android:layout_alignParentBottom="true"
+                android:layout_marginStart="20dp"
+                android:layout_marginTop="20dp"
+                android:layout_marginEnd="20dp"
+                android:layout_marginBottom="20dp"
+                android:gravity="left"
+                android:text="Student Name:-"
+                android:textSize="16dp"
+                android:textStyle="bold" />
+
+            <ImageView
+                android:id="@+id/reviewImageView"
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:layout_alignParentRight="true"
+                android:src="@drawable/review_confirm" />
+            <com.nas.alreem.commonviews.CustomFontSansProTextBlackSemiBold
+                android:id="@+id/reviewTitle"
+                android:paddingTop="2dp"
+                android:paddingBottom="2dp"
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:gravity="center"
+                android:layout_alignParentRight="true"
+                android:layout_below="@+id/reviewImageView"
+                android:textSize="15dp"
+                android:textStyle="bold"
+                android:visibility="gone"
+                android:textColor="@color/white"
+                android:text="Review &amp; \nConfirm"
+                android:singleLine="false" />
+
+        </RelativeLayout>
+        <RelativeLayout
+            android:id="@+id/staffRelative"
+            android:layout_width="match_parent"
+            android:layout_height="0dp"
+            android:background="#43C8D8"
+            android:visibility="invisible"
+            android:layout_marginLeft="10dp"
+            android:layout_marginBottom="10dp"
+            android:layout_marginRight="10dp"
+            android:layout_weight="50">
+            <com.nas.alreem.commonviews.CustomFontSansProTextBlack
+                android:id="@+id/selectTeacherTitle"
+                android:paddingTop="5dp"
+                android:paddingBottom="5dp"
+                android:layout_width="match_parent"
+                android:layout_height="wrap_content"
+                android:gravity="center"
+                android:textSize="18dp"
+                android:textStyle="bold"
+                android:text="Select Staff"
+                android:singleLine="true" />
+
+            <ImageView
+                android:id="@+id/selectStaffImgView"
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:layout_centerInParent="true"
+                android:src="@drawable/addiconinparentsevng"
+                app:siBorderColor="#43C8D8"
+                app:siBorderWidth="1dp" />
+
+            <com.nas.alreem.commonviews.CustomFontSansProTextBlack
+                android:id="@+id/staffNameTV"
+                style="@style/textstyleblack"
+                android:layout_width="match_parent"
+                android:layout_height="wrap_content"
+                android:layout_alignParentBottom="true"
+                android:layout_marginStart="20dp"
+                android:layout_marginTop="20dp"
+                android:layout_marginEnd="20dp"
+                android:layout_marginBottom="20dp"
+                android:layout_toLeftOf="@+id/next"
+                android:gravity="left"
+                android:text="Staff Name:-"
+                android:textSize="16dp"
+                android:textStyle="bold" />
+
+            <ImageView
+                android:id="@+id/next"
+                android:layout_width="45dp"
+                android:layout_height="45dp"
+                android:layout_alignParentRight="true"
+                android:layout_alignParentBottom="true"
+                android:layout_marginStart="10dp"
+                android:layout_marginTop="10dp"
+                android:layout_marginEnd="10dp"
+                android:layout_marginBottom="10dp"
+                android:src="@drawable/continueiconcalender"
+                android:visibility="invisible" />
+
+        </RelativeLayout>
+    </LinearLayout>
+    <ProgressBar
+        android:id="@+id/progressDialogAdd"
+        android:layout_width="40dp"
+        android:layout_height="40dp"
+        android:layout_centerInParent="true"
+        android:indeterminateDrawable="@anim/customspinner"
+        android:visibility="gone"
+
+        />
+</RelativeLayout>
\ No newline at end of file
Index: .idea/.gitignore
===================================================================
diff --git a/.idea/.gitignore b/.idea/.gitignore
deleted file mode 100644
--- a/.idea/.gitignore	(revision b2ad66f8612edd03349ffa4aaee582fd0005cdb4)
+++ /dev/null	(revision b2ad66f8612edd03349ffa4aaee582fd0005cdb4)
@@ -1,3 +0,0 @@
-# Default ignored files
-/shelf/
-/workspace.xml
Index: app/src/main/java/com/nas/alreem/activity/staff_directory/model/StaffDetailResponseArrayModel.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/nas/alreem/activity/staff_directory/model/StaffDetailResponseArrayModel.kt b/app/src/main/java/com/nas/alreem/activity/staff_directory/model/StaffDetailResponseArrayModel.kt
new file mode 100644
--- /dev/null	(date 1688972230000)
+++ b/app/src/main/java/com/nas/alreem/activity/staff_directory/model/StaffDetailResponseArrayModel.kt	(date 1688972230000)
@@ -0,0 +1,7 @@
+package com.nas.alreem.activity.staff_directory.model
+
+import com.google.gson.annotations.SerializedName
+
+class StaffDetailResponseArrayModel (
+    @SerializedName("department_staff")var department_staffs:ArrayList<DepartmentStaffsModel>
+)
\ No newline at end of file
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"DesignSurface\">\n    <option name=\"filePathToZoomLevelMap\">\n      <map>\n        <entry key=\"..\\:/Users/aparn/Documents/AlReem/app/src/main/res/drawable-v24/rectangular_border_payment.xml\" value=\"0.1125\" />\n        <entry key=\"..\\:/Users/aparn/Documents/AlReem/app/src/main/res/drawable/button_grey_white_curve.xml\" value=\"0.1\" />\n        <entry key=\"..\\:/Users/aparn/Documents/AlReem/app/src/main/res/drawable/button_grey_with_teal.xml\" value=\"0.1\" />\n        <entry key=\"..\\:/Users/aparn/Documents/AlReem/app/src/main/res/drawable/curved_filled_layout.xml\" value=\"0.1\" />\n        <entry key=\"..\\:/Users/aparn/Documents/AlReem/app/src/main/res/drawable/dialogcurvedrectangle.xml\" value=\"0.1545\" />\n        <entry key=\"..\\:/Users/aparn/Documents/AlReem/app/src/main/res/drawable/dialogcurvedrectanglesplitbg.xml\" value=\"0.1\" />\n        <entry key=\"..\\:/Users/aparn/Documents/AlReem/app/src/main/res/drawable/dialoguebottomcurve.xml\" value=\"0.149\" />\n        <entry key=\"..\\:/Users/aparn/Documents/AlReem/app/src/main/res/drawable/dialoguetopcurve.xml\" value=\"0.149\" />\n        <entry key=\"..\\:/Users/aparn/Documents/AlReem/app/src/main/res/drawable/edit_text_login.xml\" value=\"0.149\" />\n        <entry key=\"..\\:/Users/aparn/Documents/AlReem/app/src/main/res/drawable/edittext_cursor.xml\" value=\"0.1125\" />\n        <entry key=\"..\\:/Users/aparn/Documents/AlReem/app/src/main/res/drawable/edittext_greybg.xml\" value=\"0.1735\" />\n        <entry key=\"..\\:/Users/aparn/Documents/AlReem/app/src/main/res/drawable/list_calendar_selector.xml\" value=\"0.165\" />\n        <entry key=\"..\\:/Users/aparn/Documents/AlReem/app/src/main/res/drawable/rec_blue_border_white.xml\" value=\"0.1\" />\n        <entry key=\"..\\:/Users/aparn/Documents/AlReem/app/src/main/res/drawable/rectangular_border_cca_week.xml\" value=\"0.1125\" />\n        <entry key=\"..\\:/Users/aparn/Documents/AlReem/app/src/main/res/drawable/shape_circle_navy.xml\" value=\"0.165\" />\n        <entry key=\"..\\:/Users/aparn/Documents/AlReem/app/src/main/res/drawable/shape_circle_red.xml\" value=\"0.165\" />\n        <entry key=\"..\\:/Users/aparn/Documents/AlReem/app/src/main/res/drawable/spinner_bg.xml\" value=\"0.1125\" />\n        <entry key=\"..\\:/Users/aparn/Documents/AlReem/app/src/main/res/drawable/survey_num_bg.xml\" value=\"0.1\" />\n        <entry key=\"..\\:/Users/aparn/Documents/AlReem/app/src/main/res/layout/activity_audio_player_detail.xml\" value=\"0.2632066728452271\" />\n        <entry key=\"..\\:/Users/aparn/Documents/AlReem/app/src/main/res/layout/activity_calendar_tutorial.xml\" value=\"0.18931159420289856\" />\n        <entry key=\"..\\:/Users/aparn/Documents/AlReem/app/src/main/res/layout/activity_coming_up.xml\" value=\"0.21784420289855072\" />\n        <entry key=\"..\\:/Users/aparn/Documents/AlReem/app/src/main/res/layout/activity_coming_up_detail.xml\" value=\"0.18931159420289856\" />\n        <entry key=\"..\\:/Users/aparn/Documents/AlReem/app/src/main/res/layout/activity_gallery_images.xml\" value=\"0.18931159420289856\" />\n        <entry key=\"..\\:/Users/aparn/Documents/AlReem/app/src/main/res/layout/activity_login.xml\" value=\"0.24114583333333334\" />\n        <entry key=\"..\\:/Users/aparn/Documents/AlReem/app/src/main/res/layout/activity_main.xml\" value=\"0.14945652173913043\" />\n        <entry key=\"..\\:/Users/aparn/Documents/AlReem/app/src/main/res/layout/activity_newsletter.xml\" value=\"0.1875\" />\n        <entry key=\"..\\:/Users/aparn/Documents/AlReem/app/src/main/res/layout/activity_newsletter_list.xml\" value=\"0.1875\" />\n        <entry key=\"..\\:/Users/aparn/Documents/AlReem/app/src/main/res/layout/activity_parents_essential_detail.xml\" value=\"0.22644927536231885\" />\n        <entry key=\"..\\:/Users/aparn/Documents/AlReem/app/src/main/res/layout/activity_payment_category.xml\" value=\"0.18931159420289856\" />\n        <entry key=\"..\\:/Users/aparn/Documents/AlReem/app/src/main/res/layout/activity_paymentdetails.xml\" value=\"0.152\" />\n        <entry key=\"..\\:/Users/aparn/Documents/AlReem/app/src/main/res/layout/activity_pdf_viewer.xml\" value=\"0.18931159420289856\" />\n        <entry key=\"..\\:/Users/aparn/Documents/AlReem/app/src/main/res/layout/activity_photo_viewpager.xml\" value=\"0.18931159420289856\" />\n        <entry key=\"..\\:/Users/aparn/Documents/AlReem/app/src/main/res/layout/activity_photos_view_pager.xml\" value=\"0.1286231884057971\" />\n        <entry key=\"..\\:/Users/aparn/Documents/AlReem/app/src/main/res/layout/activity_priamry.xml\" value=\"0.1\" />\n        <entry key=\"..\\:/Users/aparn/Documents/AlReem/app/src/main/res/layout/activity_social_media.xml\" value=\"0.1875\" />\n        <entry key=\"..\\:/Users/aparn/Documents/AlReem/app/src/main/res/layout/activity_splash.xml\" value=\"0.2421875\" />\n        <entry key=\"..\\:/Users/aparn/Documents/AlReem/app/src/main/res/layout/activity_survey_list.xml\" value=\"0.22644927536231885\" />\n        <entry key=\"..\\:/Users/aparn/Documents/AlReem/app/src/main/res/layout/activity_term_calendar.xml\" value=\"0.18931159420289856\" />\n        <entry key=\"..\\:/Users/aparn/Documents/AlReem/app/src/main/res/layout/activity_terms_of_service.xml\" value=\"0.18931159420289856\" />\n        <entry key=\"..\\:/Users/aparn/Documents/AlReem/app/src/main/res/layout/activity_text_message_detail.xml\" value=\"0.136\" />\n        <entry key=\"..\\:/Users/aparn/Documents/AlReem/app/src/main/res/layout/activity_tutorial.xml\" value=\"0.18931159420289856\" />\n        <entry key=\"..\\:/Users/aparn/Documents/AlReem/app/src/main/res/layout/activity_video_message.xml\" value=\"0.18931159420289856\" />\n        <entry key=\"..\\:/Users/aparn/Documents/AlReem/app/src/main/res/layout/activity_web_link.xml\" value=\"0.18931159420289856\" />\n        <entry key=\"..\\:/Users/aparn/Documents/AlReem/app/src/main/res/layout/activtiy_home.xml\" value=\"0.2421875\" />\n        <entry key=\"..\\:/Users/aparn/Documents/AlReem/app/src/main/res/layout/adapter.xml\" value=\"0.18931159420289856\" />\n        <entry key=\"..\\:/Users/aparn/Documents/AlReem/app/src/main/res/layout/adapter_absence_leave_recycelr.xml\" value=\"0.1286231884057971\" />\n        <entry key=\"..\\:/Users/aparn/Documents/AlReem/app/src/main/res/layout/adapter_calendar_detail.xml\" value=\"0.18931159420289856\" />\n        <entry key=\"..\\:/Users/aparn/Documents/AlReem/app/src/main/res/layout/adapter_contactus_list.xml\" value=\"0.1\" />\n        <entry key=\"..\\:/Users/aparn/Documents/AlReem/app/src/main/res/layout/adapter_home.xml\" value=\"0.28284671532846717\" />\n        <entry key=\"..\\:/Users/aparn/Documents/AlReem/app/src/main/res/layout/adapter_news_letter.xml\" value=\"0.1875\" />\n        <entry key=\"..\\:/Users/aparn/Documents/AlReem/app/src/main/res/layout/adapter_notification_list.xml\" value=\"0.1\" />\n        <entry key=\"..\\:/Users/aparn/Documents/AlReem/app/src/main/res/layout/adapter_order_history_item_details.xml\" value=\"0.18931159420289856\" />\n        <entry key=\"..\\:/Users/aparn/Documents/AlReem/app/src/main/res/layout/adapter_parents_essential.xml\" value=\"0.18931159420289856\" />\n        <entry key=\"..\\:/Users/aparn/Documents/AlReem/app/src/main/res/layout/adapter_paycattitle_list.xml\" value=\"0.13632246376811594\" />\n        <entry key=\"..\\:/Users/aparn/Documents/AlReem/app/src/main/res/layout/adapter_paymentcatlist_recycler.xml\" value=\"0.25263157894736843\" />\n        <entry key=\"..\\:/Users/aparn/Documents/AlReem/app/src/main/res/layout/adapter_primary_data.xml\" value=\"0.10104166666666667\" />\n        <entry key=\"..\\:/Users/aparn/Documents/AlReem/app/src/main/res/layout/adapter_primary_list.xml\" value=\"0.1\" />\n        <entry key=\"..\\:/Users/aparn/Documents/AlReem/app/src/main/res/layout/adapter_settings.xml\" value=\"0.18931159420289856\" />\n        <entry key=\"..\\:/Users/aparn/Documents/AlReem/app/src/main/res/layout/adapter_student_list.xml\" value=\"0.18931159420289856\" />\n        <entry key=\"..\\:/Users/aparn/Documents/AlReem/app/src/main/res/layout/adapter_survey_choice.xml\" value=\"0.1\" />\n        <entry key=\"..\\:/Users/aparn/Documents/AlReem/app/src/main/res/layout/adapter_survey_list.xml\" value=\"0.1\" />\n        <entry key=\"..\\:/Users/aparn/Documents/AlReem/app/src/main/res/layout/adapter_survey_questions.xml\" value=\"0.22644927536231885\" />\n        <entry key=\"..\\:/Users/aparn/Documents/AlReem/app/src/main/res/layout/adapter_thumnail_image.xml\" value=\"0.18931159420289856\" />\n        <entry key=\"..\\:/Users/aparn/Documents/AlReem/app/src/main/res/layout/basket_itemlist_adapter.xml\" value=\"0.1286231884057971\" />\n        <entry key=\"..\\:/Users/aparn/Documents/AlReem/app/src/main/res/layout/calendar_canteen_popup.xml\" value=\"0.18931159420289856\" />\n        <entry key=\"..\\:/Users/aparn/Documents/AlReem/app/src/main/res/layout/canteen_addorder.xml\" value=\"0.10104166666666667\" />\n        <entry key=\"..\\:/Users/aparn/Documents/AlReem/app/src/main/res/layout/canteen_first_activity.xml\" value=\"0.10104166666666667\" />\n        <entry key=\"..\\:/Users/aparn/Documents/AlReem/app/src/main/res/layout/canteen_fragment.xml\" value=\"0.2759961127308066\" />\n        <entry key=\"..\\:/Users/aparn/Documents/AlReem/app/src/main/res/layout/canteen_information.xml\" value=\"0.18931159420289856\" />\n        <entry key=\"..\\:/Users/aparn/Documents/AlReem/app/src/main/res/layout/canteen_myorder.xml\" value=\"0.1286231884057971\" />\n        <entry key=\"..\\:/Users/aparn/Documents/AlReem/app/src/main/res/layout/canteen_myorderbasket.xml\" value=\"0.18931159420289856\" />\n        <entry key=\"..\\:/Users/aparn/Documents/AlReem/app/src/main/res/layout/canteen_orderhistory.xml\" value=\"0.18931159420289856\" />\n        <entry key=\"..\\:/Users/aparn/Documents/AlReem/app/src/main/res/layout/canteen_payment.xml\" value=\"0.18931159420289856\" />\n        <entry key=\"..\\:/Users/aparn/Documents/AlReem/app/src/main/res/layout/canteen_paymenthistory.xml\" value=\"0.1286231884057971\" />\n        <entry key=\"..\\:/Users/aparn/Documents/AlReem/app/src/main/res/layout/canteen_preorder.xml\" value=\"0.18931159420289856\" />\n        <entry key=\"..\\:/Users/aparn/Documents/AlReem/app/src/main/res/layout/custom_progress_layout.xml\" value=\"0.18931159420289856\" />\n        <entry key=\"..\\:/Users/aparn/Documents/AlReem/app/src/main/res/layout/custom_titlebar.xml\" value=\"0.24114583333333334\" />\n        <entry key=\"..\\:/Users/aparn/Documents/AlReem/app/src/main/res/layout/date_adapter.xml\" value=\"0.18931159420289856\" />\n        <entry key=\"..\\:/Users/aparn/Documents/AlReem/app/src/main/res/layout/dialog_change_password.xml\" value=\"0.2482758620689655\" />\n        <entry key=\"..\\:/Users/aparn/Documents/AlReem/app/src/main/res/layout/dialog_common_error_alert.xml\" value=\"0.1390625\" />\n        <entry key=\"..\\:/Users/aparn/Documents/AlReem/app/src/main/res/layout/dialog_delete_account.xml\" value=\"0.18931159420289856\" />\n        <entry key=\"..\\:/Users/aparn/Documents/AlReem/app/src/main/res/layout/dialog_forget_password.xml\" value=\"0.1141025641025641\" />\n        <entry key=\"..\\:/Users/aparn/Documents/AlReem/app/src/main/res/layout/dialog_internet_failure_alert.xml\" value=\"0.1390625\" />\n        <entry key=\"..\\:/Users/aparn/Documents/AlReem/app/src/main/res/layout/dialog_logout.xml\" value=\"0.21784420289855072\" />\n        <entry key=\"..\\:/Users/aparn/Documents/AlReem/app/src/main/res/layout/dialog_notice.xml\" value=\"0.22644927536231885\" />\n        <entry key=\"..\\:/Users/aparn/Documents/AlReem/app/src/main/res/layout/dialog_ok_cancel.xml\" value=\"0.1\" />\n        <entry key=\"..\\:/Users/aparn/Documents/AlReem/app/src/main/res/layout/dialog_question_answer_survey.xml\" value=\"0.22644927536231885\" />\n        <entry key=\"..\\:/Users/aparn/Documents/AlReem/app/src/main/res/layout/dialog_send_email.xml\" value=\"0.2\" />\n        <entry key=\"..\\:/Users/aparn/Documents/AlReem/app/src/main/res/layout/dialog_sign_up.xml\" value=\"0.1390625\" />\n        <entry key=\"..\\:/Users/aparn/Documents/AlReem/app/src/main/res/layout/dialog_social_media.xml\" value=\"0.1875\" />\n        <entry key=\"..\\:/Users/aparn/Documents/AlReem/app/src/main/res/layout/dialog_survey_close.xml\" value=\"0.22644927536231885\" />\n        <entry key=\"..\\:/Users/aparn/Documents/AlReem/app/src/main/res/layout/dialog_survey_wlcome.xml\" value=\"0.22644927536231885\" />\n        <entry key=\"..\\:/Users/aparn/Documents/AlReem/app/src/main/res/layout/dialog_updateversion.xml\" value=\"0.18931159420289856\" />\n        <entry key=\"..\\:/Users/aparn/Documents/AlReem/app/src/main/res/layout/dialogue_calendar_detail.xml\" value=\"0.10104166666666667\" />\n        <entry key=\"..\\:/Users/aparn/Documents/AlReem/app/src/main/res/layout/dialogue_student_list.xml\" value=\"0.13632246376811594\" />\n        <entry key=\"..\\:/Users/aparn/Documents/AlReem/app/src/main/res/layout/fragment_about_us.xml\" value=\"0.1\" />\n        <entry key=\"..\\:/Users/aparn/Documents/AlReem/app/src/main/res/layout/fragment_calendar.xml\" value=\"0.1286231884057971\" />\n        <entry key=\"..\\:/Users/aparn/Documents/AlReem/app/src/main/res/layout/fragment_communications.xml\" value=\"0.1413934426229508\" />\n        <entry key=\"..\\:/Users/aparn/Documents/AlReem/app/src/main/res/layout/fragment_contact_us.xml\" value=\"0.18931159420289856\" />\n        <entry key=\"..\\:/Users/aparn/Documents/AlReem/app/src/main/res/layout/fragment_gallery.xml\" value=\"0.1\" />\n        <entry key=\"..\\:/Users/aparn/Documents/AlReem/app/src/main/res/layout/fragment_home_screen.xml\" value=\"0.2421875\" />\n        <entry key=\"..\\:/Users/aparn/Documents/AlReem/app/src/main/res/layout/fragment_notifications.xml\" value=\"0.1\" />\n        <entry key=\"..\\:/Users/aparn/Documents/AlReem/app/src/main/res/layout/fragment_parents_essentials.xml\" value=\"0.22644927536231885\" />\n        <entry key=\"..\\:/Users/aparn/Documents/AlReem/app/src/main/res/layout/fragment_payment.xml\" value=\"0.18931159420289856\" />\n        <entry key=\"..\\:/Users/aparn/Documents/AlReem/app/src/main/res/layout/fragment_primary.xml\" value=\"0.2421875\" />\n        <entry key=\"..\\:/Users/aparn/Documents/AlReem/app/src/main/res/layout/fragment_secondary.xml\" value=\"0.24114583333333334\" />\n        <entry key=\"..\\:/Users/aparn/Documents/AlReem/app/src/main/res/layout/fragment_settings.xml\" value=\"0.21784420289855072\" />\n        <entry key=\"..\\:/Users/aparn/Documents/AlReem/app/src/main/res/layout/frament_early_years.xml\" value=\"0.1390625\" />\n        <entry key=\"..\\:/Users/aparn/Documents/AlReem/app/src/main/res/layout/header_bar_fragment.xml\" value=\"0.1390625\" />\n        <entry key=\"..\\:/Users/aparn/Documents/AlReem/app/src/main/res/layout/itemcategory_adapter.xml\" value=\"0.18931159420289856\" />\n        <entry key=\"..\\:/Users/aparn/Documents/AlReem/app/src/main/res/layout/itemsbasket_adapter.xml\" value=\"0.18931159420289856\" />\n        <entry key=\"..\\:/Users/aparn/Documents/AlReem/app/src/main/res/layout/layout_activity_header.xml\" value=\"0.1\" />\n        <entry key=\"..\\:/Users/aparn/Documents/AlReem/app/src/main/res/layout/layout_imagepager_adapter.xml\" value=\"0.18931159420289856\" />\n        <entry key=\"..\\:/Users/aparn/Documents/AlReem/app/src/main/res/layout/layout_photo_imagepager_adapter.xml\" value=\"0.18931159420289856\" />\n        <entry key=\"..\\:/Users/aparn/Documents/AlReem/app/src/main/res/layout/layout_updated.xml\" value=\"0.18931159420289856\" />\n        <entry key=\"..\\:/Users/aparn/Documents/AlReem/app/src/main/res/layout/myorder_adapter.xml\" value=\"0.18931159420289856\" />\n        <entry key=\"..\\:/Users/aparn/Documents/AlReem/app/src/main/res/layout/myorder_items_adapter.xml\" value=\"0.10104166666666667\" />\n        <entry key=\"..\\:/Users/aparn/Documents/AlReem/app/src/main/res/layout/orderhistory_adapter.xml\" value=\"0.18931159420289856\" />\n        <entry key=\"..\\:/Users/aparn/Documents/AlReem/app/src/main/res/layout/paymenthistory_adapter.xml\" value=\"0.18931159420289856\" />\n        <entry key=\"..\\:/Users/aparn/Documents/AlReem/app/src/main/res/layout/preorder_itemlist_adapter.xml\" value=\"0.1286231884057971\" />\n        <entry key=\"..\\:/Users/aparn/Documents/AlReem/app/src/main/res/layout/preview_activity.xml\" value=\"0.18931159420289856\" />\n        <entry key=\"..\\:/Users/aparn/Documents/AlReem/app/src/main/res/layout/spinner_textview_item.xml\" value=\"0.18931159420289856\" />\n        <entry key=\"..\\:/Users/aparn/Documents/AlReem/app/src/main/res/layout/swipe_homefragment.xml\" value=\"0.18931159420289856\" />\n      </map>\n    </option>\n  </component>\n  <component name=\"ProjectRootManager\" version=\"2\" languageLevel=\"JDK_11\" project-jdk-name=\"1.8\" project-jdk-type=\"JavaSDK\">\n    <output url=\"file://$PROJECT_DIR$/build/classes\" />\n  </component>\n  <component name=\"ProjectType\">\n    <option name=\"id\" value=\"Android\" />\n  </component>\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/misc.xml b/.idea/misc.xml
--- a/.idea/misc.xml	(revision b2ad66f8612edd03349ffa4aaee582fd0005cdb4)
+++ b/.idea/misc.xml	(date 1689332656007)
@@ -1,135 +1,7 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
-  <component name="DesignSurface">
-    <option name="filePathToZoomLevelMap">
-      <map>
-        <entry key="..\:/Users/aparn/Documents/AlReem/app/src/main/res/drawable-v24/rectangular_border_payment.xml" value="0.1125" />
-        <entry key="..\:/Users/aparn/Documents/AlReem/app/src/main/res/drawable/button_grey_white_curve.xml" value="0.1" />
-        <entry key="..\:/Users/aparn/Documents/AlReem/app/src/main/res/drawable/button_grey_with_teal.xml" value="0.1" />
-        <entry key="..\:/Users/aparn/Documents/AlReem/app/src/main/res/drawable/curved_filled_layout.xml" value="0.1" />
-        <entry key="..\:/Users/aparn/Documents/AlReem/app/src/main/res/drawable/dialogcurvedrectangle.xml" value="0.1545" />
-        <entry key="..\:/Users/aparn/Documents/AlReem/app/src/main/res/drawable/dialogcurvedrectanglesplitbg.xml" value="0.1" />
-        <entry key="..\:/Users/aparn/Documents/AlReem/app/src/main/res/drawable/dialoguebottomcurve.xml" value="0.149" />
-        <entry key="..\:/Users/aparn/Documents/AlReem/app/src/main/res/drawable/dialoguetopcurve.xml" value="0.149" />
-        <entry key="..\:/Users/aparn/Documents/AlReem/app/src/main/res/drawable/edit_text_login.xml" value="0.149" />
-        <entry key="..\:/Users/aparn/Documents/AlReem/app/src/main/res/drawable/edittext_cursor.xml" value="0.1125" />
-        <entry key="..\:/Users/aparn/Documents/AlReem/app/src/main/res/drawable/edittext_greybg.xml" value="0.1735" />
-        <entry key="..\:/Users/aparn/Documents/AlReem/app/src/main/res/drawable/list_calendar_selector.xml" value="0.165" />
-        <entry key="..\:/Users/aparn/Documents/AlReem/app/src/main/res/drawable/rec_blue_border_white.xml" value="0.1" />
-        <entry key="..\:/Users/aparn/Documents/AlReem/app/src/main/res/drawable/rectangular_border_cca_week.xml" value="0.1125" />
-        <entry key="..\:/Users/aparn/Documents/AlReem/app/src/main/res/drawable/shape_circle_navy.xml" value="0.165" />
-        <entry key="..\:/Users/aparn/Documents/AlReem/app/src/main/res/drawable/shape_circle_red.xml" value="0.165" />
-        <entry key="..\:/Users/aparn/Documents/AlReem/app/src/main/res/drawable/spinner_bg.xml" value="0.1125" />
-        <entry key="..\:/Users/aparn/Documents/AlReem/app/src/main/res/drawable/survey_num_bg.xml" value="0.1" />
-        <entry key="..\:/Users/aparn/Documents/AlReem/app/src/main/res/layout/activity_audio_player_detail.xml" value="0.2632066728452271" />
-        <entry key="..\:/Users/aparn/Documents/AlReem/app/src/main/res/layout/activity_calendar_tutorial.xml" value="0.18931159420289856" />
-        <entry key="..\:/Users/aparn/Documents/AlReem/app/src/main/res/layout/activity_coming_up.xml" value="0.21784420289855072" />
-        <entry key="..\:/Users/aparn/Documents/AlReem/app/src/main/res/layout/activity_coming_up_detail.xml" value="0.18931159420289856" />
-        <entry key="..\:/Users/aparn/Documents/AlReem/app/src/main/res/layout/activity_gallery_images.xml" value="0.18931159420289856" />
-        <entry key="..\:/Users/aparn/Documents/AlReem/app/src/main/res/layout/activity_login.xml" value="0.24114583333333334" />
-        <entry key="..\:/Users/aparn/Documents/AlReem/app/src/main/res/layout/activity_main.xml" value="0.14945652173913043" />
-        <entry key="..\:/Users/aparn/Documents/AlReem/app/src/main/res/layout/activity_newsletter.xml" value="0.1875" />
-        <entry key="..\:/Users/aparn/Documents/AlReem/app/src/main/res/layout/activity_newsletter_list.xml" value="0.1875" />
-        <entry key="..\:/Users/aparn/Documents/AlReem/app/src/main/res/layout/activity_parents_essential_detail.xml" value="0.22644927536231885" />
-        <entry key="..\:/Users/aparn/Documents/AlReem/app/src/main/res/layout/activity_payment_category.xml" value="0.18931159420289856" />
-        <entry key="..\:/Users/aparn/Documents/AlReem/app/src/main/res/layout/activity_paymentdetails.xml" value="0.152" />
-        <entry key="..\:/Users/aparn/Documents/AlReem/app/src/main/res/layout/activity_pdf_viewer.xml" value="0.18931159420289856" />
-        <entry key="..\:/Users/aparn/Documents/AlReem/app/src/main/res/layout/activity_photo_viewpager.xml" value="0.18931159420289856" />
-        <entry key="..\:/Users/aparn/Documents/AlReem/app/src/main/res/layout/activity_photos_view_pager.xml" value="0.1286231884057971" />
-        <entry key="..\:/Users/aparn/Documents/AlReem/app/src/main/res/layout/activity_priamry.xml" value="0.1" />
-        <entry key="..\:/Users/aparn/Documents/AlReem/app/src/main/res/layout/activity_social_media.xml" value="0.1875" />
-        <entry key="..\:/Users/aparn/Documents/AlReem/app/src/main/res/layout/activity_splash.xml" value="0.2421875" />
-        <entry key="..\:/Users/aparn/Documents/AlReem/app/src/main/res/layout/activity_survey_list.xml" value="0.22644927536231885" />
-        <entry key="..\:/Users/aparn/Documents/AlReem/app/src/main/res/layout/activity_term_calendar.xml" value="0.18931159420289856" />
-        <entry key="..\:/Users/aparn/Documents/AlReem/app/src/main/res/layout/activity_terms_of_service.xml" value="0.18931159420289856" />
-        <entry key="..\:/Users/aparn/Documents/AlReem/app/src/main/res/layout/activity_text_message_detail.xml" value="0.136" />
-        <entry key="..\:/Users/aparn/Documents/AlReem/app/src/main/res/layout/activity_tutorial.xml" value="0.18931159420289856" />
-        <entry key="..\:/Users/aparn/Documents/AlReem/app/src/main/res/layout/activity_video_message.xml" value="0.18931159420289856" />
-        <entry key="..\:/Users/aparn/Documents/AlReem/app/src/main/res/layout/activity_web_link.xml" value="0.18931159420289856" />
-        <entry key="..\:/Users/aparn/Documents/AlReem/app/src/main/res/layout/activtiy_home.xml" value="0.2421875" />
-        <entry key="..\:/Users/aparn/Documents/AlReem/app/src/main/res/layout/adapter.xml" value="0.18931159420289856" />
-        <entry key="..\:/Users/aparn/Documents/AlReem/app/src/main/res/layout/adapter_absence_leave_recycelr.xml" value="0.1286231884057971" />
-        <entry key="..\:/Users/aparn/Documents/AlReem/app/src/main/res/layout/adapter_calendar_detail.xml" value="0.18931159420289856" />
-        <entry key="..\:/Users/aparn/Documents/AlReem/app/src/main/res/layout/adapter_contactus_list.xml" value="0.1" />
-        <entry key="..\:/Users/aparn/Documents/AlReem/app/src/main/res/layout/adapter_home.xml" value="0.28284671532846717" />
-        <entry key="..\:/Users/aparn/Documents/AlReem/app/src/main/res/layout/adapter_news_letter.xml" value="0.1875" />
-        <entry key="..\:/Users/aparn/Documents/AlReem/app/src/main/res/layout/adapter_notification_list.xml" value="0.1" />
-        <entry key="..\:/Users/aparn/Documents/AlReem/app/src/main/res/layout/adapter_order_history_item_details.xml" value="0.18931159420289856" />
-        <entry key="..\:/Users/aparn/Documents/AlReem/app/src/main/res/layout/adapter_parents_essential.xml" value="0.18931159420289856" />
-        <entry key="..\:/Users/aparn/Documents/AlReem/app/src/main/res/layout/adapter_paycattitle_list.xml" value="0.13632246376811594" />
-        <entry key="..\:/Users/aparn/Documents/AlReem/app/src/main/res/layout/adapter_paymentcatlist_recycler.xml" value="0.25263157894736843" />
-        <entry key="..\:/Users/aparn/Documents/AlReem/app/src/main/res/layout/adapter_primary_data.xml" value="0.10104166666666667" />
-        <entry key="..\:/Users/aparn/Documents/AlReem/app/src/main/res/layout/adapter_primary_list.xml" value="0.1" />
-        <entry key="..\:/Users/aparn/Documents/AlReem/app/src/main/res/layout/adapter_settings.xml" value="0.18931159420289856" />
-        <entry key="..\:/Users/aparn/Documents/AlReem/app/src/main/res/layout/adapter_student_list.xml" value="0.18931159420289856" />
-        <entry key="..\:/Users/aparn/Documents/AlReem/app/src/main/res/layout/adapter_survey_choice.xml" value="0.1" />
-        <entry key="..\:/Users/aparn/Documents/AlReem/app/src/main/res/layout/adapter_survey_list.xml" value="0.1" />
-        <entry key="..\:/Users/aparn/Documents/AlReem/app/src/main/res/layout/adapter_survey_questions.xml" value="0.22644927536231885" />
-        <entry key="..\:/Users/aparn/Documents/AlReem/app/src/main/res/layout/adapter_thumnail_image.xml" value="0.18931159420289856" />
-        <entry key="..\:/Users/aparn/Documents/AlReem/app/src/main/res/layout/basket_itemlist_adapter.xml" value="0.1286231884057971" />
-        <entry key="..\:/Users/aparn/Documents/AlReem/app/src/main/res/layout/calendar_canteen_popup.xml" value="0.18931159420289856" />
-        <entry key="..\:/Users/aparn/Documents/AlReem/app/src/main/res/layout/canteen_addorder.xml" value="0.10104166666666667" />
-        <entry key="..\:/Users/aparn/Documents/AlReem/app/src/main/res/layout/canteen_first_activity.xml" value="0.10104166666666667" />
-        <entry key="..\:/Users/aparn/Documents/AlReem/app/src/main/res/layout/canteen_fragment.xml" value="0.2759961127308066" />
-        <entry key="..\:/Users/aparn/Documents/AlReem/app/src/main/res/layout/canteen_information.xml" value="0.18931159420289856" />
-        <entry key="..\:/Users/aparn/Documents/AlReem/app/src/main/res/layout/canteen_myorder.xml" value="0.1286231884057971" />
-        <entry key="..\:/Users/aparn/Documents/AlReem/app/src/main/res/layout/canteen_myorderbasket.xml" value="0.18931159420289856" />
-        <entry key="..\:/Users/aparn/Documents/AlReem/app/src/main/res/layout/canteen_orderhistory.xml" value="0.18931159420289856" />
-        <entry key="..\:/Users/aparn/Documents/AlReem/app/src/main/res/layout/canteen_payment.xml" value="0.18931159420289856" />
-        <entry key="..\:/Users/aparn/Documents/AlReem/app/src/main/res/layout/canteen_paymenthistory.xml" value="0.1286231884057971" />
-        <entry key="..\:/Users/aparn/Documents/AlReem/app/src/main/res/layout/canteen_preorder.xml" value="0.18931159420289856" />
-        <entry key="..\:/Users/aparn/Documents/AlReem/app/src/main/res/layout/custom_progress_layout.xml" value="0.18931159420289856" />
-        <entry key="..\:/Users/aparn/Documents/AlReem/app/src/main/res/layout/custom_titlebar.xml" value="0.24114583333333334" />
-        <entry key="..\:/Users/aparn/Documents/AlReem/app/src/main/res/layout/date_adapter.xml" value="0.18931159420289856" />
-        <entry key="..\:/Users/aparn/Documents/AlReem/app/src/main/res/layout/dialog_change_password.xml" value="0.2482758620689655" />
-        <entry key="..\:/Users/aparn/Documents/AlReem/app/src/main/res/layout/dialog_common_error_alert.xml" value="0.1390625" />
-        <entry key="..\:/Users/aparn/Documents/AlReem/app/src/main/res/layout/dialog_delete_account.xml" value="0.18931159420289856" />
-        <entry key="..\:/Users/aparn/Documents/AlReem/app/src/main/res/layout/dialog_forget_password.xml" value="0.1141025641025641" />
-        <entry key="..\:/Users/aparn/Documents/AlReem/app/src/main/res/layout/dialog_internet_failure_alert.xml" value="0.1390625" />
-        <entry key="..\:/Users/aparn/Documents/AlReem/app/src/main/res/layout/dialog_logout.xml" value="0.21784420289855072" />
-        <entry key="..\:/Users/aparn/Documents/AlReem/app/src/main/res/layout/dialog_notice.xml" value="0.22644927536231885" />
-        <entry key="..\:/Users/aparn/Documents/AlReem/app/src/main/res/layout/dialog_ok_cancel.xml" value="0.1" />
-        <entry key="..\:/Users/aparn/Documents/AlReem/app/src/main/res/layout/dialog_question_answer_survey.xml" value="0.22644927536231885" />
-        <entry key="..\:/Users/aparn/Documents/AlReem/app/src/main/res/layout/dialog_send_email.xml" value="0.2" />
-        <entry key="..\:/Users/aparn/Documents/AlReem/app/src/main/res/layout/dialog_sign_up.xml" value="0.1390625" />
-        <entry key="..\:/Users/aparn/Documents/AlReem/app/src/main/res/layout/dialog_social_media.xml" value="0.1875" />
-        <entry key="..\:/Users/aparn/Documents/AlReem/app/src/main/res/layout/dialog_survey_close.xml" value="0.22644927536231885" />
-        <entry key="..\:/Users/aparn/Documents/AlReem/app/src/main/res/layout/dialog_survey_wlcome.xml" value="0.22644927536231885" />
-        <entry key="..\:/Users/aparn/Documents/AlReem/app/src/main/res/layout/dialog_updateversion.xml" value="0.18931159420289856" />
-        <entry key="..\:/Users/aparn/Documents/AlReem/app/src/main/res/layout/dialogue_calendar_detail.xml" value="0.10104166666666667" />
-        <entry key="..\:/Users/aparn/Documents/AlReem/app/src/main/res/layout/dialogue_student_list.xml" value="0.13632246376811594" />
-        <entry key="..\:/Users/aparn/Documents/AlReem/app/src/main/res/layout/fragment_about_us.xml" value="0.1" />
-        <entry key="..\:/Users/aparn/Documents/AlReem/app/src/main/res/layout/fragment_calendar.xml" value="0.1286231884057971" />
-        <entry key="..\:/Users/aparn/Documents/AlReem/app/src/main/res/layout/fragment_communications.xml" value="0.1413934426229508" />
-        <entry key="..\:/Users/aparn/Documents/AlReem/app/src/main/res/layout/fragment_contact_us.xml" value="0.18931159420289856" />
-        <entry key="..\:/Users/aparn/Documents/AlReem/app/src/main/res/layout/fragment_gallery.xml" value="0.1" />
-        <entry key="..\:/Users/aparn/Documents/AlReem/app/src/main/res/layout/fragment_home_screen.xml" value="0.2421875" />
-        <entry key="..\:/Users/aparn/Documents/AlReem/app/src/main/res/layout/fragment_notifications.xml" value="0.1" />
-        <entry key="..\:/Users/aparn/Documents/AlReem/app/src/main/res/layout/fragment_parents_essentials.xml" value="0.22644927536231885" />
-        <entry key="..\:/Users/aparn/Documents/AlReem/app/src/main/res/layout/fragment_payment.xml" value="0.18931159420289856" />
-        <entry key="..\:/Users/aparn/Documents/AlReem/app/src/main/res/layout/fragment_primary.xml" value="0.2421875" />
-        <entry key="..\:/Users/aparn/Documents/AlReem/app/src/main/res/layout/fragment_secondary.xml" value="0.24114583333333334" />
-        <entry key="..\:/Users/aparn/Documents/AlReem/app/src/main/res/layout/fragment_settings.xml" value="0.21784420289855072" />
-        <entry key="..\:/Users/aparn/Documents/AlReem/app/src/main/res/layout/frament_early_years.xml" value="0.1390625" />
-        <entry key="..\:/Users/aparn/Documents/AlReem/app/src/main/res/layout/header_bar_fragment.xml" value="0.1390625" />
-        <entry key="..\:/Users/aparn/Documents/AlReem/app/src/main/res/layout/itemcategory_adapter.xml" value="0.18931159420289856" />
-        <entry key="..\:/Users/aparn/Documents/AlReem/app/src/main/res/layout/itemsbasket_adapter.xml" value="0.18931159420289856" />
-        <entry key="..\:/Users/aparn/Documents/AlReem/app/src/main/res/layout/layout_activity_header.xml" value="0.1" />
-        <entry key="..\:/Users/aparn/Documents/AlReem/app/src/main/res/layout/layout_imagepager_adapter.xml" value="0.18931159420289856" />
-        <entry key="..\:/Users/aparn/Documents/AlReem/app/src/main/res/layout/layout_photo_imagepager_adapter.xml" value="0.18931159420289856" />
-        <entry key="..\:/Users/aparn/Documents/AlReem/app/src/main/res/layout/layout_updated.xml" value="0.18931159420289856" />
-        <entry key="..\:/Users/aparn/Documents/AlReem/app/src/main/res/layout/myorder_adapter.xml" value="0.18931159420289856" />
-        <entry key="..\:/Users/aparn/Documents/AlReem/app/src/main/res/layout/myorder_items_adapter.xml" value="0.10104166666666667" />
-        <entry key="..\:/Users/aparn/Documents/AlReem/app/src/main/res/layout/orderhistory_adapter.xml" value="0.18931159420289856" />
-        <entry key="..\:/Users/aparn/Documents/AlReem/app/src/main/res/layout/paymenthistory_adapter.xml" value="0.18931159420289856" />
-        <entry key="..\:/Users/aparn/Documents/AlReem/app/src/main/res/layout/preorder_itemlist_adapter.xml" value="0.1286231884057971" />
-        <entry key="..\:/Users/aparn/Documents/AlReem/app/src/main/res/layout/preview_activity.xml" value="0.18931159420289856" />
-        <entry key="..\:/Users/aparn/Documents/AlReem/app/src/main/res/layout/spinner_textview_item.xml" value="0.18931159420289856" />
-        <entry key="..\:/Users/aparn/Documents/AlReem/app/src/main/res/layout/swipe_homefragment.xml" value="0.18931159420289856" />
-      </map>
-    </option>
-  </component>
-  <component name="ProjectRootManager" version="2" languageLevel="JDK_11" project-jdk-name="1.8" project-jdk-type="JavaSDK">
+  <component name="ExternalStorageConfigurationManager" enabled="true" />
+  <component name="ProjectRootManager" version="2" languageLevel="JDK_18_PREVIEW" project-jdk-name="openjdk-18" project-jdk-type="JavaSDK">
     <output url="file://$PROJECT_DIR$/build/classes" />
   </component>
   <component name="ProjectType">
Index: app/src/main/res/layout/activity_paymentdetails.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\n<RelativeLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    android:orientation=\"vertical\"\n    android:background=\"@color/white\">\n    <include\n        android:id=\"@+id/includeRel\"\n        layout=\"@layout/layout_activity_header\"\n        />\n    <RelativeLayout\n        android:layout_height=\"match_parent\"\n        android:layout_width=\"match_parent\"\n        android:background=\"@color/white\"\n        android:layout_below=\"@+id/includeRel\">\n        <RelativeLayout\n            android:id=\"@+id/Header\"\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"wrap_content\"\n            android:layout_alignParentTop=\"true\" />\n        <WebView\n            android:id=\"@+id/paymentWeb\"\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"match_parent\"\n            android:visibility=\"gone\"\n            android:background=\"@color/white\"\n            android:layout_below=\"@+id/Header\"/>\n        <ProgressBar\n            android:id=\"@+id/progressDialogAdd\"\n            android:layout_width=\"40dp\"\n            android:layout_height=\"40dp\"\n            android:layout_centerInParent=\"true\"\n            android:indeterminateDrawable=\"@anim/customspinner\"\n            android:visibility=\"gone\"\n\n            />\n        <LinearLayout\n            android:id=\"@+id/mainLinear\"\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"match_parent\"\n            android:layout_below=\"@+id/Header\"\n            android:orientation=\"vertical\"\n            android:weightSum=\"100\"\n            android:visibility=\"visible\">\n            <ImageView\n                android:id=\"@+id/bannerImageViewPager\"\n                android:layout_width=\"match_parent\"\n                android:layout_height=\"0dp\"\n                android:layout_weight=\"30\"\n                android:background=\"@drawable/payment_default_banner\"/>\n            <RelativeLayout\n                android:layout_width=\"match_parent\"\n                android:layout_height=\"0dp\"\n                android:layout_marginLeft=\"10dp\"\n                android:layout_marginRight=\"10dp\"\n                android:layout_weight=\"70\">\n\n                <ScrollView\n                    android:id=\"@+id/scroll\"\n                    android:layout_width=\"match_parent\"\n                    android:layout_height=\"match_parent\"\n                    android:scrollbars=\"none\">\n\n                    <RelativeLayout\n                        android:layout_width=\"match_parent\"\n                        android:layout_height=\"wrap_content\"\n                        android:descendantFocusability=\"blocksDescendants\">\n\n                        <RelativeLayout\n                            android:id=\"@+id/title\"\n                            android:layout_width=\"match_parent\"\n                            android:layout_height=\"wrap_content\"\n                            android:layout_marginTop=\"5dp\"\n                            android:layout_marginBottom=\"8dp\"\n                            android:visibility=\"visible\">\n\n                            <com.nas.alreem.commonviews.CustomTextViewRegular\n                                android:id=\"@+id/descriptionTitle\"\n                                android:layout_width=\"match_parent\"\n                                android:layout_height=\"wrap_content\"\n                                android:layout_alignParentTop=\"true\"\n                                android:layout_marginTop=\"16dp\"\n                                android:layout_marginBottom=\"8dp\"\n                                android:gravity=\"center\"\n                                android:singleLine=\"true\"\n                                android:textColor=\"@color/black\"\n                                android:textSize=\"18sp\"\n                                android:visibility=\"visible\" />\n\n                            <com.nas.alreem.commonviews.CustomTextViewRegular\n                                android:id=\"@+id/description\"\n                                android:layout_width=\"match_parent\"\n                                android:layout_height=\"wrap_content\"\n                                android:layout_below=\"@+id/descriptionTitle\"\n                                android:layout_marginLeft=\"10dp\"\n                                android:layout_marginTop=\"15dp\"\n                                android:layout_marginRight=\"5dp\"\n                                android:textColor=\"@color/black\"\n                                android:textSize=\"16sp\"\n                                android:visibility=\"visible\" />\n\n                            <com.nas.alreem.commonviews.CustomTextViewRegular\n                                android:id=\"@+id/duedate\"\n                                android:layout_width=\"match_parent\"\n                                android:layout_height=\"wrap_content\"\n                                android:layout_below=\"@+id/description\"\n                                android:layout_marginLeft=\"10dp\"\n                                android:layout_marginTop=\"8dp\"\n                                android:layout_marginRight=\"5dp\"\n                                android:textColor=\"@color/black\"\n                                android:textSize=\"16sp\"\n                                android:visibility=\"gone\" />\n                        </RelativeLayout>\n\n                        <LinearLayout\n                            android:id=\"@+id/totalLinear\"\n                            android:layout_width=\"match_parent\"\n                            android:layout_height=\"50dp\"\n                            android:layout_below=\"@+id/title\"\n                            android:layout_marginLeft=\"10dp\"\n                            android:layout_marginTop=\"5dp\"\n                            android:layout_marginRight=\"5dp\"\n                            android:background=\"@drawable/rectangular_border_payment\"\n                            android:orientation=\"horizontal\"\n                            android:padding=\"5dp\"\n                            android:visibility=\"visible\"\n                            android:weightSum=\"90\">\n\n                            <com.nas.alreem.commonviews.CustomTextViewRegular\n                                android:layout_width=\"wrap_content\"\n                                android:layout_height=\"wrap_content\"\n                                android:layout_gravity=\"center_vertical\"\n                                android:layout_weight=\"30\"\n                                android:text=\"Total\"\n                                android:textAllCaps=\"true\"\n                                android:textColor=\"@color/black\"\n                                android:textSize=\"18dp\" />\n\n                            <LinearLayout\n                                android:layout_width=\"wrap_content\"\n                                android:layout_height=\"wrap_content\"\n                                android:layout_gravity=\"center\"\n                                android:layout_weight=\"30\"\n                                android:orientation=\"horizontal\">\n\n                                <com.nas.alreem.commonviews.CustomTextViewRegular\n                                    android:id=\"@+id/totalAmount\"\n                                    android:layout_width=\"wrap_content\"\n                                    android:layout_height=\"wrap_content\"\n                                    android:layout_gravity=\"center_vertical\"\n                                    android:gravity=\"center_vertical\"\n                                    android:textColor=\"@color/black\"\n                                    android:textSize=\"20dp\" />\n\n                                <com.nas.alreem.commonviews.CustomTextViewRegular\n                                    android:id=\"@+id/aedTxt\"\n                                    android:layout_width=\"wrap_content\"\n                                    android:layout_height=\"wrap_content\"\n                                    android:layout_gravity=\"bottom\"\n                                    android:layout_marginLeft=\"5dp\"\n                                    android:gravity=\"center\"\n                                    android:text=\"AED\"\n                                    android:textColor=\"@color/black\"\n                                    android:textSize=\"18dp\" />\n                            </LinearLayout>\n\n                            <ImageView\n                                android:id=\"@+id/paidImg\"\n                                android:layout_width=\"70dp\"\n                                android:layout_height=\"40dp\"\n                                android:layout_gravity=\"center_vertical\"\n                                android:layout_marginRight=\"5dp\"\n                                android:layout_weight=\"30\"\n                                android:gravity=\"center\"\n                                android:src=\"@drawable/paid_pay\"\n                                android:visibility=\"gone\" />\n\n                            <androidx.appcompat.widget.AppCompatButton\n                                android:id=\"@+id/payTotalButton\"\n                                android:layout_width=\"wrap_content\"\n                                android:layout_height=\"28dp\"\n                                android:layout_gravity=\"center_vertical\"\n                                android:layout_weight=\"30\"\n                                android:background=\"@color/rel_two\"\n                                android:gravity=\"center\"\n                                android:text=\"PAY\"\n                                android:textColor=\"@color/white\"\n                                android:visibility=\"visible\" />\n                        </LinearLayout>\n                    </RelativeLayout>\n                </ScrollView>\n            </RelativeLayout>\n            <LinearLayout\n                android:id=\"@+id/printLinear\"\n                android:layout_width=\"match_parent\"\n                android:layout_height=\"wrap_content\"\n                android:orientation=\"horizontal\"\n                android:gravity=\"right\"\n                android:weightSum=\"100\">\n                <LinearLayout\n                    android:layout_width=\"wrap_content\"\n                    android:layout_height=\"wrap_content\"\n                    android:layout_weight=\"30\">\n\n                </LinearLayout>\n                <LinearLayout\n                    android:id=\"@+id/emailLinear\"\n                    android:layout_width=\"wrap_content\"\n                    android:layout_height=\"wrap_content\"\n                    android:orientation=\"vertical\"\n                    android:layout_margin=\"5dp\"\n                    android:layout_weight=\"20\"\n                    android:visibility=\"gone\">\n                    <ImageView\n                        android:id=\"@+id/mail\"\n                        android:layout_width=\"wrap_content\"\n                        android:layout_height=\"wrap_content\"\n                        android:layout_gravity=\"center\"\n                        android:src=\"@drawable/email_payment\"/>\n                    <com.nas.alreem.commonviews.CustomTextViewRegular\n                        android:layout_width=\"match_parent\"\n                        android:layout_height=\"match_parent\"\n                        android:text=\"Email us\"\n                        android:textColor=\"@color/black\"\n                        android:gravity=\"center\"/>\n                </LinearLayout>\n                <LinearLayout\n                    android:id=\"@+id/printLinearClick\"\n                    android:layout_width=\"wrap_content\"\n                    android:layout_height=\"wrap_content\"\n                    android:orientation=\"vertical\"\n                    android:layout_margin=\"5dp\"\n                    android:layout_weight=\"15\">\n                    <ImageView\n                        android:id=\"@+id/download\"\n                        android:layout_gravity=\"center\"\n                        android:layout_width=\"wrap_content\"\n                        android:layout_height=\"wrap_content\"\n                        android:src=\"@drawable/print_payment\"\n                        />\n                    <com.nas.alreem.commonviews.CustomTextViewRegular\n                        android:layout_width=\"match_parent\"\n                        android:layout_height=\"match_parent\"\n                        android:text=\"Print\"\n                        android:textColor=\"@color/black\"\n                        android:gravity=\"center\"/>\n                </LinearLayout>\n                <LinearLayout\n                    android:id=\"@+id/shareLinear\"\n                    android:layout_width=\"wrap_content\"\n                    android:layout_height=\"wrap_content\"\n                    android:orientation=\"vertical\"\n                    android:layout_margin=\"5dp\"\n                    android:layout_weight=\"15\">\n                    <ImageView\n                        android:id=\"@+id/print\"\n                        android:layout_width=\"wrap_content\"\n                        android:layout_height=\"wrap_content\"\n                        android:layout_gravity=\"center\"\n                        android:src=\"@drawable/share_payment\"/>\n                    <com.nas.alreem.commonviews.CustomTextViewRegular\n                        android:layout_width=\"match_parent\"\n                        android:layout_height=\"match_parent\"\n                        android:textColor=\"@color/black\"\n                        android:text=\"Share\"\n                        android:gravity=\"center\"/>\n                </LinearLayout>\n                <LinearLayout\n                    android:id=\"@+id/downloadLinear\"\n                    android:layout_width=\"wrap_content\"\n                    android:layout_height=\"wrap_content\"\n                    android:orientation=\"vertical\"\n                    android:layout_margin=\"5dp\"\n                    android:layout_weight=\"20\">\n                    <ImageView\n                        android:id=\"@+id/share\"\n                        android:layout_width=\"wrap_content\"\n                        android:layout_height=\"wrap_content\"\n                        android:layout_gravity=\"center\"\n                        android:src=\"@drawable/download_payment\"/>\n                    <com.nas.alreem.commonviews.CustomTextViewRegular\n                        android:layout_width=\"match_parent\"\n                        android:layout_height=\"match_parent\"\n                        android:text=\"Download\"\n                        android:textColor=\"@color/black\"\n                        android:gravity=\"center\"/>\n                </LinearLayout>\n\n\n            </LinearLayout>\n        </LinearLayout>\n    </RelativeLayout>\n\n    </RelativeLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/activity_paymentdetails.xml b/app/src/main/res/layout/activity_paymentdetails.xml
--- a/app/src/main/res/layout/activity_paymentdetails.xml	(revision b2ad66f8612edd03349ffa4aaee582fd0005cdb4)
+++ b/app/src/main/res/layout/activity_paymentdetails.xml	(date 1689331124468)
@@ -34,20 +34,23 @@
             android:visibility="gone"
 
             />
+
         <LinearLayout
             android:id="@+id/mainLinear"
             android:layout_width="match_parent"
             android:layout_height="match_parent"
             android:layout_below="@+id/Header"
             android:orientation="vertical"
-            android:weightSum="100"
-            android:visibility="visible">
+            android:visibility="visible"
+            android:weightSum="100">
+
             <ImageView
                 android:id="@+id/bannerImageViewPager"
                 android:layout_width="match_parent"
                 android:layout_height="0dp"
                 android:layout_weight="30"
-                android:background="@drawable/payment_default_banner"/>
+                android:background="@drawable/payment_default_banner" />
+
             <RelativeLayout
                 android:layout_width="match_parent"
                 android:layout_height="0dp"
@@ -177,8 +180,8 @@
 
                             <androidx.appcompat.widget.AppCompatButton
                                 android:id="@+id/payTotalButton"
-                                android:layout_width="wrap_content"
-                                android:layout_height="28dp"
+                                android:layout_width="20dp"
+                                android:layout_height="match_parent"
                                 android:layout_gravity="center_vertical"
                                 android:layout_weight="30"
                                 android:background="@color/rel_two"
@@ -190,100 +193,113 @@
                     </RelativeLayout>
                 </ScrollView>
             </RelativeLayout>
+
             <LinearLayout
                 android:id="@+id/printLinear"
                 android:layout_width="match_parent"
                 android:layout_height="wrap_content"
-                android:orientation="horizontal"
                 android:gravity="right"
+                android:orientation="horizontal"
                 android:weightSum="100">
+
                 <LinearLayout
                     android:layout_width="wrap_content"
                     android:layout_height="wrap_content"
                     android:layout_weight="30">
 
                 </LinearLayout>
+
                 <LinearLayout
                     android:id="@+id/emailLinear"
                     android:layout_width="wrap_content"
                     android:layout_height="wrap_content"
-                    android:orientation="vertical"
                     android:layout_margin="5dp"
                     android:layout_weight="20"
+                    android:orientation="vertical"
                     android:visibility="gone">
+
                     <ImageView
                         android:id="@+id/mail"
                         android:layout_width="wrap_content"
                         android:layout_height="wrap_content"
                         android:layout_gravity="center"
-                        android:src="@drawable/email_payment"/>
+                        android:src="@drawable/email_payment" />
+
                     <com.nas.alreem.commonviews.CustomTextViewRegular
                         android:layout_width="match_parent"
                         android:layout_height="match_parent"
+                        android:gravity="center"
                         android:text="Email us"
-                        android:textColor="@color/black"
-                        android:gravity="center"/>
+                        android:textColor="@color/black" />
                 </LinearLayout>
+
                 <LinearLayout
                     android:id="@+id/printLinearClick"
                     android:layout_width="wrap_content"
                     android:layout_height="wrap_content"
-                    android:orientation="vertical"
                     android:layout_margin="5dp"
-                    android:layout_weight="15">
+                    android:layout_weight="15"
+                    android:orientation="vertical">
+
                     <ImageView
                         android:id="@+id/download"
-                        android:layout_gravity="center"
                         android:layout_width="wrap_content"
                         android:layout_height="wrap_content"
-                        android:src="@drawable/print_payment"
-                        />
+                        android:layout_gravity="center"
+                        android:src="@drawable/print_payment" />
+
                     <com.nas.alreem.commonviews.CustomTextViewRegular
                         android:layout_width="match_parent"
                         android:layout_height="match_parent"
+                        android:gravity="center"
                         android:text="Print"
-                        android:textColor="@color/black"
-                        android:gravity="center"/>
+                        android:textColor="@color/black" />
                 </LinearLayout>
+
                 <LinearLayout
                     android:id="@+id/shareLinear"
                     android:layout_width="wrap_content"
                     android:layout_height="wrap_content"
-                    android:orientation="vertical"
                     android:layout_margin="5dp"
-                    android:layout_weight="15">
+                    android:layout_weight="15"
+                    android:orientation="vertical">
+
                     <ImageView
                         android:id="@+id/print"
                         android:layout_width="wrap_content"
                         android:layout_height="wrap_content"
                         android:layout_gravity="center"
-                        android:src="@drawable/share_payment"/>
+                        android:src="@drawable/share_payment" />
+
                     <com.nas.alreem.commonviews.CustomTextViewRegular
                         android:layout_width="match_parent"
                         android:layout_height="match_parent"
-                        android:textColor="@color/black"
+                        android:gravity="center"
                         android:text="Share"
-                        android:gravity="center"/>
+                        android:textColor="@color/black" />
                 </LinearLayout>
+
                 <LinearLayout
                     android:id="@+id/downloadLinear"
                     android:layout_width="wrap_content"
                     android:layout_height="wrap_content"
-                    android:orientation="vertical"
                     android:layout_margin="5dp"
-                    android:layout_weight="20">
+                    android:layout_weight="20"
+                    android:orientation="vertical">
+
                     <ImageView
                         android:id="@+id/share"
                         android:layout_width="wrap_content"
                         android:layout_height="wrap_content"
                         android:layout_gravity="center"
-                        android:src="@drawable/download_payment"/>
+                        android:src="@drawable/download_payment" />
+
                     <com.nas.alreem.commonviews.CustomTextViewRegular
                         android:layout_width="match_parent"
                         android:layout_height="match_parent"
+                        android:gravity="center"
                         android:text="Download"
-                        android:textColor="@color/black"
-                        android:gravity="center"/>
+                        android:textColor="@color/black" />
                 </LinearLayout>
 
 
@@ -291,4 +307,4 @@
         </LinearLayout>
     </RelativeLayout>
 
-    </RelativeLayout>
\ No newline at end of file
+</RelativeLayout>
\ No newline at end of file
Index: app/src/main/java/com/nas/alreem/activity/absence/EarlyPickupDetailActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/nas/alreem/activity/absence/EarlyPickupDetailActivity.kt b/app/src/main/java/com/nas/alreem/activity/absence/EarlyPickupDetailActivity.kt
new file mode 100644
--- /dev/null	(date 1688462136000)
+++ b/app/src/main/java/com/nas/alreem/activity/absence/EarlyPickupDetailActivity.kt	(date 1688462136000)
@@ -0,0 +1,123 @@
+package com.nas.alreem.activity.absence
+
+import android.content.Context
+import android.content.Intent
+import android.os.Bundle
+import android.view.View
+import android.widget.ImageView
+import android.widget.LinearLayout
+import android.widget.RelativeLayout
+import android.widget.ScrollView
+import android.widget.TextView
+import androidx.appcompat.app.AppCompatActivity
+import com.nas.alreem.R
+import com.nas.alreem.activity.home.HomeActivity
+import com.nas.alreem.constants.ConstantWords
+import java.text.DateFormat
+import java.text.SimpleDateFormat
+import java.util.Date
+
+class EarlyPickupDetailActivity: AppCompatActivity() {
+    lateinit var mContext: Context
+    lateinit var backRelative: RelativeLayout
+    lateinit var heading: TextView
+    lateinit var logoClickImgView: ImageView
+    lateinit var stud_name:TextView
+    lateinit var stud_class:TextView
+    lateinit var dateofPickup:TextView
+    lateinit var timeofPickup:TextView
+    lateinit var pickup_name:TextView
+    lateinit var reasonTxt:TextView
+    lateinit var reasonRejectionTxt:TextView
+    lateinit var reasonRejectionLinear: LinearLayout
+    lateinit var reasonRejectionScroll: ScrollView
+    lateinit var status_txt:TextView
+    var day_pickup:String=""
+    var time_pickup:String=""
+    var studname_pickup:String=""
+    var studcls_pickup:String=""
+    var pickby_pickup:String=""
+    var reason_pickup:String=""
+    var status_pickup:String=""
+    var reason_for_rejection:String=""
+    override fun onCreate(savedInstanceState: Bundle?) {
+        super.onCreate(savedInstanceState)
+        setContentView(R.layout.activity_early_pickup_detail)
+
+        mContext=this
+        initfn()
+
+    }
+    private fun initfn() {
+        heading=findViewById(R.id.heading)
+        heading.text= ConstantWords.earlypickup
+        backRelative=findViewById(R.id.backRelative)
+        logoClickImgView=findViewById(R.id.logoClickImgView)
+        timeofPickup=findViewById(R.id.leaveDateToValue)
+        day_pickup=intent.getStringExtra("date").toString()
+        val inputFormat: DateFormat = SimpleDateFormat("yyyy-MM-dd")
+        val outputFormat: DateFormat = SimpleDateFormat("dd MMM yyyy")
+        val inputDateStr = day_pickup
+        val date: Date = inputFormat.parse(inputDateStr)
+        val outputDateStr: String = outputFormat.format(date)
+
+        time_pickup=intent.getStringExtra("time").toString()
+        val inFormat: DateFormat = SimpleDateFormat("hh:mm:ss")
+        val outFormat: DateFormat = SimpleDateFormat("hh:mm aa")
+        val inputTimeStr = time_pickup
+        val time: Date = inFormat.parse(inputTimeStr)
+        val outputTimeStr: String = outFormat.format(time)
+        timeofPickup.text = outputTimeStr
+
+
+        studname_pickup=intent.getStringExtra("studentName").toString()
+        studcls_pickup=intent.getStringExtra("studentClass").toString()
+        pickby_pickup=intent.getStringExtra("pickupby").toString()
+        reason_pickup=intent.getStringExtra("reason").toString()
+        reason_for_rejection=intent.getStringExtra("reason_for_rejection").toString()
+        status_pickup= intent.getIntExtra("status",0).toString()
+        stud_name=findViewById(R.id.stnameValue)
+        stud_name.text = studname_pickup
+        status_txt=findViewById(R.id.status)
+        stud_class=findViewById(R.id.studClassValue)
+        stud_class.text = studcls_pickup
+        dateofPickup=findViewById(R.id.leaveDateFromValue)
+        dateofPickup.text = outputDateStr
+        reasonRejectionLinear=findViewById(R.id.reasonRejectlayout)
+        reasonRejectionScroll=findViewById(R.id.reasonRejectionScroll)
+        pickup_name=findViewById(R.id.pickupbyName)
+        pickup_name.text = pickby_pickup
+        reasonTxt=findViewById(R.id.reasonValue)
+        reasonTxt.text = reason_pickup
+        reasonRejectionTxt=findViewById(R.id.reasonRejectValue)
+
+        if (status_pickup.equals("1")){
+            status_txt.text = "PENDING"
+            reasonRejectionLinear.visibility= View.GONE
+            reasonRejectionScroll.visibility=View.GONE
+        }
+        else if(status_pickup.equals("2")){
+            status_txt.text = "APPROVED"
+            reasonRejectionLinear.visibility= View.GONE
+            reasonRejectionScroll.visibility=View.GONE
+        }
+        else{
+            status_txt.text = "REJECTED"
+            reasonRejectionLinear.visibility= View.VISIBLE
+            reasonRejectionScroll.visibility=View.VISIBLE
+            reasonRejectionTxt.text=reason_for_rejection
+
+        }
+
+
+        backRelative.setOnClickListener(View.OnClickListener {
+            finish()
+        })
+        heading.text= ConstantWords.earlypickup
+        logoClickImgView.setOnClickListener(View.OnClickListener {
+            val intent = Intent(mContext, HomeActivity::class.java)
+            intent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP)
+            startActivity(intent)
+        })
+    }
+}
\ No newline at end of file
Index: app/src/main/java/com/nas/alreem/activity/parent_meetings/adapter/ParentsEveningRoomListAdapter.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/nas/alreem/activity/parent_meetings/adapter/ParentsEveningRoomListAdapter.kt b/app/src/main/java/com/nas/alreem/activity/parent_meetings/adapter/ParentsEveningRoomListAdapter.kt
new file mode 100644
--- /dev/null	(date 1687849476000)
+++ b/app/src/main/java/com/nas/alreem/activity/parent_meetings/adapter/ParentsEveningRoomListAdapter.kt	(date 1687849476000)
@@ -0,0 +1,61 @@
+package com.nas.alreem.activity.parent_meetings.adapter
+
+import android.content.Context
+import android.util.Log
+import android.view.LayoutInflater
+import android.view.View
+import android.view.ViewGroup
+import android.widget.TextView
+import androidx.annotation.NonNull
+import androidx.appcompat.app.AppCompatActivity
+import androidx.recyclerview.widget.RecyclerView
+import com.nas.alreem.R
+import com.nas.alreem.activity.parent_meetings.model.PtaTimeSlotList
+import java.text.DateFormat
+import java.text.SimpleDateFormat
+import java.util.ArrayList
+import java.util.Date
+
+internal class ParentsEveningRoomListAdapter(var context: Context,var timeSlotList: ArrayList<PtaTimeSlotList>) :
+    RecyclerView.Adapter<ParentsEveningRoomListAdapter.MyViewHolder>() {
+    internal inner class MyViewHolder(view: View) : RecyclerView.ViewHolder(view) {
+        var time: TextView =view.findViewById(R.id.listTxtTitle)
+        var room: TextView =view.findViewById(R.id.listTxtClass)
+
+    }
+    @NonNull
+    override fun onCreateViewHolder(parent: ViewGroup, viewType: Int): MyViewHolder {
+        val itemView = LayoutInflater.from(parent.context)
+            .inflate(R.layout.adapter_roomlist, parent, false)
+        return MyViewHolder(itemView)
+    }
+    override fun onBindViewHolder(holder: MyViewHolder, position: Int) {
+        Log.e("ad","true")
+
+        var from_time=timeSlotList[position].start_time
+        Log.e("ftime",timeSlotList[position].start_time)
+        val inputFormat: DateFormat = SimpleDateFormat("hh:mm:ss")
+        val outputFormat: DateFormat = SimpleDateFormat("hh:mm aa")
+        val inputDateStr = from_time
+        val date: Date = inputFormat.parse(inputDateStr)
+        val formt_fromtime: String = outputFormat.format(date)
+        Log.e("dt",formt_fromtime)
+        var to_time=timeSlotList[position].end_time
+        val inputFormat2: DateFormat = SimpleDateFormat("hh:mm:ss")
+        val outputFormat2: DateFormat = SimpleDateFormat("hh:mm aa")
+        val inputDateStr2 = from_time
+        val date2: Date = inputFormat2.parse(inputDateStr2)
+        val formt_totime: String = outputFormat2.format(date2)
+        Log.e("dt",formt_totime)
+
+        var room=timeSlotList[position].room
+        holder.time.text = from_time + "-" + to_time
+        holder.room.text = "Room : "+ room
+
+    }
+    override fun getItemCount(): Int {
+
+        return timeSlotList.size
+
+    }
+}
\ No newline at end of file
Index: app/src/main/java/com/nas/alreem/activity/parent_meetings/model/PtaInsertModel.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/nas/alreem/activity/parent_meetings/model/PtaInsertModel.kt b/app/src/main/java/com/nas/alreem/activity/parent_meetings/model/PtaInsertModel.kt
new file mode 100644
--- /dev/null	(date 1688999116000)
+++ b/app/src/main/java/com/nas/alreem/activity/parent_meetings/model/PtaInsertModel.kt	(date 1688999116000)
@@ -0,0 +1,7 @@
+package com.nas.alreem.activity.parent_meetings.model
+
+import com.google.gson.annotations.SerializedName
+
+class PtaInsertModel(
+    @SerializedName("status")var status:Int
+)
\ No newline at end of file
Index: app/src/main/java/com/nas/alreem/constants/PreferenceManager.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.nas.alreem.constants\n\nimport android.content.Context\nimport com.nas.alreem.R\n\nclass PreferenceManager {\n\n    companion object{\n\n        private val PREFSNAME = \"ALREEM\"\n\n\n        fun setaccesstoken(context: Context, id: String?) {\n            val prefs = context.getSharedPreferences(\n                PREFSNAME, Context.MODE_PRIVATE\n            )\n            val editor = prefs.edit()\n            editor.putString(\"access_token\", id)\n            editor.apply()\n        }\n\n        fun getaccesstoken(context: Context): String? {\n            val prefs = context.getSharedPreferences(\n                PREFSNAME,\n                Context.MODE_PRIVATE\n            )\n            return prefs.getString(\"access_token\", \"\")\n        }\n        fun setFirtTime(context: Context, id: String?) {\n            val prefs = context.getSharedPreferences(\n                PREFSNAME, Context.MODE_PRIVATE\n            )\n            val editor = prefs.edit()\n            editor.putString(\"first\", id)\n            editor.apply()\n        }\n\n        fun getFirstTime(context: Context): String? {\n            val prefs = context.getSharedPreferences(\n                PREFSNAME,\n                Context.MODE_PRIVATE\n            )\n            return prefs.getString(\"first\", \"\")\n        }\n        fun setNoticeFirtTime(context: Context, id: String?) {\n            val prefs = context.getSharedPreferences(\n                PREFSNAME, Context.MODE_PRIVATE\n            )\n            val editor = prefs.edit()\n            editor.putString(\"notice_first\", id)\n            editor.apply()\n        }\n\n        fun getNoticeFirstTime(context: Context): String? {\n            val prefs = context.getSharedPreferences(\n                PREFSNAME,\n                Context.MODE_PRIVATE\n            )\n            return prefs.getString(\"notice_first\", \"\")\n        }\n        fun setEmailId(context: Context, id: String?) {\n            val prefs = context.getSharedPreferences(\n                PREFSNAME, Context.MODE_PRIVATE\n            )\n            val editor = prefs.edit()\n            editor.putString(\"email_id\", id)\n            editor.apply()\n        }\n\n        fun getEmailId(context: Context): String? {\n            val prefs = context.getSharedPreferences(\n                PREFSNAME,\n                Context.MODE_PRIVATE\n            )\n            return prefs.getString(\"email_id\", \"\")\n        }\n\n        /*SET STUDENT_ID*/\n        fun setStudentID(context: Context, id: String?) {\n            val prefs = context.getSharedPreferences(\n                PREFSNAME, Context.MODE_PRIVATE\n            )\n            val editor = prefs.edit()\n            editor.putString(\"student_id\", id)\n            editor.apply()\n        }\n\n        /*GET STUDENT_ID*/\n        fun getStudentID(context: Context): String? {\n            val prefs = context.getSharedPreferences(\n                PREFSNAME,\n                Context.MODE_PRIVATE\n            )\n            return prefs.getString(\"student_id\", \"\")\n        }\n        /*SET STUDENT_NAME*/\n        fun setStudentName(context: Context, name: String?) {\n            val prefs = context.getSharedPreferences(\n                PREFSNAME, Context.MODE_PRIVATE\n            )\n            val editor = prefs.edit()\n            editor.putString(\"student_name\", name)\n            editor.apply()\n        }\n\n        /*GET STUDENT_NAME*/\n        fun getStudentName(context: Context): String? {\n            val prefs = context.getSharedPreferences(\n                PREFSNAME,\n                Context.MODE_PRIVATE\n            )\n            return prefs.getString(\"student_name\", \"\")\n        }\n        /*SET STUDENT_PHOTO*/\n        fun setStudentPhoto(context: Context, photo: String?) {\n            val prefs = context.getSharedPreferences(\n                PREFSNAME, Context.MODE_PRIVATE\n            )\n            val editor = prefs.edit()\n            editor.putString(\"student_img\", photo)\n            editor.apply()\n        }\n\n        /*GET STUDENT_NAME*/\n        fun getStudentPhoto(context: Context): String? {\n            val prefs = context.getSharedPreferences(\n                PREFSNAME,\n                Context.MODE_PRIVATE\n            )\n            return prefs.getString(\"student_img\", \"\")\n        }\n        /*SET STUDENT_PHOTO*/\n        fun setStudentClass(context: Context, studClass: String?) {\n            val prefs = context.getSharedPreferences(\n                PREFSNAME, Context.MODE_PRIVATE\n            )\n            val editor = prefs.edit()\n            editor.putString(\"student_class\", studClass)\n            editor.apply()\n        }\n\n        /*GET STUDENT_NAME*/\n        fun getStudentClass(context: Context): String? {\n            val prefs = context.getSharedPreferences(\n                PREFSNAME,\n                Context.MODE_PRIVATE\n            )\n            return prefs.getString(\"student_class\", \"\")\n        }\n        fun setTrnNo(context: Context, trn_no: String?) {\n            val prefs = context.getSharedPreferences(\n                PREFSNAME, Context.MODE_PRIVATE\n            )\n            val editor = prefs.edit()\n            editor.putString(\"trn_no\", trn_no)\n            editor.apply()\n        }\n\n        fun getTrnNo(context: Context): String? {\n            val prefs = context.getSharedPreferences(\n                PREFSNAME,\n                Context.MODE_PRIVATE\n            )\n            return prefs.getString(\"trn_no\", \"\")\n        }\n        fun setTrnPayment(context: Context, trn_pay: String?) {\n            val prefs = context.getSharedPreferences(\n                PREFSNAME, Context.MODE_PRIVATE\n            )\n            val editor = prefs.edit()\n            editor.putString(\"trn_pay\", trn_pay)\n            editor.apply()\n        }\n\n        fun getTrnPayment(context: Context): String? {\n            val prefs = context.getSharedPreferences(\n                PREFSNAME,\n                Context.MODE_PRIVATE\n            )\n            return prefs.getString(\"trn_pay\", \"\")\n        }\n\n\n        fun setTopUpLimit(context: Context, id: String?) {\n            val prefs = context.getSharedPreferences(\n                PREFSNAME, Context.MODE_PRIVATE\n            )\n            val editor = prefs.edit()\n            editor.putString(\"top_up_limit\", id)\n            editor.apply()\n        }\n\n\n        /**\n         * GET ACCESS TOKEN\n         */\n\n        fun getTopUpLimit(context: Context): String? {\n            val prefs = context.getSharedPreferences(\n                PREFSNAME,\n                Context.MODE_PRIVATE\n            )\n            return prefs.getString(\"top_up_limit\", \"\")\n        }\n\n        fun setUserEmail(context: Context, email: String?) {\n            val prefs = context.getSharedPreferences(\n                PREFSNAME, Context.MODE_PRIVATE\n            )\n            val editor = prefs.edit()\n            editor.putString(\"email\", email)\n            editor.apply()\n        }\n\n\n        fun getUserEmail(context: Context): String? {\n            val prefs = context.getSharedPreferences(\n                PREFSNAME,\n                Context.MODE_PRIVATE\n            )\n            return prefs.getString(\"email\", \"\")\n        }\n        fun setUserCode(context: Context, id: String?) {\n            val prefs = context.getSharedPreferences(\n                PREFSNAME, Context.MODE_PRIVATE\n            )\n            val editor = prefs.edit()\n            editor.putString(\"user_code\", id)\n            editor.apply()\n        }\n\n        fun getUserCode(context: Context): String? {\n            val prefs = context.getSharedPreferences(\n                PREFSNAME,\n                Context.MODE_PRIVATE\n            )\n            return prefs.getString(\"user_code\", \"\")\n        }\n\n\n        /**\n         * SET BUTTON ONE TAB ID\n         */\n\n        fun setbuttononetabid(context: Context, id: String?) {\n            val prefs = context.getSharedPreferences(\n                PREFSNAME, Context.MODE_PRIVATE\n            )\n            val editor = prefs.edit()\n            editor.putString(\"button_onetabid\", id)\n            editor.apply()\n        }\n\n        /**\n         * GET BUTTON ONE TAB ID\n         */\n\n        fun getbuttononetabid(context: Context): String? {\n            val prefs = context.getSharedPreferences(\n                PREFSNAME,\n                Context.MODE_PRIVATE\n            )\n            return prefs.getString(\"button_onetabid\", \"1\")\n        }\n\n        fun setbuttontwotabid(context: Context, id: String?) {\n            val prefs = context.getSharedPreferences(\n                PREFSNAME, Context.MODE_PRIVATE\n            )\n            val editor = prefs.edit()\n            editor.putString(\"button_twotabid\", id)\n            editor.apply()\n        }\n\n        /**\n         * GET BUTTON TWO TAB ID\n         */\n\n        fun getbuttontwotabid(context: Context): String? {\n            val prefs = context.getSharedPreferences(\n                PREFSNAME,\n                Context.MODE_PRIVATE\n            )\n            return prefs.getString(\"button_twotabid\", \"2\")\n        }\n\n        fun setbuttonthreetabid(context: Context, id: String?) {\n            val prefs = context.getSharedPreferences(\n                PREFSNAME, Context.MODE_PRIVATE\n            )\n            val editor = prefs.edit()\n            editor.putString(\"button_threetabid\", id)\n            editor.apply()\n        }\n\n        /**\n         * GET BUTTON THREE TAB ID\n         */\n\n        fun getbuttonthreetabid(context: Context): String? {\n            val prefs = context.getSharedPreferences(\n                PREFSNAME,\n                Context.MODE_PRIVATE\n            )\n            return prefs.getString(\"button_threetabid\", \"3\")\n        }\n\n        fun setbuttonfourtabid(context: Context, id: String?) {\n            val prefs = context.getSharedPreferences(\n                PREFSNAME, Context.MODE_PRIVATE\n            )\n            val editor = prefs.edit()\n            editor.putString(\"button_fourtabid\", id)\n            editor.apply()\n        }\n\n        /**\n         * GET BUTTON FOUR TAB ID\n         */\n\n        fun getbuttonfourtabid(context: Context): String? {\n            val prefs = context.getSharedPreferences(\n                PREFSNAME,\n                Context.MODE_PRIVATE\n            )\n            return prefs.getString(\"button_fourtabid\", \"4\")\n        }\n\n        fun setbuttonfivetabid(context: Context, id: String?) {\n            val prefs = context.getSharedPreferences(\n                PREFSNAME, Context.MODE_PRIVATE\n            )\n            val editor = prefs.edit()\n            editor.putString(\"button_fivetabid\", id)\n            editor.apply()\n        }\n\n        /**\n         * GET BUTTON FIVE TAB ID\n         */\n\n        fun getbuttonfivetabid(context: Context): String? {\n            val prefs = context.getSharedPreferences(\n                PREFSNAME,\n                Context.MODE_PRIVATE\n            )\n            return prefs.getString(\"button_fivetabid\", \"5\")\n        }\n\n        fun setbuttonsixtabid(context: Context, id: String?) {\n            val prefs = context.getSharedPreferences(\n                PREFSNAME, Context.MODE_PRIVATE\n            )\n            val editor = prefs.edit()\n            editor.putString(\"button_sixtabid\", id)\n            editor.apply()\n        }\n\n        /**\n         * GET BUTTON SIX TAB ID\n         */\n\n        fun getbuttonsixtabid(context: Context): String? {\n            val prefs = context.getSharedPreferences(\n                PREFSNAME,\n                Context.MODE_PRIVATE\n            )\n            return prefs.getString(\"button_sixtabid\", \"6\")\n        }\n\n        fun setbuttonseventabid(context: Context, id: String?) {\n            val prefs = context.getSharedPreferences(\n                PREFSNAME, Context.MODE_PRIVATE\n            )\n            val editor = prefs.edit()\n            editor.putString(\"button_seventabid\", id)\n            editor.apply()\n        }\n\n        /**\n         * GET BUTTON SEVEN TAB ID\n         */\n\n        fun getbuttonseventabid(context: Context): String? {\n            val prefs = context.getSharedPreferences(\n                PREFSNAME,\n                Context.MODE_PRIVATE\n            )\n            return prefs.getString(\"button_seventabid\", \"7\")\n        }\n\n        fun setbuttoneighttabid(context: Context, id: String?) {\n            val prefs = context.getSharedPreferences(\n                PREFSNAME, Context.MODE_PRIVATE\n            )\n            val editor = prefs.edit()\n            editor.putString(\"button_eighttabid\", id)\n            editor.apply()\n        }\n\n        /**\n         * GET BUTTON EIGHT TAB ID\n         */\n\n        fun getbuttoneighttabid(context: Context): String? {\n            val prefs = context.getSharedPreferences(\n                PREFSNAME,\n                Context.MODE_PRIVATE\n            )\n            return prefs.getString(\"button_eighttabid\", \"8\")\n        }\n\n        fun setbuttonninetabid(context: Context, id: String?) {\n            val prefs = context.getSharedPreferences(\n                PREFSNAME, Context.MODE_PRIVATE\n            )\n            val editor = prefs.edit()\n            editor.putString(\"button_ninetabid\", id)\n            editor.apply()\n        }\n\n        /**\n         * GET BUTTON NINE TAB ID\n         */\n\n        fun getbuttonninetabid(context: Context): String? {\n            val prefs = context.getSharedPreferences(\n                PREFSNAME,\n                Context.MODE_PRIVATE\n            )\n            return prefs.getString(\"button_ninetabid\", \"9\")\n        }\n\n\n        /**\n         * SET BUTTON ONE TEXT IMAGE\n         */\n\n        fun setbuttononetextimage(context: Context, id: String?) {\n            val prefs = context.getSharedPreferences(\n                PREFSNAME, Context.MODE_PRIVATE\n            )\n            val editor = prefs.edit()\n            editor.putString(\"button_onetextimage\", id)\n            editor.apply()\n        }\n\n        /**\n         * GET BUTTON ONE TEXT IMAGE\n         */\n\n        fun getbuttononetextimage(context: Context): String? {\n            val prefs = context.getSharedPreferences(\n                PREFSNAME,\n                Context.MODE_PRIVATE\n            )\n            return prefs.getString(\"button_onetextimage\", \"1\")\n        }\n\n        fun setbuttontwotextimage(context: Context, id: String?) {\n            val prefs = context.getSharedPreferences(\n                PREFSNAME, Context.MODE_PRIVATE\n            )\n            val editor = prefs.edit()\n            editor.putString(\"button_twotextimage\", id)\n            editor.apply()\n        }\n\n        /**\n         * GET BUTTON TWO TEXT IMAGE\n         */\n\n        fun getbuttontwotextimage(context: Context): String? {\n            val prefs = context.getSharedPreferences(\n                PREFSNAME,\n                Context.MODE_PRIVATE\n            )\n            return prefs.getString(\"button_twotextimage\", \"2\")\n        }\n\n        fun setbuttonthreetextimage(context: Context, id: String?) {\n            val prefs = context.getSharedPreferences(\n                PREFSNAME, Context.MODE_PRIVATE\n            )\n            val editor = prefs.edit()\n            editor.putString(\"button_threetextimage\", id)\n            editor.apply()\n        }\n\n        /**\n         * GET BUTTON THREE TEXT IMAGE\n         */\n\n        fun getbuttonthreetextimage(context: Context): String? {\n            val prefs = context.getSharedPreferences(\n                PREFSNAME,\n                Context.MODE_PRIVATE\n            )\n            return prefs.getString(\"button_threetextimage\", \"3\")\n        }\n\n        fun setbuttonfourtextimage(context: Context, id: String?) {\n            val prefs = context.getSharedPreferences(\n                PREFSNAME, Context.MODE_PRIVATE\n            )\n            val editor = prefs.edit()\n            editor.putString(\"button_fourtextimage\", id)\n            editor.apply()\n        }\n\n        /**\n         * GET BUTTON FOUR TEXT IMAGE\n         */\n\n        fun getbuttonfourtextimage(context: Context): String? {\n            val prefs = context.getSharedPreferences(\n                PREFSNAME,\n                Context.MODE_PRIVATE\n            )\n            return prefs.getString(\"button_fourtextimage\", \"4\")\n        }\n\n        fun setbuttonfivetextimage(context: Context, id: String?) {\n            val prefs = context.getSharedPreferences(\n                PREFSNAME, Context.MODE_PRIVATE\n            )\n            val editor = prefs.edit()\n            editor.putString(\"button_fivetextimage\", id)\n            editor.apply()\n        }\n\n        /**\n         * GET BUTTON FIVE TEXT IMAGE\n         */\n\n        fun getbuttonfivetextimage(context: Context): String? {\n            val prefs = context.getSharedPreferences(\n                PREFSNAME,\n                Context.MODE_PRIVATE\n            )\n            return prefs.getString(\"button_fivetextimage\", \"5\")\n        }\n\n        fun setbuttonsixtextimage(context: Context, id: String?) {\n            val prefs = context.getSharedPreferences(\n                PREFSNAME, Context.MODE_PRIVATE\n            )\n            val editor = prefs.edit()\n            editor.putString(\"button_sixtextimage\", id)\n            editor.apply()\n        }\n\n        /**\n         * GET BUTTON SIX TEXT IMAGE\n         */\n\n        fun getbuttonsixtextimage(context: Context): String? {\n            val prefs = context.getSharedPreferences(\n                PREFSNAME,\n                Context.MODE_PRIVATE\n            )\n            return prefs.getString(\"button_sixtextimage\", \"6\")\n        }\n\n        fun setbuttonseventextimage(context: Context, id: String?) {\n            val prefs = context.getSharedPreferences(\n                PREFSNAME, Context.MODE_PRIVATE\n            )\n            val editor = prefs.edit()\n            editor.putString(\"button_seventextimage\", id)\n            editor.apply()\n        }\n\n        /**\n         * GET BUTTON SEVEN TEXT IMAGE\n         */\n\n        fun getbuttonseventextimage(context: Context): String? {\n            val prefs = context.getSharedPreferences(\n                PREFSNAME,\n                Context.MODE_PRIVATE\n            )\n            return prefs.getString(\"button_seventextimage\", \"7\")\n        }\n\n        fun setbuttoneighttextimage(context: Context, id: String?) {\n            val prefs = context.getSharedPreferences(\n                PREFSNAME, Context.MODE_PRIVATE\n            )\n            val editor = prefs.edit()\n            editor.putString(\"button_eighttextimage\", id)\n            editor.apply()\n        }\n\n        /**\n         * GET BUTTON EIGHT TEXT IMAGE\n         */\n\n        fun getbuttoneighttextimage(context: Context): String? {\n            val prefs = context.getSharedPreferences(\n                PREFSNAME,\n                Context.MODE_PRIVATE\n            )\n            return prefs.getString(\"button_eighttextimage\", \"8\")\n        }\n\n        fun setbuttonninetextimage(context: Context, id: String?) {\n            val prefs = context.getSharedPreferences(\n                PREFSNAME, Context.MODE_PRIVATE\n            )\n            val editor = prefs.edit()\n            editor.putString(\"button_ninetextimage\", id)\n            editor.apply()\n        }\n\n        /**\n         * GET BUTTON NINE TEXT IMAGE\n         */\n\n        fun getbuttonninetextimage(context: Context): String? {\n            val prefs = context.getSharedPreferences(\n                PREFSNAME,\n                Context.MODE_PRIVATE\n            )\n            return prefs.getString(\"button_ninetextimage\", \"9\")\n        }\n\n        fun setButtonOneGuestBg(context: Context, color: Int) {\n            val prefs = context.getSharedPreferences(\n                PREFSNAME, Context.MODE_PRIVATE\n            )\n            val editor = prefs.edit()\n            editor.putInt(\"buttononeguestbg\", color)\n            editor.apply()\n        }\n\n        fun getButtonOneGuestBg(context: Context): Int {\n            val prefs = context.getSharedPreferences(\n                PREFSNAME,\n                Context.MODE_PRIVATE\n            )\n            return prefs.getInt(\n                \"buttononeguestbg\", context.resources\n                    .getColor(R.color.transparent)\n            )\n        }\n\n        fun setButtontwoGuestBg(context: Context, color: Int) {\n            val prefs = context.getSharedPreferences(\n                PREFSNAME, Context.MODE_PRIVATE\n            )\n            val editor = prefs.edit()\n            editor.putInt(\"buttontwoguestbg\", color)\n            editor.apply()\n        }\n\n        fun getButtontwoGuestBg(context: Context): Int {\n            val prefs = context.getSharedPreferences(\n                PREFSNAME,\n                Context.MODE_PRIVATE\n            )\n            return prefs.getInt(\n                \"buttontwoguestbg\", context.resources\n                    .getColor(R.color.transparent)\n            )\n        }\n\n        fun setButtonthreeGuestBg(context: Context, color: Int) {\n            val prefs = context.getSharedPreferences(\n                PREFSNAME, Context.MODE_PRIVATE\n            )\n            val editor = prefs.edit()\n            editor.putInt(\"buttonthreeguestbg\", color)\n            editor.apply()\n        }\n\n        fun getButtonthreeGuestBg(context: Context): Int {\n            val prefs = context.getSharedPreferences(\n                PREFSNAME,\n                Context.MODE_PRIVATE\n            )\n            return prefs.getInt(\n                \"buttonthreeguestbg\", context.resources\n                    .getColor(R.color.transparent)\n            )\n        }\n\n        fun setButtonfourGuestBg(context: Context, color: Int) {\n            val prefs = context.getSharedPreferences(\n                PREFSNAME, Context.MODE_PRIVATE\n            )\n            val editor = prefs.edit()\n            editor.putInt(\"buttonfourguestbg\", color)\n            editor.apply()\n        }\n\n        fun getButtonfourGuestBg(context: Context): Int {\n            val prefs = context.getSharedPreferences(\n                PREFSNAME,\n                Context.MODE_PRIVATE\n            )\n            return prefs.getInt(\n                \"buttonfourguestbg\", context.resources\n                    .getColor(R.color.transparent)\n            )\n        }\n\n        fun setButtonfiveGuestBg(context: Context, color: Int) {\n            val prefs = context.getSharedPreferences(\n                PREFSNAME, Context.MODE_PRIVATE\n            )\n            val editor = prefs.edit()\n            editor.putInt(\"buttonfiveguestbg\", color)\n            editor.apply()\n        }\n\n        fun getButtonfiveGuestBg(context: Context): Int {\n            val prefs = context.getSharedPreferences(\n                PREFSNAME,\n                Context.MODE_PRIVATE\n            )\n            return prefs.getInt(\n                \"buttonfiveguestbg\", context.resources\n                    .getColor(R.color.transparent)\n            )\n        }\n\n        fun setButtonsixGuestBg(context: Context, color: Int) {\n            val prefs = context.getSharedPreferences(\n                PREFSNAME, Context.MODE_PRIVATE\n            )\n            val editor = prefs.edit()\n            editor.putInt(\"buttonsixguestbg\", color)\n            editor.apply()\n        }\n\n        fun getButtonsixGuestBg(context: Context): Int {\n            val prefs = context.getSharedPreferences(\n                PREFSNAME,\n                Context.MODE_PRIVATE\n            )\n            return prefs.getInt(\n                \"buttonsixguestbg\", context.resources\n                    .getColor(R.color.transparent)\n            )\n        }\n\n        fun setButtonsevenGuestBg(context: Context, color: Int) {\n            val prefs = context.getSharedPreferences(\n                PREFSNAME, Context.MODE_PRIVATE\n            )\n            val editor = prefs.edit()\n            editor.putInt(\"buttonsevenguestbg\", color)\n            editor.apply()\n        }\n\n        fun getButtonsevenGuestBg(context: Context): Int {\n            val prefs = context.getSharedPreferences(\n                PREFSNAME,\n                Context.MODE_PRIVATE\n            )\n            return prefs.getInt(\n                \"buttonsevenguestbg\", context.resources\n                    .getColor(R.color.transparent)\n            )\n        }\n\n        fun setButtoneightGuestBg(context: Context, color: Int) {\n            val prefs = context.getSharedPreferences(\n                PREFSNAME, Context.MODE_PRIVATE\n            )\n            val editor = prefs.edit()\n            editor.putInt(\"buttoneightguestbg\", color)\n            editor.apply()\n        }\n\n        fun getButtoneightGuestBg(context: Context): Int {\n            val prefs = context.getSharedPreferences(\n                PREFSNAME,\n                Context.MODE_PRIVATE\n            )\n            return prefs.getInt(\n                \"buttoneightguestbg\", context.resources\n                    .getColor(R.color.transparent)\n            )\n        }\n\n        fun setButtonnineGuestBg(context: Context, color: Int) {\n            val prefs = context.getSharedPreferences(\n                PREFSNAME, Context.MODE_PRIVATE\n            )\n            val editor = prefs.edit()\n            editor.putInt(\"buttonnineguestbg\", color)\n            editor.apply()\n        }\n\n        fun getButtonnineGuestBg(context: Context): Int {\n            val prefs = context.getSharedPreferences(\n                PREFSNAME,\n                Context.MODE_PRIVATE\n            )\n            return prefs.getInt(\n                \"buttonnineguestbg\", context.resources\n                    .getColor(R.color.transparent)\n            )\n        }\n\n\n\n        fun isCalendarFirstLaunch(context: Context, isFirstLaunch: Boolean)\n        {\n            val prefs = context.getSharedPreferences(PREFSNAME, Context.MODE_PRIVATE)\n            val editor = prefs.edit()\n            editor.putBoolean(\"is_cal_first_launch\", isFirstLaunch)\n            editor.apply()\n        }\n        fun getIsCalendarFirstLaunch(context: Context): Boolean\n        {\n            val prefs = context.getSharedPreferences(PREFSNAME, Context.MODE_PRIVATE)\n            return prefs.getBoolean(\"is_cal_first_launch\", false)\n        }\n        fun setCalendarEventNames(context: Context, usercode: String?) {\n            val prefs = context.getSharedPreferences(PREFSNAME, Context.MODE_PRIVATE)\n            val editor = prefs.edit()\n            editor.putString(\"cal_event\", usercode)\n            editor.apply()\n        }\n        fun getCalendarEventNames(context: Context): String? {\n            val prefs = context.getSharedPreferences(PREFSNAME, Context.MODE_PRIVATE)\n            return prefs.getString(\"cal_event\", \"\")\n        }\n        fun setCalendarBadge(context: Context, calendarbadge: Int)\n        {\n            val prefs = context.getSharedPreferences(PREFSNAME, Context.MODE_PRIVATE)\n            val editor = prefs.edit()\n            editor.putInt(\"calendar_badge\", calendarbadge)\n            editor.apply()\n        }\n        fun getCalendarBadge(context: Context): Int\n        {\n            val prefs = context.getSharedPreferences(PREFSNAME, Context.MODE_PRIVATE)\n            return prefs.getInt(\"calendar_badge\", 0)\n        }\n        fun setCalendarEditedBadge(context: Context, calendarbadge: Int)\n        {\n            val prefs = context.getSharedPreferences(PREFSNAME, Context.MODE_PRIVATE)\n            val editor = prefs.edit()\n            editor.putInt(\"calendar_edited_badge\", calendarbadge)\n            editor.apply()\n        }\n        fun getCalendarEditedBadge(context: Context): Int\n        {\n            val prefs = context.getSharedPreferences(PREFSNAME, Context.MODE_PRIVATE)\n            return prefs.getInt(\"calendar_edited_badge\", 0)\n        }\n\n        fun setSurvey(context: Context, survey: Int) {\n            val prefs = context.getSharedPreferences(PREFSNAME, Context.MODE_PRIVATE)\n            val editor = prefs.edit()\n            editor.putInt(\"survey\", survey)\n            editor.commit()\n        }\n\n        fun getSurvey(context: Context): Int {\n            val prefs = context.getSharedPreferences(PREFSNAME, Context.MODE_PRIVATE)\n            return prefs.getInt(\"survey\", 0)\n        }\n        fun setIsSurveyHomeVisible(context: Context, result: Boolean) {\n            val prefs = context.getSharedPreferences(PREFSNAME, Context.MODE_PRIVATE)\n            val editor = prefs.edit()\n            editor.putBoolean(\"is_survey_visible\", result)\n            editor.commit()\n        }\n\n        fun getIsSurveyHomeVisible(context: Context): Boolean {\n            val prefs = context.getSharedPreferences(PREFSNAME, Context.MODE_PRIVATE)\n            return prefs.getBoolean(\"is_survey_visible\", false)\n        }\n    }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/nas/alreem/constants/PreferenceManager.kt b/app/src/main/java/com/nas/alreem/constants/PreferenceManager.kt
--- a/app/src/main/java/com/nas/alreem/constants/PreferenceManager.kt	(revision b2ad66f8612edd03349ffa4aaee582fd0005cdb4)
+++ b/app/src/main/java/com/nas/alreem/constants/PreferenceManager.kt	(date 1687507306000)
@@ -876,5 +876,21 @@
             val prefs = context.getSharedPreferences(PREFSNAME, Context.MODE_PRIVATE)
             return prefs.getBoolean("is_survey_visible", false)
         }
+
+        fun setIsFirstTimeInPE(context: Context, result: Boolean) {
+            val prefs = context.getSharedPreferences(
+                PREFSNAME, Context.MODE_PRIVATE
+            )
+            val editor = prefs.edit()
+            editor.putBoolean("is_first_pe", result)
+            editor.apply()
+        }
+        fun getIsFirstTimeInPE(context: Context): Boolean {
+            val prefs = context.getSharedPreferences(
+                PREFSNAME,
+                Context.MODE_PRIVATE
+            )
+            return prefs.getBoolean("is_first_pe", true)
+        }
     }
 }
\ No newline at end of file
Index: .idea/compiler.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"CompilerConfiguration\">\n    <bytecodeTargetLevel target=\"11\" />\n  </component>\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/compiler.xml b/.idea/compiler.xml
--- a/.idea/compiler.xml	(revision b2ad66f8612edd03349ffa4aaee582fd0005cdb4)
+++ b/.idea/compiler.xml	(date 1689077232001)
@@ -1,6 +1,6 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
   <component name="CompilerConfiguration">
-    <bytecodeTargetLevel target="11" />
+    <bytecodeTargetLevel target="18" />
   </component>
 </project>
\ No newline at end of file
Index: app/src/main/java/com/nas/alreem/activity/absence/model/EarlyPickupResponseArray.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/nas/alreem/activity/absence/model/EarlyPickupResponseArray.kt b/app/src/main/java/com/nas/alreem/activity/absence/model/EarlyPickupResponseArray.kt
new file mode 100644
--- /dev/null	(date 1688382770000)
+++ b/app/src/main/java/com/nas/alreem/activity/absence/model/EarlyPickupResponseArray.kt	(date 1688382770000)
@@ -0,0 +1,4 @@
+package com.nas.alreem.activity.absence.model
+
+class EarlyPickupResponseArray {
+}
\ No newline at end of file
Index: app/src/main/java/com/nas/alreem/fragment/parent_meetings/adapter/StaffListAdapter.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/nas/alreem/fragment/parent_meetings/adapter/StaffListAdapter.kt b/app/src/main/java/com/nas/alreem/fragment/parent_meetings/adapter/StaffListAdapter.kt
new file mode 100644
--- /dev/null	(date 1688974564000)
+++ b/app/src/main/java/com/nas/alreem/fragment/parent_meetings/adapter/StaffListAdapter.kt	(date 1688974564000)
@@ -0,0 +1,55 @@
+package com.nas.alreem.fragment.parent_meetings.adapter
+
+import android.content.Context
+import android.view.LayoutInflater
+import android.view.View
+import android.view.ViewGroup
+import android.widget.ImageView
+import android.widget.TextView
+import androidx.annotation.NonNull
+import androidx.recyclerview.widget.RecyclerView
+import com.bumptech.glide.Glide
+import com.bumptech.glide.load.engine.DiskCacheStrategy
+import com.bumptech.glide.load.resource.bitmap.CircleCrop
+
+import com.nas.alreem.R
+import com.nas.alreem.fragment.parent_meetings.model.StaffInfoDetail
+
+internal class StaffListAdapter (private var studentList: List<StaffInfoDetail>, private var mContext:Context) :
+    RecyclerView.Adapter<StaffListAdapter.MyViewHolder>() {
+    internal inner class MyViewHolder(view: View) : RecyclerView.ViewHolder(view) {
+        var listTxtTitle: TextView = view.findViewById(R.id.listTxtTitle)
+        //var jobTxtTitle: TextView = view.findViewById(R.id.jobTxtTitle)
+        var imagicon: ImageView = view.findViewById(R.id.imagicon)
+    }
+    @NonNull
+    override fun onCreateViewHolder(parent: ViewGroup, viewType: Int): MyViewHolder {
+        val itemView = LayoutInflater.from(parent.context)
+            .inflate(R.layout.adapter_staff_list, parent, false)
+        return MyViewHolder(itemView)
+    }
+    override fun onBindViewHolder(holder: MyViewHolder, position: Int) {
+        val movie = studentList[position]
+        holder.listTxtTitle.text = movie.name
+        //holder.jobTxtTitle.visibility=View.GONE
+        //holder.jobTxtTitle.text = movie.role
+        if(!movie.staff_photo.equals(""))
+        {
+
+            Glide.with(mContext) //1
+                .load(movie.staff_photo)
+                .placeholder(R.drawable.staff)
+                .error(R.drawable.staff)
+                .skipMemoryCache(true) //2
+                .diskCacheStrategy(DiskCacheStrategy.NONE) //3
+                .transform(CircleCrop()) //4
+                .into(holder.imagicon)
+        }
+        else{
+            holder.imagicon.setImageResource(R.drawable.staff)
+        }
+    }
+    override fun getItemCount(): Int {
+        return studentList.size
+    }
+}
\ No newline at end of file
Index: app/src/main/res/drawable-xxhdpi/slotbooked_curved_rel_layout.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/drawable-xxhdpi/slotbooked_curved_rel_layout.xml b/app/src/main/res/drawable-xxhdpi/slotbooked_curved_rel_layout.xml
new file mode 100644
--- /dev/null	(date 1686893738000)
+++ b/app/src/main/res/drawable-xxhdpi/slotbooked_curved_rel_layout.xml	(date 1686893738000)
@@ -0,0 +1,18 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<shape xmlns:android="http://schemas.android.com/apk/res/android" >
+
+    <solid android:color="@color/dark_grey1" />
+
+    <stroke
+        android:width="1dp"
+        android:color="@color/dark_grey1" />
+
+    <corners android:radius="5dp" />
+
+    <padding
+        android:bottom="0dp"
+        android:left="0dp"
+        android:right="0dp"
+        android:top="0dp" />
+
+</shape>
\ No newline at end of file
Index: app/src/main/AndroidManifest.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\n<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    xmlns:tools=\"http://schemas.android.com/tools\"\n    package=\"com.nas.alreem\">\n\n    <uses-permission android:name=\"android.permission.ACCESS_COARSE_LOCATION\" />\n    <uses-permission android:name=\"android.permission.ACCESS_COARSE_LOCATION\" />\n    <uses-permission android:name=\"android.permission.INTERNET\" />\n    <uses-permission android:name=\"android.permission.ACCESS_NETWORK_STATE\" />\n    <uses-permission android:name=\"android.permission.CALL_PHONE\" />\n    <uses-permission android:name=\"android.permission.WRITE_EXTERNAL_STORAGE\" />\n    <uses-permission android:name=\"android.permission.READ_EXTERNAL_STORAGE\" />\n    <uses-permission android:name=\"android.permission.READ_CALENDAR\" />\n    <uses-permission android:name=\"android.permission.WRITE_CALENDAR\" />\n    <uses-permission android:name=\"com.google.android.gms.permission.AD_ID\" tools:node=\"remove\"/>\n    <application\n        android:allowBackup=\"false\"\n        android:hardwareAccelerated=\"true\"\n        android:icon=\"@drawable/ic_launcher\"\n        android:label=\"@string/app_name\"\n        android:largeHeap=\"true\"\n        android:networkSecurityConfig=\"@xml/network_security_config\"\n        android:requestLegacyExternalStorage=\"true\"\n        android:supportsRtl=\"true\"\n        android:theme=\"@style/AppTheme\"\n        android:usesCleartextTraffic=\"true\"\n        tools:replace=\"android:icon,android:allowBackup\">\n\n        <activity\n            android:name=\".activity.splash.SplashActivity\"\n            android:theme=\"@style/AppTheme.NoActionBar\"\n            android:exported=\"true\">\n            <intent-filter>\n                <action android:name=\"android.intent.action.MAIN\" />\n\n                <category android:name=\"android.intent.category.LAUNCHER\" />\n            </intent-filter>\n        </activity>\n\n\n        <activity android:name=\".activity.home.HomeActivity\"\n            android:screenOrientation=\"portrait\"\n          />\n        <activity android:name=\".activity.login.LoginActivity\"\n            android:screenOrientation=\"portrait\"\n            android:theme=\"@style/AppTheme.NoActionBar\" />\n        <activity android:name=\".activity.primary.PrimaryActivity\"\n            android:screenOrientation=\"portrait\"\n            android:theme=\"@style/AppTheme.NoActionBar\" />\n        <activity android:name=\".activity.primary.PrimaryComingUpActivity\"\n            android:screenOrientation=\"portrait\"\n            android:theme=\"@style/AppTheme.NoActionBar\" />\n        <activity android:name=\".activity.early_years.EarlyYearsComingUpActivity\"\n            android:screenOrientation=\"portrait\"\n            android:theme=\"@style/AppTheme.NoActionBar\" />\n        <activity android:name=\".activity.secondary.SecondaryComingUpActivity\"\n            android:screenOrientation=\"portrait\"\n            android:theme=\"@style/AppTheme.NoActionBar\" />\n        <activity android:name=\".activity.settings.TermsOfServiceActivity\"\n            android:screenOrientation=\"portrait\"\n            android:theme=\"@style/AppTheme.NoActionBar\" />\n        <activity android:name=\".constants.WebLinkActivity\"\n            android:screenOrientation=\"portrait\"\n            android:theme=\"@style/AppTheme.NoActionBar\" />\n        <activity android:name=\".activity.payments.PaymentCategoryActivity\"\n            android:screenOrientation=\"portrait\"\n            android:theme=\"@style/AppTheme.NoActionBar\" />\n        <activity android:name=\".activity.payments.PaymentDetailActivity\"\n            android:screenOrientation=\"portrait\"\n            android:theme=\"@style/AppTheme.NoActionBar\" />\n        <activity android:name=\".activity.settings.TutorialActivity\"\n            android:screenOrientation=\"portrait\"\n            android:theme=\"@style/AppTheme.NoActionBar\" />\n        <activity android:name=\".activity.early_years.ComingUpDetailActivity\"\n            android:screenOrientation=\"portrait\"\n            android:theme=\"@style/AppTheme.NoActionBar\" />\n        <activity android:name=\".activity.notifications.ImageMessageActivity\"\n            android:screenOrientation=\"portrait\"\n            android:theme=\"@style/AppTheme.NoActionBar\" />\n        <activity android:name=\".activity.notifications.VideoMessageActivity\"\n            android:screenOrientation=\"portrait\"\n            android:theme=\"@style/AppTheme.NoActionBar\" />\n\n        <activity android:name=\".activity.notifications.AudioPlayerDetail\"\n            android:screenOrientation=\"portrait\"\n            android:theme=\"@style/AppTheme.NoActionBar\" />\n\n        <activity android:name=\".activity.notifications.AudioPlayerDetailNew\"\n            android:screenOrientation=\"portrait\"\n            android:theme=\"@style/AppTheme.NoActionBar\" />\n        <activity android:name=\".activity.notifications.TextMessageActivity\"\n            android:screenOrientation=\"portrait\"\n            android:theme=\"@style/AppTheme.NoActionBar\" />\n        <activity android:name=\".constants.PDFViewerActivity\"\n            android:screenOrientation=\"portrait\"\n            android:theme=\"@style/AppTheme.NoActionBar\" />\n\n        <activity android:name=\".activity.calendar.TermCalendarActivity\"\n            android:screenOrientation=\"portrait\"\n            android:theme=\"@style/AppTheme.NoActionBar\" />\n        <activity android:name=\".activity.calendar.CalendarTutorialActivity\"\n            android:screenOrientation=\"portrait\"\n            android:theme=\"@style/AppTheme.NoActionBar\" />\n        <activity android:name=\".activity.payments.PaymentReceiptActivity\"\n            android:screenOrientation=\"portrait\"\n            android:theme=\"@style/AppTheme.NoActionBar\" />\n        <activity android:name=\".activity.payments.PaymentInformationActivity\"\n            android:screenOrientation=\"portrait\"\n            android:theme=\"@style/AppTheme.NoActionBar\" />\n        <activity android:name=\".activity.gallery.GalleryImageListActivity\"\n            android:screenOrientation=\"portrait\"\n            android:theme=\"@style/AppTheme.NoActionBar\" />\n        <activity android:name=\".activity.gallery.GalleryImageViewActivity\"\n            android:screenOrientation=\"portrait\"\n            android:theme=\"@style/AppTheme.NoActionBar\" />\n        <activity android:name=\".activity.gallery.GalleryVideoList\"\n            android:screenOrientation=\"portrait\"\n            android:theme=\"@style/AppTheme.NoActionBar\" />\n        <activity android:name=\".activity.gallery.GalleryImageDetailActivity\"\n            android:screenOrientation=\"portrait\"\n            android:theme=\"@style/AppTheme.NoActionBar\" />\n        <activity android:name=\".activity.gallery.VideosPlayerViewActivity\"\n            android:screenOrientation=\"portrait\"\n            android:theme=\"@style/AppTheme.NoActionBar\" />\n        <activity android:name=\".activity.canteen.Addorder_Activity\"\n            android:screenOrientation=\"portrait\"\n            android:theme=\"@style/AppTheme.NoActionBar\" />\n        <activity android:name=\".activity.canteen.CanteenActviity\"\n            android:screenOrientation=\"portrait\"\n            android:theme=\"@style/AppTheme.NoActionBar\" />\n        <activity android:name=\".activity.canteen.CanteenPaymentActivity\"\n            android:screenOrientation=\"portrait\"\n            android:theme=\"@style/AppTheme.NoActionBar\" />\n        <activity android:name=\".activity.canteen.InformationActivity\"\n            android:screenOrientation=\"portrait\"\n            android:theme=\"@style/AppTheme.NoActionBar\" />\n        <activity android:name=\".activity.canteen.MyorderActivity\"\n            android:screenOrientation=\"portrait\"\n            android:theme=\"@style/AppTheme.NoActionBar\" />\n        <activity android:name=\".activity.canteen.Myorderbasket_Activity\"\n            android:screenOrientation=\"portrait\"\n            android:theme=\"@style/AppTheme.NoActionBar\" />\n        <activity android:name=\".activity.canteen.OrderhistoryActivity\"\n            android:screenOrientation=\"portrait\"\n            android:theme=\"@style/AppTheme.NoActionBar\" />\n        <activity android:name=\".activity.canteen.PayCanteenRecActivity\"\n            android:screenOrientation=\"portrait\"\n            android:theme=\"@style/AppTheme.NoActionBar\" />\n        <activity android:name=\".activity.canteen.PaymentActivity\"\n            android:screenOrientation=\"portrait\"\n            android:theme=\"@style/AppTheme.NoActionBar\" />\n        <activity android:name=\".activity.canteen.PaymentHistory_Activity\"\n            android:screenOrientation=\"portrait\"\n            android:theme=\"@style/AppTheme.NoActionBar\" />\n        <activity android:name=\".activity.canteen.PaymentprintActivity\"\n            android:screenOrientation=\"portrait\"\n            android:theme=\"@style/AppTheme.NoActionBar\" />\n        <activity android:name=\".activity.canteen.PreOrderActivity\"\n            android:screenOrientation=\"portrait\"\n            android:theme=\"@style/AppTheme.NoActionBar\" />\n        <activity android:name=\".activity.gallery.PhotosViewPagerActivity\"\n            android:screenOrientation=\"portrait\"\n            android:theme=\"@style/AppTheme.NoActionBar\" />\n        <activity android:name=\".activity.communication.socialmedia.SocialMediaActivity\"\n            android:screenOrientation=\"portrait\"\n            android:theme=\"@style/AppTheme.NoActionBar\" />\n        <activity android:name=\".activity.communication.information.CommunicationInformationActivity\"\n            android:screenOrientation=\"portrait\"\n            android:theme=\"@style/AppTheme.NoActionBar\" />\n        <activity android:name=\".activity.communication.commingup.ComingUpWholeSchool\"\n            android:screenOrientation=\"portrait\"\n            android:theme=\"@style/AppTheme.NoActionBar\" />\n        <activity android:name=\".activity.communication.newesletters.NewsLetterActivity\"\n            android:screenOrientation=\"portrait\"\n            android:theme=\"@style/AppTheme.NoActionBar\" />\n        <activity android:name=\".activity.communication.newesletters.NewsLetterListActivity\"\n            android:screenOrientation=\"portrait\"\n            android:theme=\"@style/AppTheme.NoActionBar\" />\n        <activity android:name=\".activity.communication.newesletters.NewsLetterDetailActivity\"\n            android:screenOrientation=\"portrait\"\n            android:theme=\"@style/AppTheme.NoActionBar\" />\n        <activity android:name=\".activity.sixth_form.SixthFormComingUpActivity\"\n            android:screenOrientation=\"portrait\"\n            android:theme=\"@style/AppTheme.NoActionBar\" />\n        <activity android:name=\".activity.sixth_form.SixthFormActivity\"\n            android:screenOrientation=\"portrait\"\n            android:theme=\"@style/AppTheme.NoActionBar\" />\n        <activity android:name=\".activity.survey.SurveyListActivity\"\n            android:screenOrientation=\"portrait\"\n            android:theme=\"@style/AppTheme.NoActionBar\" />\n        <activity android:name=\".activity.parentsessential.ParentsEssentialDetail\"\n            android:screenOrientation=\"portrait\"\n            android:theme=\"@style/AppTheme.NoActionBar\" />\n        <meta-data\n            android:name=\"com.google.firebase.messaging.default_notification_icon\"\n            android:resource=\"@drawable/notify_small\" />\n        <meta-data\n            android:name=\"com.google.firebase.messaging.default_notification_color\"\n            android:resource=\"@color/split_bg\" />\n        <meta-data\n            android:name=\"com.google.firebase.messaging.default_notification_channel_id\"\n            android:value=\"@string/default_notification_channel_id\" />\n        <meta-data\n            android:name=\"com.google.android.maps.v2.API_KEY\"\n            android:value=\"AIzaSyAixzbHoPqIadZKzIMQuZXU_hBR6LAJths\" />\n        <meta-data\n            android:name=\"com.google.android.gms.version\"\n            android:value=\"@integer/google_play_services_version\" /> <!-- <service -->\n        <!-- android:name=\".fcm.SellerFirebaseService\" -->\n        <!-- android:exported=\"false\"> -->\n        <!-- <intent-filter> -->\n        <!-- <action android:name=\"com.google.firebase.MESSAGING_EVENT\"/> -->\n        <!-- </intent-filter> -->\n        <!-- </service> -->\n        <service\n            android:name=\".constants.MyFirebaseMessagingService\"\n            android:enabled=\"true\"\n            android:exported=\"true\">\n            <intent-filter>\n                <action android:name=\"com.google.firebase.MESSAGING_EVENT\" />\n            </intent-filter>\n        </service>\n        <service android:name=\".constants.MyFirebaseInstanceIDService\"\n            android:exported=\"false\">\n            <intent-filter>\n                <action android:name=\"com.google.firebase.INSTANCE_ID_EVENT\" />\n            </intent-filter>\n        </service>\n        <provider\n            android:name=\"androidx.core.content.FileProvider\"\n            android:authorities=\"${applicationId}.provider\"\n            android:exported=\"false\"\n            android:grantUriPermissions=\"true\">\n            <meta-data\n                android:name=\"android.support.FILE_PROVIDER_PATHS\"\n                android:resource=\"@xml/provider_paths\" />\n        </provider>\n\n    </application>\n\n</manifest>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/AndroidManifest.xml b/app/src/main/AndroidManifest.xml
--- a/app/src/main/AndroidManifest.xml	(revision b2ad66f8612edd03349ffa4aaee582fd0005cdb4)
+++ b/app/src/main/AndroidManifest.xml	(date 1688540712000)
@@ -191,6 +191,36 @@
         <activity android:name=".activity.parentsessential.ParentsEssentialDetail"
             android:screenOrientation="portrait"
             android:theme="@style/AppTheme.NoActionBar" />
+        <activity android:name=".activity.parent_meetings.ParentsEveningCalendarActivity"
+            android:screenOrientation="portrait"
+            android:theme="@style/AppTheme.NoActionBar" />
+        <activity android:name=".activity.parent_meetings.ParentsEveninginfoActivity"
+            android:screenOrientation="portrait"
+            android:theme="@style/AppTheme.NoActionBar" />
+        <activity android:name=".activity.parent_meetings.ReviewAppointmentsRecyclerViewActivity"
+            android:screenOrientation="portrait"
+            android:theme="@style/AppTheme.NoActionBar" />
+        <activity android:name=".activity.parent_meetings.ParentMeetingDetailActivity"
+            android:screenOrientation="portrait"
+            android:theme="@style/AppTheme.NoActionBar" />
+        <activity android:name=".activity.absence.AbsenceDetailActivity"
+            android:screenOrientation="portrait"
+            android:theme="@style/AppTheme.NoActionBar" />
+        <activity android:name=".activity.absence.EarlyPickupDetailActivity"
+            android:screenOrientation="portrait"
+            android:theme="@style/AppTheme.NoActionBar" />
+        <activity android:name=".activity.absence.RequestabsenceActivity"
+            android:screenOrientation="portrait"
+            android:theme="@style/AppTheme.NoActionBar" />
+        <activity android:name=".activity.absence.RequestearlypickupActivity"
+            android:screenOrientation="portrait"
+            android:theme="@style/AppTheme.NoActionBar" />
+        <activity android:name=".activity.staff_directory.StaffDirectoryActivity"
+            android:screenOrientation="portrait"
+            android:theme="@style/AppTheme.NoActionBar" />
+        <activity android:name=".activity.staff_directory.StaffDetailActivity"
+            android:screenOrientation="portrait"
+            android:theme="@style/AppTheme.NoActionBar" />
         <meta-data
             android:name="com.google.firebase.messaging.default_notification_icon"
             android:resource="@drawable/notify_small" />
Index: app/src/main/java/com/nas/alreem/activity/staff_directory/model/DepartmentStaffsModel.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/nas/alreem/activity/staff_directory/model/DepartmentStaffsModel.kt b/app/src/main/java/com/nas/alreem/activity/staff_directory/model/DepartmentStaffsModel.kt
new file mode 100644
--- /dev/null	(date 1688542276000)
+++ b/app/src/main/java/com/nas/alreem/activity/staff_directory/model/DepartmentStaffsModel.kt	(date 1688542276000)
@@ -0,0 +1,13 @@
+package com.nas.alreem.activity.staff_directory.model
+
+import com.google.gson.annotations.SerializedName
+
+class DepartmentStaffsModel (
+    @SerializedName("id")var id:Int,
+    @SerializedName("name")var name:String,
+    @SerializedName("email")var email:String,
+    @SerializedName("staff_photo")var staff_photo:String,
+    @SerializedName("staff_bio")var staff_bio:String,
+    @SerializedName("staff_department_id")var staff_department_id:String,
+    @SerializedName("department_name")var department_name:String
+)
\ No newline at end of file
Index: app/src/main/java/com/nas/alreem/activity/staff_directory/adapter/StaffCategoryAdapter.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/nas/alreem/activity/staff_directory/adapter/StaffCategoryAdapter.kt b/app/src/main/java/com/nas/alreem/activity/staff_directory/adapter/StaffCategoryAdapter.kt
new file mode 100644
--- /dev/null	(date 1688541152000)
+++ b/app/src/main/java/com/nas/alreem/activity/staff_directory/adapter/StaffCategoryAdapter.kt	(date 1688541152000)
@@ -0,0 +1,43 @@
+package com.nas.alreem.activity.staff_directory.adapter
+
+import android.content.Context
+import android.util.Log
+import android.view.LayoutInflater
+import android.view.View
+import android.view.ViewGroup
+import android.widget.TextView
+import androidx.annotation.NonNull
+import androidx.recyclerview.widget.RecyclerView
+import com.nas.alreem.R
+import com.nas.alreem.activity.parent_meetings.adapter.ParentsEveningRoomListAdapter
+import com.nas.alreem.activity.parent_meetings.model.PtaTimeSlotList
+import com.nas.alreem.activity.staff_directory.model.StaffDeptListModel
+import java.text.DateFormat
+import java.text.SimpleDateFormat
+import java.util.ArrayList
+import java.util.Date
+
+internal class StaffCategoryAdapter (var context: Context, var staff_cat_list: ArrayList<StaffDeptListModel>) :
+    RecyclerView.Adapter<StaffCategoryAdapter.MyViewHolder>() {
+    internal inner class MyViewHolder(view: View) : RecyclerView.ViewHolder(view) {
+        var department: TextView =view.findViewById(R.id.listTxtTitle)
+
+    }
+    @NonNull
+    override fun onCreateViewHolder(parent: ViewGroup, viewType: Int): MyViewHolder {
+        val itemView = LayoutInflater.from(parent.context)
+            .inflate(R.layout.adapter_staff_category, parent, false)
+        return MyViewHolder(itemView)
+    }
+    override fun onBindViewHolder(holder: MyViewHolder, position: Int) {
+        Log.e("ad",staff_cat_list.size.toString())
+
+       holder.department.text=staff_cat_list[position].department_name
+
+    }
+    override fun getItemCount(): Int {
+
+        return staff_cat_list.size
+
+    }
+}
\ No newline at end of file
Index: app/src/main/java/com/nas/alreem/fragment/staff_directory/StaffDirectoryFragment.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/nas/alreem/fragment/staff_directory/StaffDirectoryFragment.kt b/app/src/main/java/com/nas/alreem/fragment/staff_directory/StaffDirectoryFragment.kt
new file mode 100644
--- /dev/null	(date 1688463268000)
+++ b/app/src/main/java/com/nas/alreem/fragment/staff_directory/StaffDirectoryFragment.kt	(date 1688463268000)
@@ -0,0 +1,9 @@
+package com.nas.alreem.fragment.staff_directory
+
+import android.content.Context
+import androidx.fragment.app.Fragment
+
+class StaffDirectoryFragment : Fragment() {
+
+    lateinit var mContext: Context
+}
\ No newline at end of file
Index: app/src/main/java/com/nas/alreem/activity/parent_meetings/model/PtaDatesApiModel.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/nas/alreem/activity/parent_meetings/model/PtaDatesApiModel.kt b/app/src/main/java/com/nas/alreem/activity/parent_meetings/model/PtaDatesApiModel.kt
new file mode 100644
--- /dev/null	(date 1688981132000)
+++ b/app/src/main/java/com/nas/alreem/activity/parent_meetings/model/PtaDatesApiModel.kt	(date 1688981132000)
@@ -0,0 +1,11 @@
+package com.nas.alreem.activity.parent_meetings.model
+
+import com.google.gson.annotations.SerializedName
+
+class PtaDatesApiModel (
+    @SerializedName("student_id") val student_id: String,
+    @SerializedName("staff_id") var staff_id: String
+
+
+
+)
\ No newline at end of file
Index: app/src/main/java/com/nas/alreem/fragment/about_us/AboutUsFragment.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.nas.alreem.fragment.about_us\n\nimport android.annotation.SuppressLint\nimport android.content.Context\nimport android.content.Intent\nimport android.net.Uri\nimport android.os.Build\nimport android.os.Bundle\nimport android.provider.Settings\nimport android.util.Log\nimport android.view.LayoutInflater\nimport android.view.View\nimport android.view.ViewGroup\nimport android.widget.ProgressBar\nimport android.widget.TextView\nimport androidx.annotation.RequiresApi\nimport androidx.fragment.app.Fragment\nimport androidx.recyclerview.widget.DefaultItemAnimator\nimport androidx.recyclerview.widget.LinearLayoutManager\nimport androidx.recyclerview.widget.RecyclerView\n\nimport com.nas.alreem.R\nimport com.nas.alreem.activity.primary.PrimaryActivity\nimport com.nas.alreem.activity.primary.PrimaryComingUpActivity\nimport com.nas.alreem.constants.*\nimport com.nas.alreem.fragment.about_us.adapter.AboutUsAdapter\nimport com.nas.alreem.fragment.about_us.model.AboutUsDataModel\nimport com.nas.alreem.fragment.about_us.model.AboutUsResponseModel\nimport com.nas.alreem.rest.ApiClient\n\nimport retrofit2.Call\nimport retrofit2.Callback\nimport retrofit2.Response\n\nclass AboutUsFragment  : Fragment() {\n\n    lateinit var mContext: Context\n    lateinit var aboutUsRecycler: RecyclerView\n    lateinit var progressDialogAdd: ProgressBar\n    lateinit var titleTextView: TextView\n    lateinit var aboutUsArrayList:ArrayList<AboutUsDataModel>\n\n    override fun onCreateView(\n        inflater: LayoutInflater, container: ViewGroup?,\n        savedInstanceState: Bundle?\n    ): View? {\n        return inflater.inflate(R.layout.fragment_about_us, container, false)\n    }\n\n    override fun onViewCreated(view: View, savedInstanceState: Bundle?) {\n        super.onViewCreated(view, savedInstanceState)\n        mContext=requireContext()\n        initializeUI()\n        callAboutUsApi()\n    }\n    private fun initializeUI()\n    {\n        aboutUsRecycler=requireView().findViewById(R.id.aboutUsRecycler)\n        progressDialogAdd=requireView().findViewById(R.id.progressDialogAdd)\n        titleTextView=requireView().findViewById(R.id.titleTextView)\n        var linearLayoutManager = LinearLayoutManager(mContext)\n        aboutUsRecycler.layoutManager = linearLayoutManager\n        aboutUsRecycler.itemAnimator = DefaultItemAnimator()\n        titleTextView.text=ConstantWords.about_us\n        aboutUsRecycler.addOnItemClickListener(object : OnItemClickListener {\n            @SuppressLint(\"SimpleDateFormat\", \"SetTextI18n\")\n            @RequiresApi(Build.VERSION_CODES.O)\n            override fun onItemClicked(position: Int, view: View)\n            {\n\n//\n//                    val intent = Intent(mContext, WebLinkActivity::class.java)\n//                    intent.putExtra(\"url\",aboutUsArrayList.get(position).url)\n//                    intent.putExtra(\"heading\",aboutUsArrayList.get(position).tab_type)\n//                    startActivity(intent)\n\n\n\n                if (aboutUsArrayList.get(position).url.contains(\".pdf\"))\n                {\n                    val intent = Intent(mContext, PDFViewerActivity::class.java)\n                    intent.putExtra(\"Url\",aboutUsArrayList.get(position).url)\n                    intent.putExtra(\"title\",aboutUsArrayList.get(position).name)\n                    startActivity(intent)\n                }\n                else{\n                    val intent = Intent(mContext, WebLinkActivity::class.java)\n                    intent.putExtra(\"url\",aboutUsArrayList.get(position).url)\n                    intent.putExtra(\"heading\",aboutUsArrayList.get(position).name)\n                    startActivity(intent)\n                }\n            }\n\n\n        })\n\n    }\n    private fun callAboutUsApi()\n    {\n        aboutUsArrayList= ArrayList()\n        progressDialogAdd.visibility=View.VISIBLE\n        val call: Call<AboutUsResponseModel> = ApiClient.getClient.aboutUs()\n        call.enqueue(object : Callback<AboutUsResponseModel> {\n            override fun onFailure(call: Call<AboutUsResponseModel>, t: Throwable) {\n                Log.e(\"Failed\", t.localizedMessage)\n                progressDialogAdd.visibility=View.GONE\n            }\n            override fun onResponse(call: Call<AboutUsResponseModel>, response: Response<AboutUsResponseModel>) {\n                val responsedata = response.body()\n                progressDialogAdd.visibility=View.GONE\n                if (responsedata != null) {\n                    try {\n\n                        if (response.body()!!.status==100)\n                        {\n                            aboutUsArrayList=response.body()!!.responseArray!!.data\n                            if (aboutUsArrayList.size>0)\n                            {\n                                var adapterAboutUs=AboutUsAdapter(aboutUsArrayList,mContext)\n                                aboutUsRecycler.adapter=adapterAboutUs\n                            }\n                        }\n                        else\n                        {\n\n                            DialogFunctions.commonErrorAlertDialog(mContext.resources.getString(R.string.alert), ConstantFunctions.commonErrorString(response.body()!!.status), mContext)\n                        }\n\n\n                    } catch (e: Exception) {\n                        e.printStackTrace()\n                    }\n                }\n            }\n\n        })\n    }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/nas/alreem/fragment/about_us/AboutUsFragment.kt b/app/src/main/java/com/nas/alreem/fragment/about_us/AboutUsFragment.kt
--- a/app/src/main/java/com/nas/alreem/fragment/about_us/AboutUsFragment.kt	(revision b2ad66f8612edd03349ffa4aaee582fd0005cdb4)
+++ b/app/src/main/java/com/nas/alreem/fragment/about_us/AboutUsFragment.kt	(date 1688971116000)
@@ -12,6 +12,7 @@
 import android.view.View
 import android.view.ViewGroup
 import android.widget.ProgressBar
+import android.widget.RelativeLayout
 import android.widget.TextView
 import androidx.annotation.RequiresApi
 import androidx.fragment.app.Fragment
@@ -20,8 +21,10 @@
 import androidx.recyclerview.widget.RecyclerView
 
 import com.nas.alreem.R
+import com.nas.alreem.activity.absence.AbsenceDetailActivity
 import com.nas.alreem.activity.primary.PrimaryActivity
 import com.nas.alreem.activity.primary.PrimaryComingUpActivity
+import com.nas.alreem.activity.staff_directory.StaffDirectoryActivity
 import com.nas.alreem.constants.*
 import com.nas.alreem.fragment.about_us.adapter.AboutUsAdapter
 import com.nas.alreem.fragment.about_us.model.AboutUsDataModel
@@ -39,6 +42,7 @@
     lateinit var progressDialogAdd: ProgressBar
     lateinit var titleTextView: TextView
     lateinit var aboutUsArrayList:ArrayList<AboutUsDataModel>
+    lateinit var staff_rel:RelativeLayout
 
     override fun onCreateView(
         inflater: LayoutInflater, container: ViewGroup?,
@@ -62,6 +66,11 @@
         aboutUsRecycler.layoutManager = linearLayoutManager
         aboutUsRecycler.itemAnimator = DefaultItemAnimator()
         titleTextView.text=ConstantWords.about_us
+        staff_rel=requireView().findViewById(R.id.relSub)
+        staff_rel.setOnClickListener {
+            val intent =Intent(activity, StaffDirectoryActivity::class.java)
+            activity?.startActivity(intent)
+        }
         aboutUsRecycler.addOnItemClickListener(object : OnItemClickListener {
             @SuppressLint("SimpleDateFormat", "SetTextI18n")
             @RequiresApi(Build.VERSION_CODES.O)
@@ -116,6 +125,7 @@
                             aboutUsArrayList=response.body()!!.responseArray!!.data
                             if (aboutUsArrayList.size>0)
                             {
+                                staff_rel.visibility=View.VISIBLE
                                 var adapterAboutUs=AboutUsAdapter(aboutUsArrayList,mContext)
                                 aboutUsRecycler.adapter=adapterAboutUs
                             }
Index: app/src/main/res/layout/activity_absence_detail.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/activity_absence_detail.xml b/app/src/main/res/layout/activity_absence_detail.xml
new file mode 100644
--- /dev/null	(date 1688461848000)
+++ b/app/src/main/res/layout/activity_absence_detail.xml	(date 1688461848000)
@@ -0,0 +1,233 @@
+<?xml version="1.0" encoding="utf-8"?>
+<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:background="@color/white"
+    android:orientation="vertical">
+
+    <include
+        android:id="@+id/includeRel"
+        layout="@layout/layout_activity_header" />
+
+
+    <ScrollView
+        android:layout_width="match_parent"
+        android:layout_height="match_parent"
+        android:scrollbars="none">
+
+        <LinearLayout
+            android:layout_width="match_parent"
+            android:layout_height="match_parent"
+            android:orientation="vertical">
+
+            <LinearLayout
+                android:id="@+id/namelayout"
+                android:layout_width="match_parent"
+                android:layout_height="35dp"
+                android:layout_marginLeft="10dp"
+                android:layout_marginRight="10dp"
+                android:layout_marginTop="10dp"
+                android:gravity="center"
+                android:orientation="horizontal"
+                android:weightSum="100">
+
+                <com.nas.alreem.commonviews.CustomFontSansProTextBlackSemiBold
+                    android:id="@+id/stName"
+                    android:layout_width="0dp"
+                    android:layout_height="wrap_content"
+                    android:layout_weight="45"
+                    android:text="Name"
+                    android:textColor="@color/black"
+                    android:textSize="14sp" />
+
+                <com.nas.alreem.commonviews.CustomFontSansProTextBlack
+                    android:layout_width="wrap_content"
+                    android:layout_height="wrap_content"
+                    android:text=":"
+                    android:textColor="@color/black"
+                    />
+
+                <com.nas.alreem.commonviews.CustomTextViewRegular
+                    android:id="@+id/stnameValue"
+                    android:layout_width="0dp"
+                    android:layout_height="wrap_content"
+                    android:layout_marginLeft="10dp"
+                    android:layout_weight="50"
+                    android:text="Gayathri"
+                    android:textColor="@color/black"
+                    android:textSize="14sp" />
+            </LinearLayout>
+            <LinearLayout
+                android:id="@+id/studClassLinear"
+                android:layout_width="match_parent"
+                android:layout_height="35dp"
+                android:layout_marginLeft="10dp"
+                android:layout_marginRight="10dp"
+                android:layout_marginTop="5dp"
+                android:gravity="center"
+                android:orientation="horizontal"
+                android:weightSum="100">
+
+                <com.nas.alreem.commonviews.CustomFontSansProTextBlackSemiBold
+                    android:id="@+id/studClassTextView"
+                    android:layout_width="0dp"
+                    android:layout_height="wrap_content"
+                    android:layout_weight="45"
+                    android:text="Class"
+
+                    android:textColor="@color/black"
+                    android:textSize="14sp" />
+
+                <com.nas.alreem.commonviews.CustomFontSansProTextBlack
+                    android:layout_width="wrap_content"
+                    android:layout_height="wrap_content"
+                    android:text=":"
+                    android:textColor="@color/black"
+                    />
+
+                <com.nas.alreem.commonviews.CustomTextViewRegular
+                    android:id="@+id/studClassValue"
+                    android:layout_width="0dp"
+                    android:layout_height="wrap_content"
+                    android:layout_marginLeft="10dp"
+                    android:layout_weight="50"
+                    android:text="X1"
+                    android:textColor="@color/black"
+                    android:textSize="14sp" />
+            </LinearLayout>
+
+            <LinearLayout
+                android:id="@+id/fromlayout"
+                android:layout_width="match_parent"
+                android:layout_height="35dp"
+                android:layout_marginLeft="10dp"
+                android:layout_marginRight="10dp"
+                android:layout_marginTop="5dp"
+                android:gravity="center"
+                android:orientation="horizontal"
+                android:weightSum="100">
+
+                <com.nas.alreem.commonviews.CustomFontSansProTextBlackSemiBold
+                    android:id="@+id/leaveDateFrom"
+                    android:layout_width="0dp"
+                    android:layout_height="wrap_content"
+                    android:layout_weight="45"
+                    android:text="First day of absence"
+
+                    android:textColor="@color/black"
+                    android:textSize="14sp" />
+
+                <com.nas.alreem.commonviews.CustomFontSansProTextBlack
+                    android:layout_width="wrap_content"
+                    android:layout_height="wrap_content"
+                    android:text=":"
+                    android:textColor="@color/black"
+                    />
+
+                <com.nas.alreem.commonviews.CustomTextViewRegular
+                    android:id="@+id/leaveDateFromValue"
+                    android:layout_width="0dp"
+                    android:layout_height="wrap_content"
+                    android:layout_marginLeft="10dp"
+                    android:layout_weight="50"
+                    android:text="12/06/2017"
+                    android:textColor="@color/black"
+                    android:textSize="14sp" />
+            </LinearLayout>
+
+            <LinearLayout
+                android:id="@+id/tolayout"
+                android:layout_width="match_parent"
+                android:layout_height="35dp"
+                android:layout_marginLeft="10dp"
+                android:layout_marginRight="10dp"
+                android:layout_marginTop="5dp"
+                android:gravity="center"
+                android:orientation="horizontal"
+                android:weightSum="100">
+
+                <com.nas.alreem.commonviews.CustomFontSansProTextBlackSemiBold
+                    android:id="@+id/leaveDateTo"
+                    android:layout_width="0dp"
+                    android:layout_height="wrap_content"
+                    android:layout_weight="45"
+                    android:text="Return to school"
+                    android:textColor="@color/black"
+                    android:textSize="14sp" />
+
+                <com.nas.alreem.commonviews.CustomFontSansProTextBlack
+                    android:layout_width="wrap_content"
+                    android:layout_height="wrap_content"
+                    android:text=":"
+                    android:textColor="@color/black"
+                    />
+
+                <com.nas.alreem.commonviews.CustomTextViewRegular
+                    android:id="@+id/leaveDateToValue"
+                    android:layout_width="0dp"
+                    android:layout_height="wrap_content"
+                    android:layout_marginLeft="10dp"
+                    android:layout_weight="50"
+                    android:text="12/06/2017"
+                    android:textColor="@color/black"
+                    android:textSize="14sp" />
+            </LinearLayout>
+
+            <LinearLayout
+                android:id="@+id/reasonlayout"
+                android:layout_width="match_parent"
+                android:layout_height="wrap_content"
+                android:layout_marginLeft="10dp"
+                android:layout_marginRight="10dp"
+                android:layout_marginTop="5dp"
+                android:orientation="horizontal"
+                android:weightSum="100">
+
+                <com.nas.alreem.commonviews.CustomFontSansProTextBlackSemiBold
+                    android:id="@+id/reason"
+                    android:layout_width="0dp"
+                    android:layout_height="wrap_content"
+                    android:layout_weight="45"
+                    android:layout_gravity="top"
+                    android:layout_marginLeft="7dp"
+                    android:text="Reason for absence"
+                    android:textColor="@color/black"
+                    android:textSize="14sp" />
+
+                <com.nas.alreem.commonviews.CustomFontSansProTextBlack
+                    android:layout_width="wrap_content"
+                    android:layout_height="wrap_content"
+                    android:text=":"
+                    android:layout_gravity="top"
+                    android:textColor="@color/black"
+                    />
+
+                <!--<com.algubra.manager.CustomTextViewNormal
+                    android:id="@+id/reasonValue"
+                    android:layout_width="0dp"
+                    android:layout_height="match_parent"
+                    android:layout_marginLeft="10dp"
+                    android:layout_weight="50"
+                    android:text="@string/test_msg"
+                    android:textColor="@color/black"
+                    android:textSize="14sp"
+                    android:singleLine="false"
+                    />-->
+
+
+
+            </LinearLayout>
+            <com.nas.alreem.commonviews.CustomTextViewRegular
+                android:id="@+id/reasonValue"
+                android:layout_width="match_parent"
+                android:layout_height="wrap_content"
+                android:layout_marginLeft="20dp"
+                android:text="reason"
+                android:textColor="@color/black"
+                android:textSize="14sp"
+                android:layout_marginTop="10dp"
+                android:singleLine="false"
+                />
+        </LinearLayout>
+    </ScrollView>
+</LinearLayout>
Index: app/src/main/java/com/nas/alreem/activity/parent_meetings/ParentsEveninginfoActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/nas/alreem/activity/parent_meetings/ParentsEveninginfoActivity.kt b/app/src/main/java/com/nas/alreem/activity/parent_meetings/ParentsEveninginfoActivity.kt
new file mode 100644
--- /dev/null	(date 1689323689603)
+++ b/app/src/main/java/com/nas/alreem/activity/parent_meetings/ParentsEveninginfoActivity.kt	(date 1689323689603)
@@ -0,0 +1,136 @@
+package com.nas.alreem.activity.parent_meetings
+
+import android.content.Context
+import android.os.Bundle
+import android.view.View
+import android.widget.ImageView
+import android.widget.LinearLayout
+import androidx.appcompat.app.AppCompatActivity
+import androidx.viewpager.widget.ViewPager
+import com.nas.alreem.R
+import com.nas.alreem.activity.settings.adpter.TutorialViewPagerAdapter
+import java.util.*
+
+class ParentsEveninginfoActivity:AppCompatActivity() {
+    lateinit var mContext: Context
+    lateinit  var mImgCircle: Array<ImageView?>
+    lateinit var mLinearLayout: LinearLayout
+    var mTutorialViewPager: ViewPager? = null
+    var mTutorialViewPagerAdapter: TutorialViewPagerAdapter? = null
+    var mPhotoList = ArrayList(
+        Arrays.asList<Int>(R.drawable.tut_pe_1, R.drawable.tut_pe_2, R.drawable.tut_pe_3,
+        R.drawable.tut_pe_4, R.drawable.tut_pe_5, R.drawable.tut_pe_6, R.drawable.tut_pe_7,
+            R.drawable.tut_pe_8,R.drawable.tut_pe_9))
+    var dataType = 0
+    lateinit var imageSkip: ImageView
+
+    override fun onCreate(savedInstanceState: Bundle?) {
+        super.onCreate(savedInstanceState)
+        setContentView(R.layout.activity_tutorial)
+mContext=this
+        initfn()
+
+    }
+    private fun initfn(){
+        mTutorialViewPager = findViewById<View>(R.id.tutorialViewPager) as ViewPager
+        mLinearLayout=findViewById(R.id.linear)
+        imageSkip=findViewById(R.id.imageSkip)
+        mImgCircle = arrayOfNulls(mPhotoList.size)
+        mTutorialViewPagerAdapter = TutorialViewPagerAdapter(mContext!!, mPhotoList)
+        mTutorialViewPager!!.currentItem = 0
+        mTutorialViewPager!!.adapter = mTutorialViewPagerAdapter
+        addShowCountView(0)
+
+        imageSkip.setOnClickListener(View.OnClickListener {
+            finish()
+            /* if (dataType == 0) {
+                 finish()
+             } else {
+                 val loginIntent = Intent(mContext, LoginActivity::class.java)
+                 startActivity(loginIntent)
+                 finish()
+             }*/
+        })
+        mTutorialViewPager!!.setOnPageChangeListener(object : ViewPager.OnPageChangeListener {
+            override fun onPageSelected(position: Int) {
+
+//                for (int i = 0; i < mPhotoList.size(); i++) {
+//                    mImgCircle[i].setBackgroundDrawable(getResources()
+//                            .getDrawable(R.drawable.blackround));
+//                }
+//                if (position < mPhotoList.size()) {
+//                    mImgCircle[position].setBackgroundDrawable(getResources()
+//                            .getDrawable(R.drawable.redround));
+//                    mLinearLayout.removeAllViews();
+//                    addShowCountView(position);
+//                } else {
+////                    mLinearLayout.removeAllViews();
+////                    finish();
+//                    mLinearLayout.removeAllViews();
+//                    if (dataType==0)
+//                    {
+//                        finish();
+//
+//                    }
+//                    else
+//                    {
+//                        Intent intent = new Intent(mContext, ParentsAssociationListActivity.class);
+//                        intent.putExtra("tab_type", "Parents Association");
+//                        mContext.startActivity(intent);
+//                        finish();
+//                    }
+//
+//                }
+                for (i in mPhotoList.indices) {
+                    mImgCircle[i]!!.setBackgroundDrawable(
+                        resources
+                            .getDrawable(R.drawable.blackround)
+                    )
+                }
+                if (position < mPhotoList.size) {
+                    mImgCircle[position]!!.setBackgroundDrawable(
+                        resources
+                            .getDrawable(R.drawable.redround)
+                    )
+                    mLinearLayout.removeAllViews()
+                    addShowCountView(position)
+                } else {
+                    mLinearLayout.removeAllViews()
+                    if (dataType == 0) {
+                        finish()
+                    } else {
+
+//                        Intent intent = new Intent(mContext, ParentsEveningTimeSlotActivity.class);
+//                        intent.putExtra(JTAG_STAFF_ID,mStaffid);
+//                        intent.putExtra(JTAG_STUDENT_ID,mStudentId);
+//                        intent.putExtra("studentName",mStudentName);
+//                        intent.putExtra("staffName",mStaffName);
+//                        intent.putExtra("studentClass", mClass);
+//                        intent.putExtra("selectedDate", selectedDate);
+//                        mContext.startActivity(intent);
+                        finish()
+                    }
+                }
+            }
+
+            override fun onPageScrolled(arg0: Int, arg1: Float, arg2: Int) {}
+            override fun onPageScrollStateChanged(arg0: Int) {}
+        })
+        mTutorialViewPager!!.adapter!!.notifyDataSetChanged()
+    }
+    private fun addShowCountView(count: Int) {
+        for (i in mPhotoList.indices) {
+            mImgCircle[i] = ImageView(this)
+            val layoutParams = LinearLayout.LayoutParams(resources
+                .getDimension(R.dimen.home_circle_width).toInt(), resources.getDimension(
+                R.dimen.home_circle_height).toInt())
+            mImgCircle[i]!!.layoutParams = layoutParams
+            if (i == count) {
+                mImgCircle[i]!!.setBackgroundResource(R.drawable.redround)
+            } else {
+                mImgCircle[i]!!.setBackgroundResource(R.drawable.blackround)
+            }
+            mLinearLayout.addView(mImgCircle[i])
+        }
+    }
+}
\ No newline at end of file
Index: app/src/main/java/com/nas/alreem/activity/home/HomeActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.nas.alreem.activity.home\n\nimport android.Manifest\nimport android.annotation.SuppressLint\nimport android.content.ClipData\nimport android.content.Context\nimport android.content.Intent\nimport android.content.pm.PackageManager\nimport android.content.res.TypedArray\nimport android.graphics.Color\nimport android.os.Build\nimport android.os.Bundle\nimport android.util.Log\nimport android.view.View\nimport android.view.WindowManager\nimport android.widget.*\nimport androidx.activity.result.ActivityResultCallback\nimport androidx.activity.result.ActivityResultLauncher\nimport androidx.activity.result.contract.ActivityResultContracts\nimport androidx.annotation.RequiresApi\nimport androidx.appcompat.app.ActionBar\nimport androidx.appcompat.app.AppCompatActivity\nimport androidx.appcompat.widget.Toolbar\nimport androidx.core.app.ActivityCompat\nimport androidx.core.content.ContextCompat\nimport androidx.drawerlayout.widget.DrawerLayout\nimport androidx.fragment.app.Fragment\nimport androidx.fragment.app.FragmentManager\nimport com.google.android.material.snackbar.Snackbar\nimport com.nas.alreem.R\nimport com.nas.alreem.activity.home.adapter.HomeListAdapter\nimport com.nas.alreem.constants.DialogFunctions\nimport com.nas.alreem.constants.MyDragShadowBuilder\nimport com.nas.alreem.constants.PreferenceManager\nimport com.nas.alreem.fragment.about_us.AboutUsFragment\nimport com.nas.alreem.fragment.calendar.CalendarFragment\nimport com.nas.alreem.fragment.canteen.CanteenFragment\nimport com.nas.alreem.fragment.communication.CommunicationFragment\nimport com.nas.alreem.fragment.contact_us.ContactUsFragment\nimport com.nas.alreem.fragment.early_years.EarlyYearsFragment\nimport com.nas.alreem.fragment.gallery.GalleryFragment\nimport com.nas.alreem.fragment.home.HomeFragment\nimport com.nas.alreem.fragment.home.mContext\nimport com.nas.alreem.fragment.notifications.NotificationFragment\nimport com.nas.alreem.fragment.parents_essentials.ParentsEssentialFragment\nimport com.nas.alreem.fragment.payments.PaymentFragment\nimport com.nas.alreem.fragment.primary.PrimaryFragment\nimport com.nas.alreem.fragment.secondary.SecondaryFragment\nimport com.nas.alreem.fragment.settings.SettingsFragment\n\nclass HomeActivity : AppCompatActivity(), AdapterView.OnItemLongClickListener {\n\n    val manager = supportFragmentManager\n    lateinit var navigation_menu: ImageView\n    lateinit var settings_icon: ImageView\n    lateinit var shadowBuilder: MyDragShadowBuilder\n    lateinit var context: Context\n    lateinit var clipData: ClipData\n    lateinit var mListItemArray: Array<String>\n    var mListImgArray: TypedArray? = null\n    lateinit var linear_layout: LinearLayout\n    lateinit var drawer_layout: DrawerLayout\n    lateinit var toolbar: Toolbar\n    lateinit var logoClickImgView: ImageView\n    lateinit var homelist: ListView\n    var mFragment: Fragment? = null\n    var sPosition: Int = 0\n    lateinit var requestPermissionLauncher: ActivityResultLauncher<String>\n    @RequiresApi(Build.VERSION_CODES.M)\n    override fun onCreate(savedInstanceState: Bundle?) {\n        super.onCreate(savedInstanceState)\n        window.setFlags(\n            WindowManager.LayoutParams.FLAG_FULLSCREEN,\n            WindowManager.LayoutParams.FLAG_FULLSCREEN\n        )\n        setContentView(R.layout.activtiy_home)\n        Intent.FLAG_ACTIVITY_CLEAR_TASK\n        initializeUI()\n        showfragmenthome()\n\n    }\n\n    fun showfragmenthome() {\n        val transaction = manager.beginTransaction()\n        val fragment = HomeFragment()\n        transaction.replace(R.id.fragment_holder, fragment)\n        transaction.commit()\n    }\n\n    @SuppressLint(\"Recycle\", \"WrongViewCast\")\n    @RequiresApi(Build.VERSION_CODES.M)\n    private fun initializeUI() {\n\n\n        context = this\n        homelist = findViewById(R.id.homelistview)\n        drawer_layout = findViewById(R.id.drawer_layout)\n        linear_layout = findViewById(R.id.linear_layout)\n        var downarrow = findViewById<ImageView>(R.id.downarrow)\n\n        mListItemArray =\n            applicationContext.resources.getStringArray(R.array.navigation_item_names)\n        mListImgArray =\n            applicationContext.resources.obtainTypedArray(R.array.navigation_item_icons)\n        val width = (resources.displayMetrics.widthPixels / 1.7).toInt()\n        val params = linear_layout\n            .layoutParams as DrawerLayout.LayoutParams\n        params.width = width\n        linear_layout.layoutParams = params\n        val myListAdapter = HomeListAdapter(this, mListItemArray, mListImgArray!!)\n        homelist.adapter = myListAdapter\n        homelist.onItemLongClickListener = this\n        requestPermissionLauncher = registerForActivityResult(\n            ActivityResultContracts.RequestPermission(),\n            ActivityResultCallback<Boolean> { result ->\n                Log.e(\"result\", result.toString())\n                if (result) {\n                    // PERMISSION GRANTED\n                    Log.e(\"result\", result.toString())\n                    // Toast.makeText(mContext, String.valueOf(result), Toast.LENGTH_SHORT).show();\n                } else {\n                    // PERMISSION NOT GRANTED\n                    Log.e(\"denied\", result.toString())\n                    val snackbar = Snackbar.make(\n                        drawer_layout,\n                        \"Notification Permission Denied\",\n                        Snackbar.LENGTH_LONG\n                    )\n                        .setAction(\"Settings\") {\n                            val intent = Intent()\n                            intent.action = \"android.settings.APP_NOTIFICATION_SETTINGS\"\n                            intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK)\n                            intent.putExtra(\"app_package\", context.packageName)\n                            intent.putExtra(\"app_uid\", context.applicationInfo.uid)\n                            intent.putExtra(\n                                \"android.provider.extra.APP_PACKAGE\",\n                                context.packageName\n                            )\n                            startActivity(intent)\n                        }\n                    snackbar.setActionTextColor(Color.RED)\n\n                    val view = snackbar.view\n                    val tv = view\n                        .findViewById<View>(com.google.android.material.R.id.snackbar_text) as TextView\n                    tv.setTextColor(Color.WHITE)\n                    snackbar.show()\n\n\n                    // Toast.makeText(mContext, String.valueOf(result), Toast.LENGTH_SHORT).show();\n                }\n            }\n        )\n        askForNotificationPermission()\n\n        homelist.setOnItemClickListener { adapterView, view, position, id ->\n            val itemAtPos = adapterView.getItemAtPosition(position)\n            val itemIdAtPos = adapterView.getItemIdAtPosition(position)\n\n            if (PreferenceManager.getaccesstoken(context).equals(\"\"))\n            {\n              when(position)\n              {\n                  0->\n                  {\n                      mFragment = HomeFragment()\n                      replaceFragmentsSelected(position)\n                  }\n                  1->\n                  {\n                      //Notification\n                      DialogFunctions.commonErrorAlertDialog(context.resources.getString(R.string.alert),context.resources.getString(R.string.feature_only_for_registered_user),context)\n                  }\n                  2->\n                  {\n                      //Calendar\n                      DialogFunctions.commonErrorAlertDialog(context.resources.getString(R.string.alert),context.resources.getString(R.string.feature_only_for_registered_user),context)\n\n                  }\n                  3->\n                  {\n                      //payment\n                      DialogFunctions.commonErrorAlertDialog(context.resources.getString(R.string.alert),context.resources.getString(R.string.feature_only_for_registered_user),context)\n\n                  }\n                  4->\n                  {\n                      //lunchbox\n                      DialogFunctions.commonErrorAlertDialog(context.resources.getString(R.string.alert),context.resources.getString(R.string.feature_only_for_registered_user),context)\n\n                  }\n                 5->\n                  {\n                      //parents essential\n                      DialogFunctions.commonErrorAlertDialog(context.resources.getString(R.string.alert),context.resources.getString(R.string.feature_only_for_registered_user),context)\n\n                  }\n                  6->\n                  {\n                      //Early years\n                      mFragment = EarlyYearsFragment()\n                      replaceFragmentsSelected(position)\n                  }\n                  7->\n                  {\n                      //Primary\n                      mFragment = PrimaryFragment()\n                      replaceFragmentsSelected(position)\n                  }\n                  8->\n                  {\n                      //Secondary\n                      mFragment = SecondaryFragment()\n                      replaceFragmentsSelected(position)\n                  }\n                  9->\n                  {\n                      //Gallery\n                      DialogFunctions.commonErrorAlertDialog(context.resources.getString(R.string.alert),context.resources.getString(R.string.feature_only_for_registered_user),context)\n\n                  }\n                  10->\n                  {\n                      //About Us\n                      mFragment = AboutUsFragment()\n                      replaceFragmentsSelected(position)\n                  }\n                  11->\n                  {\n                      // Contact Us\n                      if (ActivityCompat.checkSelfPermission(\n                              context,\n                              Manifest.permission.ACCESS_FINE_LOCATION\n                          ) != PackageManager.PERMISSION_GRANTED && ActivityCompat.checkSelfPermission(\n                              context,\n                              Manifest.permission.ACCESS_COARSE_LOCATION\n                          ) != PackageManager.PERMISSION_GRANTED && ActivityCompat.checkSelfPermission(\n                              context,\n                              Manifest.permission.CALL_PHONE\n                          ) != PackageManager.PERMISSION_GRANTED\n                      ) {\n                          checkPermission()\n\n\n                      }\n                      else\n                      {\n                          mFragment = ContactUsFragment()\n                          replaceFragmentsSelected(position)\n                      }\n                  }\n              }\n            }\n            else\n            {\n                when(position)\n                {\n                    0->\n                    {\n                        mFragment = HomeFragment()\n                        replaceFragmentsSelected(position)\n                    }\n                    1->\n                    {\n                        //Notification\n                        mFragment = NotificationFragment()\n                        replaceFragmentsSelected(position)\n                    }\n                    2->\n                    {\n                        //Calendar\n                        mFragment = CalendarFragment()\n                        replaceFragmentsSelected(position)\n                    }\n                    3->\n                    {\n                        //payment\n                        mFragment = PaymentFragment()\n                        replaceFragmentsSelected(position)\n                    }\n                    4->\n                    {\n                        mFragment = CanteenFragment()\n                        replaceFragmentsSelected(position)\n//                        DialogFunctions.commonErrorAlertDialog(\"Coming Soon!\",\"This Feature will be available shortly\",\n//                            mContext\n//                        )\n                    }\n                    5->\n                    {\n                        mFragment = ParentsEssentialFragment()\n                        replaceFragmentsSelected(position)\n//                        DialogFunctions.commonErrorAlertDialog(\"Coming Soon!\",\"This Feature will be available shortly\",\n//                            mContext\n//                        )\n                    }\n                    6->\n                    {\n                        //Early years\n                        mFragment = EarlyYearsFragment()\n                        replaceFragmentsSelected(position)\n                    }\n                    7->\n                    {\n                        //Primary\n                        mFragment = PrimaryFragment()\n                        replaceFragmentsSelected(position)\n                    }\n                    8->\n                    {\n                        //Secondary\n                        mFragment = SecondaryFragment()\n                        replaceFragmentsSelected(position)\n                    }\n                    9->\n                    {\n                        //Gallery\n                        mFragment = GalleryFragment()\n                        replaceFragmentsSelected(position)\n                    }\n                    10->\n                    {\n                        //About Us\n                        mFragment = AboutUsFragment()\n                        replaceFragmentsSelected(position)\n                    }\n                    11->\n                    {\n                        // Contact Us\n                        if (ActivityCompat.checkSelfPermission(\n                                context,\n                                Manifest.permission.ACCESS_FINE_LOCATION\n                            ) != PackageManager.PERMISSION_GRANTED && ActivityCompat.checkSelfPermission(\n                                context,\n                                Manifest.permission.ACCESS_COARSE_LOCATION\n                            ) != PackageManager.PERMISSION_GRANTED && ActivityCompat.checkSelfPermission(\n                                context,\n                                Manifest.permission.CALL_PHONE\n                            ) != PackageManager.PERMISSION_GRANTED\n                        ) {\n                            checkPermission()\n\n\n                        } else {\n                            mFragment = ContactUsFragment()\n                            replaceFragmentsSelected(position)\n                        }\n                    }\n\n                }\n            }\n\n\n\n        }\n\n        supportActionBar!!.displayOptions = ActionBar.DISPLAY_SHOW_CUSTOM\n        supportActionBar!!.setDisplayShowCustomEnabled(true)\n        supportActionBar!!.setCustomView(R.layout.custom_titlebar)\n        supportActionBar!!.elevation = 0F\n\n        var view = supportActionBar!!.customView\n        toolbar = view.parent as Toolbar\n        toolbar.setBackgroundColor(resources.getColor(R.color.white))\n        toolbar.setContentInsetsAbsolute(0, 0)\n\n        navigation_menu = view.findViewById(R.id.action_bar_back)\n        settings_icon = view.findViewById(R.id.action_bar_forward)\n        logoClickImgView = view.findViewById(R.id.logoClickImgView)\n        settings_icon.visibility = View.VISIBLE\n        homelist.setBackgroundColor(getColor(R.color.split_bg))\n        homelist.setOnScrollListener(object : AbsListView.OnScrollListener {\n            override fun onScrollStateChanged(view: AbsListView, scrollState: Int) {}\n            override fun onScroll(\n                view: AbsListView,\n                firstVisibleItem: Int,\n                visibleItemCount: Int,\n                totalItemCount: Int\n            ) {\n                if (view.id == homelist.id) {\n                    val currentFirstVisibleItem: Int = homelist.lastVisiblePosition\n\n                    if (currentFirstVisibleItem == totalItemCount - 1) {\n                        downarrow.visibility = View.INVISIBLE\n                    } else {\n                        downarrow.visibility = View.VISIBLE\n                    }\n                }\n            }\n        })\n        mListItemArray = context.resources.getStringArray(R.array.navigation_item_names)\n        mListImgArray = context.resources.obtainTypedArray(R.array.navigation_item_icons)\n        navigation_menu.setOnClickListener {\n            if (drawer_layout.isDrawerOpen(linear_layout)) {\n                drawer_layout.closeDrawer(linear_layout)\n            } else {\n                drawer_layout.openDrawer(linear_layout)\n            }\n        }\n\n        logoClickImgView.setOnClickListener(View.OnClickListener {\n            settings_icon.visibility = View.VISIBLE\n            if (drawer_layout.isDrawerOpen(linear_layout)) {\n                drawer_layout.closeDrawer(linear_layout)\n            }\n            Intent.FLAG_ACTIVITY_NEW_TASK or Intent.FLAG_ACTIVITY_CLEAR_TASK\n\n            mFragment = HomeFragment()\n            supportFragmentManager.popBackStack(null, FragmentManager.POP_BACK_STACK_INCLUSIVE)\n        })\n\n\n\n        settings_icon.setOnClickListener {\n            val fm = supportFragmentManager\n            val currentFragment =\n                fm.findFragmentById(R.id.fragment_holder)\n            if (drawer_layout.isDrawerOpen(linear_layout)) {\n                drawer_layout.closeDrawer(linear_layout)\n            }\n            mFragment = SettingsFragment()\n            if (mFragment != null) {\n                val fragmentManager =\n                    supportFragmentManager\n                fragmentManager.beginTransaction()\n                    .add(R.id.fragment_holder, mFragment!!, \"Settings\")\n                    .addToBackStack(\"Settings\").commit()\n\n                supportActionBar!!.setTitle(R.string.null_value)\n                settings_icon.visibility = View.INVISIBLE\n\n            }\n        }\n\n    }\n\n\n    override fun onItemLongClick(parent: AdapterView<*>?, view: View?, position: Int, id: Long): Boolean\n    {\n\n        shadowBuilder = MyDragShadowBuilder(view)\n        sPosition = position\n        val selecteditem = parent?.getItemIdAtPosition(position)\n        view?.setBackgroundColor(Color.parseColor(\"#47C2D1\"))\n        val data = ClipData.newPlainText(\"\", \"\")\n        view?.startDrag(data, shadowBuilder, view, 0)\n        view!!.visibility = View.VISIBLE\n        drawer_layout.closeDrawer(linear_layout)\n        return false\n    }\n\n    private fun replaceFragmentsSelected(position: Int) {\n        settings_icon.visibility = View.VISIBLE\n        if (mFragment != null) {\n            val fragmentManager = supportFragmentManager\n            fragmentManager\n                .beginTransaction()\n                .replace(\n                    R.id.fragment_holder, mFragment!!,\n                    mListItemArray[position]\n                )\n                .addToBackStack(mListItemArray[position]).commitAllowingStateLoss()\n            homelist.setItemChecked(position, true)\n            homelist.setSelection(position)\n            supportActionBar!!.setTitle(R.string.null_value)\n            if (drawer_layout.isDrawerOpen(linear_layout)) {\n                drawer_layout.closeDrawer(linear_layout)\n            }\n        }\n    }\n\n    override fun onBackPressed() {\n        super.onBackPressed()\n        if (drawer_layout.isDrawerOpen(linear_layout)) {\n            drawer_layout.closeDrawer(linear_layout)\n        }\n        settings_icon.visibility = View.VISIBLE\n\n    }\n\n    fun fragmentIntent(mFragment: Fragment?) {\n        if (mFragment != null) {\n            val fragmentManager = supportFragmentManager\n            fragmentManager.beginTransaction()\n                .add(R.id.fragment_holder, mFragment, \"\")\n                .addToBackStack(\"\").commitAllowingStateLoss() //commit\n        }\n    }\n\n\n\n    private fun askForNotificationPermission() {\n        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.TIRAMISU) {\n            if (ContextCompat.checkSelfPermission(this, Manifest.permission.POST_NOTIFICATIONS) ==\n                PackageManager.PERMISSION_GRANTED\n            ) {\n                // FCM SDK (and your app) can post notifications.\n            } else if (shouldShowRequestPermissionRationale(Manifest.permission.POST_NOTIFICATIONS)) {\n                // TODO: display an educational UI explaining to the user the features that will be enabled\n                //       by them granting the POST_NOTIFICATION permission. This UI should provide the user\n                //       \"OK\" and \"No thanks\" buttons. If the user selects \"OK,\" directly request the permission.\n                //       If the user selects \"No thanks,\" allow the user to continue without notifications.\n            } else {\n                // Directly ask for the permission\n                requestPermissionLauncher.launch(Manifest.permission.POST_NOTIFICATIONS)\n            }\n        }\n    }\n\n    override fun onResume() {\n        super.onResume()\n        Intent.FLAG_ACTIVITY_CLEAR_TASK\n\n    }\n    private fun checkPermission() {\n        if (ContextCompat.checkSelfPermission(context, Manifest.permission.ACCESS_FINE_LOCATION) != PackageManager.PERMISSION_GRANTED\n            || ContextCompat.checkSelfPermission(context, Manifest.permission.ACCESS_COARSE_LOCATION) != PackageManager.PERMISSION_GRANTED\n            || ContextCompat.checkSelfPermission(context, Manifest.permission.CALL_PHONE) != PackageManager.PERMISSION_GRANTED\n//            || ContextCompat.checkSelfPermission(context, Manifest.permission.ACCESS_NOTIFICATION_POLICY) != PackageManager.PERMISSION_GRANTED\n        ) {\n            ActivityCompat.requestPermissions(\n                this,\n                arrayOf(\n                    Manifest.permission.ACCESS_FINE_LOCATION,\n                    Manifest.permission.ACCESS_COARSE_LOCATION,\n                    Manifest.permission.CALL_PHONE\n//                    ,\n//                    Manifest.permission.ACCESS_NOTIFICATION_POLICY\n                ),\n                123\n            )\n        }\n    }\n    }
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/nas/alreem/activity/home/HomeActivity.kt b/app/src/main/java/com/nas/alreem/activity/home/HomeActivity.kt
--- a/app/src/main/java/com/nas/alreem/activity/home/HomeActivity.kt	(revision b2ad66f8612edd03349ffa4aaee582fd0005cdb4)
+++ b/app/src/main/java/com/nas/alreem/activity/home/HomeActivity.kt	(date 1689328583275)
@@ -33,6 +33,7 @@
 import com.nas.alreem.constants.MyDragShadowBuilder
 import com.nas.alreem.constants.PreferenceManager
 import com.nas.alreem.fragment.about_us.AboutUsFragment
+import com.nas.alreem.fragment.absence.AbsenceFragment
 import com.nas.alreem.fragment.calendar.CalendarFragment
 import com.nas.alreem.fragment.canteen.CanteenFragment
 import com.nas.alreem.fragment.communication.CommunicationFragment
@@ -42,11 +43,13 @@
 import com.nas.alreem.fragment.home.HomeFragment
 import com.nas.alreem.fragment.home.mContext
 import com.nas.alreem.fragment.notifications.NotificationFragment
+import com.nas.alreem.fragment.parent_meetings.ParentMeetingsFragment
 import com.nas.alreem.fragment.parents_essentials.ParentsEssentialFragment
 import com.nas.alreem.fragment.payments.PaymentFragment
 import com.nas.alreem.fragment.primary.PrimaryFragment
 import com.nas.alreem.fragment.secondary.SecondaryFragment
 import com.nas.alreem.fragment.settings.SettingsFragment
+import com.nas.alreem.fragment.staff_directory.StaffDirectoryFragment
 
 class HomeActivity : AppCompatActivity(), AdapterView.OnItemLongClickListener {
 
@@ -178,54 +181,84 @@
 
                   }
                   3->
+                  {
+                      //payment
+                      //absence
+                      DialogFunctions.commonErrorAlertDialog(context.resources.getString(R.string.alert),context.resources.getString(R.string.feature_only_for_registered_user),context)
+
+                  }
+                  4->
                   {
+                      //lunchbox
                       //payment
                       DialogFunctions.commonErrorAlertDialog(context.resources.getString(R.string.alert),context.resources.getString(R.string.feature_only_for_registered_user),context)
 
                   }
-                  4->
+                 5->
                   {
+                      //parents essential
                       //lunchbox
                       DialogFunctions.commonErrorAlertDialog(context.resources.getString(R.string.alert),context.resources.getString(R.string.feature_only_for_registered_user),context)
 
                   }
-                 5->
+                  6->
                   {
                       //parents essential
                       DialogFunctions.commonErrorAlertDialog(context.resources.getString(R.string.alert),context.resources.getString(R.string.feature_only_for_registered_user),context)
 
                   }
-                  6->
+                  7->
                   {
                       //Early years
                       mFragment = EarlyYearsFragment()
                       replaceFragmentsSelected(position)
                   }
-                  7->
+                  8->
                   {
                       //Primary
                       mFragment = PrimaryFragment()
                       replaceFragmentsSelected(position)
                   }
-                  8->
+                  9->
                   {
                       //Secondary
                       mFragment = SecondaryFragment()
                       replaceFragmentsSelected(position)
                   }
-                  9->
+                  10->
                   {
                       //Gallery
+                      //Enrichment
                       DialogFunctions.commonErrorAlertDialog(context.resources.getString(R.string.alert),context.resources.getString(R.string.feature_only_for_registered_user),context)
 
                   }
-                  10->
+                  11->
+                  {
+                      //Gallery
+                      //parent meetings
+                      DialogFunctions.commonErrorAlertDialog(context.resources.getString(R.string.alert),context.resources.getString(R.string.feature_only_for_registered_user),context)
+
+                  }
+                  12->
+                  {
+                      //Gallery
+                      //permission forms
+                      DialogFunctions.commonErrorAlertDialog(context.resources.getString(R.string.alert),context.resources.getString(R.string.feature_only_for_registered_user),context)
+
+                  }
+                  13->
+                  {
+                      //Gallery
+                      DialogFunctions.commonErrorAlertDialog(context.resources.getString(R.string.alert),context.resources.getString(R.string.feature_only_for_registered_user),context)
+
+                  }
+                  14->
                   {
                       //About Us
                       mFragment = AboutUsFragment()
                       replaceFragmentsSelected(position)
                   }
-                  11->
+                  15->
                   {
                       // Contact Us
                       if (ActivityCompat.checkSelfPermission(
@@ -273,12 +306,18 @@
                         replaceFragmentsSelected(position)
                     }
                     3->
+                    {
+                        //About Us
+                        mFragment = AbsenceFragment()
+                        replaceFragmentsSelected(position)
+                    }
+                    4->
                     {
                         //payment
                         mFragment = PaymentFragment()
                         replaceFragmentsSelected(position)
                     }
-                    4->
+                    5->
                     {
                         mFragment = CanteenFragment()
                         replaceFragmentsSelected(position)
@@ -286,7 +325,7 @@
 //                            mContext
 //                        )
                     }
-                    5->
+                    6->
                     {
                         mFragment = ParentsEssentialFragment()
                         replaceFragmentsSelected(position)
@@ -294,37 +333,56 @@
 //                            mContext
 //                        )
                     }
-                    6->
+                    7->
                     {
                         //Early years
                         mFragment = EarlyYearsFragment()
                         replaceFragmentsSelected(position)
                     }
-                    7->
+                    8->
                     {
                         //Primary
                         mFragment = PrimaryFragment()
                         replaceFragmentsSelected(position)
                     }
-                    8->
+                    9->
                     {
                         //Secondary
                         mFragment = SecondaryFragment()
                         replaceFragmentsSelected(position)
                     }
-                    9->
+                    /*10->
+                    {
+                        //Secondary
+                        mFragment = EnrichmentFragment()
+                        replaceFragmentsSelected(position)
+                    }*/
+                    11->
+                    {
+                        //About Us
+                        mFragment = ParentMeetingsFragment()
+                        replaceFragmentsSelected(position)
+                    }
+
+                    /*12->
+                    {
+                        //About Us
+                        mFragment = PermissionFragment()
+                        replaceFragmentsSelected(position)
+                    }*/
+                    13->
                     {
                         //Gallery
                         mFragment = GalleryFragment()
                         replaceFragmentsSelected(position)
                     }
-                    10->
+                    14->
                     {
                         //About Us
                         mFragment = AboutUsFragment()
                         replaceFragmentsSelected(position)
                     }
-                    11->
+                    15->
                     {
                         // Contact Us
                         if (ActivityCompat.checkSelfPermission(
@@ -347,6 +405,9 @@
                         }
                     }
 
+
+
+
                 }
             }
 
Index: app/src/main/java/com/nas/alreem/activity/staff_directory/StaffDirectoryActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/nas/alreem/activity/staff_directory/StaffDirectoryActivity.kt b/app/src/main/java/com/nas/alreem/activity/staff_directory/StaffDirectoryActivity.kt
new file mode 100644
--- /dev/null	(date 1688563668000)
+++ b/app/src/main/java/com/nas/alreem/activity/staff_directory/StaffDirectoryActivity.kt	(date 1688563668000)
@@ -0,0 +1,183 @@
+package com.nas.alreem.activity.staff_directory
+
+import android.content.Context
+import android.content.Intent
+import android.os.Bundle
+import android.text.Editable
+import android.text.TextWatcher
+import android.util.Log
+import android.view.View
+import android.view.animation.Animation
+import android.view.animation.AnimationUtils
+import android.widget.EditText
+import android.widget.ImageView
+import android.widget.ProgressBar
+import android.widget.RelativeLayout
+import android.widget.TextView
+import androidx.appcompat.app.AppCompatActivity
+import androidx.recyclerview.widget.LinearLayoutManager
+import androidx.recyclerview.widget.RecyclerView
+import com.bumptech.glide.Glide
+import com.bumptech.glide.load.engine.DiskCacheStrategy
+import com.bumptech.glide.load.resource.bitmap.CircleCrop
+import com.nas.alreem.R
+import com.nas.alreem.activity.canteen.model.TimeExceedModel
+import com.nas.alreem.activity.home.HomeActivity
+import com.nas.alreem.activity.parent_meetings.ReviewAppointmentsRecyclerViewActivity
+import com.nas.alreem.activity.staff_directory.adapter.StaffCategoryAdapter
+import com.nas.alreem.activity.staff_directory.model.StaffCatListResponseModel
+import com.nas.alreem.activity.staff_directory.model.StaffDeptListModel
+import com.nas.alreem.constants.ConstantFunctions
+import com.nas.alreem.constants.ConstantWords
+import com.nas.alreem.constants.DialogFunctions
+import com.nas.alreem.constants.OnItemClickListener
+import com.nas.alreem.constants.PreferenceManager
+import com.nas.alreem.constants.addOnItemClickListener
+import com.nas.alreem.rest.ApiClient
+import retrofit2.Call
+import retrofit2.Callback
+import retrofit2.Response
+import java.util.Locale
+
+class StaffDirectoryActivity:AppCompatActivity() {
+    lateinit var mContext:Context
+    lateinit var backRelative: RelativeLayout
+    lateinit var heading: TextView
+    lateinit var logoClickImgView: ImageView
+    lateinit var progressDialogAdd: ProgressBar
+    lateinit var staff_cat_rec:RecyclerView
+    lateinit var searchtxt: EditText
+    lateinit var searchbtn: ImageView
+    lateinit var staffCatList: ArrayList<StaffDeptListModel>
+    lateinit var filtered: ArrayList<StaffDeptListModel>
+    var cat_id:Int=0
+    var cat_name:String=""
+
+    override fun onCreate(savedInstanceState: Bundle?) {
+        super.onCreate(savedInstanceState)
+        setContentView(R.layout.activity_staff_directory)
+
+        mContext=this
+        initfn()
+        callStaffCatListApi()
+
+    }
+    private fun initfn() {
+        heading=findViewById(R.id.heading)
+        heading.text= ConstantWords.earlypickup
+        backRelative=findViewById(R.id.backRelative)
+        logoClickImgView=findViewById(R.id.logoClickImgView)
+        progressDialogAdd=findViewById(R.id.progressDialogAdd)
+        staff_cat_rec=findViewById(R.id.mStaffDirectoryListView)
+        searchbtn = findViewById(R.id.btnImgsearch)
+        searchtxt =findViewById(R.id.searchEditText)
+        staffCatList= ArrayList()
+        filtered= ArrayList()
+
+        searchbtn.setOnClickListener(View.OnClickListener {
+            if (staffCatList.size > 0) {
+                filtered = ArrayList<StaffDeptListModel>()
+                for (i in staffCatList.indices) {
+                    if (staffCatList.get(i).department_name
+                            .lowercase(Locale.getDefault())
+                            .contains(searchtxt.text.toString().lowercase(Locale.getDefault())))
+                    {
+                        filtered.add(staffCatList.get(i))
+                    }
+                }
+                staff_cat_rec.layoutManager=LinearLayoutManager(mContext)
+                var staff_cat_adapter= StaffCategoryAdapter(mContext,filtered)
+                staff_cat_rec.adapter=staff_cat_adapter
+
+            }
+            // AppUtils.hideKeyBoard(mContext)
+        })
+        searchtxt.addTextChangedListener(object : TextWatcher {
+            override fun onTextChanged(
+                s: CharSequence, start: Int,
+                before: Int, count: Int
+            ) {
+                // TODO Auto-generated method stub
+                if (staffCatList.size > 0) {
+                    filtered = ArrayList<StaffDeptListModel>()
+                    for (i in staffCatList.indices) {
+                        if ((staffCatList.get(i).department_name
+                                .lowercase(Locale.getDefault()).contains(s.toString().lowercase(
+                                    Locale.getDefault()))
+                                    ))
+                        {
+                            filtered.add(staffCatList.get(i))
+                        }
+                    }
+                    staff_cat_rec.layoutManager=LinearLayoutManager(mContext)
+                    var staff_cat_adapter= StaffCategoryAdapter(mContext,filtered)
+                    staff_cat_rec.adapter=staff_cat_adapter
+
+                }
+            }
+
+            override fun beforeTextChanged(
+                s: CharSequence, start: Int,
+                count: Int, after: Int
+            ) {
+                // TODO Auto-generated method stub
+            }
+
+            override fun afterTextChanged(s: Editable) {
+                // TODO Auto-generated method stub
+            }
+        })
+        staff_cat_rec.addOnItemClickListener(object: OnItemClickListener {
+            override fun onItemClicked(position: Int, view: View) {
+                // Your logic
+                //progressDialog.visibility=View.VISIBLE
+                val aniRotate: Animation =
+                    AnimationUtils.loadAnimation(mContext, R.anim.linear_interpolator)
+                cat_id=staffCatList[position].id
+                cat_name=staffCatList[position].department_name
+                val intent = Intent(mContext, StaffDetailActivity::class.java)
+                intent.putExtra("cat_id",cat_id)
+                intent.putExtra("cat_id",cat_id)
+                startActivity(intent)
+            }
+        })
+        backRelative.setOnClickListener(View.OnClickListener {
+            finish()
+        })
+        heading.text= ConstantWords.staff_directory
+        logoClickImgView.setOnClickListener(View.OnClickListener {
+            val intent = Intent(mContext, HomeActivity::class.java)
+            intent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP)
+            startActivity(intent)
+        })
+    }
+    private fun callStaffCatListApi(){
+        val token = PreferenceManager.getaccesstoken(mContext)
+        progressDialogAdd.visibility=View.VISIBLE
+        staffCatList= ArrayList()
+        val call: Call<StaffCatListResponseModel> = ApiClient.getClient.staff_depatrtments("Bearer "+token)
+        call.enqueue(object : Callback<StaffCatListResponseModel> {
+            override fun onFailure(call: Call<StaffCatListResponseModel>, t: Throwable) {
+                Log.e("Failed", t.localizedMessage)
+                progressDialogAdd.visibility=View.GONE
+            }
+            override fun onResponse(call: Call<StaffCatListResponseModel>, response: Response<StaffCatListResponseModel>) {
+                val responsedata = response.body()
+                if (responsedata!!.status==100) {
+                    progressDialogAdd.visibility=View.GONE
+                    staffCatList=responsedata.responseArray.departments
+                    staff_cat_rec.layoutManager=LinearLayoutManager(mContext)
+                    var staff_cat_adapter= StaffCategoryAdapter(mContext,staffCatList)
+                    staff_cat_rec.adapter=staff_cat_adapter
+
+
+                } else
+                {
+
+                    DialogFunctions.commonErrorAlertDialog(mContext.resources.getString(R.string.alert), ConstantFunctions.commonErrorString(response.body()!!.status), mContext)
+                }
+            }
+
+        })
+    }
+}
\ No newline at end of file
Index: app/src/main/java/com/nas/alreem/activity/absence/model/EarlyPickupListArray.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/nas/alreem/activity/absence/model/EarlyPickupListArray.kt b/app/src/main/java/com/nas/alreem/activity/absence/model/EarlyPickupListArray.kt
new file mode 100644
--- /dev/null	(date 1688385992000)
+++ b/app/src/main/java/com/nas/alreem/activity/absence/model/EarlyPickupListArray.kt	(date 1688385992000)
@@ -0,0 +1,14 @@
+package com.nas.alreem.activity.absence.model
+
+import com.google.gson.annotations.SerializedName
+
+class EarlyPickupListArray (
+    @SerializedName("id") val id: Int,
+    @SerializedName("pickup_time") val pickup_time: String,
+    @SerializedName("reason") val reason: String,
+    @SerializedName("pickup_by_whom") val pickup_by_whom: String,
+    @SerializedName("reason_for_rejection") val reason_for_rejection: String,
+    @SerializedName("status") val status: Int,
+    @SerializedName("parent_name") val parent_name: String,
+    @SerializedName("pickup_date") val pickup_date: String
+)
\ No newline at end of file
Index: app/src/main/res/layout/adapter_review_list.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/adapter_review_list.xml b/app/src/main/res/layout/adapter_review_list.xml
new file mode 100644
--- /dev/null	(date 1689142374286)
+++ b/app/src/main/res/layout/adapter_review_list.xml	(date 1689142374286)
@@ -0,0 +1,340 @@
+<?xml version="1.0" encoding="utf-8"?>
+<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    xmlns:card_view="http://schemas.android.com/tools"
+    android:layout_width="wrap_content"
+    android:layout_height="wrap_content">
+
+    <androidx.cardview.widget.CardView
+        android:id="@+id/card_view"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:elevation="0dp"
+        card_view:cardCornerRadius="0dp">
+
+        <RelativeLayout
+            android:id="@+id/rel"
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:background="@color/white">
+
+            <RelativeLayout
+                android:id="@+id/gridClickRelative"
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:layout_marginBottom="5dp"
+                android:padding="1dp">
+
+                <com.github.siyamed.shapeimageview.CircularImageView
+                    android:id="@+id/imgView"
+                    android:layout_width="65dp"
+                    android:layout_height="65dp"
+                    android:src="@drawable/student"
+                    app:siBorderColor="#A0DAE5"
+                    app:siBorderWidth="1dp" />
+
+            </RelativeLayout>
+
+            <LinearLayout
+                android:id="@+id/maincell"
+                android:layout_width="match_parent"
+                android:layout_height="wrap_content"
+                android:layout_marginLeft="5dp"
+                android:layout_marginRight="5dp"
+                android:layout_toLeftOf="@+id/confirmationImageview"
+                android:layout_toRightOf="@+id/gridClickRelative"
+                android:orientation="vertical">
+
+                <LinearLayout
+                    android:layout_width="match_parent"
+                    android:layout_height="wrap_content"
+                    android:gravity="center_vertical"
+                    android:orientation="horizontal"
+                    android:weightSum="100">
+
+                    <LinearLayout
+                        android:layout_width="0dp"
+                        android:layout_height="wrap_content"
+                        android:layout_weight="25">
+
+                        <com.nas.alreem.commonviews.CustomFontSansProTextBlack
+                            android:id="@+id/studNameTextView"
+                            android:layout_width="match_parent"
+                            android:layout_height="wrap_content"
+                            android:maxLines="1"
+                            android:textSize="16dp"
+
+                            android:text="Student" />
+                    </LinearLayout>
+
+                    <LinearLayout
+                        android:layout_width="0dp"
+                        android:layout_height="wrap_content"
+                        android:layout_weight="5">
+
+                        <com.nas.alreem.commonviews.CustomFontSansProTextBlack
+                            android:layout_width="match_parent"
+                            android:layout_height="wrap_content"
+                            android:maxLines="1"
+                            android:gravity="center"
+
+                            android:text=":" />
+
+                    </LinearLayout>
+
+                    <LinearLayout
+                        android:layout_width="0dp"
+
+                        android:layout_height="wrap_content"
+                        android:layout_weight="70">
+
+                        <com.nas.alreem.commonviews.CustomEditTextViewSemiBold
+                            android:id="@+id/studNameTV"
+                            android:layout_width="match_parent"
+                            android:layout_height="wrap_content"
+                            android:maxLines="2"
+                            android:textSize="16dp"
+
+                            android:text="Student"
+                            android:textColor="@color/black" />
+
+                    </LinearLayout>
+
+                </LinearLayout>
+
+                <LinearLayout
+                    android:layout_width="match_parent"
+                    android:layout_height="wrap_content"
+                    android:gravity="center_vertical"
+                    android:orientation="horizontal"
+
+                    android:weightSum="100">
+
+                    <LinearLayout
+                        android:layout_width="0dp"
+                        android:layout_height="wrap_content"
+                        android:layout_weight="25">
+
+                        <com.nas.alreem.commonviews.CustomFontSansProTextBlack
+                            android:id="@+id/classNameTextView"
+                            android:layout_width="match_parent"
+                            android:layout_height="wrap_content"
+                            android:maxLines="1"
+                            android:textSize="16dp"
+
+                            android:text="Class" />
+                    </LinearLayout>
+
+                    <LinearLayout
+                        android:layout_width="0dp"
+                        android:layout_height="wrap_content"
+
+                        android:layout_weight="5">
+
+                        <com.nas.alreem.commonviews.CustomFontSansProTextBlack
+                            android:layout_width="match_parent"
+                            android:layout_height="wrap_content"
+                            android:maxLines="1"
+                            android:gravity="center"
+
+                            android:text=":" />
+
+                    </LinearLayout>
+
+                    <LinearLayout
+                        android:layout_width="0dp"
+                        android:layout_height="wrap_content"
+                        android:layout_weight="70">
+
+                        <com.nas.alreem.commonviews.CustomTextViewSemiBold
+                            android:id="@+id/classNameTV"
+                            android:layout_width="match_parent"
+                            android:layout_height="wrap_content"
+                            android:maxLines="2"
+                            android:text="Student"
+                            android:textSize="16dp"
+
+                            android:textColor="@color/black" />
+
+                    </LinearLayout>
+
+                </LinearLayout>
+
+                <LinearLayout
+                    android:layout_width="match_parent"
+                    android:layout_height="wrap_content"
+                    android:gravity="center_vertical"
+                    android:orientation="horizontal"
+
+                    android:weightSum="100">
+
+                    <LinearLayout
+                        android:layout_width="0dp"
+                        android:layout_height="wrap_content"
+                        android:layout_weight="25">
+
+                        <com.nas.alreem.commonviews.CustomFontSansProTextBlack
+                            android:id="@+id/staffNameTextView"
+                            android:layout_width="match_parent"
+                            android:layout_height="wrap_content"
+                            android:maxLines="1"
+                            android:textSize="16dp"
+
+                            android:text="Staff" />
+                    </LinearLayout>
+
+                    <LinearLayout
+                        android:layout_width="0dp"
+                        android:layout_height="wrap_content"
+                        android:layout_weight="5">
+
+                        <com.nas.alreem.commonviews.CustomFontSansProTextBlack
+                            android:layout_width="match_parent"
+                            android:layout_height="wrap_content"
+                            android:maxLines="1"
+                            android:gravity="center"
+
+                            android:text=":" />
+
+                    </LinearLayout>
+
+                    <LinearLayout
+                        android:layout_width="0dp"
+                        android:layout_height="wrap_content"
+                        android:layout_weight="70">
+
+                        <com.nas.alreem.commonviews.CustomTextViewSemiBold
+                            android:id="@+id/staffNameTV"
+                            android:layout_width="match_parent"
+                            android:layout_height="wrap_content"
+                            android:maxLines="2"
+                            android:text="Student"
+                            android:textSize="16dp"
+                            android:textColor="@color/black" />
+
+                    </LinearLayout>
+
+                </LinearLayout>
+                <Button
+                    android:id="@+id/vpml"
+                    android:layout_width="match_parent"
+                    android:layout_height="30dp"
+                    android:gravity="center"
+                    android:layout_marginRight="20dp"
+                    android:text="Click here for VPM Link"
+                    android:background="@drawable/button_blue"
+                    android:textColor="@color/white"
+                    android:visibility="gone"/>
+            </LinearLayout>
+
+            <ImageView
+                android:id="@+id/confirmationImageview"
+                android:layout_width="35dp"
+                android:layout_height="35dp"
+                android:layout_alignParentRight="true"
+                android:background="@drawable/tick_icon" />
+
+            <ImageView
+                android:id="@+id/addTocalendar"
+                android:layout_width="55dp"
+                android:layout_height="50dp"
+                android:layout_below="@+id/reserveLinear"
+                android:layout_marginTop="2dp"
+                android:layout_marginRight="5dp"
+                android:layout_toLeftOf="@+id/confirmAppointment"
+                android:background="@drawable/addtocalendar"
+                android:visibility="visible" />
+
+            <ImageView
+                android:id="@+id/cancelAppointment"
+                android:layout_width="40dp"
+                android:layout_height="50dp"
+                android:layout_below="@+id/reserveLinear"
+                android:layout_alignParentRight="true"
+                android:layout_marginTop="2dp"
+                android:background="@drawable/cancel"
+                android:visibility="visible" />
+            <ImageView
+                android:id="@+id/confirmAppointment"
+                android:layout_width="40dp"
+                android:layout_below="@+id/reserveLinear"
+                android:layout_toLeftOf="@+id/cancelAppointment"
+                android:layout_height="50dp"
+                android:layout_marginTop="2dp"
+                android:layout_marginRight="5dp"
+                android:visibility="gone"
+                android:background="@drawable/confirm" />
+
+            <LinearLayout
+                android:id="@+id/reserveLinear"
+                android:layout_width="match_parent"
+                android:layout_height="wrap_content"
+                android:layout_below="@+id/maincell"
+                android:gravity="center_vertical"
+
+                android:orientation="horizontal">
+
+                <com.nas.alreem.commonviews.CustomFontSansProTextBlack
+                    android:id="@+id/reserveTextView"
+                    android:layout_width="wrap_content"
+                    android:layout_height="wrap_content"
+                    android:maxLines="1"
+                    android:text="Reserved date and time :"
+                    android:textSize="16dp" />
+
+                <!--  <com.mobatia.naisapp.manager.CustomFontSansProTextBlackSemiBold
+                      android:id="@+id/reserveDateTimeTextView"
+                      android:layout_width="match_parent"
+                      android:layout_height="wrap_content"
+                      android:layout_marginLeft="5dp"
+                      android:maxLines="2"
+                      android:textColor="@color/black"
+                      android:textSize="16dp"
+
+                      />-->
+            </LinearLayout>
+
+            <com.nas.alreem.commonviews.CustomTextViewSemiBold
+                android:id="@+id/reserveDateTimeTextView"
+                android:layout_width="match_parent"
+                android:layout_height="wrap_content"
+                android:layout_below="@+id/reserveLinear"
+                android:layout_marginBottom="5dp"
+                android:layout_toLeftOf="@+id/addTocalendar"
+                android:gravity="center_vertical"
+                android:maxLines="2"
+                android:text=""
+                android:textColor="@color/black"
+                android:textSize="16dp"
+
+                />
+
+            <com.nas.alreem.commonviews.CustomTextViewRegular
+                android:id="@+id/expireDateTimeTextView"
+                android:layout_width="match_parent"
+                android:layout_height="wrap_content"
+                android:layout_below="@+id/reserveDateTimeTextView"
+                android:layout_alignLeft="@+id/reserveDateTimeTextView"
+                android:layout_marginRight="2dp"
+                android:layout_marginBottom="5dp"
+                android:layout_toLeftOf="@+id/addTocalendar"
+                android:gravity="center_vertical"
+                android:maxLines="2"
+                android:text="Confirm/Cancellation closes at sdssddsds"
+                android:textColor="@color/rel_nine"
+                android:textSize="16dp" />
+
+            <View
+                android:layout_width="match_parent"
+                android:layout_height="1dp"
+                android:layout_below="@+id/expireDateTimeTextView"
+                android:layout_alignParentEnd="true"
+                android:layout_marginTop="13dp"
+                android:layout_marginEnd="0dp"
+                android:layout_marginBottom="0dp"
+                android:background="@color/rel_one" />
+        </RelativeLayout>
+
+    </androidx.cardview.widget.CardView>
+
+</RelativeLayout>
\ No newline at end of file
Index: .idea/vcs.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"VcsDirectoryMappings\">\n    <mapping directory=\"$PROJECT_DIR$\" vcs=\"Git\" />\n  </component>\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/vcs.xml b/.idea/vcs.xml
--- a/.idea/vcs.xml	(revision b2ad66f8612edd03349ffa4aaee582fd0005cdb4)
+++ b/.idea/vcs.xml	(date 1689077232083)
@@ -1,6 +1,6 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
   <component name="VcsDirectoryMappings">
-    <mapping directory="$PROJECT_DIR$" vcs="Git" />
+    <mapping directory="" vcs="Git" />
   </component>
 </project>
\ No newline at end of file
Index: app/src/main/java/com/nas/alreem/constants/ApiInterface.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.nas.alreem.rest\n\nimport com.google.gson.JsonObject\nimport com.nas.alreem.activity.canteen.model.TimeExceedModel\nimport com.nas.alreem.activity.canteen.model.add_orders.CanteenItemsApiModel\nimport com.nas.alreem.activity.canteen.model.add_orders.CatListModel\nimport com.nas.alreem.activity.canteen.model.add_orders.ItemsListModel\nimport com.nas.alreem.activity.canteen.model.add_to_cart.*\nimport com.nas.alreem.activity.canteen.model.canteen_cart.CanteenCartApiModel\nimport com.nas.alreem.activity.canteen.model.canteen_cart.CanteenCartModel\nimport com.nas.alreem.activity.canteen.model.myorders.CancelCanteenPreOrderApiModel\nimport com.nas.alreem.activity.canteen.model.myorders.CancelCanteenPreorderItemId\nimport com.nas.alreem.activity.canteen.model.myorders.PreOrdersModel\nimport com.nas.alreem.activity.canteen.model.myorders.UpdateCanteenPreorderItemApiModel\nimport com.nas.alreem.activity.canteen.model.order_history.OrderHistoryApiModel\nimport com.nas.alreem.activity.canteen.model.order_history.OrderHistoryResponseModel\nimport com.nas.alreem.activity.canteen.model.preorder.CanteenPreorderApiModel\nimport com.nas.alreem.activity.canteen.model.preorder.CanteenPreorderModel\nimport com.nas.alreem.activity.canteen.model.topup.WalletAmountApiModel\nimport com.nas.alreem.activity.canteen.model.topup.WalletAmountModel\nimport com.nas.alreem.activity.canteen.model.wallet.WalletBalanceApiModel\nimport com.nas.alreem.activity.canteen.model.wallet.WalletBalanceModel\nimport com.nas.alreem.activity.canteen.model.wallethistory.WalletHistoryApiModel\nimport com.nas.alreem.activity.canteen.model.wallethistory.WalletHistoryModel\nimport com.nas.alreem.activity.gallery.model.*\nimport com.nas.alreem.activity.login.model.ForgetPasswordResponseModel\nimport com.nas.alreem.activity.login.model.LoginResponseModel\nimport com.nas.alreem.activity.login.model.SignUpResponseModel\nimport com.nas.alreem.activity.notifications.model.MessageDetailApiModel\nimport com.nas.alreem.activity.notifications.model.MessageDetailModel\nimport com.nas.alreem.activity.payments.model.InfoCanteenModel\nimport com.nas.alreem.activity.payments.model.PayCategoryModel\nimport com.nas.alreem.activity.payments.model.PaymentCategoriesApiModel\nimport com.nas.alreem.activity.payments.model.StudentListModel\nimport com.nas.alreem.activity.payments.model.payment_gateway.PaymentGatewayApiModel\nimport com.nas.alreem.activity.payments.model.payment_gateway.PaymentGatewayModel\nimport com.nas.alreem.activity.payments.model.payment_submit.PaymentSubmitApiModel\nimport com.nas.alreem.activity.payments.model.payment_submit.PaymentSubmitModel\nimport com.nas.alreem.activity.payments.model.payment_token.PaymentTokenApiModel\nimport com.nas.alreem.activity.payments.model.payment_token.PaymentTokenModel\nimport com.nas.alreem.activity.primary.model.ComingUpResponseModel\nimport com.nas.alreem.activity.settings.model.TermsOfServiceResponseModel\nimport com.nas.alreem.activity.survey.model.*\nimport com.nas.alreem.fragment.about_us.model.AboutUsResponseModel\nimport com.nas.alreem.fragment.calendar.model.CalendarAPIModel\nimport com.nas.alreem.fragment.calendar.model.CalendarResponseModel\nimport com.nas.alreem.fragment.calendar.model.TermCalendarResponseModel\nimport com.nas.alreem.fragment.canteen.model.CanteenBannerResponseModel\nimport com.nas.alreem.fragment.contact_us.model.ContactUsResponseModel\nimport com.nas.alreem.fragment.gallery.model.ThumnailResponseModel\nimport com.nas.alreem.fragment.home.model.BannerResponseModel\nimport com.nas.alreem.fragment.notifications.model.NotificationApiModel\nimport com.nas.alreem.fragment.notifications.model.NotificationResponseModel\nimport com.nas.alreem.fragment.parents_essentials.model.ParentsEssentialResponseModel\nimport com.nas.alreem.fragment.payments.model.PaymentResponseModel\nimport com.nas.alreem.fragment.payments.model.SendEmailApiModel\nimport com.nas.alreem.fragment.primary.model.PrimaryResponseModel\nimport com.nas.alreem.fragment.settings.model.ChangePasswordApiModel\n\nimport okhttp3.ResponseBody\nimport org.json.JSONObject\nimport retrofit2.Call\nimport retrofit2.http.*\n\ninterface ApiInterface {\n\n    /******************SIGN UP*********************/\n    @POST(\"parent-signup\")\n    @FormUrlEncoded\n    fun signup(\n        @Field(\"email\") email: String\n    ): Call<SignUpResponseModel>\n\n    /******************SIGN UP*********************/\n    @POST(\"parent-login\")\n    @FormUrlEncoded\n    fun login(\n        @Field(\"email\") email: String,\n        @Field(\"password\") password: String,\n        @Field(\"device_type\") device_type: String,\n        @Field(\"device_id\") device_id: String,\n        @Field(\"device_identifier\") device_identifier: String\n    ): Call<LoginResponseModel>\n\n    /******************FORGOT PASSWORD*********************/\n    @POST(\"forgot-password\")\n    @FormUrlEncoded\n    fun forgetPassword(\n        @Field(\"email\") email: String\n    ): Call<ForgetPasswordResponseModel>\n\n\n    /*************NOTIFICATION_LIST****************/\n    @POST(\"notification/list\")\n    @Headers(\"Content-Type: application/json\")\n    fun notificationList(\n        @Body  notificationListApiModel: NotificationApiModel,\n        @Header(\"Authorization\") token:String\n    ): Call<NotificationResponseModel>\n\n    /*************NOTIFICATION DETAIL****************/\n    @POST(\"notification/details\")\n    @Headers(\"Content-Type: application/json\")\n    fun notifictaionDetail(\n        @Body  newsLetterDetailApi: MessageDetailApiModel,\n        @Header(\"Authorization\") token:String\n    ): Call<MessageDetailModel>\n\n    /*************PRIMARY_LIST****************/\n    @POST(\"departmentprimary\")\n    @Headers(\"Content-Type: application/json\")\n    fun primaryList(\n    ): Call<PrimaryResponseModel>\n    /*************EARLY_YEARS_LIST****************/\n    @POST(\"departmentearly\")\n    @Headers(\"Content-Type: application/json\")\n    fun earlyYearsList(\n    ): Call<PrimaryResponseModel>\n\n    /*************SECONDARY_LIST****************/\n    @POST(\"departmentsecondary\")\n    @Headers(\"Content-Type: application/json\")\n    fun secondaryList(\n    ): Call<PrimaryResponseModel>\n\n    /*************PRIMARY_COMING_UP****************/\n    @POST(\"primary_coming_up \")\n    @Headers(\"Content-Type: application/json\")\n    fun primaryComingUp(\n    ): Call<ComingUpResponseModel>\n\n    /*************EARLY_COMING_UP****************/\n    @POST(\"early_coming_up \")\n    @Headers(\"Content-Type: application/json\")\n    fun earlyComingUp(\n    ): Call<ComingUpResponseModel>\n\n    /*************SECONDARY_COMING_UP****************/\n    @POST(\"secondary_coming_up\")\n    @Headers(\"Content-Type: application/json\")\n    fun secondaryComingUp(\n    ): Call<ComingUpResponseModel>\n\n    /*************TERMS_OF_SERVICE****************/\n    @POST(\"terms_of_service \")\n    @Headers(\"Content-Type: application/json\")\n    fun termsOfService(\n        @Header(\"Authorization\") token:String\n    ): Call<TermsOfServiceResponseModel>\n\n    /*************Survey_list****************/\n    @GET(\"survey_list\")\n    @Headers(\"Content-Type: application/json\")\n    fun surveyList(\n        @Header(\"Authorization\") token:String\n    ): Call<SurveyListResponseModel>\n\n\n    /*************Survey_detail****************/\n    @POST(\"survey_details\")\n    @Headers(\"Content-Type: application/json\")\n    fun surveyDetail(\n        @Body  SurveyDetailApi: SurveyDetailApiModel,\n        @Header(\"Authorization\") token:String\n    ): Call<SurveyDetailResponseModel>\n\n    /*************Surveys****************/\n    @POST(\"surveys\")\n    @Headers(\"Content-Type: application/json\")\n    fun survey(\n        @Body  SurveyApi: SurveyApiModel,\n        @Header(\"Authorization\") token:String\n    ): Call<SurveyResponseModel>\n\n    /*************Survey_submit****************/\n    @POST(\"survey_submit\")\n    @Headers(\"Content-Type: application/json\")\n    fun surveysubmit(\n        @Body  SurveysubmitApi: SurveySubmitApiModel,\n        @Header(\"Authorization\") token:String\n    ): Call<SurveySubmitResponseModel>\n\n\n    /*************CHANGE_PASSWORD****************/\n    @POST(\"change-password\")\n    @Headers(\"Content-Type: application/json\")\n    fun changePassword(\n        @Body  changePasswordApiModel: ChangePasswordApiModel,\n        @Header(\"Authorization\") token:String\n    ): Call<ForgetPasswordResponseModel>\n    /*************ALBUMS****************/\n    @POST(\"gallery_albums\")\n    @Headers(\"Content-Type: application/json\")\n    fun albums(\n        @Body  albumApi: AlbumApiModel,\n        @Header(\"Authorization\") token:String\n    ): Call<AlbumResponseModel>\n\n    /*************VIDDEO LIST****************/\n    @POST(\"gallery_videos\")\n    @Headers(\"Content-Type: application/json\")\n    fun videos(\n        @Body  albumApi: AlbumApiModel,\n        @Header(\"Authorization\") token:String\n    ): Call<VideoResponseModel>\n\n    /*************ALBUMS****************/\n    @POST(\"gallery_images\")\n    @Headers(\"Content-Type: application/json\")\n    fun photos(\n        @Body  albumApi: PhotosApiModel,\n        @Header(\"Authorization\") token:String\n    ): Call<PhotosResponseModel>\n\n    /*************DELETE_ACCOUNT****************/\n    @GET(\"delete-account\")\n    @Headers(\"Content-Type: application/json\")\n    fun deleteAccount(\n        @Header(\"Authorization\") token:String\n    ): Call<ForgetPasswordResponseModel>\n\n    /*************CONTACT_US****************/\n    @POST(\"contact_us\")\n    @Headers(\"Content-Type: application/json\")\n    fun contactUs(\n    ): Call<ContactUsResponseModel>\n\n    /*************ABOUT_US****************/\n    @GET(\"about_us\")\n    @Headers(\"Content-Type: application/json\")\n    fun aboutUs(\n    ): Call<AboutUsResponseModel>\n\n    /*************HOME_BANNER****************/\n    @POST(\"banner_images\")\n    @Headers(\"Content-Type: application/json\")\n    fun bannerImages(\n    ): Call<BannerResponseModel>\n\n\n    /*************PAYMENT_BANNER****************/\n    @GET(\"payment_banner \")\n    @Headers(\"Content-Type: application/json\")\n    fun paymentBanner(\n        @Header(\"Authorization\") token:String\n    ): Call<PaymentResponseModel>\n\n    /*************PAYMENT_BANNER****************/\n    @GET(\"parent_essential \")\n    @Headers(\"Content-Type: application/json\")\n    fun parentsEssential(\n        @Header(\"Authorization\") token:String\n    ): Call<ParentsEssentialResponseModel>\n\n\n    /*************STUDENT_LIST****************/\n    @POST(\"student/list \")\n    @Headers(\"Content-Type: application/json\")\n    fun studentList(\n        @Header(\"Authorization\") token:String\n    ): Call<StudentListModel>\n\n    /*************SEND_EMAIL_TO_STAFF****************/\n    @POST(\"send_email_to_staff \")\n    @Headers(\"Content-Type: application/json\")\n    fun sendEmailStaff(\n        @Body  sendEmailApi: SendEmailApiModel,\n        @Header(\"Authorization\") token:String\n    ): Call<SignUpResponseModel>\n\n    /*************PAYMENT_CATEGORY****************/\n    @POST(\"get_payment_categories\")\n    @Headers(\"Content-Type: application/json\")\n    fun payment_categories(\n        @Body  paymentCategories: PaymentCategoriesApiModel,\n        @Header(\"Authorization\") token:String\n    ): Call<PayCategoryModel>\n\n    //payment token\n    @POST(\"network_payment_gateway_access_token\")\n    @Headers(\"Content-Type: application/json\")\n    fun payment_token(\n        @Body  paymentCategories: PaymentTokenApiModel,\n        @Header(\"Authorization\") token:String\n    ): Call<PaymentTokenModel>\n\n    //payment gateway\n    @POST(\"network_payment_gateway_creating_an_order\")\n    @Headers(\"Content-Type: application/json\")\n    fun payment_gateway(\n        @Body  paymentGateway: PaymentGatewayApiModel,\n        @Header(\"Authorization\") token:String\n    ): Call<PaymentGatewayModel>\n\n    //payment success\n    @POST(\"submit_payment\")\n    @Headers(\"Content-Type: application/json\")\n    fun submit_payment(\n        @Body  paymentGateway: PaymentSubmitApiModel,\n        @Header(\"Authorization\") token:String\n    ): Call<PaymentSubmitModel>\n\n    //gallery thumnail\n    @POST(\"thumbnail_images\")\n    @Headers(\"Content-Type: application/json\")\n    fun galleryThumbNail(\n        @Header(\"Authorization\") token:String\n    ): Call<ThumnailResponseModel>\n\n    /*************CALENDAR****************/\n    @POST(\"calendar\")\n    @Headers(\"Content-Type: application/json\")\n    fun calendar(\n      //  @Body calendarModel: CalendarAPIModel,\n        @Header(\"Authorization\") token: String\n    ): Call<CalendarResponseModel>\n\n    @POST(\"term_calendar\")\n    @Headers(\"Content-Type: application/json\")\n    fun termCalendar(\n        @Header(\"Authorization\") token: String\n    ): Call<TermCalendarResponseModel>\n\n\n    @GET(\"payment_information\")\n    @Headers(\"Content-Type: application/json\")\n    fun getPaymentInformation(\n        //@Body  ptaConfirmationModel: PtaConfirmationApiModel,\n        @Header(\"Authorization\") token:String\n    ): Call<InfoCanteenModel>\n\n\n    @GET(\"canteen_banner\")\n    @Headers(\"Content-Type: application/json\")\n    fun get_canteen_banner(\n        //@Body  ptaConfirmationModel: PtaConfirmationApiModel,\n        @Header(\"Authorization\") token:String\n    ): Call<CanteenBannerResponseModel>\n\n    @POST(\"get_canteen_preorder_history\")\n    @Headers(\"Content-Type: application/json\")\n    fun canteen_order_history(\n        @Body  orderHistory: OrderHistoryApiModel,\n        @Header(\"Authorization\") token:String\n    ): Call<OrderHistoryResponseModel>\n\n    @POST(\"get_canteen_preorder\")\n    @Headers(\"Content-Type: application/json\")\n    fun canteen_myorder_history(\n        @Body  orderHistory: OrderHistoryApiModel,\n        @Header(\"Authorization\") token:String\n    ): Call<PreOrdersModel>\n\n    @POST(\"cancel_canteen_preorder\")\n    @Headers(\"Content-Type: application/json\")\n    fun cancelCanteenPreOrder(\n        @Body  orderHistory: CancelCanteenPreOrderApiModel,\n        @Header(\"Authorization\") token:String\n    ): Call<CanteenPreorderModel>\n\n    @POST(\"cancel_canteen_preorder_item\")\n    @Headers(\"Content-Type: application/json\")\n    fun cancelCanteenPreOrderItem(\n        @Body  orderHistory: CancelCanteenPreorderItemId,\n        @Header(\"Authorization\") token:String\n    ): Call<CanteenPreorderModel>\n\n    @POST(\"edit_canteen_preorder_item\")\n    @Headers(\"Content-Type: application/json\")\n    fun updateCanteenPreOrderItem(\n        @Body  orderHistory: UpdateCanteenPreorderItemApiModel,\n        @Header(\"Authorization\") token:String\n    ): Call<CanteenPreorderModel>\n\n\n\n    @GET(\"canteen_information\")\n    @Headers(\"Content-Type: application/json\")\n    fun getCanteenInformation(\n        //@Body  ptaConfirmationModel: PtaConfirmationApiModel,\n        @Header(\"Authorization\") token:String\n    ): Call<com.nas.alreem.activity.canteen.model.information.InfoCanteenModel>\n\n    @GET(\"get_canteen_categories\")\n    @Headers(\"Content-Type: application/json\")\n    fun get_canteen_categories(\n        //@Body  ptaConfirmationModel: PtaConfirmationApiModel,\n        @Header(\"Authorization\") token:String\n    ): Call<CatListModel>\n\n    //canteen items\n    @POST(\"get_canteen_items\")\n    @Headers(\"Content-Type: application/json\")\n    fun get_canteen_items(\n        @Body  canteenItems: CanteenItemsApiModel,\n        @Header(\"Authorization\") token:String\n    ): Call<ItemsListModel>\n\n    @POST(\"add_to_canteen_cart\")\n    @Headers(\"Content-Type: application/json\")\n    fun add_to_canteen_cart(\n        @Body  addToCartCanteen: AddToCartCanteenApiModel,\n        @Header(\"Authorization\") token:String\n    ): Call<AddToCartCanteenModel>\n\n    @POST(\"get_canteen_cart\")\n    @Headers(\"Content-Type: application/json\")\n    fun get_canteen_cart(\n        @Body  canteenCart: CanteenCartApiModel,\n        @Header(\"Authorization\") token:String\n    ): Call<CanteenCartModel>\n\n    @POST(\"update_canteen_cart\")\n    @Headers(\"Content-Type: application/json\")\n    fun update_canteen_cart(\n        @Body  updatecanteenCart: CanteenCartUpdateApiModel,\n        @Header(\"Authorization\") token:String\n    ): Call<CanteenCartUpdateModel>\n\n    @POST(\"remove_canteen_cart\")\n    @Headers(\"Content-Type: application/json\")\n    fun remove_canteen_cart(\n        @Body  removecanteenCart: CanteenCartRemoveApiModel,\n        @Header(\"Authorization\") token:String\n    ): Call<CanteenCartRemoveModel>\n\n    @POST(\"get_wallet_balance\")\n    @Headers(\"Content-Type: application/json\")\n    fun get_wallet_balance(\n        @Body  walletbalance: WalletBalanceApiModel,\n        @Header(\"Authorization\") token:String\n    ): Call<WalletBalanceModel>\n    @POST(\"canteen_preorder\")\n    @Headers(\"Content-Type: application/json\")\n    fun canteen_preorder(\n        @Body  canteenpreorder: CanteenPreorderApiModel,\n        @Header(\"Authorization\") token:String\n    ): Call<CanteenPreorderModel>\n\n    @POST(\"get_wallet_history\")\n    @Headers(\"Content-Type: application/json\")\n    fun get_wallet_history(\n        @Body  wallethistory: WalletHistoryApiModel,\n        @Header(\"Authorization\") token:String\n    ): Call<WalletHistoryModel>\n\n    @GET(\"time_exceed_status\")\n    @Headers(\"Content-Type: application/json\")\n    fun time_exceed_status(\n        @Header(\"Authorization\") token:String\n    ): Call<TimeExceedModel>\n\n    @POST(\"wallet_topup\")\n    @Headers(\"Content-Type: application/json\")\n    fun wallet_topup(\n        @Body  walletamount: WalletAmountApiModel,\n        @Header(\"Authorization\") token:String\n    ): Call<WalletAmountModel>\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/nas/alreem/constants/ApiInterface.kt b/app/src/main/java/com/nas/alreem/constants/ApiInterface.kt
--- a/app/src/main/java/com/nas/alreem/constants/ApiInterface.kt	(revision b2ad66f8612edd03349ffa4aaee582fd0005cdb4)
+++ b/app/src/main/java/com/nas/alreem/constants/ApiInterface.kt	(date 1689057322000)
@@ -1,6 +1,14 @@
 package com.nas.alreem.rest
 
 import com.google.gson.JsonObject
+import com.nas.alreem.activity.absence.model.AbsenceListModel
+import com.nas.alreem.activity.absence.model.EarlyPickupModel
+import com.nas.alreem.activity.absence.model.ListAbsenceApiModel
+import com.nas.alreem.activity.absence.model.ListPickupApiModel
+import com.nas.alreem.activity.absence.model.PickupListModel
+import com.nas.alreem.activity.absence.model.RequestLeaveApiModel
+import com.nas.alreem.activity.absence.model.RequestLeaveModel
+import com.nas.alreem.activity.absence.model.RequestPickupApiModel
 import com.nas.alreem.activity.canteen.model.TimeExceedModel
 import com.nas.alreem.activity.canteen.model.add_orders.CanteenItemsApiModel
 import com.nas.alreem.activity.canteen.model.add_orders.CatListModel
@@ -28,6 +36,15 @@
 import com.nas.alreem.activity.login.model.SignUpResponseModel
 import com.nas.alreem.activity.notifications.model.MessageDetailApiModel
 import com.nas.alreem.activity.notifications.model.MessageDetailModel
+import com.nas.alreem.activity.parent_meetings.model.PtaConfirmApiModel
+import com.nas.alreem.activity.parent_meetings.model.PtaConfirmModel
+import com.nas.alreem.activity.parent_meetings.model.PtaDatesApiModel
+import com.nas.alreem.activity.parent_meetings.model.PtaDatesModel
+import com.nas.alreem.activity.parent_meetings.model.PtaInsertApiModel
+import com.nas.alreem.activity.parent_meetings.model.PtaInsertModel
+import com.nas.alreem.activity.parent_meetings.model.PtaListApiModel
+import com.nas.alreem.activity.parent_meetings.model.PtaListModel
+import com.nas.alreem.activity.parent_meetings.model.PtaReviewListResponseModel
 import com.nas.alreem.activity.payments.model.InfoCanteenModel
 import com.nas.alreem.activity.payments.model.PayCategoryModel
 import com.nas.alreem.activity.payments.model.PaymentCategoriesApiModel
@@ -40,6 +57,9 @@
 import com.nas.alreem.activity.payments.model.payment_token.PaymentTokenModel
 import com.nas.alreem.activity.primary.model.ComingUpResponseModel
 import com.nas.alreem.activity.settings.model.TermsOfServiceResponseModel
+import com.nas.alreem.activity.staff_directory.model.ListStaffDetailApiModel
+import com.nas.alreem.activity.staff_directory.model.ListStaffDetailModel
+import com.nas.alreem.activity.staff_directory.model.StaffCatListResponseModel
 import com.nas.alreem.activity.survey.model.*
 import com.nas.alreem.fragment.about_us.model.AboutUsResponseModel
 import com.nas.alreem.fragment.calendar.model.CalendarAPIModel
@@ -51,6 +71,8 @@
 import com.nas.alreem.fragment.home.model.BannerResponseModel
 import com.nas.alreem.fragment.notifications.model.NotificationApiModel
 import com.nas.alreem.fragment.notifications.model.NotificationResponseModel
+import com.nas.alreem.fragment.parent_meetings.model.ListStaffPtaApiModel
+import com.nas.alreem.fragment.parent_meetings.model.ListStaffPtaModel
 import com.nas.alreem.fragment.parents_essentials.model.ParentsEssentialResponseModel
 import com.nas.alreem.fragment.payments.model.PaymentResponseModel
 import com.nas.alreem.fragment.payments.model.SendEmailApiModel
@@ -456,4 +478,87 @@
         @Body  walletamount: WalletAmountApiModel,
         @Header("Authorization") token:String
     ): Call<WalletAmountModel>
+
+    @POST("request-early-pickup")
+    @Headers("Content-Type: application/json")
+    fun pickupRequest(
+        @Body  requestPickupApiModel: RequestPickupApiModel,
+        @Header("Authorization") token:String
+    ): Call<EarlyPickupModel>
+
+    @POST("list-early-pickup")
+    @Headers("Content-Type: application/json")
+    fun pickuplist(
+        @Body  listPickupApiModel: ListPickupApiModel,
+        @Header("Authorization") token:String
+    ): Call<PickupListModel>
+
+    @POST("request-leave")
+    @Headers("Content-Type: application/json")
+    fun leaveRequest(
+        @Body  requestleaveApiModel: RequestLeaveApiModel,
+        @Header("Authorization") token:String
+    ): Call<RequestLeaveModel>
+
+    @POST("list-leave")
+    @Headers("Content-Type: application/json")
+    fun absencelist(
+        @Body  absenceApiModel: ListAbsenceApiModel,
+        @Header("Authorization") token:String
+    ): Call<AbsenceListModel>
+
+    @GET("staff-departments")
+    @Headers("Content-Type: application/json")
+    fun staff_depatrtments(
+        @Header("Authorization") token:String
+    ): Call<StaffCatListResponseModel>
+
+    @POST("department-staff-list")
+    @Headers("Content-Type: application/json")
+    fun staff_detail_list(
+        @Body  staffListApiModel: ListStaffDetailApiModel,
+        @Header("Authorization") token:String
+    ): Call<ListStaffDetailModel>
+
+    @POST("staff-list")
+    @Headers("Content-Type: application/json")
+    fun staff_list_pta(
+        @Body  staffListPtaApiModel: ListStaffPtaApiModel,
+        @Header("Authorization") token:String
+    ): Call<ListStaffPtaModel>
+
+
+    @POST("pta-allotted-dates")
+    @Headers("Content-Type: application/json")
+    fun pta_allotted_dates(
+        @Body  ptaDatesApiModel: PtaDatesApiModel,
+        @Header("Authorization") token:String
+    ): Call<PtaDatesModel>
+
+    @POST("pta-list")
+    @Headers("Content-Type: application/json")
+    fun pta_list(
+        @Body  ptaListApiModel: PtaListApiModel,
+        @Header("Authorization") token:String
+    ): Call<PtaListModel>
+
+    @POST("pta-insert")
+    @Headers("Content-Type: application/json")
+    fun pta_insert(
+        @Body  ptaInsertApiModel: PtaInsertApiModel,
+        @Header("Authorization") token:String
+    ): Call<PtaInsertModel>
+
+    @POST("pta-confirmation")
+    @Headers("Content-Type: application/json")
+    fun pta_confirm(
+        @Body  ptaConfirmApiModel: PtaConfirmApiModel,
+        @Header("Authorization") token:String
+    ): Call<PtaConfirmModel>
+
+    @GET("pta-review-list")
+    @Headers("Content-Type: application/json")
+    fun ptaReviewList(
+        @Header("Authorization") token:String
+    ): Call<PtaReviewListResponseModel>
 }
\ No newline at end of file
Index: app/src/main/res/values/strings.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><resources>\n    <string name=\"app_name\">NAS Abu Dhabi</string>\n\n    <string-array name=\"navigation_item_names\">\n        <item>Home</item>\n        <item>Notifications</item>\n        <item>Calendar</item>\n        <item>Payments</item>\n        <item>Lunch Box</item>\n        <item>Parent Essentials</item>\n        <item>Early Years</item>\n        <item>Primary</item>\n        <item>Secondary</item>\n        <item>Gallery</item>\n        <item>About Us</item>\n        <item>Contact Us</item>\n\n    </string-array>\n    <string name=\"loading\">Loading&#8230;</string>\n    <string-array name=\"navigation_item_icons\">\n        <item>@drawable/home</item>\n        <item>@drawable/notif</item>\n        <item>@drawable/calendar</item>\n        <item>@drawable/payment</item>\n        <item>@drawable/lunchbox_icon</item>\n        <item>@drawable/parent</item>\n        <item>@drawable/earlyyears</item>\n        <item>@drawable/primary</item>\n        <item>@drawable/secondary</item>\n        <item>@drawable/gallery</item>\n        <item>@drawable/aboutus</item>\n        <item>@drawable/contacts</item>\n\n    </string-array>\n    <string name=\"default_notification_channel_id\" translatable=\"false\">fcm_default_channel</string>\n    <string name=\"settings\">Settings</string>\n    <string name=\"username\">USER EMAIL</string>\n    <string name=\"password\">PASSWORD</string>\n    <string name=\"enter_email\">Please enter Email.</string>\n    <string name=\"enter_password\">Please enter Password.</string>\n    <string name=\"enter_valid_email\">Please enter a vaild Email.</string>\n    <string name=\"alert\">Alert</string>\n    <string name=\"sign_up\">Sign Up</string>\n    <string name=\"email\">Email</string>\n    <string name=\"success\">Success</string>\n    <string name=\"comming_up\">Coming Up</string>\n    <string name=\"may_be_later\">Maybe later</string>\n    <string name=\"cancel\">Cancel</string>\n    <string name=\"submit\">Submit</string>\n    <string name=\"forget_password\">Forget Password</string>\n    <string name=\"network_error\">Network Error</string>\n    <string name=\"network_error_msg\">Network error occurred. Please check your internet connection and try again later</string>\n    <string name=\"feature_only_for_registered_user\">This feature is only available for registered users.</string>\n    <string name=\"null_value\"></string>\n\n    <!--Settings-->\n    <string name=\"change_app_settings\">Change App Settings</string>\n    <string name=\"terms_of_service\">Terms of Service</string>\n    <string name=\"email_us\">Email Us</string>\n    <string name=\"tutorial\">Tutorial</string>\n    <string name=\"survey\">Survey</string>\n    <string name=\"change_password\">Change Password</string>\n    <string name=\"delete_my_account\">Delete My Account</string>\n    <string name=\"logout\">Logout</string>\n    <string name=\"do_you_logout\">Do you want to logout?</string>\n    <string name=\"do_you_delete\">Do you want to delete your account?</string>\n    <string name=\"confirm\">Confirm</string>\n    <string name=\"password_not_match\">Your new password and confirm password doesn\\'t match</string>\n    <string name=\"enter_current_password\">Enter your current password</string>\n    <string name=\"enter_new_password\">Enter your new password</string>\n    <string name=\"confirm_password\">Kindly confirm your new password</string>\n    <string name=\"enter_subject\">Please enter your subject</string>\n    <string name=\"enter_content\">Please enter your content</string>\n\n    <string name=\"hello_blank_fragment\">Hello blank fragment</string>\n    <string name=\"add_cal_success\">Event added to device calendar</string>\n    <string name=\"del_cal_success\">Event removed from device calendar</string>\n    <string name=\"del_cal_fail\">Event deletion failed</string>\n    <string name=\"add_all_cal_success\">Added all events to device calendar</string>\n    <string name=\"del_all_cal_success\">Removed all events from device calendar</string>\n    <string name=\"no_evnt_details\">Not enough details to add to calendar</string>\n    <string name=\"datexpirecontact\">Booking and cancellation date is over</string>\n\n    <string-array name=\"month31\">\n        <item>1</item>\n        <item>2</item>\n        <item>3</item>\n        <item>4</item>\n        <item>5</item>\n        <item>6</item>\n        <item>7</item>\n        <item>8</item>\n        <item>9</item>\n        <item>10</item>\n        <item>11</item>\n        <item>12</item>\n        <item>13</item>\n        <item>14</item>\n        <item>15</item>\n        <item>16</item>\n        <item>17</item>\n        <item>18</item>\n        <item>19</item>\n        <item>20</item>\n        <item>21</item>\n        <item>22</item>\n        <item>23</item>\n        <item>24</item>\n        <item>25</item>\n        <item>26</item>\n        <item>27</item>\n        <item>28</item>\n        <item>29</item>\n        <item>30</item>\n        <item>31</item>\n    </string-array>\n\n    <string-array name=\"month30\">\n        <item>1</item>\n        <item>2</item>\n        <item>3</item>\n        <item>4</item>\n        <item>5</item>\n        <item>6</item>\n        <item>7</item>\n        <item>8</item>\n        <item>9</item>\n        <item>10</item>\n        <item>11</item>\n        <item>12</item>\n        <item>13</item>\n        <item>14</item>\n        <item>15</item>\n        <item>16</item>\n        <item>17</item>\n        <item>18</item>\n        <item>19</item>\n        <item>20</item>\n        <item>21</item>\n        <item>22</item>\n        <item>23</item>\n        <item>24</item>\n        <item>25</item>\n        <item>26</item>\n        <item>27</item>\n        <item>28</item>\n        <item>29</item>\n        <item>30</item>\n    </string-array>\n    <string-array name=\"day\">\n        <item>DAY</item>\n    </string-array>\n    <string-array name=\"month29\">\n        <item>1</item>\n        <item>2</item>\n        <item>3</item>\n        <item>4</item>\n        <item>5</item>\n        <item>6</item>\n        <item>7</item>\n        <item>8</item>\n        <item>9</item>\n        <item>10</item>\n        <item>11</item>\n        <item>12</item>\n        <item>13</item>\n        <item>14</item>\n        <item>15</item>\n        <item>16</item>\n        <item>17</item>\n        <item>18</item>\n        <item>19</item>\n        <item>20</item>\n        <item>21</item>\n        <item>22</item>\n        <item>23</item>\n        <item>24</item>\n        <item>25</item>\n        <item>26</item>\n        <item>27</item>\n        <item>28</item>\n        <item>29</item>\n    </string-array>\n    <string-array name=\"month28\">\n        <item>1</item>\n        <item>2</item>\n        <item>3</item>\n        <item>4</item>\n        <item>5</item>\n        <item>6</item>\n        <item>7</item>\n        <item>8</item>\n        <item>9</item>\n        <item>10</item>\n        <item>11</item>\n        <item>12</item>\n        <item>13</item>\n        <item>14</item>\n        <item>15</item>\n        <item>16</item>\n        <item>17</item>\n        <item>18</item>\n        <item>19</item>\n        <item>20</item>\n        <item>21</item>\n        <item>22</item>\n        <item>23</item>\n        <item>24</item>\n        <item>25</item>\n        <item>26</item>\n        <item>26</item>\n        <item>27</item>\n        <item>28</item>\n    </string-array>\n    <string name=\"january\">January</string>\n    <string name=\"february\">February</string>\n    <string name=\"march\">March</string>\n    <string name=\"april\">April</string>\n    <string name=\"may\">May</string>\n    <string name=\"june\">June</string>\n    <string name=\"july\">July</string>\n    <string name=\"august\">August</string>\n    <string name=\"september\">September</string>\n    <string name=\"october\">October</string>\n    <string name=\"november\">November</string>\n    <string name=\"december\">December</string>\n    <string name=\"monday\">MON</string>\n    <string name=\"tuesday\">TUE</string>\n    <string name=\"wednesday\">WED</string>\n    <string name=\"thursday\">THU</string>\n    <string name=\"friday\">FRI</string>\n    <string name=\"saturday\">SAT</string>\n    <string name=\"sunday\">SUN</string>\n    <string name=\"jan_short\">JAN</string>\n    <string name=\"feb_short\">FEB</string>\n    <string name=\"mar_short\">MAR</string>\n    <string name=\"apr_short\">APR</string>\n    <string name=\"may_short\">MAY</string>\n    <string name=\"jun_short\">JUN</string>\n    <string name=\"jul_short\">JUL</string>\n    <string name=\"aug_short\">AUG</string>\n    <string name=\"sep_short\">SEP</string>\n    <string name=\"oct_short\">OCT</string>\n    <string name=\"nov_short\">NOV</string>\n    <string name=\"dec_short\">DEC</string>\n\n    <array name=\"calendar_row_colors\">\n        <item>@color/cal_row_1</item>\n        <item>@color/cal_row_2</item>\n        <item>@color/cal_row_3</item>\n        <item>@color/cal_row_4</item>\n    </array>\n    <string name=\"aed\">AED</string>\n    <string name=\"add_to_wallet\">Add to Wallet</string>\n    <string name=\"enter_amount\">Enter Amount</string>\n\n    <string name=\"new_version_available\">New Version Available</string>\n    <string name=\"force_update\">There is a newer version available for download! Please update the app by visiting the Google Play Store</string>\n</resources>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/values/strings.xml b/app/src/main/res/values/strings.xml
--- a/app/src/main/res/values/strings.xml	(revision b2ad66f8612edd03349ffa4aaee582fd0005cdb4)
+++ b/app/src/main/res/values/strings.xml	(date 1689326916269)
@@ -5,32 +5,44 @@
         <item>Home</item>
         <item>Notifications</item>
         <item>Calendar</item>
+        <item>Absence &amp; Early Pickup</item>
         <item>Payments</item>
         <item>Lunch Box</item>
         <item>Parent Essentials</item>
         <item>Early Years</item>
         <item>Primary</item>
         <item>Secondary</item>
+        <item>Enrichment</item>
+        <item>Parent Meetings</item>
+        <item>Permission Forms</item>
         <item>Gallery</item>
         <item>About Us</item>
         <item>Contact Us</item>
 
+
+
     </string-array>
     <string name="loading">Loading&#8230;</string>
     <string-array name="navigation_item_icons">
         <item>@drawable/home</item>
         <item>@drawable/notif</item>
         <item>@drawable/calendar</item>
+        <item>@drawable/absence</item>
         <item>@drawable/payment</item>
         <item>@drawable/lunchbox_icon</item>
         <item>@drawable/parent</item>
         <item>@drawable/earlyyears</item>
         <item>@drawable/primary</item>
         <item>@drawable/secondary</item>
+        <item>@drawable/ccas</item>
+        <item>@drawable/parentevening</item>
+        <item>@drawable/permission_slip</item>
         <item>@drawable/gallery</item>
         <item>@drawable/aboutus</item>
         <item>@drawable/contacts</item>
 
+
+
     </string-array>
     <string name="default_notification_channel_id" translatable="false">fcm_default_channel</string>
     <string name="settings">Settings</string>
@@ -244,6 +256,31 @@
     <string name="nov_short">NOV</string>
     <string name="dec_short">DEC</string>
 
+    <string-array name="Months">
+        <item> January </item>
+        <item> February </item>
+        <item> March </item>
+        <item> April </item>
+        <item> May </item>
+        <item> June </item>
+        <item> July </item>
+        <item> August </item>
+        <item> September </item>
+        <item> October </item>
+        <item> November </item>
+        <item> December </item>
+    </string-array>
+    <string-array name="Weeks">
+        <item> Sun</item>
+        <item> Mon</item>
+        <item> Tue</item>
+        <item> Wed</item>
+        <item> Thur</item>
+        <item> Fri</item>
+        <item> Sat</item>
+    </string-array>
+    <string name="review_confirm"><![CDATA[Review & Confirm]]></string>
+
     <array name="calendar_row_colors">
         <item>@color/cal_row_1</item>
         <item>@color/cal_row_2</item>
@@ -256,4 +293,11 @@
 
     <string name="new_version_available">New Version Available</string>
     <string name="force_update">There is a newer version available for download! Please update the app by visiting the Google Play Store</string>
+    <string name="appregisteredHint">App Registered Absences</string>
+    <string name="regNewAbsence">Register New Absence</string>
+    <string name="regEarlypickup">Register Early Pickup</string>
+    <string name="requestHint">If you need to cancel a registered absence/early pickup please contact reception (phone or email).</string>
+
+
+
 </resources>
\ No newline at end of file
Index: app/src/main/res/layout/dialog_success_alert.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/dialog_success_alert.xml b/app/src/main/res/layout/dialog_success_alert.xml
new file mode 100644
--- /dev/null	(date 1688371026000)
+++ b/app/src/main/res/layout/dialog_success_alert.xml	(date 1688371026000)
@@ -0,0 +1,104 @@
+<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+
+    >
+
+    <RelativeLayout
+        android:id="@+id/r"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:background="@android:color/transparent">
+
+        <ImageView
+            android:id="@+id/a"
+            android:layout_width="match_parent"
+            android:layout_height="40dp"
+            android:layout_marginTop="40dp"
+            android:background="@drawable/dialoguetopcurve"
+            android:gravity="center"
+            android:scaleType="fitCenter" />
+
+        <ImageView
+            android:id="@+id/b"
+            android:layout_width="match_parent"
+            android:layout_height="80dp"
+            android:background="@android:color/transparent"
+            android:gravity="center"
+            android:scaleType="fitCenter" />
+
+        <ImageView
+            android:id="@+id/iconImageView"
+            android:layout_width="60dp"
+            android:layout_height="60dp"
+            android:layout_centerInParent="true"
+            android:background="@drawable/round"
+            android:gravity="center"
+            android:scaleType="fitCenter"
+            android:src="@drawable/tick" />
+    </RelativeLayout>
+
+    <RelativeLayout
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:layout_below="@+id/r"
+        android:layout_centerHorizontal="true"
+        android:background="@drawable/dialoguebottomcurve">
+
+
+        <com.nas.alreem.commonviews.CustomTextViewSemiBold
+
+            android:id="@+id/alertHead"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:layout_centerHorizontal="true"
+            android:layout_marginLeft="4dp"
+            android:layout_marginRight="4dp"
+            android:layout_marginBottom="10dp"
+            android:gravity="center_horizontal"
+            android:text="Success"
+            android:textColor="@color/alert_text_color"
+            android:textSize="18sp" />
+
+        <com.nas.alreem.commonviews.CustomTextViewRegular
+
+            android:id="@+id/messageTxt"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:layout_below="@+id/alertHead"
+            android:layout_centerHorizontal="true"
+            android:layout_marginLeft="4dp"
+            android:layout_marginTop="5dp"
+            android:layout_marginRight="4dp"
+            android:layout_marginBottom="30dp"
+            android:gravity="center_horizontal"
+            android:textColor="#ff000000" />
+        <LinearLayout
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:orientation="horizontal"
+            android:layout_below="@+id/messageTxt"
+            android:gravity="center_horizontal"
+            android:weightSum="100">
+            <LinearLayout
+                android:layout_width="0dp"
+                android:layout_height="40dp"
+                android:layout_marginBottom="20dp"
+                android:layout_gravity="center_horizontal"
+                android:layout_weight="50">
+                <androidx.appcompat.widget.AppCompatButton
+                    android:id="@+id/btn_Ok"
+                    android:layout_width="match_parent"
+                    android:layout_height="match_parent"
+                    android:layout_gravity="center"
+                    android:layout_marginLeft="20dp"
+                    android:layout_marginRight="20dp"
+                    android:background="@drawable/buttonsubmit_new"
+                    android:text="OK"
+                    android:gravity="center_vertical|center_horizontal"
+                    android:textColor="#ffffffff" />
+            </LinearLayout>
+
+        </LinearLayout>
+    </RelativeLayout>
+</RelativeLayout>
\ No newline at end of file
Index: app/src/main/java/com/nas/alreem/activity/parent_meetings/ParentMeetingDetailActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/nas/alreem/activity/parent_meetings/ParentMeetingDetailActivity.kt b/app/src/main/java/com/nas/alreem/activity/parent_meetings/ParentMeetingDetailActivity.kt
new file mode 100644
--- /dev/null	(date 1689159618989)
+++ b/app/src/main/java/com/nas/alreem/activity/parent_meetings/ParentMeetingDetailActivity.kt	(date 1689159618989)
@@ -0,0 +1,431 @@
+package com.nas.alreem.activity.parent_meetings
+
+import android.app.Dialog
+import android.content.Context
+import android.content.Intent
+import android.graphics.Color
+import android.graphics.drawable.ColorDrawable
+import android.net.Uri
+import android.os.Bundle
+import android.util.Log
+import android.view.View
+import android.view.Window
+import android.widget.*
+import androidx.appcompat.app.AppCompatActivity
+import androidx.core.content.ContextCompat
+import androidx.recyclerview.widget.DividerItemDecoration
+import androidx.recyclerview.widget.GridLayoutManager
+import androidx.recyclerview.widget.LinearLayoutManager
+import androidx.recyclerview.widget.RecyclerView
+import com.nas.alreem.R
+import com.nas.alreem.activity.home.HomeActivity
+import com.nas.alreem.activity.parent_meetings.adapter.ParentsEveningRoomListAdapter
+import com.nas.alreem.activity.parent_meetings.adapter.TimeslotAdapter
+import com.nas.alreem.activity.parent_meetings.model.*
+import com.nas.alreem.constants.*
+import com.nas.alreem.rest.ApiClient
+import kotlinx.android.synthetic.main.activity_parent_meeting_detail.*
+import retrofit2.Call
+import retrofit2.Callback
+import retrofit2.Response
+import java.text.DateFormat
+import java.text.SimpleDateFormat
+import java.util.*
+
+class ParentMeetingDetailActivity:AppCompatActivity() {
+    lateinit var mContext: Context
+    lateinit var backRelative: RelativeLayout
+    lateinit var heading: TextView
+    lateinit var logoClickImgView: ImageView
+    lateinit var progressDialogAdd: ProgressBar
+    lateinit var date_header: TextView
+    var firstVisit:Boolean=true
+    var dateString:String=""
+    var date_sel:String=""
+    var studName:String=""
+    var studId:String=""
+    var studClass:String=""
+    var staff_name:String=""
+    var staff_id:String=""
+    lateinit var studentName:TextView
+    lateinit var studentClass:TextView
+    lateinit var staffName:TextView
+    lateinit var confirm:TextView
+    lateinit var cancel:TextView
+    lateinit var vpml_btn:Button
+    lateinit var recyclerView: RecyclerView
+    lateinit var info_img:ImageView
+    lateinit var back: ImageView
+    lateinit var home_icon:ImageView
+    lateinit var timeSlotList:ArrayList<PtaTimeSlotList>
+    lateinit var timeSlotListPost: ArrayList<PtaTimeSlotList>
+    var alreadyslotBookedByUser:Boolean=false
+    var confirmedslotBookedByUser:Boolean=false
+    var confirmed_link:String=""
+
+    override fun onCreate(savedInstanceState: Bundle?) {
+        super.onCreate(savedInstanceState)
+        setContentView(R.layout.activity_parent_meeting_detail)
+
+        mContext=this
+        initfn()
+
+    }
+    private fun initfn(){
+        progressDialogAdd=findViewById(R.id.progressDialogAdd)
+        heading=findViewById(R.id.heading)
+        heading.text=ConstantWords.parentmeetings
+        backRelative=findViewById(R.id.backRelative)
+        logoClickImgView=findViewById(R.id.logoClickImgView)
+        dateString=intent.getStringExtra("date").toString()
+        studName=intent.getStringExtra("studentName").toString()
+        studId=intent.getStringExtra("studentId").toString()
+        studClass=intent.getStringExtra("studentClass").toString()
+        staff_name=intent.getStringExtra("staffName").toString()
+        staff_id=intent.getStringExtra("staffId").toString()
+        studentName=findViewById(R.id.studentNameTV)
+        studentClass=findViewById(R.id.studentClassTV)
+        staffName=findViewById(R.id.staffTV)
+        date_header=findViewById(R.id.dateTextView)
+        studentName.text = studName
+        studentClass.text = studClass
+        staffName.text = staff_name
+        val inputFormat: DateFormat = SimpleDateFormat("d/M/yyyy")
+        val outputFormat: DateFormat = SimpleDateFormat("dd MMMM yyyy")
+        val inputDateStr = dateString
+        val date: Date = inputFormat.parse(inputDateStr)
+        date_sel = outputFormat.format(date)
+        Log.e("dt",date_sel)
+        date_header.text = date_sel
+        confirm=findViewById(R.id.reviewConfirmTextView)
+        cancel=findViewById(R.id.cancelTextView)
+        vpml_btn=findViewById(R.id.vpmlBtn)
+        recyclerView=findViewById(R.id.recycler_view_alloted_time)
+        info_img=findViewById(R.id.infoRoomImg)
+        timeSlotList= ArrayList()
+        timeSlotListPost= ArrayList()
+        timeslotList()
+
+        info_img.setOnClickListener {
+            showRoomList()
+        }
+        confirm.setOnClickListener {
+            val intent = Intent(mContext, ReviewAppointmentsRecyclerViewActivity::class.java)
+            intent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP)
+            startActivity(intent)
+        }
+        cancel.setOnClickListener {
+            if (timeSlotListPost.get(0).booking_open.equals("y")) {
+
+                showApiAlert(mContext,"Do you want to cancel this appointment?","Confirm")
+
+            } else {
+                DialogFunctions.commonErrorAlertDialog("Alert","Booking and cancellation date is over.",mContext)
+
+            }
+        }
+        vpml_btn.setOnClickListener {
+            if (confirmed_link.equals("")) {
+            } else {
+                val viewIntent = Intent(
+                    "android.intent.action.VIEW",
+                    Uri.parse(confirmed_link)
+                )
+                startActivity(viewIntent)
+            }
+        }
+        backRelative.setOnClickListener(View.OnClickListener {
+            finish()
+        })
+        heading.text= ConstantWords.parentmeetings
+        logoClickImgView.setOnClickListener(View.OnClickListener {
+            val intent = Intent(mContext, HomeActivity::class.java)
+            intent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP)
+            startActivity(intent)
+        })
+    }
+    private fun showApiAlert(context: Context,message : String,msgHead : String){
+        val dialog = Dialog(context)
+        dialog.requestWindowFeature(Window.FEATURE_NO_TITLE)
+        dialog.window!!.setBackgroundDrawable(ColorDrawable(Color.TRANSPARENT))
+        dialog.setCancelable(false)
+        dialog.setContentView(R.layout.dialog_ok_cancel)
+        val icon = dialog.findViewById(R.id.iconImageView) as ImageView
+       /* icon.setBackgroundResource(bgIcon)
+        icon.setImageResource(ico)*/
+        val text = dialog.findViewById(R.id.text_dialog) as TextView
+        val textHead = dialog.findViewById(R.id.alertHead) as TextView
+        text.text = message
+        textHead.text = msgHead
+        val dialogButton = dialog.findViewById(R.id.btn_Ok) as Button
+        dialogButton.setOnClickListener {
+            postSelectedSlot()
+            dialog.dismiss()
+        }
+        val dialogButtonCancel = dialog.findViewById(R.id.btn_Cancel) as Button
+        dialogButtonCancel.setOnClickListener { dialog.dismiss() }
+        dialog.show()
+    }
+    private fun postSelectedSlot(){
+        progressDialogAdd.visibility = View.VISIBLE
+        val token = PreferenceManager.getaccesstoken(mContext)
+        val ptaInsertSuccessBody = PtaInsertApiModel(studId,timeSlotListPost[0].slot_id)
+        val call: Call<PtaInsertModel> = ApiClient.getClient.pta_insert(ptaInsertSuccessBody,"Bearer "+token)
+        call.enqueue(object : Callback<PtaInsertModel> {
+            override fun onFailure(call: Call<PtaInsertModel>, t: Throwable) {
+                Log.e("Error", t.localizedMessage)
+                progressDialogAdd.visibility = View.GONE
+            }
+            override fun onResponse(call: Call<PtaInsertModel>, response: Response<PtaInsertModel>) {
+                progressDialogAdd.visibility = View.GONE
+                //val arraySize :Int = response.body()!!.responseArray.studentList.size
+                if (response.body()!!.status==100)
+                {
+
+                    DialogFunctions.showDialogAlertSingleBtn(
+                        mContext ,
+                        "Alert",
+                        "Reserved Only – Please review and confirm booking",
+                        R.drawable.tick,
+                        R.drawable.round
+                    )
+                    timeslotList()
+                } else if (response.body()!!.status == 109) {
+                    DialogFunctions.showDialogAlertSingleBtn(
+                        mContext,
+                        "Alert",
+                        "Request cancelled successfully",
+                        R.drawable.tick,
+                        R.drawable.round
+                    )
+                    timeslotList()
+                } else if (response.body()!!.status == 126) {
+                    DialogFunctions.showDialogAlertSingleBtn(
+                        mContext ,
+                        "Alert",
+                        "Slot is already booked by an another user",
+                        R.drawable.exclamationicon,
+                        R.drawable.round
+                    )
+//                                    getPtaAllotedDateList();
+                } else if (response.body()!!.status == 124) {
+                    DialogFunctions.showDialogAlertSingleBtn(
+                        mContext ,
+                        "Alert",
+                        "Timeslot not found",
+                        R.drawable.exclamationicon,
+                        R.drawable.round
+                    )
+                } else if (response.body()!!.status == 125) {
+                    DialogFunctions.showDialogAlertSingleBtn(
+                        mContext,
+                        "Alert",
+                        getString(R.string.datexpirecontact),
+                        R.drawable.exclamationicon,
+                        R.drawable.round
+                    )
+                }
+ else
+                {
+
+                    DialogFunctions.commonErrorAlertDialog(mContext.resources.getString(R.string.alert), ConstantFunctions.commonErrorString(response.body()!!.status), mContext)
+                }
+
+
+            }
+
+        })
+    }
+    private fun timeslotList(){
+        alreadyslotBookedByUser = false
+        timeSlotList= ArrayList()
+        timeSlotListPost= ArrayList()
+        progressDialogAdd.visibility = View.VISIBLE
+        val token = PreferenceManager.getaccesstoken(mContext)
+        val inputFormat: DateFormat = SimpleDateFormat("dd MMMM yyyy")
+        val outputFormat: DateFormat = SimpleDateFormat("yyyy-MM-dd")
+        val inputDateStr = date_sel
+        val date: Date = inputFormat.parse(inputDateStr)
+        val outputDateStr: String = outputFormat.format(date)
+        Log.e("dt", outputDateStr)
+        val timeslotBody = PtaListApiModel(studId, staff_id, outputDateStr)
+        val call: Call<PtaListModel> =
+            ApiClient.getClient.pta_list(timeslotBody, "Bearer " + token)
+        call.enqueue(object : Callback<PtaListModel> {
+            override fun onFailure(call: Call<PtaListModel>, t: Throwable) {
+                Log.e("Failed", t.localizedMessage)
+                progressDialogAdd.visibility = View.GONE
+            }
+
+            override fun onResponse(
+                call: Call<PtaListModel>,
+                response: Response<PtaListModel>
+            ) {
+                val responsedata = response.body()
+                progressDialogAdd.visibility = View.GONE
+
+                if (responsedata!!.status == 100) {
+
+                    // Log.e("STATUS LOGIN", responsedata.response.statuscode)
+                     if (responsedata!!.data.isNotEmpty()) {
+                            timeSlotList.addAll(responsedata!!.data)
+
+                            for (i in timeSlotList.indices) {
+                                if (timeSlotList[i].status.equals("2")) {
+
+                                    timeSlotListPost.add(timeSlotList[i])
+                                    alreadyslotBookedByUser = true
+
+                                     confirm.visibility=View.GONE
+                             cancel.visibility=View.GONE
+                                }
+                            }
+                            for (i in timeSlotList.indices) {
+                                if (timeSlotList[i].status.equals("3")) {
+                                    confirmedslotBookedByUser = true
+                                    confirmed_link = timeSlotList[i].vpml
+                                     confirm.visibility=View.GONE
+                             cancel.visibility=View.GONE
+                                }
+                            }
+                            if (confirmedslotBookedByUser) {
+                                if (confirmed_link.equals("")) {
+                                    vpmlBtn.visibility=View.GONE
+                                } else {
+                                    vpmlBtn.visibility=View.VISIBLE
+                                }
+                                cancel.visibility = View.INVISIBLE
+                                confirm.visibility = View.INVISIBLE
+                            } else if (alreadyslotBookedByUser) {
+
+                                cancel.visibility = View.VISIBLE
+                                confirm.visibility = View.VISIBLE
+                            } else {
+                                cancel.visibility = View.INVISIBLE
+                                confirm.visibility = View.INVISIBLE
+                            }
+//        mSwipeRefreshLayout = (SwipeRefreshLayout) findViewById(R.id.swipeRefreshLayout);
+//        mSwipeRefreshLayout.setRefreshing(false);
+                            recyclerView.setHasFixedSize(true)
+                            var recyclerViewLayoutManager: RecyclerView.LayoutManager =
+                                GridLayoutManager(mContext, 3)
+                            val spacing = 5 // 50px
+
+
+                            recyclerView.layoutManager = recyclerViewLayoutManager
+
+                            //recyclerView.layoutManager=LinearLayoutManager(mContext,LinearLayoutManager.HORIZONTAL,false)
+
+                            var timeslot_adapter =
+                                TimeslotAdapter(mContext, timeSlotList, confirm, cancel)
+                            recyclerView.adapter = timeslot_adapter
+                        } else {
+
+                            //CustomStatusDialog();
+                            Toast.makeText(mContext, "No Data Available", Toast.LENGTH_SHORT).show()
+
+                        }
+                }else if (responsedata!!.status==310){
+                    DialogFunctions.commonErrorAlertDialog("Alert","Slot is already booked by an another user.",
+                        mContext)
+                } else {
+
+                    DialogFunctions.commonErrorAlertDialog(
+                        mContext.resources.getString(R.string.alert),
+                        ConstantFunctions.commonErrorString(response.body()!!.status),
+                        mContext
+                    )
+                }
+
+                recyclerView.addOnItemClickListener(object: OnItemClickListener {
+                    override fun onItemClicked(position: Int, view: View) {
+
+                        if (timeSlotList.get(position).status.equals("1")) {
+                            DialogFunctions.commonErrorAlertDialog("Alert","This slot is not available.",mContext)
+
+                        } else if (confirmedslotBookedByUser) {
+                            DialogFunctions.commonErrorAlertDialog("Alert","Your time slot is already confirmed.",mContext)
+                        } else if (!alreadyslotBookedByUser) {
+                            timeSlotListPost=ArrayList()
+                            timeSlotListPost.add(timeSlotList[position])
+                            if (timeSlotListPost.get(0).booking_open
+                                    .equals("y")
+                            ) {
+                                val inputFormat: DateFormat = SimpleDateFormat("hh:mm:ss")
+                                val outputFormat: DateFormat = SimpleDateFormat("hh:mm aa")
+                                val inputDateStr = timeSlotListPost[0].start_time
+                                val date: Date = inputFormat.parse(inputDateStr)
+                                val formt_fromtime= outputFormat.format(date)
+
+
+                                val inputFormat2: DateFormat = SimpleDateFormat("hh:mm:ss")
+                                val outputFormat2: DateFormat = SimpleDateFormat("hh:mm aa")
+                                val inputDateStr2 = timeSlotListPost[0].end_time
+                                val date2: Date = inputFormat2.parse(inputDateStr2)
+                                val formt_totime: String = outputFormat2.format(date2)
+                                Log.e("dt",formt_totime)
+
+                                showApiAlert(mContext,"Do you want to reserve your appointment on "+ date_sel +" , "+
+                                        formt_fromtime+" - "+formt_totime,"Alert"
+                                )
+
+                            } else {
+                                DialogFunctions.commonErrorAlertDialog(
+                                    mContext.resources.getString(R.string.alert),
+                                    "Booking and cancellation date is over",
+                                    mContext
+                                )
+                            }
+                        } else {
+                            if (timeSlotList.get(position).status.equals("2")
+                            ) {
+                                DialogFunctions.commonErrorAlertDialog(
+                                    mContext.resources.getString(R.string.alert),
+                                    "This slot is reserved by you for the Parents' Meeting. Click 'Cancel' option to cancel this appointment",
+                                    mContext
+                                )
+
+                            } else {
+                                DialogFunctions.commonErrorAlertDialog(
+                                    mContext.resources.getString(R.string.alert),
+                                    "Another Slot is already booked by you. If you want to take appointment on this time, please cancel earlier appointment and try",
+                                    mContext
+                                )
+                            }
+                        }
+                    }
+
+                })
+
+            }
+        })
+    }
+    private fun showRoomList(){
+        val dialog = Dialog(mContext)
+        dialog.requestWindowFeature(Window.FEATURE_NO_TITLE)
+        dialog.setContentView(R.layout.dialog_room_slot_list)
+        dialog.window!!.setBackgroundDrawable(ColorDrawable(Color.TRANSPARENT))
+        val dialogDismiss = dialog.findViewById<View>(R.id.btn_dismiss) as Button
+        val iconImageView = dialog.findViewById<View>(R.id.iconImageView) as ImageView
+        val socialMediaList =
+            dialog.findViewById<View>(R.id.recycler_view_social_media) as RecyclerView
+        //if(mSocialMediaArray.get())
+
+        //if(mSocialMediaArray.get())
+        val divider = DividerItemDecoration(mContext, DividerItemDecoration.VERTICAL)
+        divider.setDrawable(ContextCompat.getDrawable(mContext,R.drawable.list_divider)!!)
+        socialMediaList.addItemDecoration(divider)
+
+        socialMediaList.setHasFixedSize(true)
+        val llm = LinearLayoutManager(mContext)
+        llm.orientation = LinearLayoutManager.VERTICAL
+        socialMediaList.layoutManager = llm
+
+        Log.e("tmsie",timeSlotList.size.toString())
+        val socialMediaAdapter = ParentsEveningRoomListAdapter(mContext,timeSlotList)
+        socialMediaList.adapter = socialMediaAdapter
+        dialogDismiss.setOnClickListener { dialog.dismiss() }
+
+        dialog.show()
+    }
+}
\ No newline at end of file
Index: app/src/main/java/com/nas/alreem/activity/staff_directory/adapter/StaffDetailAdapter.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/nas/alreem/activity/staff_directory/adapter/StaffDetailAdapter.kt b/app/src/main/java/com/nas/alreem/activity/staff_directory/adapter/StaffDetailAdapter.kt
new file mode 100644
--- /dev/null	(date 1689148617043)
+++ b/app/src/main/java/com/nas/alreem/activity/staff_directory/adapter/StaffDetailAdapter.kt	(date 1689148617043)
@@ -0,0 +1,208 @@
+package com.nas.alreem.activity.staff_directory.adapter
+
+import android.app.Dialog
+import android.content.Context
+import android.content.Intent
+import android.graphics.Color
+import android.graphics.drawable.ColorDrawable
+import android.util.Log
+import android.view.LayoutInflater
+import android.view.View
+import android.view.ViewGroup
+import android.view.Window
+import android.widget.Button
+import android.widget.EditText
+import android.widget.ImageView
+import android.widget.LinearLayout
+import android.widget.RelativeLayout
+import android.widget.TextView
+import android.widget.Toast
+import androidx.annotation.NonNull
+import androidx.recyclerview.widget.RecyclerView
+import com.bumptech.glide.Glide
+import com.nas.alreem.R
+import com.nas.alreem.activity.login.model.SignUpResponseModel
+import com.nas.alreem.activity.staff_directory.model.DepartmentStaffsModel
+import com.nas.alreem.constants.ConstantFunctions
+import com.nas.alreem.constants.DialogFunctions
+import com.nas.alreem.constants.PDFViewerActivity
+import com.nas.alreem.constants.PreferenceManager
+import com.nas.alreem.fragment.home.mContext
+import com.nas.alreem.fragment.payments.model.SendEmailApiModel
+import com.nas.alreem.rest.ApiClient
+import retrofit2.Call
+import retrofit2.Callback
+import retrofit2.Response
+
+internal class StaffDetailAdapter  (var mContext: Context, var staff_cat_list: ArrayList<DepartmentStaffsModel>) :
+    RecyclerView.Adapter<StaffDetailAdapter.MyViewHolder>() {
+    var staff_email:String=""
+    internal inner class MyViewHolder(view: View) : RecyclerView.ViewHolder(view) {
+
+        //var departmentName = view.findViewById(R.id.departmentName) as android.widget.TextView?
+        var staffName: TextView = view.findViewById(R.id.staffName)
+        //var deptLayout = view.findViewById(R.id.deptLayout) as android.widget.LinearLayout?
+        var separator :View= view.findViewById(R.id.separator)
+        var mail :ImageView= view.findViewById(R.id.mailImage)
+        var staffImg:ImageView = view.findViewById(R.id.staffImg)
+        var staffRole : TextView= view.findViewById(R.id.staffRole)
+        var linear_main:RelativeLayout=view.findViewById(R.id.rel_main)
+        var linear_mail:LinearLayout=view.findViewById(R.id.linear_mail)
+
+    }
+    @NonNull
+    override fun onCreateViewHolder(parent: ViewGroup, viewType: Int): MyViewHolder {
+        val itemView = LayoutInflater.from(parent.context)
+            .inflate(R.layout.adapter_staff_detail, parent, false)
+        return MyViewHolder(itemView)
+    }
+    override fun onBindViewHolder(holder: MyViewHolder, position: Int) {
+        Log.e("ad",staff_cat_list.size.toString())
+
+        holder.staffName.text = staff_cat_list[position].name
+        holder.staffRole.text = staff_cat_list[position].department_name
+        var staff_image=staff_cat_list[position].staff_photo
+
+
+
+        if (staff_image.isNotEmpty()) {
+            mContext.let {
+                Glide.with(it)
+                    .load(staff_image)
+                    .into(holder.staffImg)
+            }
+        }
+        else
+        {
+            holder.staffImg.setBackgroundResource(R.drawable.teacher_icon)
+        }
+        if (staff_cat_list[position].email.isEmpty()){
+            holder.mail.visibility = View.GONE
+        }
+        else{
+            holder.mail.visibility = View.VISIBLE
+            staff_email=staff_cat_list[position].email
+        }
+
+        holder.linear_main.setOnClickListener {
+            if (staff_cat_list[position].staff_bio.isEmpty()){
+                Toast.makeText(mContext, "No Data Found", Toast.LENGTH_SHORT).show()
+
+            }else{
+                var pdf_url=staff_cat_list[position].staff_bio
+                mContext.startActivity(
+                    Intent(mContext, PDFViewerActivity::class.java).putExtra
+                    ("Url",pdf_url).putExtra("title","Staff Bio"))
+
+            }
+
+        }
+        holder.linear_mail.setOnClickListener {
+            showSendEmailDialog()
+        }
+
+    }
+    override fun getItemCount(): Int {
+
+        return staff_cat_list.size
+
+    }
+    private fun showSendEmailDialog()
+    {
+        val dialog = Dialog(mContext)
+        dialog.requestWindowFeature(Window.FEATURE_NO_TITLE)
+        dialog.setCancelable(true)
+        dialog.setContentView(R.layout.dialog_send_email)
+        dialog.window!!.setBackgroundDrawableResource(android.R.color.transparent)
+        val btn_submit = dialog.findViewById<Button>(R.id.submitButton)
+        val btn_cancel = dialog.findViewById<Button>(R.id.cancelButton)
+        val text_dialog = dialog.findViewById<EditText?>(R.id.text_dialog)
+        val text_content = dialog.findViewById<EditText>(R.id.text_content)
+
+        btn_cancel.setOnClickListener(View.OnClickListener {
+            dialog.dismiss()
+        })
+
+        btn_submit.setOnClickListener {
+            if (text_dialog.text.toString().trim().equals("")) {
+
+                DialogFunctions.commonErrorAlertDialog(mContext.resources.getString(R.string.alert),  mContext.getString(R.string.enter_subject), mContext)
+
+
+            } else {
+                if (text_content.text.toString().trim().equals("")) {
+                    DialogFunctions.commonErrorAlertDialog(mContext.resources.getString(R.string.alert), mContext.getString(R.string.enter_content), mContext)
+
+                } else {
+                    // progressDialog.visibility = View.VISIBLE
+
+                    sendEmail(text_dialog.text.toString().trim(), text_content.text.toString().trim(), staff_email, dialog)
+                }
+            }
+        }
+        dialog.show()
+    }
+    fun sendEmail(title: String, message: String,  staffEmail: String, dialog: Dialog)
+    {
+
+        val sendMailBody = SendEmailApiModel( staffEmail, title, message)
+        val call: Call<SignUpResponseModel> = ApiClient.getClient.sendEmailStaff(sendMailBody, "Bearer " + PreferenceManager.getaccesstoken(mContext))
+        call.enqueue(object : Callback<SignUpResponseModel> {
+            override fun onFailure(call: Call<SignUpResponseModel>, t: Throwable) {
+                Log.e("Failed", t.localizedMessage)
+                //progressDialog.visibility = View.GONE
+            }
+
+            override fun onResponse(call: Call<SignUpResponseModel>, response: Response<SignUpResponseModel>) {
+                val responsedata = response.body()
+                //progressDialog.visibility = View.GONE
+                Log.e("Response Signup", responsedata.toString())
+                if (responsedata != null) {
+                    try {
+
+
+                        if (response.body()!!.status==100) {
+                            dialog.dismiss()
+                            showSuccessAlert(
+                                mContext,
+                                "Email sent Successfully ",
+                                "Success",
+                                dialog
+                            )
+                        }else {
+                            DialogFunctions.commonErrorAlertDialog(
+                                mContext.resources.getString(R.string.alert),
+                                ConstantFunctions.commonErrorString(response.body()!!.status),
+                                mContext
+                            )
+
+                        }
+                    } catch (e: Exception) {
+                        e.printStackTrace()
+                    }
+                }
+            }
+
+        })
+    }
+    fun showSuccessAlert(context: Context, message: String, msgHead: String, mdialog: Dialog) {
+        val dialog = Dialog(context)
+        dialog.requestWindowFeature(Window.FEATURE_NO_TITLE)
+        dialog.window!!.setBackgroundDrawable(ColorDrawable(Color.TRANSPARENT))
+        dialog.setCancelable(false)
+        dialog.setContentView(R.layout.dialog_common_error_alert)
+        var iconImageView = dialog.findViewById(R.id.iconImageView) as ImageView
+        var alertHead = dialog.findViewById(R.id.alertHead) as TextView
+        var text_dialog = dialog.findViewById(R.id.text_dialog) as TextView
+        var btn_Ok = dialog.findViewById(R.id.btn_Ok) as Button
+        text_dialog.text = message
+        alertHead.text = msgHead
+        iconImageView.setImageResource(R.drawable.tick)
+        btn_Ok.setOnClickListener()
+        {
+            dialog.dismiss()
+            mdialog.dismiss()
+        }
+        dialog.show()
+    }
+}
\ No newline at end of file
Index: app/src/main/java/com/nas/alreem/activity/absence/model/RequestPickupApiModel.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/nas/alreem/activity/absence/model/RequestPickupApiModel.kt b/app/src/main/java/com/nas/alreem/activity/absence/model/RequestPickupApiModel.kt
new file mode 100644
--- /dev/null	(date 1688378434000)
+++ b/app/src/main/java/com/nas/alreem/activity/absence/model/RequestPickupApiModel.kt	(date 1688378434000)
@@ -0,0 +1,15 @@
+package com.nas.alreem.activity.absence.model
+
+import com.google.gson.annotations.SerializedName
+
+class RequestPickupApiModel(
+
+    @SerializedName("student_id") val student_id: String,
+    @SerializedName("pickup_date") val from_date: String,
+    @SerializedName("pickup_time") val time: String,
+    @SerializedName("pickup_reason") val reason: String,
+    @SerializedName("pickup_by_whom") val pickup_by: String,
+    @SerializedName("device_type") val device_type: Int,
+    @SerializedName("device_name") val device_name: String,
+    @SerializedName("app_version") val app_version: String
+)
\ No newline at end of file
Index: app/src/main/res/layout/adapter_roomlist.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/adapter_roomlist.xml b/app/src/main/res/layout/adapter_roomlist.xml
new file mode 100644
--- /dev/null	(date 1687849506000)
+++ b/app/src/main/res/layout/adapter_roomlist.xml	(date 1687849506000)
@@ -0,0 +1,74 @@
+<?xml version="1.0" encoding="utf-8"?>
+<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_width="match_parent"
+    android:layout_height="wrap_content"
+    xmlns:app="http://schemas.android.com/apk/res-auto">
+    <RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
+        android:layout_width="match_parent"
+        android:layout_height="55dp"
+        android:background="@color/term_button_bg"
+        >
+
+        <RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
+            android:layout_width="match_parent"
+            android:layout_height="55dp"
+            android:layout_marginLeft="7dp"
+            android:background="@color/white">
+
+
+            <RelativeLayout
+                android:id="@+id/relSub"
+                android:layout_width="match_parent"
+                android:layout_height="wrap_content"
+                android:padding="5dp" >
+                <ImageView
+                    android:layout_width="wrap_content"
+                    android:layout_height="wrap_content"
+                    android:src="@drawable/time_icon"
+                    android:id="@+id/imagicon"
+                    android:layout_centerVertical="true"
+                    android:layout_alignParentLeft="true"
+                    />
+
+                <!--
+                        <com.github.siyamed.shapeimageview.CircularImageView
+                            android:layout_width="50dp"
+                            android:layout_height="50dp"
+                            android:src="@drawable/time_icon"
+                            app:siBorderWidth="1dp"
+                            android:id="@+id/imagicon"
+                            android:layout_centerHorizontal="true"
+                            android:layout_alignParentLeft="true"
+                            app:siBorderColor="#A0DAE5"/>
+                -->
+                <TextView
+                    android:id="@+id/listTxtTitle"
+                    android:layout_width="match_parent"
+                    android:layout_height="wrap_content"
+                    android:layout_marginLeft="5dp"
+                    android:layout_marginRight="5dp"
+                    android:layout_toRightOf="@+id/imagicon"
+                    android:gravity="center_vertical"
+                    android:singleLine="true"
+                    android:text="NAS DUBAI"
+                    android:textColor="@color/black" />
+
+
+                <TextView
+                    android:id="@+id/listTxtClass"
+                    android:layout_width="match_parent"
+                    android:layout_height="wrap_content"
+                    android:layout_below="@+id/listTxtTitle"
+                    android:layout_marginLeft="5dp"
+                    android:layout_marginRight="5dp"
+                    android:layout_toRightOf="@+id/imagicon"
+                    android:gravity="center_vertical"
+                    android:singleLine="true"
+                    android:text="NAS DUBAI"
+                    android:textColor="@color/black" />
+
+            </RelativeLayout>
+
+        </RelativeLayout>
+    </RelativeLayout>
+</RelativeLayout>
\ No newline at end of file
Index: app/src/main/java/com/nas/alreem/activity/parent_meetings/model/PtaTimeSlotList.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/nas/alreem/activity/parent_meetings/model/PtaTimeSlotList.kt b/app/src/main/java/com/nas/alreem/activity/parent_meetings/model/PtaTimeSlotList.kt
new file mode 100644
--- /dev/null	(date 1689058904000)
+++ b/app/src/main/java/com/nas/alreem/activity/parent_meetings/model/PtaTimeSlotList.kt	(date 1689058904000)
@@ -0,0 +1,19 @@
+package com.nas.alreem.activity.parent_meetings.model
+
+import com.google.gson.annotations.SerializedName
+
+class PtaTimeSlotList(
+    @SerializedName("parent_evening_id") val parent_evening_id: Int,
+    @SerializedName("slot_id") val slot_id: Int,
+    @SerializedName("meeting_date") val date: String,
+    @SerializedName("slot_start_time") var start_time: String,
+    @SerializedName("slot_end_time") val end_time: String,
+    @SerializedName("book_end_date") val book_end_date: String,
+    @SerializedName("room") val room: String,
+    @SerializedName("vpml") val vpml: String,
+    @SerializedName("status") val status: String,
+    @SerializedName("booking_status") val booking_open: String,
+    @SerializedName("isSelected") var isSelected: Boolean
+
+
+)
\ No newline at end of file
Index: app/src/main/java/com/nas/alreem/activity/absence/model/PickupListModel.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/nas/alreem/activity/absence/model/PickupListModel.kt b/app/src/main/java/com/nas/alreem/activity/absence/model/PickupListModel.kt
new file mode 100644
--- /dev/null	(date 1688386496000)
+++ b/app/src/main/java/com/nas/alreem/activity/absence/model/PickupListModel.kt	(date 1688386496000)
@@ -0,0 +1,9 @@
+package com.nas.alreem.activity.absence.model
+
+import com.google.gson.annotations.SerializedName
+
+class PickupListModel (
+
+    @SerializedName("status") val status: Int,
+    @SerializedName("early_pickups") val pickupListArray: ArrayList<EarlyPickupListArray>
+)
\ No newline at end of file
Index: app/src/main/java/com/nas/alreem/activity/payments/adapter/PaymentItemListAdapter.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.nas.alreem.activity.payments.adapter\n\nimport android.annotation.SuppressLint\nimport android.content.Context\nimport android.content.Intent\nimport android.os.Build\nimport android.util.Log\nimport android.view.LayoutInflater\nimport android.view.View\nimport android.view.ViewGroup\nimport android.widget.ImageView\nimport android.widget.RelativeLayout\nimport android.widget.TextView\nimport androidx.annotation.RequiresApi\nimport androidx.recyclerview.widget.RecyclerView\nimport com.nas.alreem.R\nimport com.nas.alreem.activity.payments.PaymentDetailActivity\nimport com.nas.alreem.activity.payments.model.PaymentCategoryListModel\nimport java.text.DateFormat\nimport java.text.SimpleDateFormat\nimport java.util.*\n\nclass PaymentItemListAdapter (var mcontext: Context, val catItemList: ArrayList<PaymentCategoryListModel>,\n                              var title:String) :\n    RecyclerView.Adapter<PaymentItemListAdapter.ViewHolder>() {\nvar dueDate:String=\"\"\n\n    override fun onCreateViewHolder(viewGroup: ViewGroup, viewType: Int): ViewHolder {\n        val view: View = LayoutInflater.from(viewGroup.context)\n            .inflate(R.layout.adapter_paymentcatlist_recycler, viewGroup, false)\n        return ViewHolder(view)\n    }\n\n    @SuppressLint(\"ResourceAsColor\")\n    @RequiresApi(Build.VERSION_CODES.O)\n    override fun onBindViewHolder(holder: ViewHolder, position: Int) {\n\n        if(catItemList.size>1)\n        {\n            if (position==catItemList.size-1)\n            {\n                holder.viewLine.visibility=View.GONE\n            }\n            else{\n                holder.viewLine.visibility=View.VISIBLE\n            }\n\n        }\n        else{\n            holder.viewLine.visibility=View.GONE\n        }\n        holder.listTitle.setText(catItemList[position].invoice_description)\n        if (catItemList[position].due_date.isNotEmpty()){\n            Log.e(\"date\",catItemList[position].due_date.toString())\n\n           /* val parser = SimpleDateFormat(\"yyyy-MM-dd'T'HH:mm:ss\")\n            val formatter = SimpleDateFormat(\"dd.MM.yyyy HH:mm\")\n            val output = formatter.format(parser.parse(\"2018-12-14T09:55:00\"))*/\n\n            val inputFormat: DateFormat = SimpleDateFormat(\"yyyy-MM-dd\")\n            val outputFormat: DateFormat = SimpleDateFormat(\"dd MMM yyyy\")\n            val inputDateStr = catItemList[position].due_date\n            val date: Date = inputFormat.parse(inputDateStr)\n            dueDate = outputFormat.format(date)\n            Log.e(\"date\",dueDate.toString())\n            holder.listDate.setText(\"Due Date: \" + dueDate)\n        }else{\n            holder.listDate.setText(\"\")\n        }\n\n\n             if (catItemList[position].status.equals(\"0\")) {\n                 holder.statusLayout.visibility = View.VISIBLE\n                 holder.status.setBackgroundResource(R.color.rel_two)\n                 holder.status.text = \"Pay\"\n\n             } else   {\n                 holder.statusLayout.visibility = View.GONE\n                 holder.statusLayout.visibility = View.VISIBLE\n                 holder.status.setBackgroundResource(R.drawable.paid)\n             }\n\n         holder.list.setOnClickListener(){\n         //    Log.e(\"paidby\",catItemList[position].paid_by)\n             var paidBy=\"\"\n             var paidDate=\"\"\n             if(catItemList[position].paid_by!=null)\n             {\n                 paidBy=catItemList[position].paid_by\n             }\n             else{\n                 paidBy=\"\"\n             }\n             if(catItemList[position].paid_date!=null)\n             {\n                 paidDate=catItemList[position].paid_date\n             }\n             else{\n                 paidDate=\"\"\n             }\n                 val intent = Intent(mcontext, PaymentDetailActivity::class.java)\n                 intent.putExtra(\"title\",title)\n                 intent.putExtra(\"status\",catItemList[position].status)\n                 intent.putExtra(\"id\",catItemList[position].id)\n                 intent.putExtra(\"student_name\",catItemList[position].student_name)\n                 intent.putExtra(\"account_code\",catItemList[position].account_code)\n                 intent.putExtra(\"pupil_code\",catItemList[position].pupil_code)\n                 intent.putExtra(\"academic_year\",catItemList[position].academic_year)\n                 intent.putExtra(\"invoice_ref\",catItemList[position].invoice_ref)\n                 intent.putExtra(\"invoice_description\",catItemList[position].invoice_description)\n                 intent.putExtra(\"current_amount\",catItemList[position].current_amount)\n                 intent.putExtra(\"vat_percentage\",catItemList[position].vat_percentage)\n                 intent.putExtra(\"vat_amount\",catItemList[position].vat_amount)\n                 intent.putExtra(\"total_amount\",catItemList[position].total_amount)\n                 intent.putExtra(\"due_date\",catItemList[position].due_date)\n                 intent.putExtra(\"paid_date\",paidDate)\n                 intent.putExtra(\"payment_type\",catItemList[position].payment_type)\n                 intent.putExtra(\"paid_by\",paidBy)\n                 intent.putExtra(\"thankyou_note\",catItemList[position].thankyou_note)\n                 mcontext.startActivity(intent)\n\n         }\n\n\n    }\n\n    override fun getItemCount(): Int {\n        return catItemList.size\n    }\n\n    inner class ViewHolder(itemView: View) : RecyclerView.ViewHolder(itemView) {\n\n        lateinit var listTitle: TextView\n        var listDate:TextView\n         lateinit var status: TextView\n         lateinit var viewLine: ImageView\n         lateinit var statusLayout: RelativeLayout\n         lateinit var list: RelativeLayout\n\n\n\n        init {\n\n            listTitle = itemView.findViewById(R.id.listTxtTitle)\n            listDate = itemView.findViewById(R.id.date)\n             status = itemView.findViewById(R.id.status)\n             statusLayout = itemView.findViewById(R.id.statusLayout)\n             list=itemView.findViewById(R.id.relSub)\n            viewLine=itemView.findViewById(R.id.viewLine)\n        }\n    }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/nas/alreem/activity/payments/adapter/PaymentItemListAdapter.kt b/app/src/main/java/com/nas/alreem/activity/payments/adapter/PaymentItemListAdapter.kt
--- a/app/src/main/java/com/nas/alreem/activity/payments/adapter/PaymentItemListAdapter.kt	(revision b2ad66f8612edd03349ffa4aaee582fd0005cdb4)
+++ b/app/src/main/java/com/nas/alreem/activity/payments/adapter/PaymentItemListAdapter.kt	(date 1689330462955)
@@ -23,7 +23,7 @@
 class PaymentItemListAdapter (var mcontext: Context, val catItemList: ArrayList<PaymentCategoryListModel>,
                               var title:String) :
     RecyclerView.Adapter<PaymentItemListAdapter.ViewHolder>() {
-var dueDate:String=""
+    var dueDate:String=""
 
     override fun onCreateViewHolder(viewGroup: ViewGroup, viewType: Int): ViewHolder {
         val view: View = LayoutInflater.from(viewGroup.context)
@@ -35,7 +35,7 @@
     @RequiresApi(Build.VERSION_CODES.O)
     override fun onBindViewHolder(holder: ViewHolder, position: Int) {
 
-        if(catItemList.size>1)
+        /*if(catItemList.size>1)
         {
             if (position==catItemList.size-1)
             {
@@ -48,14 +48,14 @@
         }
         else{
             holder.viewLine.visibility=View.GONE
-        }
+        }*/
         holder.listTitle.setText(catItemList[position].invoice_description)
         if (catItemList[position].due_date.isNotEmpty()){
             Log.e("date",catItemList[position].due_date.toString())
 
-           /* val parser = SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss")
-            val formatter = SimpleDateFormat("dd.MM.yyyy HH:mm")
-            val output = formatter.format(parser.parse("2018-12-14T09:55:00"))*/
+            /* val parser = SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss")
+             val formatter = SimpleDateFormat("dd.MM.yyyy HH:mm")
+             val output = formatter.format(parser.parse("2018-12-14T09:55:00"))*/
 
             val inputFormat: DateFormat = SimpleDateFormat("yyyy-MM-dd")
             val outputFormat: DateFormat = SimpleDateFormat("dd MMM yyyy")
@@ -69,57 +69,57 @@
         }
 
 
-             if (catItemList[position].status.equals("0")) {
-                 holder.statusLayout.visibility = View.VISIBLE
-                 holder.status.setBackgroundResource(R.color.rel_two)
-                 holder.status.text = "Pay"
+        if (catItemList[position].status.equals("0")) {
+            holder.statusLayout.visibility = View.VISIBLE
+            holder.status.setBackgroundResource(R.color.rel_two)
+            holder.status.text = "Pay"
 
-             } else   {
-                 holder.statusLayout.visibility = View.GONE
-                 holder.statusLayout.visibility = View.VISIBLE
-                 holder.status.setBackgroundResource(R.drawable.paid)
-             }
+        } else   {
+            holder.statusLayout.visibility = View.GONE
+            holder.statusLayout.visibility = View.VISIBLE
+            holder.status.setBackgroundResource(R.drawable.paid_pay)
+        }
 
-         holder.list.setOnClickListener(){
-         //    Log.e("paidby",catItemList[position].paid_by)
-             var paidBy=""
-             var paidDate=""
-             if(catItemList[position].paid_by!=null)
-             {
-                 paidBy=catItemList[position].paid_by
-             }
-             else{
-                 paidBy=""
-             }
-             if(catItemList[position].paid_date!=null)
-             {
-                 paidDate=catItemList[position].paid_date
-             }
-             else{
-                 paidDate=""
-             }
-                 val intent = Intent(mcontext, PaymentDetailActivity::class.java)
-                 intent.putExtra("title",title)
-                 intent.putExtra("status",catItemList[position].status)
-                 intent.putExtra("id",catItemList[position].id)
-                 intent.putExtra("student_name",catItemList[position].student_name)
-                 intent.putExtra("account_code",catItemList[position].account_code)
-                 intent.putExtra("pupil_code",catItemList[position].pupil_code)
-                 intent.putExtra("academic_year",catItemList[position].academic_year)
-                 intent.putExtra("invoice_ref",catItemList[position].invoice_ref)
-                 intent.putExtra("invoice_description",catItemList[position].invoice_description)
-                 intent.putExtra("current_amount",catItemList[position].current_amount)
-                 intent.putExtra("vat_percentage",catItemList[position].vat_percentage)
-                 intent.putExtra("vat_amount",catItemList[position].vat_amount)
-                 intent.putExtra("total_amount",catItemList[position].total_amount)
-                 intent.putExtra("due_date",catItemList[position].due_date)
-                 intent.putExtra("paid_date",paidDate)
-                 intent.putExtra("payment_type",catItemList[position].payment_type)
-                 intent.putExtra("paid_by",paidBy)
-                 intent.putExtra("thankyou_note",catItemList[position].thankyou_note)
-                 mcontext.startActivity(intent)
+        holder.list.setOnClickListener(){
+            //    Log.e("paidby",catItemList[position].paid_by)
+            var paidBy=""
+            var paidDate=""
+            if(catItemList[position].paid_by!=null)
+            {
+                paidBy=catItemList[position].paid_by
+            }
+            else{
+                paidBy=""
+            }
+            if(catItemList[position].paid_date!=null)
+            {
+                paidDate=catItemList[position].paid_date
+            }
+            else{
+                paidDate=""
+            }
+            val intent = Intent(mcontext, PaymentDetailActivity::class.java)
+            intent.putExtra("title",title)
+            intent.putExtra("status",catItemList[position].status)
+            intent.putExtra("id",catItemList[position].id)
+            intent.putExtra("student_name",catItemList[position].student_name)
+            intent.putExtra("account_code",catItemList[position].account_code)
+            intent.putExtra("pupil_code",catItemList[position].pupil_code)
+            intent.putExtra("academic_year",catItemList[position].academic_year)
+            intent.putExtra("invoice_ref",catItemList[position].invoice_ref)
+            intent.putExtra("invoice_description",catItemList[position].invoice_description)
+            intent.putExtra("current_amount",catItemList[position].current_amount)
+            intent.putExtra("vat_percentage",catItemList[position].vat_percentage)
+            intent.putExtra("vat_amount",catItemList[position].vat_amount)
+            intent.putExtra("total_amount",catItemList[position].total_amount)
+            intent.putExtra("due_date",catItemList[position].due_date)
+            intent.putExtra("paid_date",paidDate)
+            intent.putExtra("payment_type",catItemList[position].payment_type)
+            intent.putExtra("paid_by",paidBy)
+            intent.putExtra("thankyou_note",catItemList[position].thankyou_note)
+            mcontext.startActivity(intent)
 
-         }
+        }
 
 
     }
@@ -132,10 +132,10 @@
 
         lateinit var listTitle: TextView
         var listDate:TextView
-         lateinit var status: TextView
-         lateinit var viewLine: ImageView
-         lateinit var statusLayout: RelativeLayout
-         lateinit var list: RelativeLayout
+        lateinit var status: TextView
+        lateinit var viewLine: ImageView
+        lateinit var statusLayout: RelativeLayout
+        lateinit var list: RelativeLayout
 
 
 
@@ -143,9 +143,9 @@
 
             listTitle = itemView.findViewById(R.id.listTxtTitle)
             listDate = itemView.findViewById(R.id.date)
-             status = itemView.findViewById(R.id.status)
-             statusLayout = itemView.findViewById(R.id.statusLayout)
-             list=itemView.findViewById(R.id.relSub)
+            status = itemView.findViewById(R.id.status)
+            statusLayout = itemView.findViewById(R.id.statusLayout)
+            list=itemView.findViewById(R.id.relSub)
             viewLine=itemView.findViewById(R.id.viewLine)
         }
     }
Index: app/src/main/res/layout/dialog_room_slot_list.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/dialog_room_slot_list.xml b/app/src/main/res/layout/dialog_room_slot_list.xml
new file mode 100644
--- /dev/null	(date 1687849302000)
+++ b/app/src/main/res/layout/dialog_room_slot_list.xml	(date 1687849302000)
@@ -0,0 +1,106 @@
+<?xml version="1.0" encoding="utf-8"?>
+<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+
+    >
+
+    <RelativeLayout
+        android:id="@+id/r"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:background="@android:color/transparent">
+
+        <ImageView
+            android:id="@+id/a"
+            android:layout_width="match_parent"
+            android:layout_height="40dp"
+            android:layout_marginTop="40dp"
+            android:background="@drawable/dialoguetopcurve"
+            android:gravity="center"
+            android:scaleType="fitCenter" />
+
+        <ImageView
+            android:id="@+id/b"
+            android:layout_width="match_parent"
+            android:layout_height="80dp"
+            android:background="@android:color/transparent"
+            android:gravity="center"
+            android:scaleType="fitCenter" />
+
+        <ImageView
+            android:id="@+id/iconImageView"
+            android:layout_width="80dp"
+            android:layout_height="80dp"
+            android:layout_centerInParent="true"
+            android:background="@drawable/round"
+            android:padding="10dp"
+            android:src="@drawable/parentevening"
+            android:gravity="center"
+            android:scaleType="fitCenter" />
+    </RelativeLayout>
+
+    <RelativeLayout
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:layout_below="@+id/r"
+        android:layout_centerHorizontal="true"
+        android:background="@drawable/dialoguebottomcurve"
+        android:layout_marginBottom="10dp">
+        <TextView
+            android:id="@+id/alertHead"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:layout_centerHorizontal="true"
+            android:layout_marginLeft="4dp"
+            android:layout_marginRight="4dp"
+            android:gravity="center_horizontal"
+            android:text="Room Details"
+            android:textColor="@color/rel_two"
+            android:textStyle="bold"
+            android:textSize="18sp" />
+
+        <androidx.recyclerview.widget.RecyclerView
+            android:id="@+id/recycler_view_social_media"
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:layout_below="@+id/alertHead"
+            android:layout_marginStart="10dp"
+            android:layout_marginTop="10dp"
+            android:layout_marginEnd="10dp"
+            android:layout_marginBottom="10dp"
+            android:overScrollMode="never"
+            android:scrollbars="vertical" />
+
+
+        <LinearLayout
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:orientation="horizontal"
+            android:layout_below="@+id/recycler_view_social_media"
+
+            >
+            <LinearLayout
+                android:layout_width="match_parent"
+                android:layout_height="match_parent"
+                android:layout_gravity="center"
+                android:gravity="center"
+
+                >
+                <Button
+                    android:id="@+id/btn_dismiss"
+                    android:layout_width="match_parent"
+                    android:layout_height="match_parent"
+                    android:text="Dismiss"
+                    android:background="@color/colorAccent"
+                    android:gravity="center"
+                    android:textAllCaps="false"
+                    android:layout_marginLeft="10dp"
+                    android:layout_marginRight="10dp"
+                    android:layout_marginBottom="5dp"
+                    android:textColor="#ffffffff" />
+            </LinearLayout>
+
+        </LinearLayout>
+    </RelativeLayout>
+</RelativeLayout>
\ No newline at end of file
Index: app/src/main/java/com/nas/alreem/activity/parent_meetings/model/PtaReviewListResponseModel.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/nas/alreem/activity/parent_meetings/model/PtaReviewListResponseModel.kt b/app/src/main/java/com/nas/alreem/activity/parent_meetings/model/PtaReviewListResponseModel.kt
new file mode 100644
--- /dev/null	(date 1689059454000)
+++ b/app/src/main/java/com/nas/alreem/activity/parent_meetings/model/PtaReviewListResponseModel.kt	(date 1689059454000)
@@ -0,0 +1,9 @@
+package com.nas.alreem.activity.parent_meetings.model
+
+import com.google.gson.annotations.SerializedName
+
+class PtaReviewListResponseModel (
+    @SerializedName("status")var status:Int,
+    @SerializedName("message")var message:String,
+    @SerializedName("data")var data:ArrayList<ReviewListModel>
+)
\ No newline at end of file
Index: app/src/main/java/com/nas/alreem/activity/parent_meetings/model/PtaListApiModel.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/nas/alreem/activity/parent_meetings/model/PtaListApiModel.kt b/app/src/main/java/com/nas/alreem/activity/parent_meetings/model/PtaListApiModel.kt
new file mode 100644
--- /dev/null	(date 1688990646000)
+++ b/app/src/main/java/com/nas/alreem/activity/parent_meetings/model/PtaListApiModel.kt	(date 1688990646000)
@@ -0,0 +1,10 @@
+package com.nas.alreem.activity.parent_meetings.model
+
+import com.google.gson.annotations.SerializedName
+
+class PtaListApiModel (
+    @SerializedName("student_id") val student_id: String,
+    @SerializedName("staff_id") val staff_id: String,
+    @SerializedName("date") val date:String
+
+)
\ No newline at end of file
Index: app/src/main/res/layout/activity_leave_request.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/activity_leave_request.xml b/app/src/main/res/layout/activity_leave_request.xml
new file mode 100644
--- /dev/null	(date 1688389764000)
+++ b/app/src/main/res/layout/activity_leave_request.xml	(date 1688389764000)
@@ -0,0 +1,183 @@
+<?xml version="1.0" encoding="utf-8"?>
+<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    android:orientation="vertical"
+    android:background="@color/white">
+
+    <include
+        android:id="@+id/includeRel"
+        layout="@layout/layout_activity_header" />
+
+    <ScrollView
+        android:layout_width="match_parent"
+        android:layout_height="match_parent"
+        android:layout_below="@+id/includeRel"
+        android:scrollbars="none"
+        android:overScrollMode="never">
+        <RelativeLayout
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:orientation="vertical">
+
+            <LinearLayout
+                android:id="@+id/studentSpinner"
+                android:layout_width="match_parent"
+                android:layout_height="45dp"
+                android:layout_gravity="center"
+                android:layout_marginLeft="10dp"
+                android:layout_marginTop="10dp"
+                android:layout_marginRight="10dp"
+                android:layout_marginBottom="10dp"
+                android:background="@drawable/event_spinnerbg"
+                android:gravity="center"
+                android:orientation="horizontal"
+                android:weightSum="100">
+
+                <ImageView
+                    android:id="@+id/studImg"
+                    android:layout_width="35dp"
+                    android:layout_height="35dp"
+                    android:layout_margin="5dp"
+                    android:gravity="center"
+                    android:padding="5dp"
+                    android:scaleType="fitCenter"
+                    android:src="@drawable/boy"
+                    app:siBorderColor="#A0DAE5"
+                    app:siBorderWidth="1dp" />
+
+                <com.nas.alreem.commonviews.CustomFontSansProTextBlack
+                    android:id="@+id/studentName"
+                    android:layout_width="0dp"
+                    android:layout_height="match_parent"
+                    android:layout_weight="80"
+                    android:gravity="left|center"
+                    android:paddingLeft="10dp"
+                    android:text="Select a child"
+                    android:textSize="14sp" />
+
+                <View
+                    android:layout_width="0dp"
+                    android:layout_height="match_parent"
+                    android:layout_weight="8"></View>
+
+                <ImageView
+                    android:layout_width="0dp"
+                    android:layout_height="30dp"
+                    android:layout_gravity="right|center"
+                    android:layout_weight="12"
+                    android:src="@drawable/arrowdownnew"
+                    android:visibility="visible" />
+
+            </LinearLayout>
+
+            <com.nas.alreem.commonviews.CustomFontSansProTextBlack
+                android:id="@+id/enterStratDate"
+                android:layout_width="match_parent"
+                android:layout_height="45dp"
+                android:layout_below="@+id/studentSpinner"
+                android:layout_marginLeft="10dp"
+                android:layout_marginTop="10dp"
+                android:layout_marginRight="10dp"
+                android:background="@drawable/edittext_greybg"
+                android:clickable="true"
+                android:editable="false"
+                android:gravity="left|center"
+                android:hint="First day of absence"
+                android:imeOptions="actionNext"
+                android:paddingLeft="20dp"
+
+                android:singleLine="true"
+                android:textColor="@color/black"
+                android:textColorHint="@color/dark_grey1"
+                android:textSize="15sp" />
+
+            <com.nas.alreem.commonviews.CustomFontSansProTextBlack
+                android:id="@+id/enterEndDate"
+                android:layout_width="match_parent"
+                android:layout_height="45dp"
+                android:layout_below="@+id/enterStratDate"
+                android:layout_marginLeft="10dp"
+                android:layout_marginTop="10dp"
+                android:layout_marginRight="10dp"
+                android:background="@drawable/edittext_greybg"
+                android:clickable="true"
+                android:editable="false"
+                android:gravity="left|center"
+                android:hint="Return to school if known"
+                android:imeOptions="actionNext"
+                android:paddingLeft="20dp"
+                android:singleLine="true"
+                android:textColor="@color/black"
+                android:textColorHint="@color/dark_grey1"
+                android:textSize="15sp" />
+            <com.nas.alreem.commonviews.CustomFontSansProEditTextNoColor
+
+                android:layout_width="match_parent"
+                android:layout_height="wrap_content"
+                android:layout_marginLeft="10dp"
+                android:layout_marginRight="10dp"
+                android:layout_marginTop="10dp"
+                android:gravity="top"
+                android:paddingLeft="20dp"
+                android:paddingTop="20dp"
+                android:hint="Reason for absence"
+                android:textSize="15sp"
+                android:focusableInTouchMode="true"
+                android:layout_below="@+id/enterEndDate"
+                android:textColorHint="@color/dark_grey1"
+                android:textColor="@color/black"
+                android:id="@+id/enterMessage"
+                android:lines="5"
+                android:singleLine="true"
+                android:imeOptions="actionDone"
+                android:inputType="textMultiLine"
+                android:background="@drawable/edittext_greybg"
+                />
+
+            <LinearLayout
+                android:layout_width="match_parent"
+                android:layout_height="45dp"
+                android:layout_margin="10dp"
+                android:layout_below="@+id/enterMessage"
+                android:clickable="true"
+                android:id="@+id/submitLayout"
+                >
+                <Button
+                    android:layout_width="match_parent"
+                    android:layout_height="match_parent"
+                    android:id="@+id/submitBtn"
+                    android:text="@string/submit"
+                    android:textColor="@color/white"
+                    android:textSize="18sp"
+                    android:gravity="center"
+                    android:visibility="visible"
+                    android:background="@drawable/button_new"
+                    />
+
+            </LinearLayout>
+            <LinearLayout
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:gravity="center"
+                android:layout_below="@+id/submitLayout"
+                android:layout_alignParentBottom="true"
+                android:layout_centerInParent="true">
+
+                <ProgressBar
+                    android:id="@+id/progressDialogAdd"
+                    android:layout_width="40dp"
+                    android:layout_height="40dp"
+                    android:layout_centerInParent="true"
+                    android:indeterminateDrawable="@anim/customspinner"
+                    android:visibility="gone"
+
+                    />
+
+            </LinearLayout>
+        </RelativeLayout>
+
+    </ScrollView>
+
+</RelativeLayout>
Index: app/src/main/java/com/nas/alreem/activity/payments/PaymentCategoryActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.nas.alreem.activity.payments\n\nimport android.app.Dialog\nimport android.content.Context\nimport android.content.Intent\nimport android.graphics.Color\nimport android.graphics.drawable.ColorDrawable\nimport android.os.Build\nimport android.os.Bundle\nimport android.util.Log\nimport android.view.View\nimport android.view.Window\nimport android.widget.*\nimport androidx.appcompat.app.AppCompatActivity\nimport androidx.recyclerview.widget.LinearLayoutManager\nimport androidx.recyclerview.widget.RecyclerView\nimport com.bumptech.glide.Glide\nimport com.bumptech.glide.load.engine.DiskCacheStrategy\nimport com.bumptech.glide.load.resource.bitmap.CircleCrop\nimport com.nas.alreem.R\nimport com.nas.alreem.activity.home.HomeActivity\nimport com.nas.alreem.activity.payments.adapter.PayCategoryListAdapter\nimport com.nas.alreem.activity.payments.adapter.StudentListAdapter\nimport com.nas.alreem.activity.payments.model.*\nimport com.nas.alreem.constants.*\n\nimport com.nas.alreem.rest.ApiClient\nimport retrofit2.Call\nimport retrofit2.Callback\nimport retrofit2.Response\n\nclass PaymentCategoryActivity : AppCompatActivity() {\n    lateinit var progressDialogAdd: ProgressBar\n    lateinit var mContext: Context\n    lateinit var studentSpinner: LinearLayout\n    var studentListArrayList = ArrayList<StudentList>()\n    lateinit var studImg: ImageView\n    lateinit var studentName: String\n    lateinit var studentId: String\n    lateinit var studentImg: String\n    lateinit var studentClass: String\n    lateinit var studentNameTxt: TextView\n    lateinit var catListRec:RecyclerView\n    lateinit var catList:ArrayList<PayCatDataList>\n    lateinit var heading: TextView\n    lateinit var logoClickImgView: ImageView\n    lateinit var backRelative: RelativeLayout\n\n    override fun onCreate(savedInstanceState: Bundle?) {\n        super.onCreate(savedInstanceState)\n        setContentView(R.layout.activity_payment_category)\n        init()\n        callStudentListApi()\n    }\n\n    private fun init(){\n        mContext=this\n        progressDialogAdd = findViewById(R.id.progressDialogAdd)\n        catListRec=findViewById(R.id.mListView)\n        studentSpinner = findViewById<LinearLayout>(R.id.studentSpinner)\n        studImg = findViewById<ImageView>(R.id.imagicon)\n        studentNameTxt =findViewById<TextView>(R.id.studentName)\n        catListRec=findViewById(R.id.mListView)\n        heading=findViewById(R.id.heading)\n        backRelative=findViewById(R.id.backRelative)\n        logoClickImgView=findViewById(R.id.logoClickImgView)\n        heading.text=\"Payment\"\n        backRelative.setOnClickListener(View.OnClickListener {\n            finish()\n        })\n\n        logoClickImgView.setOnClickListener(View.OnClickListener {\n            val intent = Intent(mContext, HomeActivity::class.java)\n            intent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP)\n            startActivity(intent)\n        })\n        studentSpinner.setOnClickListener(){\n            showStudentList(mContext,studentListArrayList)\n        }\n\n    }\n    fun callStudentListApi()\n    {\n        progressDialogAdd.visibility=View.VISIBLE\n        studentListArrayList= ArrayList()\n        val call: Call<StudentListModel> = ApiClient.getClient.studentList(\"Bearer \"+PreferenceManager.getaccesstoken(mContext))\n        call.enqueue(object : Callback<StudentListModel> {\n            override fun onFailure(call: Call<StudentListModel>, t: Throwable) {\n                Log.e(\"Failed\", t.localizedMessage)\n                progressDialogAdd.visibility=View.GONE\n            }\n            override fun onResponse(call: Call<StudentListModel>, response: Response<StudentListModel>) {\n                val responsedata = response.body()\n                progressDialogAdd.visibility=View.GONE\n                if (responsedata != null) {\n                    try {\n\n                        if (response.body()!!.status==100)\n                        {\n                            studentListArrayList=ArrayList()\n                            studentListArrayList.addAll(response.body()!!.responseArray.studentList)\n                            if (PreferenceManager.getStudentID(mContext).equals(\"\"))\n                            {\n                                Log.e(\"Empty Img\",\"Empty\")\n                                studentName=studentListArrayList.get(0).name\n                                studentImg=studentListArrayList.get(0).photo\n                                studentId=studentListArrayList.get(0).id\n                                studentClass=studentListArrayList.get(0).section\n                                PreferenceManager.setStudentID(mContext,studentId)\n                                PreferenceManager.setStudentName(mContext,studentName)\n                                PreferenceManager.setStudentPhoto(mContext,studentImg)\n                                PreferenceManager.setStudentClass(mContext,studentClass)\n                                studentNameTxt.text=studentName\n                                Log.e(\"studid(0)\", PreferenceManager.getStudentID(mContext).toString())\n                                if(!studentImg.equals(\"\"))\n                                {\n                                    Glide.with(mContext) //1\n                                        .load(studentImg)\n                                        .placeholder(R.drawable.student)\n                                        .error(R.drawable.student)\n                                        .skipMemoryCache(true) //2\n                                        .diskCacheStrategy(DiskCacheStrategy.NONE) //3\n                                        .transform(CircleCrop()) //4\n                                        .into(studImg)\n                                }\n                                else{\n                                    studImg.setImageResource(R.drawable.student)\n                                }\n\n                            }\n                            else{\n                                studentName= PreferenceManager.getStudentName(mContext)!!\n                                studentImg= PreferenceManager.getStudentPhoto(mContext)!!\n                                studentId= PreferenceManager.getStudentID(mContext)!!\n                                studentClass= PreferenceManager.getStudentClass(mContext)!!\n                                studentNameTxt.text=studentName\n                                if(!studentImg.equals(\"\"))\n                                {\n                                    Glide.with(mContext) //1\n                                        .load(studentImg)\n                                        .placeholder(R.drawable.student)\n                                        .error(R.drawable.student)\n                                        .skipMemoryCache(true) //2\n                                        .diskCacheStrategy(DiskCacheStrategy.NONE) //3\n                                        .transform(CircleCrop()) //4\n                                        .into(studImg)\n                                }\n                                else{\n                                    studImg.setImageResource(R.drawable.student)\n                                }\n                            }\n                            catListRec.visibility=View.GONE\n                            callCategoryList()\n                        }\n                        else\n                        {\n\n                            DialogFunctions.commonErrorAlertDialog(mContext.resources.getString(R.string.alert), ConstantFunctions.commonErrorString(response.body()!!.status), mContext)\n                        }\n\n\n                    } catch (e: Exception) {\n                        e.printStackTrace()\n                    }\n                }\n            }\n\n        })\n    }\n\n\n    override fun onResume() {\n        super.onResume()\n        callStudentListApi()\n    }\n\n    fun showStudentList(context: Context ,mStudentList : ArrayList<StudentList>)\n    {\n        val dialog = Dialog(context)\n        dialog.requestWindowFeature(Window.FEATURE_NO_TITLE)\n        dialog.window!!.setBackgroundDrawable(ColorDrawable(Color.TRANSPARENT))\n        dialog.setCancelable(false)\n        dialog.setContentView(R.layout.dialogue_student_list)\n        var iconImageView = dialog.findViewById(R.id.iconImageView) as ImageView\n        var btn_dismiss = dialog.findViewById(R.id.btn_dismiss) as Button\n        var studentListRecycler = dialog.findViewById(R.id.studentListRecycler) as RecyclerView\n        iconImageView.setImageResource(R.drawable.boy)\n        //if(mSocialMediaArray.get())\n        val sdk = Build.VERSION.SDK_INT\n        if (sdk < Build.VERSION_CODES.JELLY_BEAN) {\n            btn_dismiss.setBackgroundDrawable(\n                mContext.resources.getDrawable(R.drawable.button_new)\n            )\n        } else {\n            btn_dismiss.background = mContext.resources.getDrawable(R.drawable.button_new)\n        }\n\n        studentListRecycler.setHasFixedSize(true)\n        val llm = LinearLayoutManager(mContext)\n        llm.orientation = LinearLayoutManager.VERTICAL\n        studentListRecycler.layoutManager = llm\n        if(mStudentList.size>0)\n        {\n            val studentAdapter = StudentListAdapter(mContext,mStudentList)\n            studentListRecycler.adapter = studentAdapter\n        }\n\n        btn_dismiss.setOnClickListener()\n        {\n            dialog.dismiss()\n        }\n        studentListRecycler.addOnItemClickListener(object: OnItemClickListener {\n            override fun onItemClicked(position: Int, view: View) {\n                // Your logic\n                progressDialogAdd.visibility=View.VISIBLE\n\n                studentName=studentListArrayList.get(position).name\n                studentImg=studentListArrayList.get(position).photo\n                studentId=studentListArrayList.get(position).id\n                studentClass=studentListArrayList.get(position).section\n                PreferenceManager.setStudentID(mContext,studentId)\n                PreferenceManager.setStudentName(mContext,studentName)\n                PreferenceManager.setStudentPhoto(mContext,studentImg)\n                PreferenceManager.setStudentClass(mContext,studentClass)\n                Log.e(\"studidclick\",PreferenceManager.getStudentID(mContext).toString())\n                studentNameTxt.text=studentName\n                if(!studentImg.equals(\"\"))\n                {\n                    Glide.with(mContext) //1\n                        .load(studentImg)\n                        .placeholder(R.drawable.student)\n                        .error(R.drawable.student)\n                        .skipMemoryCache(true) //2\n                        .diskCacheStrategy(DiskCacheStrategy.NONE) //3\n                        .transform(CircleCrop()) //4\n                        .into(studImg)\n                }\n                else\n                {\n                    studImg.setImageResource(R.drawable.student)\n                }\n                progressDialogAdd.visibility = View.VISIBLE\n                catListRec.visibility=View.GONE\n                callCategoryList()\n                dialog.dismiss()\n            }\n        })\n        dialog.show()\n    }\n\n    fun callCategoryList()\n    {\n        val paymentCategoriesBody = PaymentCategoriesApiModel( studentId)\n        val call: Call<PayCategoryModel> = ApiClient.getClient.payment_categories(paymentCategoriesBody, \"Bearer \" + PreferenceManager.getaccesstoken(mContext))\n        call.enqueue(object : Callback<PayCategoryModel> {\n            override fun onFailure(call: Call<PayCategoryModel>, t: Throwable) {\n                Log.e(\"Failed\", t.localizedMessage)\n                progressDialogAdd.visibility = View.GONE\n            }\n\n            override fun onResponse(call: Call<PayCategoryModel>, response: Response<PayCategoryModel>) {\n                val responsedata = response.body()\n                progressDialogAdd.visibility = View.GONE\n                Log.e(\"Response Signup\", responsedata.toString())\n                if (responsedata != null) {\n                    try {\n\n                        if (response.body()!!.status==100) {\n                            catList= ArrayList()\n                            var trn_payment=response.body()!!.responseArray.trn_no\n                            PreferenceManager.setTrnPayment(mContext,trn_payment)\n                            catList=response.body()!!.responseArray.data\n                            catListRec.layoutManager=LinearLayoutManager(mContext)\n                            if(catList.size>0)\n                            {\n                                catListRec.visibility=View.VISIBLE\n                            }\n                            else\n                            {\n                                catListRec.visibility=View.GONE\n                            }\n                            var categorytitle_adapter= PayCategoryListAdapter(mContext,catList)\n                            catListRec.adapter=categorytitle_adapter\n\n                        }else {\n                            catListRec.visibility=View.GONE\n                            DialogFunctions.commonErrorAlertDialog(mContext.resources.getString(R.string.alert), ConstantFunctions.commonErrorString(response.body()!!.status), mContext)\n\n                        }\n\n                    } catch (e: Exception) {\n                        e.printStackTrace()\n                    }\n                }\n            }\n\n        })\n\n    }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/nas/alreem/activity/payments/PaymentCategoryActivity.kt b/app/src/main/java/com/nas/alreem/activity/payments/PaymentCategoryActivity.kt
--- a/app/src/main/java/com/nas/alreem/activity/payments/PaymentCategoryActivity.kt	(revision b2ad66f8612edd03349ffa4aaee582fd0005cdb4)
+++ b/app/src/main/java/com/nas/alreem/activity/payments/PaymentCategoryActivity.kt	(date 1689331448264)
@@ -64,7 +64,7 @@
         heading=findViewById(R.id.heading)
         backRelative=findViewById(R.id.backRelative)
         logoClickImgView=findViewById(R.id.logoClickImgView)
-        heading.text="Payment"
+        heading.text="Payments"
         backRelative.setOnClickListener(View.OnClickListener {
             finish()
         })
@@ -172,6 +172,7 @@
     override fun onResume() {
         super.onResume()
         callStudentListApi()
+        catListRec.visibility=View.GONE
     }
 
     fun showStudentList(context: Context ,mStudentList : ArrayList<StudentList>)
@@ -250,6 +251,7 @@
 
     fun callCategoryList()
     {
+        progressDialogAdd.visibility = View.VISIBLE
         val paymentCategoriesBody = PaymentCategoriesApiModel( studentId)
         val call: Call<PayCategoryModel> = ApiClient.getClient.payment_categories(paymentCategoriesBody, "Bearer " + PreferenceManager.getaccesstoken(mContext))
         call.enqueue(object : Callback<PayCategoryModel> {
@@ -260,7 +262,9 @@
 
             override fun onResponse(call: Call<PayCategoryModel>, response: Response<PayCategoryModel>) {
                 val responsedata = response.body()
-                progressDialogAdd.visibility = View.GONE
+
+                catListRec.visibility=View.VISIBLE
+
                 Log.e("Response Signup", responsedata.toString())
                 if (responsedata != null) {
                     try {
@@ -274,18 +278,20 @@
                             if(catList.size>0)
                             {
                                 catListRec.visibility=View.VISIBLE
-                            }
-                            else
-                            {
-                                catListRec.visibility=View.GONE
-                            }
-                            var categorytitle_adapter= PayCategoryListAdapter(mContext,catList)
-                            catListRec.adapter=categorytitle_adapter
+                                progressDialogAdd.visibility = View.GONE
+                                var categorytitle_adapter= PayCategoryListAdapter(mContext,catList)
+                                catListRec.adapter=categorytitle_adapter
+                            }
+                            else
+                            {
+                                catListRec.visibility=View.GONE
+                            }
+
 
                         }else {
                             catListRec.visibility=View.GONE
                             DialogFunctions.commonErrorAlertDialog(mContext.resources.getString(R.string.alert), ConstantFunctions.commonErrorString(response.body()!!.status), mContext)
-
+                            progressDialogAdd.visibility = View.GONE
                         }
 
                     } catch (e: Exception) {
Index: app/src/main/java/com/nas/alreem/constants/DialogFunctions.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.nas.alreem.constants\n\nimport android.app.Dialog\nimport android.content.Context\nimport android.content.Intent\nimport android.graphics.Color\nimport android.graphics.drawable.ColorDrawable\nimport android.util.Log\nimport android.view.MotionEvent\nimport android.view.View\nimport android.view.Window\nimport android.view.inputmethod.EditorInfo\nimport android.widget.*\nimport com.nas.alreem.R\nimport com.nas.alreem.activity.login.LoginActivity\nimport com.nas.alreem.activity.login.model.ForgetPasswordResponseModel\nimport com.nas.alreem.activity.login.model.SignUpResponseModel\nimport com.nas.alreem.fragment.settings.model.ChangePasswordApiModel\nimport com.nas.alreem.rest.ApiClient\nimport retrofit2.Call\nimport retrofit2.Callback\nimport retrofit2.Response\n\nclass DialogFunctions {\n    companion object\n    {\n        fun showSignUpDialog(context: Context)\n        {\n\n            val dialog = Dialog(context)\n            dialog.requestWindowFeature(Window.FEATURE_NO_TITLE)\n            dialog.window!!.setBackgroundDrawable(ColorDrawable(Color.TRANSPARENT))\n            dialog.setCancelable(false)\n            dialog.setContentView(R.layout.dialog_sign_up)\n            var text_dialog = dialog.findViewById(R.id.text_dialog) as EditText\n            var btn_signup = dialog.findViewById(R.id.btn_signup) as Button\n            var btn_maybelater = dialog.findViewById(R.id.btn_maybelater) as Button\n            var progressDialogAdd = dialog.findViewById(R.id.progressDialogAdd) as ProgressBar\n            text_dialog.setOnEditorActionListener { v, actionId, event ->\n                if(actionId == EditorInfo.IME_ACTION_DONE){\n                    text_dialog.isFocusable =false\n                    text_dialog.isFocusableInTouchMode =false\n                    false\n                } else {\n                    text_dialog.isFocusable =false\n                    text_dialog.isFocusableInTouchMode =false\n                    false\n                }\n            }\n\n            text_dialog.setOnTouchListener(object : View.OnTouchListener {\n                override fun onTouch(v: View, m: MotionEvent): Boolean {\n                    // Perform tasks here\n                    text_dialog.isFocusable =true\n                    text_dialog.isFocusableInTouchMode =true\n                    return false\n                }\n            })\n            btn_signup.setOnClickListener()\n            {\n                if (ValidationFunctions.SignUpForgetValidation(text_dialog.text.toString().trim(),context))\n                {\n\n                    if (ConstantFunctions.internetCheck(context))\n                    {\n                        progressDialogAdd.visibility= View.VISIBLE\n                        signUp(text_dialog.text.toString().trim(),progressDialogAdd,context,dialog)\n\n                    }\n                    else\n                    {\n                       showInternetAlertDialog(context)\n                    }\n\n\n                }\n\n            }\n\n            btn_maybelater.setOnClickListener()\n            {\n                dialog.dismiss()\n            }\n            dialog.show()\n        }\n\n\n        fun showForgetPasswordDialog(context: Context)\n        {\n            val dialog = Dialog(context)\n            dialog.requestWindowFeature(Window.FEATURE_NO_TITLE)\n            dialog.window!!.setBackgroundDrawable(ColorDrawable(Color.TRANSPARENT))\n            dialog.setCancelable(false)\n            dialog.setContentView(R.layout.dialog_forget_password)\n\n            var text_dialog = dialog.findViewById(R.id.text_dialog) as EditText\n            var btn_signup = dialog.findViewById(R.id.btn_signup) as Button\n            var btn_maybelater = dialog.findViewById(R.id.btn_maybelater) as Button\n            var progressDialogAdd = dialog.findViewById(R.id.progressDialogAdd) as ProgressBar\n            text_dialog.setOnEditorActionListener { v, actionId, event ->\n                if(actionId == EditorInfo.IME_ACTION_DONE){\n                    text_dialog.isFocusable =false\n                    text_dialog.isFocusableInTouchMode =false\n                    false\n                } else {\n                    text_dialog.isFocusable =false\n                    text_dialog.isFocusableInTouchMode =false\n                    false\n                }\n            }\n\n            text_dialog.setOnTouchListener(object : View.OnTouchListener {\n                override fun onTouch(v: View, m: MotionEvent): Boolean {\n                    // Perform tasks here\n                    text_dialog.isFocusable =true\n                    text_dialog.isFocusableInTouchMode =true\n                    return false\n                }\n            })\n            btn_signup.setOnClickListener()\n            {\n                if (ValidationFunctions.SignUpForgetValidation(text_dialog.text.toString().trim(),context))\n                {\n                    if (ConstantFunctions.internetCheck(context))\n                    {\n                        progressDialogAdd.visibility=View.VISIBLE\n                        forgetPassword(text_dialog.text.toString().trim(),progressDialogAdd,context,dialog)\n                    }\n                    else\n                    {\n                        showInternetAlertDialog(context)\n                    }\n\n\n                }\n            }\n\n            btn_maybelater.setOnClickListener()\n            {\n                dialog.dismiss()\n            }\n            dialog.show()\n        }\n\n\n        fun commonErrorAlertDialog(heading:String,Message:String,context:Context)\n        {\n            val dialog = Dialog(context)\n            dialog.requestWindowFeature(Window.FEATURE_NO_TITLE)\n            dialog.window!!.setBackgroundDrawable(ColorDrawable(Color.TRANSPARENT))\n            dialog.setCancelable(false)\n            dialog.setContentView(R.layout.dialog_common_error_alert)\n            var iconImageView = dialog.findViewById(R.id.iconImageView) as ImageView\n            var alertHead = dialog.findViewById(R.id.alertHead) as TextView\n            var messageTxt = dialog.findViewById(R.id.messageTxt) as TextView\n            var btn_Ok = dialog.findViewById(R.id.btn_Ok) as Button\n            messageTxt.text = Message\n            alertHead.text = heading\n            btn_Ok.setOnClickListener()\n            {\n                dialog.dismiss()\n            }\n            dialog.show()\n\n        }\n\n\n\n\n        fun showInternetAlertDialog(context: Context)\n        {\n\n            val dialog = Dialog(context)\n            dialog.requestWindowFeature(Window.FEATURE_NO_TITLE)\n            dialog.window!!.setBackgroundDrawable(ColorDrawable(Color.TRANSPARENT))\n            dialog.setCancelable(false)\n            dialog.setContentView(R.layout.dialog_internet_failure_alert)\n            var btn_Ok = dialog.findViewById(R.id.btn_Ok) as Button\n            btn_Ok.setOnClickListener()\n            {\n                dialog.dismiss()\n            }\n            dialog.show()\n        }\n\n\n        fun signUp(email:String,progressDialogAdd:ProgressBar,context: Context,dialog:Dialog)\n        {\n            progressDialogAdd.visibility=View.VISIBLE\n            val call: Call<SignUpResponseModel> = ApiClient.getClient.signup(email)\n            call.enqueue(object : Callback<SignUpResponseModel> {\n                override fun onFailure(call: Call<SignUpResponseModel>, t: Throwable) {\n                    Log.e(\"Failed\", t.localizedMessage)\n                    progressDialogAdd.visibility=View.GONE\n                }\n                override fun onResponse(call: Call<SignUpResponseModel>, response: Response<SignUpResponseModel>) {\n                    val responsedata = response.body()\n                    progressDialogAdd.visibility=View.GONE\n                    if (responsedata != null) {\n                        try {\n\n                            if (response.body()!!.status==100)\n                            {\n                                commonErrorAlertDialog(context.resources.getString(R.string.success),ConstantWords.status_100_signup,context)\n                                dialog.dismiss()\n                            }\n                            else\n                            {\n\n                                commonErrorAlertDialog(context.resources.getString(R.string.alert),ConstantFunctions.commonErrorString(response.body()!!.status),context)\n                            }\n\n\n                        } catch (e: Exception) {\n                            e.printStackTrace()\n                        }\n                    }\n                }\n\n            })\n        }\n\n        fun forgetPassword(email:String,progressDialogAdd:ProgressBar,context: Context,dialog:Dialog)\n        {\n            progressDialogAdd.visibility=View.VISIBLE\n            val call: Call<ForgetPasswordResponseModel> = ApiClient.getClient.forgetPassword(email)\n            call.enqueue(object : Callback<ForgetPasswordResponseModel> {\n                override fun onFailure(call: Call<ForgetPasswordResponseModel>, t: Throwable) {\n                    Log.e(\"Failed\", t.localizedMessage)\n                    progressDialogAdd.visibility=View.GONE\n                }\n                override fun onResponse(call: Call<ForgetPasswordResponseModel>, response: Response<ForgetPasswordResponseModel>) {\n                    val responsedata = response.body()\n                    progressDialogAdd.visibility=View.GONE\n                    if (responsedata != null) {\n                        try {\n\n                            if (response.body()!!.status==100)\n                            {\n                                commonErrorAlertDialog(context.resources.getString(R.string.success),ConstantWords.status_100_forget_password,context)\n                                dialog.dismiss()\n                            }\n                            else\n                            {\n\n                                commonErrorAlertDialog(context.resources.getString(R.string.alert),ConstantFunctions.commonErrorString(response.body()!!.status),context)\n                            }\n\n\n                        } catch (e: Exception) {\n                            e.printStackTrace()\n                        }\n                    }\n                }\n\n            })\n        }\n\n\n        fun logoutDialog(context: Context)\n        {\n            val dialog = Dialog(context)\n            dialog.requestWindowFeature(Window.FEATURE_NO_TITLE)\n            dialog.window!!.setBackgroundDrawable(ColorDrawable(Color.TRANSPARENT))\n            dialog.setCancelable(false)\n            dialog.setContentView(R.layout.dialog_logout)\n            var btn_Ok = dialog.findViewById(R.id.btn_Ok) as Button\n            var btn_Cancel = dialog.findViewById(R.id.btn_Cancel) as Button\n            btn_Ok.setOnClickListener()\n            {\n                PreferenceManager.setaccesstoken(context,\"\")\n                dialog.dismiss()\n                val mIntent = Intent(context, LoginActivity::class.java)\n                mIntent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK or Intent.FLAG_ACTIVITY_CLEAR_TASK)\n                context.startActivity(mIntent)\n            }\n            btn_Cancel.setOnClickListener()\n            {\n                dialog.dismiss()\n            }\n            dialog.show()\n        }\n\n        fun changePasswordDialog(context: Context)\n        {\n            val dialog = Dialog(context)\n            dialog.requestWindowFeature(Window.FEATURE_NO_TITLE)\n            dialog.window!!.setBackgroundDrawable(ColorDrawable(Color.TRANSPARENT))\n            dialog.setCancelable(false)\n            dialog.setContentView(R.layout.dialog_change_password)\n            var btn_changepassword = dialog.findViewById(R.id.btn_changepassword) as Button\n            var btn_cancel = dialog.findViewById(R.id.btn_cancel) as Button\n            var text_currentpassword = dialog.findViewById(R.id.text_currentpassword) as EditText\n            var text_currentnewpassword = dialog.findViewById(R.id.text_currentnewpassword) as EditText\n            var text_confirmpassword = dialog.findViewById(R.id.text_confirmpassword) as EditText\n            var progressDialogAdd = dialog.findViewById(R.id.progressDialogAdd) as ProgressBar\n            text_currentpassword.setOnTouchListener(object : View.OnTouchListener {\n                override fun onTouch(v: View, m: MotionEvent): Boolean {\n                    // Perform tasks here\n                    text_currentpassword.isFocusable =true\n                    text_currentpassword.isFocusableInTouchMode =true\n                    return false\n                }\n            })\n            text_currentnewpassword.setOnTouchListener(object : View.OnTouchListener {\n                override fun onTouch(v: View, m: MotionEvent): Boolean {\n                    // Perform tasks here\n                    text_currentnewpassword.isFocusable =true\n                    text_currentnewpassword.isFocusableInTouchMode =true\n                    return false\n                }\n            })\n            text_confirmpassword.setOnTouchListener(object : View.OnTouchListener {\n                override fun onTouch(v: View, m: MotionEvent): Boolean {\n                    // Perform tasks here\n                    text_confirmpassword.isFocusable =true\n                    text_confirmpassword.isFocusableInTouchMode =true\n                    return false\n                }\n            })\n            btn_changepassword.setOnClickListener()\n            {\n\n               if (text_currentpassword.text.toString().trim().equals(\"\"))\n               {\n                   // Enter Current Password\n                   commonErrorAlertDialog(context.resources.getString(R.string.alert),context.resources.getString(R.string.enter_current_password),context)\n               }\n                else{\n                   if (text_currentnewpassword.text.toString().trim().equals(\"\"))\n                   {\n                       //Enter new password\n                       commonErrorAlertDialog(context.resources.getString(R.string.alert),context.resources.getString(R.string.enter_new_password),context)\n                   }\n                   else\n                   {\n                       if (text_confirmpassword.text.toString().trim().equals(\"\"))\n                       {\n                           // Kindly Confirm your password\n                           commonErrorAlertDialog(context.resources.getString(R.string.alert),context.resources.getString(R.string.confirm_password),context)\n                       }\n                       else\n                       {\n                           if (text_currentnewpassword.text.toString().trim().equals(text_confirmpassword.text.toString().trim()))\n                           {\n                               // callChangePasswordApi()\n                               if (ConstantFunctions.internetCheck(context))\n                               {\n                                   progressDialogAdd.visibility= View.VISIBLE\n                                   changePassword(text_currentpassword.text.toString().trim(),text_currentnewpassword.text.toString().trim(),text_confirmpassword.text.toString().trim(),progressDialogAdd,context,dialog)\n\n                               }\n                               else\n                               {\n                                   showInternetAlertDialog(context)\n                               }\n                           }\n                           else\n                           {\n                               // New Password and Confirm Password Doesn't match\n                               commonErrorAlertDialog(context.resources.getString(R.string.alert),context.resources.getString(R.string.password_not_match),context)\n\n                           }\n                       }\n                   }\n               }\n               // dialog.dismiss()\n\n            }\n            btn_cancel.setOnClickListener()\n            {\n                dialog.dismiss()\n            }\n            dialog.show()\n        }\n\n        fun deleteAccountDialog(context: Context)\n        {\n            val dialog = Dialog(context)\n            dialog.requestWindowFeature(Window.FEATURE_NO_TITLE)\n            dialog.window!!.setBackgroundDrawable(ColorDrawable(Color.TRANSPARENT))\n            dialog.setCancelable(false)\n            dialog.setContentView(R.layout.dialog_delete_account)\n            var btn_Ok = dialog.findViewById(R.id.btn_Ok) as Button\n            var btn_Cancel = dialog.findViewById(R.id.btn_Cancel) as Button\n            var progressDialogAdd = dialog.findViewById(R.id.progressDialogAdd) as ProgressBar\n            btn_Ok.setOnClickListener()\n            {\n                if (ConstantFunctions.internetCheck(context))\n                {\n                    progressDialogAdd.visibility= View.VISIBLE\n                    callDeleteAccountApi(progressDialogAdd,context,dialog)\n                }\n                else\n                {\n                    showInternetAlertDialog(context)\n                }\n\n            }\n            btn_Cancel.setOnClickListener()\n            {\n                dialog.dismiss()\n            }\n            dialog.show()\n        }\n\n\n\n        fun changePassword(current:String,newpass:String,confirmpass:String,progressDialogAdd:ProgressBar,context: Context,dialog:Dialog)\n        {\n            progressDialogAdd.visibility=View.VISIBLE\n            var model=ChangePasswordApiModel(current,newpass,confirmpass)\n            val call: Call<ForgetPasswordResponseModel> = ApiClient.getClient.changePassword(model,\"Bearer \"+PreferenceManager.getaccesstoken(context))\n            call.enqueue(object : Callback<ForgetPasswordResponseModel> {\n                override fun onFailure(call: Call<ForgetPasswordResponseModel>, t: Throwable) {\n                    Log.e(\"Failed\", t.localizedMessage)\n                    progressDialogAdd.visibility=View.GONE\n                }\n                override fun onResponse(call: Call<ForgetPasswordResponseModel>, response: Response<ForgetPasswordResponseModel>) {\n                    val responsedata = response.body()\n                    progressDialogAdd.visibility=View.GONE\n                    if (responsedata != null) {\n                        try {\n\n                            if (response.body()!!.status==100)\n                            {\n                                commonErrorAlertDialog(context.resources.getString(R.string.success),ConstantWords.status_100_change_password,context)\n                                dialog.dismiss()\n                            }\n                            else\n                            {\n\n                                commonErrorAlertDialog(context.resources.getString(R.string.alert),ConstantFunctions.commonErrorString(response.body()!!.status),context)\n                            }\n\n\n                        } catch (e: Exception) {\n                            e.printStackTrace()\n                        }\n                    }\n                }\n\n            })\n        }\n\n\n        fun callDeleteAccountApi(progressDialogAdd:ProgressBar,context: Context,dialog:Dialog)\n        {\n            progressDialogAdd.visibility=View.VISIBLE\n\n            val call: Call<ForgetPasswordResponseModel> = ApiClient.getClient.deleteAccount(\"Bearer \"+PreferenceManager.getaccesstoken(context))\n            call.enqueue(object : Callback<ForgetPasswordResponseModel> {\n                override fun onFailure(call: Call<ForgetPasswordResponseModel>, t: Throwable) {\n                    Log.e(\"Failed\", t.localizedMessage)\n                    progressDialogAdd.visibility=View.GONE\n                }\n                override fun onResponse(call: Call<ForgetPasswordResponseModel>, response: Response<ForgetPasswordResponseModel>) {\n                    val responsedata = response.body()\n                    progressDialogAdd.visibility=View.GONE\n                    if (responsedata != null) {\n                        try {\n\n                            if (response.body()!!.status==100)\n                            {\n\n                                PreferenceManager.setaccesstoken(context,\"\")\n                                dialog.dismiss()\n                                val mIntent = Intent(context, LoginActivity::class.java)\n                                mIntent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK or Intent.FLAG_ACTIVITY_CLEAR_TASK)\n                                context.startActivity(mIntent)\n                            }\n                            else\n                            {\n\n                                commonErrorAlertDialog(context.resources.getString(R.string.alert),ConstantFunctions.commonErrorString(response.body()!!.status),context)\n                            }\n\n\n                        } catch (e: Exception) {\n                            e.printStackTrace()\n                        }\n                    }\n                }\n\n            })\n        }\n    }\n\n\n\n\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/nas/alreem/constants/DialogFunctions.kt b/app/src/main/java/com/nas/alreem/constants/DialogFunctions.kt
--- a/app/src/main/java/com/nas/alreem/constants/DialogFunctions.kt	(revision b2ad66f8612edd03349ffa4aaee582fd0005cdb4)
+++ b/app/src/main/java/com/nas/alreem/constants/DialogFunctions.kt	(date 1688999992000)
@@ -24,6 +24,39 @@
 class DialogFunctions {
     companion object
     {
+        fun showDialogAlertSingleBtn(context: Context,heading: String,Message: String,icon:Int,iconImageView:Int){
+            val dialog = Dialog(context)
+            dialog.requestWindowFeature(Window.FEATURE_NO_TITLE)
+            dialog.window!!.setBackgroundDrawable(ColorDrawable(Color.TRANSPARENT))
+            dialog.setCancelable(false)
+            dialog.setContentView(R.layout.dialog_common_error_alert)
+            val icon = dialog.findViewById<View>(R.id.iconImageView) as ImageView
+            var iconImageView = dialog.findViewById(R.id.iconImageView) as ImageView
+            var alertHead = dialog.findViewById(R.id.alertHead) as TextView
+            var messageTxt = dialog.findViewById(R.id.messageTxt) as TextView
+            var btn_Ok = dialog.findViewById(R.id.btn_Ok) as Button
+            messageTxt.text = Message
+            alertHead.text = heading
+            val dialogButton = dialog.findViewById<View>(R.id.btn_Ok) as Button
+            dialogButton.setOnClickListener { dialog.dismiss() }
+//		Button dialogButtonCancel = (Button) dialog.findViewById(R.id.btn_Cancel);
+//		dialogButtonCancel.setVisibility(View.GONE);
+//		dialogButtonCancel.setOnClickListener(new View.OnClickListener() {
+//			@Override
+//			public void onClick(View v) {
+//				dialog.dismiss();
+//			}
+//		});
+            //		Button dialogButtonCancel = (Button) dialog.findViewById(R.id.btn_Cancel);
+//		dialogButtonCancel.setVisibility(View.GONE);
+//		dialogButtonCancel.setOnClickListener(new View.OnClickListener() {
+//			@Override
+//			public void onClick(View v) {
+//				dialog.dismiss();
+//			}
+//		});
+            dialog.show()
+        }
         fun showSignUpDialog(context: Context)
         {
 
@@ -182,6 +215,26 @@
             }
             dialog.show()
         }
+        fun commonSuccessAlertDialog(heading:String,Message:String,context:Context)
+        {
+            val dialog = Dialog(context)
+            dialog.requestWindowFeature(Window.FEATURE_NO_TITLE)
+            dialog.window!!.setBackgroundDrawable(ColorDrawable(Color.TRANSPARENT))
+            dialog.setCancelable(false)
+            dialog.setContentView(R.layout.dialog_success_alert)
+            var iconImageView = dialog.findViewById(R.id.iconImageView) as ImageView
+            var alertHead = dialog.findViewById(R.id.alertHead) as TextView
+            var messageTxt = dialog.findViewById(R.id.messageTxt) as TextView
+            var btn_Ok = dialog.findViewById(R.id.btn_Ok) as Button
+            messageTxt.text = Message
+            alertHead.text = heading
+            btn_Ok.setOnClickListener()
+            {
+                dialog.dismiss()
+            }
+            dialog.show()
+
+        }
 
 
         fun signUp(email:String,progressDialogAdd:ProgressBar,context: Context,dialog:Dialog)
Index: app/src/main/res/layout/activity_early_pickup_detail.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/activity_early_pickup_detail.xml b/app/src/main/res/layout/activity_early_pickup_detail.xml
new file mode 100644
--- /dev/null	(date 1688451460000)
+++ b/app/src/main/res/layout/activity_early_pickup_detail.xml	(date 1688451460000)
@@ -0,0 +1,364 @@
+<?xml version="1.0" encoding="utf-8"?>
+<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:background="@color/white"
+    android:orientation="vertical">
+
+    <include
+        android:id="@+id/includeRel"
+        layout="@layout/layout_activity_header" />
+
+
+    <ScrollView
+        android:layout_width="match_parent"
+        android:layout_height="match_parent"
+        android:scrollbars="none">
+
+        <LinearLayout
+            android:layout_width="match_parent"
+            android:layout_height="match_parent"
+            android:orientation="vertical">
+
+            <LinearLayout
+                android:id="@+id/namelayout"
+                android:layout_width="match_parent"
+                android:layout_height="35dp"
+                android:layout_marginLeft="10dp"
+                android:layout_marginRight="10dp"
+                android:layout_marginTop="10dp"
+                android:gravity="center"
+                android:orientation="horizontal"
+                android:weightSum="100">
+
+                <com.nas.alreem.commonviews.CustomFontSansProTextBlackSemiBold
+                    android:id="@+id/stName"
+                    android:layout_width="0dp"
+                    android:layout_height="wrap_content"
+                    android:layout_weight="45"
+                    android:text="Name"
+                    android:textColor="@color/black"
+                    android:textSize="14sp" />
+
+                <com.nas.alreem.commonviews.CustomFontSansProTextBlack
+                    android:layout_width="wrap_content"
+                    android:layout_height="wrap_content"
+                    android:text=":"
+                    android:textColor="@color/black"
+                    />
+
+                <com.nas.alreem.commonviews.CustomTextViewRegular
+                    android:id="@+id/stnameValue"
+                    android:layout_width="0dp"
+                    android:layout_height="wrap_content"
+                    android:layout_marginLeft="10dp"
+                    android:layout_weight="50"
+                    android:text="Gayathri"
+                    android:textColor="@color/black"
+                    android:textSize="14sp" />
+            </LinearLayout>
+            <LinearLayout
+                android:id="@+id/studClassLinear"
+                android:layout_width="match_parent"
+                android:layout_height="35dp"
+                android:layout_marginLeft="10dp"
+                android:layout_marginRight="10dp"
+                android:layout_marginTop="5dp"
+                android:gravity="center"
+                android:orientation="horizontal"
+                android:weightSum="100">
+
+                <com.nas.alreem.commonviews.CustomFontSansProTextBlackSemiBold
+                    android:id="@+id/studClassTextView"
+                    android:layout_width="0dp"
+                    android:layout_height="wrap_content"
+                    android:layout_weight="45"
+                    android:text="Class"
+
+                    android:textColor="@color/black"
+                    android:textSize="14sp" />
+
+                <com.nas.alreem.commonviews.CustomFontSansProTextBlack
+                    android:layout_width="wrap_content"
+                    android:layout_height="wrap_content"
+                    android:text=":"
+                    android:textColor="@color/black"
+                    />
+
+                <com.nas.alreem.commonviews.CustomTextViewRegular
+                    android:id="@+id/studClassValue"
+                    android:layout_width="0dp"
+                    android:layout_height="wrap_content"
+                    android:layout_marginLeft="10dp"
+                    android:layout_weight="50"
+                    android:text="X1"
+                    android:textColor="@color/black"
+                    android:textSize="14sp" />
+            </LinearLayout>
+
+            <LinearLayout
+                android:id="@+id/fromlayout"
+                android:layout_width="match_parent"
+                android:layout_height="35dp"
+                android:layout_marginLeft="10dp"
+                android:layout_marginRight="10dp"
+                android:layout_marginTop="5dp"
+                android:gravity="center"
+                android:orientation="horizontal"
+                android:weightSum="100">
+
+                <com.nas.alreem.commonviews.CustomFontSansProTextBlackSemiBold
+                    android:id="@+id/leaveDateFrom"
+                    android:layout_width="0dp"
+                    android:layout_height="wrap_content"
+                    android:layout_weight="45"
+                    android:text="Day of Pickup"
+
+                    android:textColor="@color/black"
+                    android:textSize="14sp" />
+
+                <com.nas.alreem.commonviews.CustomFontSansProTextBlack
+                    android:layout_width="wrap_content"
+                    android:layout_height="wrap_content"
+                    android:text=":"
+                    android:textColor="@color/black"
+                    />
+
+                <com.nas.alreem.commonviews.CustomTextViewRegular
+                    android:id="@+id/leaveDateFromValue"
+                    android:layout_width="0dp"
+                    android:layout_height="wrap_content"
+                    android:layout_marginLeft="10dp"
+                    android:layout_weight="50"
+                    android:text="12/06/2017"
+                    android:textColor="@color/black"
+                    android:textSize="14sp" />
+            </LinearLayout>
+
+            <LinearLayout
+                android:id="@+id/tolayout"
+                android:layout_width="match_parent"
+                android:layout_height="35dp"
+                android:layout_marginLeft="10dp"
+                android:layout_marginRight="10dp"
+                android:layout_marginTop="5dp"
+                android:gravity="center"
+                android:orientation="horizontal"
+                android:weightSum="100">
+
+                <com.nas.alreem.commonviews.CustomFontSansProTextBlackSemiBold
+                    android:id="@+id/leaveDateTo"
+                    android:layout_width="0dp"
+                    android:layout_height="wrap_content"
+                    android:layout_weight="45"
+                    android:text="Time of Pickup"
+                    android:textColor="@color/black"
+                    android:textSize="14sp" />
+
+                <com.nas.alreem.commonviews.CustomFontSansProTextBlack
+                    android:layout_width="wrap_content"
+                    android:layout_height="wrap_content"
+                    android:text=":"
+                    android:textColor="@color/black"
+                    />
+
+                <com.nas.alreem.commonviews.CustomTextViewRegular
+                    android:id="@+id/leaveDateToValue"
+                    android:layout_width="0dp"
+                    android:layout_height="wrap_content"
+                    android:layout_marginLeft="10dp"
+                    android:layout_weight="50"
+                    android:text="12/06/2017"
+                    android:textColor="@color/black"
+                    android:textSize="14sp" />
+            </LinearLayout>
+            <LinearLayout
+                android:id="@+id/pickuplayout"
+                android:layout_width="match_parent"
+                android:layout_height="35dp"
+                android:layout_marginLeft="10dp"
+                android:layout_marginRight="10dp"
+                android:layout_marginTop="5dp"
+                android:gravity="center"
+                android:orientation="horizontal"
+                android:weightSum="100">
+
+                <com.nas.alreem.commonviews.CustomFontSansProTextBlackSemiBold
+                    android:id="@+id/pickuptitle"
+                    android:layout_width="0dp"
+                    android:layout_height="wrap_content"
+                    android:layout_weight="45"
+                    android:text="Pickup by"
+                    android:textColor="@color/black"
+                    android:textSize="14sp" />
+
+                <com.nas.alreem.commonviews.CustomFontSansProTextBlack
+                    android:layout_width="wrap_content"
+                    android:layout_height="wrap_content"
+                    android:text=":"
+                    android:textColor="@color/black"
+                    />
+
+                <com.nas.alreem.commonviews.CustomTextViewRegular
+                    android:id="@+id/pickupbyName"
+                    android:layout_width="0dp"
+                    android:layout_height="wrap_content"
+                    android:layout_marginLeft="10dp"
+                    android:layout_weight="50"
+                    android:text="12/06/2017"
+                    android:textColor="@color/black"
+                    android:textSize="14sp" />
+            </LinearLayout>
+            <LinearLayout
+                android:id="@+id/statuslayout"
+                android:layout_width="match_parent"
+                android:layout_height="35dp"
+                android:layout_marginLeft="10dp"
+                android:layout_marginRight="10dp"
+                android:layout_marginTop="5dp"
+                android:gravity="center"
+                android:orientation="horizontal"
+                android:weightSum="100">
+
+                <com.nas.alreem.commonviews.CustomFontSansProTextBlackSemiBold
+                    android:id="@+id/statustitle"
+                    android:layout_width="0dp"
+                    android:layout_height="wrap_content"
+                    android:layout_weight="45"
+                    android:text="Status"
+                    android:textColor="@color/black"
+                    android:textSize="14sp" />
+
+                <com.nas.alreem.commonviews.CustomFontSansProTextBlack
+                    android:layout_width="wrap_content"
+                    android:layout_height="wrap_content"
+                    android:text=":"
+                    android:textColor="@color/black"
+                    />
+
+                <com.nas.alreem.commonviews.CustomTextViewRegular
+                    android:id="@+id/status"
+                    android:layout_width="0dp"
+                    android:layout_height="wrap_content"
+                    android:layout_marginLeft="10dp"
+                    android:layout_weight="50"
+                    android:text="12/06/2017"
+                    android:textColor="@color/black"
+                    android:textSize="14sp" />
+            </LinearLayout>
+            <LinearLayout
+                android:id="@+id/reasonlayout"
+                android:layout_width="match_parent"
+                android:layout_height="wrap_content"
+                android:layout_marginLeft="10dp"
+                android:layout_marginRight="10dp"
+                android:layout_marginTop="5dp"
+                android:orientation="horizontal"
+                android:weightSum="100">
+
+                <com.nas.alreem.commonviews.CustomFontSansProTextBlackSemiBold
+                    android:id="@+id/reason"
+                    android:layout_width="0dp"
+                    android:layout_height="wrap_content"
+                    android:layout_weight="45"
+                    android:layout_gravity="top"
+                    android:layout_marginLeft="7dp"
+                    android:text="Reason for early pickup"
+                    android:textColor="@color/black"
+                    android:textSize="14sp" />
+
+                <com.nas.alreem.commonviews.CustomFontSansProTextBlack
+                    android:layout_width="wrap_content"
+                    android:layout_height="wrap_content"
+                    android:text=":"
+                    android:layout_gravity="top"
+                    android:textColor="@color/black"
+                    />
+
+            </LinearLayout>
+            <ScrollView
+                android:layout_width="match_parent"
+                android:layout_height="100dp"
+                android:layout_marginTop="10dp"
+                android:layout_marginBottom="10dp"
+                android:layout_marginRight="20dp"
+                android:layout_marginLeft="20dp"
+                android:background="@drawable/border_grey">
+                <com.nas.alreem.commonviews.CustomTextViewRegular
+                    android:id="@+id/reasonValue"
+                    android:layout_width="match_parent"
+                    android:layout_height="wrap_content"
+                    android:layout_marginLeft="10dp"
+                    android:layout_marginRight="10dp"
+                    android:text="reason"
+                    android:padding="10dp"
+                    android:textColor="@color/black"
+                    android:textSize="14sp"
+                    android:layout_marginTop="4dp"
+                    android:layout_marginBottom="4dp"
+                    android:singleLine="false"
+                    />
+
+            </ScrollView>
+
+            <LinearLayout
+                android:id="@+id/reasonRejectlayout"
+                android:layout_width="match_parent"
+                android:layout_height="wrap_content"
+                android:layout_marginLeft="10dp"
+                android:layout_marginRight="10dp"
+                android:layout_marginTop="5dp"
+                android:orientation="horizontal"
+                android:weightSum="100">
+
+                <com.nas.alreem.commonviews.CustomFontSansProTextBlackSemiBold
+                    android:id="@+id/reasonReject"
+                    android:layout_width="0dp"
+                    android:layout_height="wrap_content"
+                    android:layout_weight="45"
+                    android:layout_gravity="top"
+                    android:layout_marginLeft="7dp"
+                    android:text="Reason for Rejection"
+                    android:textColor="@color/black"
+                    android:textSize="14sp" />
+
+                <com.nas.alreem.commonviews.CustomFontSansProTextBlack
+                    android:layout_width="wrap_content"
+                    android:layout_height="wrap_content"
+                    android:text=":"
+                    android:layout_gravity="top"
+                    android:textColor="@color/black"
+                    />
+
+            </LinearLayout>
+            <ScrollView
+                android:id="@+id/reasonRejectionScroll"
+                android:layout_width="match_parent"
+                android:layout_height="100dp"
+                android:layout_marginTop="10dp"
+                android:layout_marginBottom="10dp"
+                android:layout_marginRight="20dp"
+                android:layout_marginLeft="20dp"
+                android:background="@drawable/border_grey">
+                <com.nas.alreem.commonviews.CustomTextViewRegular
+                    android:id="@+id/reasonRejectValue"
+                    android:layout_width="match_parent"
+                    android:layout_height="wrap_content"
+                    android:layout_marginLeft="10dp"
+                    android:layout_marginRight="10dp"
+                    android:text="reason"
+                    android:padding="10dp"
+                    android:textColor="@color/black"
+                    android:textSize="14sp"
+                    android:layout_marginTop="4dp"
+                    android:layout_marginBottom="4dp"
+                    android:singleLine="false"
+                    />
+            </ScrollView>
+
+
+
+        </LinearLayout>
+
+    </ScrollView>
+</LinearLayout>
Index: app/src/main/java/com/nas/alreem/activity/parent_meetings/ParentsEveningCalendarActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/nas/alreem/activity/parent_meetings/ParentsEveningCalendarActivity.kt b/app/src/main/java/com/nas/alreem/activity/parent_meetings/ParentsEveningCalendarActivity.kt
new file mode 100644
--- /dev/null	(date 1689149495853)
+++ b/app/src/main/java/com/nas/alreem/activity/parent_meetings/ParentsEveningCalendarActivity.kt	(date 1689149495853)
@@ -0,0 +1,383 @@
+package com.nas.alreem.activity.parent_meetings
+
+import android.content.Context
+import android.content.Intent
+import android.graphics.Color
+import android.icu.util.Calendar
+import android.os.Build
+import android.os.Bundle
+import android.util.Log
+import android.view.View
+import android.widget.ImageView
+import android.widget.ProgressBar
+import android.widget.RelativeLayout
+import android.widget.TextView
+import androidx.annotation.RequiresApi
+import androidx.appcompat.app.AppCompatActivity
+import com.nas.alreem.R
+import com.nas.alreem.activity.home.HomeActivity
+import com.nas.alreem.activity.parent_meetings.model.PtaDatesApiModel
+import com.nas.alreem.activity.parent_meetings.model.PtaDatesModel
+import com.nas.alreem.constants.ConstantFunctions
+import com.nas.alreem.constants.ConstantWords
+import com.nas.alreem.constants.DialogFunctions
+import com.nas.alreem.constants.PreferenceManager
+import com.nas.alreem.fragment.parent_meetings.model.ListStaffPtaApiModel
+import com.nas.alreem.fragment.parent_meetings.model.ListStaffPtaModel
+import com.nas.alreem.rest.ApiClient
+import retrofit2.Call
+import retrofit2.Callback
+import retrofit2.Response
+import java.text.DateFormat
+import java.text.SimpleDateFormat
+import java.time.DayOfWeek
+import java.time.LocalDate
+import java.time.YearMonth
+import java.util.Date
+
+class ParentsEveningCalendarActivity:AppCompatActivity() {
+    lateinit var mContext: Context
+    lateinit var backRelative: RelativeLayout
+    lateinit var heading: TextView
+    lateinit var header: TextView
+    lateinit var logoClickImgView: ImageView
+    lateinit var progressDialogAdd: ProgressBar
+    lateinit var arrow_prev: ImageView
+    lateinit var arrow_nxt: ImageView
+    lateinit var monthlist:Array<String>
+    lateinit var week_day:Array<String>
+    lateinit var nums_Array:ArrayList<String>
+    var studentId:String=""
+    var studentName:String=""
+    var studentClass:String=""
+    var staffId:String=""
+    var staffName:String=""
+    var month_total_days:Int?=null
+    var count_month:Int?=null
+    var count_year:Int?=null
+    val dateTextView = arrayOfNulls<TextView>(42)
+    lateinit var datesToPlot:ArrayList<String>
+
+    @RequiresApi(Build.VERSION_CODES.O)
+    override fun onCreate(savedInstanceState: Bundle?) {
+        super.onCreate(savedInstanceState)
+        setContentView(R.layout.parent_meetings_calendar_activity)
+
+        mContext=this
+        initfn()
+        headerfnc()
+        daysinweek()
+        onclick()
+
+    }
+    private fun initfn(){
+        progressDialogAdd=findViewById(R.id.progressDialogAdd)
+        studentId=intent.getStringExtra("studId").toString()
+        studentName=intent.getStringExtra("studName").toString()
+        studentClass=intent.getStringExtra("studClass").toString()
+        staffId=intent.getStringExtra("staffId").toString()
+        staffName=intent.getStringExtra("staffName").toString()
+        heading=findViewById(R.id.heading)
+        header=findViewById(R.id.Header)
+        nums_Array= ArrayList()
+        datesToPlot= ArrayList()
+        arrow_prev=findViewById(R.id.arrow_back)
+        arrow_nxt=findViewById(R.id.arrow_nxt)
+        monthlist= resources.getStringArray(R.array.Months)
+        week_day= resources.getStringArray(R.array.Weeks)
+        backRelative=findViewById(R.id.backRelative)
+        logoClickImgView=findViewById(R.id.logoClickImgView)
+        backRelative.setOnClickListener(View.OnClickListener {
+            finish()
+        })
+        heading.text=ConstantWords.parentmeetings
+        logoClickImgView.setOnClickListener(View.OnClickListener {
+            val intent = Intent(mContext, HomeActivity::class.java)
+            intent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP)
+            startActivity(intent)
+        })
+        setTextview()
+        allotedDatedApi()
+    }
+    private fun setTextview(){
+        for (i in 0..41)
+        {
+            val resID: Int = mContext.resources.getIdentifier("textview_$i", "id", mContext.packageName)
+            dateTextView[i]=findViewById(resID)
+            dateTextView[i]!!.setBackgroundColor(Color.WHITE)
+            dateTextView[i]!!.setTextColor(Color.BLACK)
+        }
+    }
+
+
+    @RequiresApi(Build.VERSION_CODES.O)
+    private fun headerfnc(){
+        var x=9
+        var currentMonth=monthlist[x]
+        var month= Calendar.getInstance()
+        var simpleDateFormat = SimpleDateFormat("MM")
+        var s=SimpleDateFormat("MMMM")
+        var month_tt=s.format(month.time)
+        var dateMonth = simpleDateFormat.format(month.time).toString()
+        var simpleDateFormat2 = SimpleDateFormat("yyyy")
+        var dateYear = simpleDateFormat2.format(month.time).toString()
+        count_month=dateMonth.toInt()-1
+        count_year=dateYear.toInt()
+        header.text = month_tt +" " +count_year
+
+        arrow_prev.setOnClickListener {
+            nums_Array= ArrayList()
+            if (count_month!=0)
+            {
+                count_month= count_month!! -1
+                val m = monthlist[count_month!!]
+                header.text = m + count_year
+                daysinweek()
+                setTextview()
+                allotedDatedApi()
+                //holiday()
+            }
+            else
+            {
+                count_year= count_year!! -1
+                val m = monthlist[11]
+                count_month=11
+                header.text = m + count_year
+                daysinweek()
+                setTextview()
+                allotedDatedApi()
+                // holiday()
+            }
+        }
+        arrow_nxt.setOnClickListener {
+
+            nums_Array= ArrayList()
+            if (count_month!=11)
+            {
+                count_month= count_month!! +1
+                val m = monthlist[count_month!!]
+                header.text = m + count_year
+                daysinweek()
+                setTextview()
+                allotedDatedApi()
+                //holiday()
+            }
+            else
+            {
+                count_year= count_year!! +1
+                val m = monthlist[0]
+                count_month=0
+                header.text = m + count_year
+                daysinweek()
+                setTextview()
+                allotedDatedApi()
+                // holiday()
+            }
+        }
+    }
+    @RequiresApi(Build.VERSION_CODES.O)
+    private fun daysinweek(){
+
+        var count_month2= count_month!!+1
+        val yearMonthObject: YearMonth = YearMonth.of(count_year!!, count_month2)
+        val firstday_date: LocalDate? =yearMonthObject.atDay(1)
+        val day_name: DayOfWeek = firstday_date!!.dayOfWeek
+        month_total_days=yearMonthObject.lengthOfMonth()
+
+
+        if (day_name.toString().equals("SUNDAY"))
+        {
+            for (i in 1..month_total_days!!)
+            {
+                nums_Array.add(i.toString())
+            }
+        }
+
+        else if (day_name.toString().equals("MONDAY"))
+        {
+            nums_Array.add("0")
+            for (i in 1..month_total_days!!)
+            {
+                nums_Array.add(i.toString())
+            }
+        }
+
+        else if (day_name.toString().equals("TUESDAY"))
+        {
+            nums_Array.add("0")
+            nums_Array.add("0")
+            for (i in 1..month_total_days!!)
+            {
+                nums_Array.add(i.toString())
+            }
+        }
+
+        else if (day_name.toString().equals("WEDNESDAY"))
+        {
+            nums_Array.add("0")
+            nums_Array.add("0")
+            nums_Array.add("0")
+            for (i in 1..month_total_days!!)
+            {
+                nums_Array.add(i.toString())
+            }
+        }
+
+        else if (day_name.toString().equals("THURSDAY"))
+        {
+            nums_Array.add("0")
+            nums_Array.add("0")
+            nums_Array.add("0")
+            nums_Array.add("0")
+            for (i in 1..month_total_days!!)
+            {
+                nums_Array.add(i.toString())
+            }
+        }
+
+        else if (day_name.toString().equals("FRIDAY"))
+        {
+            nums_Array.add("0")
+            nums_Array.add("0")
+            nums_Array.add("0")
+            nums_Array.add("0")
+            nums_Array.add("0")
+            for (i in 1..month_total_days!!)
+            {
+                nums_Array.add(i.toString())
+            }
+        }
+
+        else if (day_name.toString().equals("SATURDAY"))
+        {
+            nums_Array.add("0")
+            nums_Array.add("0")
+            nums_Array.add("0")
+            nums_Array.add("0")
+            nums_Array.add("0")
+            nums_Array.add("0")
+            for (i in 1..month_total_days!!)
+            {
+                nums_Array.add(i.toString())
+            }
+        }
+
+        for (i in 0..41){
+            if (i<=nums_Array.size-1)
+            {
+                dateTextView[i]!!.visibility= View.VISIBLE
+                var value=nums_Array.get(i).toString()
+
+                if (value.equals("0"))
+                {
+                    dateTextView[i]!!.visibility= View.INVISIBLE
+                }
+                else
+                {
+                    dateTextView[i]!!.visibility= View.VISIBLE
+                    dateTextView[i]!!.text = value.toString()
+                }
+            }
+            else
+            {
+                dateTextView[i]!!.visibility= View.INVISIBLE
+            }
+        }
+    }
+    private fun onclick(){
+
+        for (i in 0..41) {
+            dateTextView[i]!!.setBackgroundColor(Color.WHITE)
+            dateTextView[i]!!.setOnClickListener {
+
+                var c_day=nums_Array.get(i)
+                var c_month= count_month!! +1
+                var c_year=count_year
+                var c_date=c_day+"/"+c_month+"/"+c_year
+
+                for (i in 0..datesToPlot.size-1){
+
+                    if (c_date.equals(datesToPlot[i])){
+                        val intent = Intent(mContext, ParentMeetingDetailActivity::class.java)
+                        intent.putExtra("date",c_date)
+                        intent.putExtra("studentName",studentName)
+                        intent.putExtra("studentId",studentId)
+                        intent.putExtra("studentClass",studentClass)
+                        intent.putExtra("staffName",staffName)
+                        intent.putExtra("staffId",staffId)
+                        startActivity(intent)
+                        break
+                    }
+
+                }
+            }
+        }
+    }
+    private fun allotedDatedApi(){
+        //datesToPlot=ArrayList()
+        progressDialogAdd.visibility = View.VISIBLE
+        val token = PreferenceManager.getaccesstoken(mContext)
+        val ptadatesSuccessBody = PtaDatesApiModel(studentId,staffId)
+        val call: Call<PtaDatesModel> = ApiClient.getClient.pta_allotted_dates(ptadatesSuccessBody,"Bearer "+token)
+        call.enqueue(object : Callback<PtaDatesModel> {
+            override fun onFailure(call: Call<PtaDatesModel>, t: Throwable) {
+                Log.e("Error", t.localizedMessage)
+                progressDialogAdd.visibility = View.GONE
+            }
+            override fun onResponse(call: Call<PtaDatesModel>, response: Response<PtaDatesModel>) {
+                progressDialogAdd.visibility = View.GONE
+                //val arraySize :Int = response.body()!!.responseArray.studentList.size
+                if (response.body()!!.status==100)
+                {
+                    val datelistSize=response.body()!!.data.size-1
+                    for (i in 0..datelistSize ){
+                        var dates=response.body()!!.data[i]
+                        val inputFormat: DateFormat = SimpleDateFormat("yyyy-MM-dd")
+                        val outputFormat: DateFormat = SimpleDateFormat("d/M/yyyy")
+                        val inputDateStr = dates
+                        val date: Date = inputFormat.parse(inputDateStr)
+                        val outputDateStr: String = outputFormat.format(date)
+                        Log.e("dt",outputDateStr)
+                        datesToPlot.add(i,outputDateStr)
+                    }
+                    for (i in 0..datesToPlot.size-1){
+                        var days_s=datesToPlot[i]
+
+                        Log.e("days_s",days_s)
+
+                        for (i in 0..nums_Array.size-1) {
+
+                            var c_day=nums_Array.get(i)
+                            var c_month= count_month!! +1
+                            var c_year=count_year
+                            var c_date=c_day+"/"+c_month+"/"+c_year
+                            Log.e("c_date",c_date)
+
+                            if (days_s.equals(c_date)){
+
+                                Log.e("match","match")
+                                dateTextView[i]!!.setBackgroundResource(R.drawable.roundred)
+                                dateTextView[i]!!.setTextColor(Color.WHITE)
+
+                            }
+
+                            else{
+                                //Log.e("no_match","no_match")
+
+                            }
+                        }
+                    }
+
+                } else
+                {
+
+                    DialogFunctions.commonErrorAlertDialog(mContext.resources.getString(R.string.alert), ConstantFunctions.commonErrorString(response.body()!!.status), mContext)
+                }
+
+
+            }
+
+        })
+    }
+
+}
\ No newline at end of file
Index: app/src/main/res/values/colors.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\n<resources>\n    <color name=\"purple_200\">#FFBB86FC</color>\n    <color name=\"purple_500\">#FF6200EE</color>\n    <color name=\"purple_700\">#FF3700B3</color>\n    <color name=\"teal_200\">#FF03DAC5</color>\n    <color name=\"teal_700\">#FF018786</color>\n    <color name=\"black\">#FF000000</color>\n    <color name=\"white\">#FFFFFFFF</color>\n\n    <color name=\"rel_one\">#4dc4cf</color>\n    <color name=\"rel_two\">#003156</color>\n    <color name=\"rel_three\">#EBE9E4</color>\n    <color name=\"rel_four\">#9ddae6</color>\n    <color name=\"rel_five\">#75298d</color>\n    <color name=\"rel_six\">#f6874a</color>\n    <color name=\"rel_seven\">#ffc20a</color>\n    <color name=\"rel_eight\">#8f8c85</color>\n    <color name=\"rel_nine\">#ee2953</color>\n\n    <color name=\"split_bg\">#4dc4cf</color>\n    <color name=\"cleargreyColor\">#D5D5D5</color>\n    <color name=\"transparent\">#00000000</color>\n    <color name=\"colorPrimary\">#03DAC5</color>\n    <color name=\"colorPrimaryDark\">#03DAC5</color>\n    <color name=\"colorAccent\">#4BB5C4</color>\n    <color name=\"alert_text_color\">#ff000000</color>\n    <color name=\"grey\">#BDBDBD</color>\n    <color name=\"term_button_bg\">#71C7D8</color>\n    <color name=\"list_bg\">#002D4C</color>\n    <color name=\"cal_row_4\">#1B3354</color>\n    <color name=\"dark_grey1\">#908C86</color>\n    <color name=\"light_grey\">#d8d8d8</color>\n    <color name=\"blue\">#0d98ba</color>\n    <color name=\"Grey_600\">#757575</color>\n    <color name=\"photo_bg_gallery\">#f6874a</color>\n    <color name=\"video_bg_gallery\">#722C8A</color>\n    <color name=\"dark_grey\">#A9A9A9</color>\n    <color name=\"background\">#EFEFF4</color>\n    <color name=\"cal_row_1\">#e67d4c</color>\n    <color name=\"cal_row_2\">#6e2e86</color>\n    <color name=\"cal_row_3\">#E21459</color>\n    <color name=\"Grey_300\">#E0E0E0</color>\n    <color name=\"canteen_red\">#FF3B30</color>\n    <color name=\"red\">#FF5152</color>\n    <color name=\"canteen_item_bg\">#F2F2F2</color>\n    <color name=\"cart_bg\">#1B9BA6</color>\n    <color name=\"canteen_date_orange\">#FF9300</color>\n    <color name=\"green\">#008000</color>\n    <color name=\"orange_circle\">#ff7d00</color>\n</resources>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/values/colors.xml b/app/src/main/res/values/colors.xml
--- a/app/src/main/res/values/colors.xml	(revision b2ad66f8612edd03349ffa4aaee582fd0005cdb4)
+++ b/app/src/main/res/values/colors.xml	(date 1688993664000)
@@ -18,6 +18,8 @@
     <color name="rel_eight">#8f8c85</color>
     <color name="rel_nine">#ee2953</color>
 
+    <color name="parents_slot_color">#15395A</color>
+    <color name="parents_association_titleclr">#ee2953</color>
     <color name="split_bg">#4dc4cf</color>
     <color name="cleargreyColor">#D5D5D5</color>
     <color name="transparent">#00000000</color>
Index: app/src/main/java/com/nas/alreem/activity/absence/model/ListPickupApiModel.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/nas/alreem/activity/absence/model/ListPickupApiModel.kt b/app/src/main/java/com/nas/alreem/activity/absence/model/ListPickupApiModel.kt
new file mode 100644
--- /dev/null	(date 1688382724000)
+++ b/app/src/main/java/com/nas/alreem/activity/absence/model/ListPickupApiModel.kt	(date 1688382724000)
@@ -0,0 +1,11 @@
+package com.nas.alreem.activity.absence.model
+
+import com.google.gson.annotations.SerializedName
+
+class ListPickupApiModel (
+
+    @SerializedName("student_id") val student_id: String,
+    @SerializedName("start") val start: String,
+    @SerializedName("limit") val limit: String
+
+)
\ No newline at end of file
Index: app/src/main/java/com/nas/alreem/fragment/home/HomeFragment.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.nas.alreem.fragment.home\n\nimport android.Manifest\nimport android.annotation.SuppressLint\nimport android.app.Activity\nimport android.app.Dialog\nimport android.content.Context\nimport android.content.Intent\nimport android.content.pm.PackageManager\nimport android.content.res.TypedArray\nimport android.graphics.Color\nimport android.graphics.PorterDuff\nimport android.graphics.drawable.ColorDrawable\nimport android.net.Uri\nimport android.os.Bundle\nimport android.os.Handler\nimport android.util.Log\nimport android.view.*\nimport android.widget.*\nimport androidx.core.app.ActivityCompat\nimport androidx.core.content.ContextCompat\nimport androidx.fragment.app.Fragment\nimport androidx.viewpager.widget.ViewPager\nimport com.bumptech.glide.Glide\nimport com.google.gson.Gson\nimport com.google.gson.JsonObject\nimport com.nas.alreem.BuildConfig\nimport com.nas.alreem.R\nimport com.nas.alreem.activity.home.HomeActivity\nimport com.nas.alreem.activity.login.model.SignUpResponseModel\nimport com.nas.alreem.activity.survey.adapter.SurveyQuestionPagerAdapter\nimport com.nas.alreem.activity.survey.model.*\nimport com.nas.alreem.constants.ConstantFunctions\nimport com.nas.alreem.constants.ConstantWords\nimport com.nas.alreem.constants.DialogFunctions\nimport com.nas.alreem.constants.PreferenceManager\nimport com.nas.alreem.fragment.about_us.AboutUsFragment\nimport com.nas.alreem.fragment.calendar.CalendarFragment\nimport com.nas.alreem.fragment.canteen.CanteenFragment\nimport com.nas.alreem.fragment.contact_us.ContactUsFragment\nimport com.nas.alreem.fragment.early_years.EarlyYearsFragment\nimport com.nas.alreem.fragment.gallery.GalleryFragment\nimport com.nas.alreem.fragment.home.model.BannerResponseModel\nimport com.nas.alreem.fragment.notifications.NotificationFragment\nimport com.nas.alreem.fragment.parents_essentials.ParentsEssentialFragment\nimport com.nas.alreem.fragment.payments.PaymentFragment\nimport com.nas.alreem.fragment.payments.model.SendEmailApiModel\nimport com.nas.alreem.fragment.primary.PrimaryFragment\nimport com.nas.alreem.fragment.secondary.SecondaryFragment\nimport com.nas.alreem.rest.ApiClient\nimport retrofit2.Call\nimport retrofit2.Callback\nimport retrofit2.Response\nimport java.util.*\n\nlateinit var relone: RelativeLayout\nlateinit var reltwo: RelativeLayout\nlateinit var relthree: RelativeLayout\nlateinit var relfour: RelativeLayout\nlateinit var relfive: RelativeLayout\nlateinit var relsix: RelativeLayout\nlateinit var relseven: RelativeLayout\nlateinit var releight: RelativeLayout\nlateinit var relnine: RelativeLayout\nlateinit var reltxtnine: TextView\n\nlateinit var relTxtone: TextView\nlateinit var relTxttwo: TextView\nlateinit var relTxtfive: TextView\nlateinit var relTxtsix: TextView\nlateinit var relTxtseven: TextView\nlateinit var relTxteight: TextView\nlateinit var relTxtthree: TextView\nlateinit var relTxtfour: TextView\n\nlateinit var relImgone: ImageView\nlateinit var relImgtwo: ImageView\nlateinit var relImgthree: ImageView\nlateinit var relImgfour: ImageView\nlateinit var relImgfive: ImageView\nlateinit var relImgsix: ImageView\nlateinit var relImgseven: ImageView\nlateinit var relImgeight: ImageView\nlateinit var relImgnine: ImageView\nvar versionfromapi: String = \"\"\nvar currentversion: String = \"\"\n\n\nlateinit var mSectionText: Array<String?>\nlateinit var homeActivity: HomeActivity\nlateinit var listitems: Array<String>\n\nlateinit var mListImgArrays: TypedArray\nlateinit var TouchedView: View\nlateinit var pager_rel: RelativeLayout\n\n//lateinit var TAB_ID: String\nprivate var TAB_ID: String = \"\"\nprivate var CLICKED: String = \"\"\nprivate var INTENT_TAB_ID: String = \"\"\nprivate var TABIDfragment: String = \"\"\nprivate var usertype: String = \"\"\nprivate var USERDATA: String = \"\"\nprivate var previousTriggerType: Int = 0\n\nvar studentName: String=\"\"\nvar studentId: String=\"\"\nvar studentImg: String=\"\"\nvar studentClass: String=\"\"\nvar studntCount: Int=0\n\n\nlateinit var pager: ViewPager\nvar isDraggable: Boolean = false\nvar bannerarray = ArrayList<String>()\nlateinit var mContext: Context\nlateinit var current_date:String\nvar currentPage: Int = 0\nprivate val NOTICE_TIME_OUT:Long = 5000\nvar currentPageSurvey = 0\nvar survey_satisfation_status = 0\nprivate var surveyEmail = \"\"\nprivate var surveySize = 0\nvar pos = -1\nlateinit var surveyArrayList: ArrayList<SurveyDetailDataModel>\nlateinit var surveyQuestionArrayList: ArrayList<SurveyQuestionsModel>\nlateinit var surveyAnswersArrayList: ArrayList<SurveyOfferedAnswersModel>\nlateinit var mAnswerList: ArrayList<SurveySubmitDataModel>\n\nclass HomeFragment : Fragment() , View.OnClickListener{\n\n    override fun onCreateView(\n        inflater: LayoutInflater, container: ViewGroup?,\n        savedInstanceState: Bundle?\n    ): View? {\n\n        return inflater.inflate(R.layout.fragment_home_screen, container, false)\n    }\n\n    @SuppressLint(\"UseRequireInsteadOfGet\", \"Recycle\")\n    override fun onViewCreated(view: View, savedInstanceState: Bundle?) {\n        super.onViewCreated(view, savedInstanceState)\n\n        homeActivity =  activity as HomeActivity\n        mContext = requireContext()\n        CLICKED = homeActivity.sPosition.toString()\n        listitems = resources.getStringArray(R.array.navigation_item_names)\n        mListImgArrays = context!!.resources.obtainTypedArray(R.array.navigation_item_icons)\n        initializeUI()\n        getbannerimages()\n        setListeners()\n        setdraglisteners()\n        getButtonBgAndTextImages()\n\n\n    }\n\n    fun getbannerimages()\n    {\n        val call: Call<BannerResponseModel> = ApiClient.getClient.bannerImages()\n        call.enqueue(object : Callback<BannerResponseModel> {\n            override fun onFailure(call: Call<BannerResponseModel>, t: Throwable) {\n                Log.e(\"Failed\", t.localizedMessage)\n            }\n            override fun onResponse(call: Call<BannerResponseModel>, response: Response<BannerResponseModel>) {\n                val responsedata = response.body()\n                if (responsedata != null) {\n                    try {\n\n                        if (response.body()!!.status==100)\n                        {\n                            bannerarray.addAll(response.body()!!.responseArray!!.banner_images!!)\n                            var version=response.body()!!.responseArray!!.android_app_version.toString()\n                            var appVersion= BuildConfig.VERSION_NAME.toString()\n                            if(!version.equals(appVersion))\n                            {\n                                showforceupdate(mContext)\n                            }\n\n                            if (bannerarray.size>0)\n                            {\n                                pager.adapter = activity?.let { PageView(it, bannerarray) }\n                            }\n                            else {\n                                pager.setBackgroundResource(R.drawable.default_banner)\n                            }\n                            var notice=response.body()!!.responseArray!!.notice\n                            val survey: Int = response.body()!!.responseArray!!.survey\n                            //\t\t\t\t\t\t\t\t\t\tint survey=0;\n                            PreferenceManager.setSurvey(mContext, survey)\n                            if(notice.equals(\"\"))\n                            {\n                                if (PreferenceManager.getSurvey(mContext) === 1) {\n                                    if (PreferenceManager.getIsSurveyHomeVisible(mContext))\n                                    {\n                                    }\n                                    else\n                                    {\n                                        Log.e(\"SURVEY VALUE\", \"API CALL\")\n                                        callSurveyApi()\n                                    }\n                                } else\n                                {\n\n                                }\n                            }\n                            else{\n                                if (PreferenceManager.getNoticeFirstTime(mContext).equals(\"\"))\n                                {\n                                    PreferenceManager.setNoticeFirtTime(mContext,\"djhdhhf\")\n                                    showPopUpImage(notice,mContext)\n                                }\n                                else{\n\n                                }\n\n                            }\n\n                        }\n                        else\n                        {\n\n                            DialogFunctions.commonErrorAlertDialog(mContext.resources.getString(R.string.alert), ConstantFunctions.commonErrorString(response.body()!!.status), mContext)\n                        }\n\n\n                    } catch (e: Exception) {\n                        e.printStackTrace()\n                    }\n                }\n            }\n\n        })\n    }\n\n    private fun setListeners() {\n        relone.setOnClickListener(this)\n        reltwo.setOnClickListener(this)\n        relthree.setOnClickListener(this)\n        relfour.setOnClickListener(this)\n        relfive.setOnClickListener(this)\n        relsix.setOnClickListener(this)\n        relseven.setOnClickListener(this)\n        releight.setOnClickListener(this)\n        relnine.setOnClickListener(this)\n\n    }\n\n    override fun onClick(v: View?) {\n        if (v == relone) {\n            INTENT_TAB_ID = PreferenceManager.getbuttononetabid(mContext).toString()\n            CHECKINTENTVALUE(INTENT_TAB_ID)\n        }\n        if (v == reltwo) {\n\n            INTENT_TAB_ID = PreferenceManager.getbuttontwotabid(mContext).toString()\n            CHECKINTENTVALUE(INTENT_TAB_ID)\n        }\n        if (v == relthree) {\n\n            INTENT_TAB_ID = PreferenceManager.getbuttonthreetabid(mContext).toString()\n            CHECKINTENTVALUE(INTENT_TAB_ID)\n        }\n        if (v == relfour) {\n\n            INTENT_TAB_ID = PreferenceManager.getbuttonfourtabid(mContext).toString()\n            CHECKINTENTVALUE(INTENT_TAB_ID)\n        }\n        if (v == relfive) {\n\n            INTENT_TAB_ID = PreferenceManager.getbuttonfivetabid(mContext).toString()\n            CHECKINTENTVALUE(INTENT_TAB_ID)\n        }\n        if (v == relsix) {\n\n            INTENT_TAB_ID = PreferenceManager.getbuttonsixtabid(mContext).toString()\n            CHECKINTENTVALUE(INTENT_TAB_ID)\n        }\n        if (v == relseven) {\n\n            INTENT_TAB_ID = PreferenceManager.getbuttonseventabid(mContext).toString()\n            CHECKINTENTVALUE(INTENT_TAB_ID)\n        }\n        if (v == releight) {\n\n            INTENT_TAB_ID = PreferenceManager.getbuttoneighttabid(mContext).toString()\n            CHECKINTENTVALUE(INTENT_TAB_ID)\n        }\n        if (v == relnine) {\n\n            INTENT_TAB_ID = PreferenceManager.getbuttonninetabid(mContext).toString()\n            CHECKINTENTVALUE(INTENT_TAB_ID)\n        }\n\n    }\n\n    private fun getButtonBgAndTextImages() {\n\n        if (PreferenceManager\n                .getbuttononetextimage(mContext)!!.toInt() != 0\n        ) {\n            relImgone.setImageDrawable(\n                mListImgArrays.getDrawable(\n                    PreferenceManager\n                        .getbuttononetextimage(mContext)!!.toInt()\n                )\n            )\n            var relTwoStr: String? = \"\"\n            relTwoStr =\n                listitems[PreferenceManager\n                    .getbuttononetextimage(mContext)!!.toInt()].uppercase(Locale.getDefault())\n            relTxtone.text = relTwoStr\n            relTxtone.setTextColor(ContextCompat.getColor(mContext, R.color.white))\n            relone.setBackgroundColor(\n                PreferenceManager.getButtonOneGuestBg(mContext)\n            )\n        }\n        if (PreferenceManager.getbuttontwotextimage(mContext)!!.toInt() != 0\n        ) {\n            relImgtwo.setImageDrawable(\n                mListImgArrays.getDrawable(\n                    PreferenceManager\n                        .getbuttontwotextimage(mContext)!!.toInt()\n                )\n            )\n            var relTwoStr: String? = \"\"\n            relTwoStr =\n                listitems[PreferenceManager\n                    .getbuttontwotextimage(mContext)!!.toInt()].uppercase(Locale.getDefault())\n\n            relTxttwo.text = relTwoStr\n            relTxttwo.setTextColor(ContextCompat.getColor(mContext, R.color.white))\n            reltwo.setBackgroundColor(\n                PreferenceManager\n                    .getButtontwoGuestBg(mContext)\n            )\n        }\n        if (PreferenceManager\n                .getbuttonthreetextimage(mContext)!!.toInt() != 0\n        ) {\n            relImgthree.setImageDrawable(\n                mListImgArrays.getDrawable(\n                    PreferenceManager\n                        .getbuttonthreetextimage(mContext)!!.toInt()\n                )\n            )\n            var relTwoStr: String? = \"\"\n            relTwoStr =  listitems[PreferenceManager\n                .getbuttonthreetextimage(mContext)!!.toInt()].uppercase(Locale.getDefault())\n            relTxtthree.text = relTwoStr\n            relTxtthree.setTextColor(ContextCompat.getColor(mContext, R.color.white))\n            relthree.setBackgroundColor(\n                PreferenceManager\n                    .getButtonthreeGuestBg(mContext)\n            )\n        }\n\n\n        if (PreferenceManager\n                .getbuttonfourtextimage(mContext)!!.toInt() != 0\n        ) {\n            relImgfour.setImageDrawable(\n                mListImgArrays.getDrawable(\n                    PreferenceManager\n                        .getbuttonfourtextimage(mContext)!!.toInt()\n                )\n            )\n            var relTwoStr: String? = \"\"\n            relTwoStr = listitems[PreferenceManager\n                .getbuttonfourtextimage(mContext)!!.toInt()].uppercase(Locale.getDefault())\n            relTxtfour.text = relTwoStr\n            relTxtfour.setTextColor(ContextCompat.getColor(mContext, R.color.white))\n            relfour.setBackgroundColor(\n                PreferenceManager\n                    .getButtonfourGuestBg(mContext)\n            )\n        }\n\n\n        if (PreferenceManager\n                .getbuttonfivetextimage(mContext)!!.toInt() != 0\n        ) {\n            relImgfive.setImageDrawable(\n                mListImgArrays.getDrawable(\n                    PreferenceManager\n                        .getbuttonfivetextimage(mContext)!!.toInt()\n                )\n            )\n            var relTwoStr: String? = \"\"\n            relTwoStr = listitems[PreferenceManager\n                .getbuttonfivetextimage(mContext)!!.toInt()].uppercase(Locale.getDefault())\n            relTxtfive.text = relTwoStr\n            relTxtfive.setTextColor(ContextCompat.getColor(mContext, R.color.white))\n            relfive.setBackgroundColor(\n                PreferenceManager\n                    .getButtonfiveGuestBg(mContext)\n            )\n        }\n        if (PreferenceManager.getbuttonsixtextimage(mContext)!!.toInt() != 0) {\n            relImgsix.setImageDrawable(\n                mListImgArrays.getDrawable(\n                    PreferenceManager\n                        .getbuttonsixtextimage(mContext)!!.toInt()\n                )\n            )\n            var relTwoStr: String? = \"\"\n            relTwoStr =  listitems[PreferenceManager\n                .getbuttonsixtextimage(mContext)!!.toInt()].uppercase(Locale.ROOT)\n            relTxtsix.text = relTwoStr\n            relTxtsix.setTextColor(ContextCompat.getColor(mContext, R.color.white))\n            relsix.setBackgroundColor(\n                PreferenceManager\n                    .getButtonsixGuestBg(mContext)\n            )\n        }\n        if (PreferenceManager\n                .getbuttonseventextimage(mContext)!!.toInt() != 0\n        ) {\n            relImgseven.setImageDrawable(\n                mListImgArrays.getDrawable(\n                    PreferenceManager\n                        .getbuttonseventextimage(mContext)!!.toInt()\n                )\n            )\n            var relTwoStr: String? = \"\"\n            relTwoStr = listitems[PreferenceManager\n                .getbuttonseventextimage(mContext)!!.toInt()].uppercase(Locale.getDefault())\n            relTxtseven.text = relTwoStr\n            relTxtseven.setTextColor(ContextCompat.getColor(mContext, R.color.white))\n            relseven.setBackgroundColor(\n                PreferenceManager\n                    .getButtonsevenGuestBg(mContext)\n            )\n        }\n        if (PreferenceManager\n                .getbuttoneighttextimage(mContext)!!.toInt() != 0\n        ) {\n            relImgeight.setImageDrawable(\n                mListImgArrays.getDrawable(\n                    PreferenceManager\n                        .getbuttoneighttextimage(mContext)!!.toInt()\n                )\n            )\n            var relTwoStr: String? = \"\"\n            relTwoStr =  listitems[PreferenceManager\n                .getbuttoneighttextimage(mContext)!!.toInt()].uppercase(Locale.getDefault())\n            relTxteight.text = relTwoStr\n            relTxteight.setTextColor(ContextCompat.getColor(mContext, R.color.white))\n            releight.setBackgroundColor(\n                PreferenceManager\n                    .getButtoneightGuestBg(mContext)\n            )\n        }\n        if (PreferenceManager\n                .getbuttonninetextimage(mContext)!!.toInt() != 0\n        ) {\n            relImgnine.setImageDrawable(\n                mListImgArrays.getDrawable(\n                    PreferenceManager\n                        .getbuttonninetextimage(mContext)!!.toInt()\n                )\n            )\n            var relTwoStr: String? = \"\"\n            relTwoStr =   listitems[PreferenceManager\n                .getbuttonninetextimage(mContext)!!.toInt()].uppercase(Locale.ROOT)\n            reltxtnine.text = relTwoStr\n            reltxtnine.setTextColor(ContextCompat.getColor(mContext, R.color.white))\n            relnine.setBackgroundColor(\n                PreferenceManager\n                    .getButtonnineGuestBg(mContext)\n            )\n        }\n\n\n    }\n\n    private fun setdraglisteners() {\n        relone.setOnDragListener(DropListener())\n        reltwo.setOnDragListener(DropListener())\n        relthree.setOnDragListener(DropListener())\n        relfour.setOnDragListener(DropListener())\n        relfive.setOnDragListener(DropListener())\n        relsix.setOnDragListener(DropListener())\n        relseven.setOnDragListener(DropListener())\n        releight.setOnDragListener(DropListener())\n        relnine.setOnDragListener(DropListener())\n    }\n\n    @Suppress(\"EqualsBetweenInconvertibleTypes\")\n    class DropListener : View.OnDragListener {\n        override fun onDrag(v: View?, event: DragEvent?): Boolean {\n\n            when (event?.action) {\n                DragEvent.ACTION_DRAG_STARTED -> Log.d(\"DRAG\", \"START\")\n                DragEvent.ACTION_DRAG_ENTERED -> Log.d(\"DRAG\", \"ENTERED\")\n                DragEvent.ACTION_DRAG_EXITED -> Log.d(\"DRAG\", \"EXITED\")\n                DragEvent.ACTION_DROP -> {\n                    val intArray = IntArray(2)\n                    v?.getLocationInWindow(intArray)\n                    val x = intArray[0]\n                    val y = intArray[1]\n                    val sPosition = homeActivity.sPosition\n                    getButtonViewTouched(x.toFloat().toInt(), y.toFloat().toInt())\n                    mSectionText[0] = relTxtone.text.toString().uppercase(Locale.ENGLISH)\n                    mSectionText[1] = relTxttwo.text.toString().uppercase(Locale.ENGLISH)\n                    mSectionText[2] = relTxtthree.text.toString().uppercase(Locale.ENGLISH)\n                    mSectionText[3] = relTxtfour.text.toString().uppercase(Locale.ENGLISH)\n                    mSectionText[4] = relTxtfive.text.toString().uppercase(Locale.ENGLISH)\n                    mSectionText[5] = relTxtsix.text.toString().uppercase(Locale.ENGLISH)\n                    mSectionText[6] = relTxtseven.text.toString().uppercase(Locale.ENGLISH)\n                    mSectionText[7] = relTxteight.text.toString().uppercase(Locale.ENGLISH)\n                    mSectionText[8] = reltxtnine.text.toString().uppercase(Locale.ENGLISH)\n\n                    for (i in mSectionText.indices) {\n                        isDraggable = true\n                        if (mSectionText[i].equals(\n                                listitems[homeActivity.sPosition],\n                                ignoreCase = true\n                            )\n                        ) {\n                            isDraggable = false\n                            break\n                        }\n                    }\n                    if (isDraggable) {\n                        getButtonDrawablesAndText(TouchedView, homeActivity.sPosition)\n\n                    } else {\n\n                        Toast.makeText(mContext, \"Item Already Exists !!!\", Toast.LENGTH_SHORT)\n                            .show()\n                    }\n\n                }\n                DragEvent.ACTION_DRAG_ENDED -> Log.d(\"DRAG\", \"END\")\n\n\n            }\n\n\n            return true\n\n        }\n\n        private fun getButtonDrawablesAndText(touchedView: View, sPosition: Int) {\n            if (sPosition != 0) {\n                if (touchedView == relone) {\n                    relImgone.setImageDrawable(mListImgArrays.getDrawable(sPosition))\n                    val relstring: String\n                    if (listitems[sPosition] == \"CCAs\") {\n                        relstring = \"CCAS\"\n                    } else if (listitems[sPosition] == \"Student Information\") {\n                        relstring = \"STUDENT INFORMATION\"\n                    } else {\n                        relstring = listitems[sPosition].uppercase(Locale.getDefault())\n                    }\n                    relTxtone.text = relstring\n                    getTabId(listitems[sPosition])\n                    PreferenceManager.setbuttononetabid(mContext, TAB_ID)\n                    //setBackgroundColorForView(appController.listitemArrays[sPosition], relone)\n                    setBackgroundColorForView(listitems[sPosition], relone)\n                    PreferenceManager.setbuttononetextimage(mContext, sPosition.toString())\n                } else if (touchedView == reltwo) {\n                    relImgtwo.setImageDrawable(mListImgArrays.getDrawable(sPosition))\n                    val relstring: String\n                    if (listitems[sPosition] == \"CCAs\") {\n                        relstring = \"CCAS\"\n                    } else if (listitems[sPosition] == \"Student Information\") {\n                        relstring = \"STUDENT INFORMATION\"\n                    } else {\n                        relstring = listitems[sPosition].uppercase(Locale.getDefault())\n                    }\n                    relTxttwo.text = relstring\n                    getTabId(listitems[sPosition])\n                    PreferenceManager.setbuttontwotabid(mContext, TAB_ID)\n                    setBackgroundColorForView(listitems[sPosition], reltwo)\n                    PreferenceManager.setbuttontwotextimage(mContext, sPosition.toString())\n                } else if (touchedView == relthree) {\n                    relImgthree.setImageDrawable(mListImgArrays.getDrawable(sPosition))\n                    val relstring: String\n                    if (listitems[sPosition] == \"CCAs\") {\n                        relstring = \"CCAS\"\n                    } else if (listitems[sPosition] == \"Student Information\") {\n                        relstring = \"STUDENT INFORMATION\"\n                    } else {\n                        relstring = listitems[sPosition].uppercase(Locale.getDefault())\n                    }\n                    relTxtthree.text = relstring\n                    getTabId(listitems[sPosition])\n                    PreferenceManager.setbuttonthreetabid(mContext, TAB_ID)\n                    setBackgroundColorForView(listitems[sPosition], relthree)\n                    PreferenceManager.setbuttonthreetextimage(mContext, sPosition.toString())\n                } else if (touchedView == relfour) {\n                    relImgfour.setImageDrawable(mListImgArrays.getDrawable(sPosition))\n                    val relstring: String\n                    if (listitems[sPosition] == \"CCAs\") {\n                        relstring = \"CCAS\"\n                    } else if (listitems[sPosition] == \"Student Information\") {\n                        relstring = \"STUDENT INFORMATION\"\n                    } else {\n                        relstring = listitems[sPosition].uppercase(Locale.getDefault())\n                    }\n                    relTxtfour.text = relstring\n                    getTabId(listitems[sPosition])\n                    PreferenceManager.setbuttonfourtabid(mContext, TAB_ID)\n                    setBackgroundColorForView(listitems[sPosition], relfour)\n                    PreferenceManager.setbuttonfourtextimage(mContext, sPosition.toString())\n                } else if (touchedView == relfive) {\n                    relImgfive.setImageDrawable(mListImgArrays.getDrawable(sPosition))\n                    val relstring: String\n                    if (listitems[sPosition] == \"CCAs\") {\n                        relstring = \"CCAS\"\n                    } else if (listitems[sPosition] == \"Student Information\") {\n                        relstring = \"STUDENT INFORMATION\"\n                    } else {\n                        relstring = listitems[sPosition].uppercase(Locale.getDefault())\n                    }\n                    relTxtfive.text = relstring\n                    getTabId(listitems[sPosition])\n                    PreferenceManager.setbuttonfivetabid(mContext, TAB_ID)\n                    setBackgroundColorForView(listitems[sPosition], relfive)\n                    PreferenceManager.setbuttonfivetextimage(mContext, sPosition.toString())\n                } else if (touchedView == relsix) {\n                    relImgsix.setImageDrawable(mListImgArrays.getDrawable(sPosition))\n                    val relstring: String\n                    if (listitems[sPosition] == \"CCAs\") {\n                        relstring = \"CCAS\"\n                    } else if (listitems[sPosition] == \"Student Information\") {\n                        relstring = \"STUDENT INFORMATION\"\n                    } else {\n                        relstring = listitems[sPosition].uppercase(Locale.getDefault())\n                    }\n                    relTxtsix.text = relstring\n                    getTabId(listitems[sPosition])\n                    PreferenceManager.setbuttonsixtabid(mContext, TAB_ID)\n                    setBackgroundColorForView(listitems[sPosition], relsix)\n                    PreferenceManager.setbuttonsixtextimage(mContext, sPosition.toString())\n                } else if (touchedView == relseven) {\n                    relImgseven.setImageDrawable(mListImgArrays.getDrawable(sPosition))\n                    val relstring: String\n                    if (listitems[sPosition] == \"CCAs\") {\n                        relstring = \"CCAS\"\n                    } else if (listitems[sPosition] == \"Student Information\") {\n                        relstring = \"STUDENT INFORMATION\"\n                    } else {\n                        relstring = listitems[sPosition].uppercase(Locale.getDefault())\n                    }\n                    relTxtseven.text = relstring\n                    getTabId(listitems[sPosition])\n                    PreferenceManager.setbuttonseventabid(mContext, TAB_ID)\n                    setBackgroundColorForView(listitems[sPosition], relseven)\n                    PreferenceManager.setbuttonseventextimage(mContext, sPosition.toString())\n                } else if (touchedView == releight) {\n                    relImgeight.setImageDrawable(mListImgArrays.getDrawable(sPosition))\n                    val relstring: String\n                    if (listitems[sPosition] == \"CCAs\") {\n                        relstring = \"CCAS\"\n                    } else if (listitems[sPosition] == \"Student Information\") {\n                        relstring = \"STUDENT INFORMATION\"\n                    } else {\n                        relstring = listitems[sPosition].uppercase(Locale.getDefault())\n                    }\n                    relTxteight.text = relstring\n                    getTabId(listitems[sPosition])\n                    PreferenceManager.setbuttoneighttabid(mContext, TAB_ID)\n                    setBackgroundColorForView(listitems[sPosition], releight)\n                    PreferenceManager.setbuttoneighttextimage(mContext, sPosition.toString())\n                } else if (touchedView == relnine) {\n                    relImgnine.setImageDrawable(mListImgArrays.getDrawable(sPosition))\n                    val relstring: String\n                    if (listitems[sPosition] == \"CCAs\") {\n                        relstring = \"CCAS\"\n                    } else if (listitems[sPosition] == \"Student Information\") {\n                        relstring = \"STUDENT INFORMATION\"\n                    } else {\n                        relstring = listitems[sPosition].uppercase(Locale.getDefault())\n                    }\n                    reltxtnine.text = relstring\n                    getTabId(listitems[sPosition])\n                    PreferenceManager.setbuttonninetabid(mContext, TAB_ID)\n                    setBackgroundColorForView(listitems[sPosition], relnine)\n                    PreferenceManager.setbuttonninetextimage(mContext, sPosition.toString())\n                }\n\n            }\n        }\n\n        private fun setBackgroundColorForView(s: String, v: View) {\n            if (v == relone) {\n                v.setBackgroundColor(ContextCompat.getColor(mContext, R.color.transparent))\n                saveButtonBgColor(v, ContextCompat.getColor(mContext, R.color.transparent))\n            } else if (v == reltwo) {\n                v.setBackgroundColor(ContextCompat.getColor(mContext, R.color.transparent))\n                saveButtonBgColor(v, ContextCompat.getColor(mContext, R.color.transparent))\n            } else if (v == relthree) {\n                v.setBackgroundColor(ContextCompat.getColor(mContext, R.color.transparent))\n                saveButtonBgColor(v, ContextCompat.getColor(mContext, R.color.transparent))\n            } else if (v == relfour) {\n                v.setBackgroundColor(ContextCompat.getColor(mContext, R.color.transparent))\n                saveButtonBgColor(v, ContextCompat.getColor(mContext, R.color.transparent))\n            } else if (v == relfive) {\n                v.setBackgroundColor(ContextCompat.getColor(mContext, R.color.rel_five))\n                saveButtonBgColor(v, ContextCompat.getColor(mContext, R.color.transparent))\n            } else if (v == relsix) {\n                v.setBackgroundColor(ContextCompat.getColor(mContext, R.color.transparent))\n                saveButtonBgColor(v, ContextCompat.getColor(mContext, R.color.transparent))\n            } else if (v == relseven) {\n                v.setBackgroundColor(ContextCompat.getColor(mContext, R.color.transparent))\n                saveButtonBgColor(v, ContextCompat.getColor(mContext, R.color.transparent))\n            } else if (v == releight) {\n                v.setBackgroundColor(ContextCompat.getColor(mContext, R.color.transparent))\n                saveButtonBgColor(v, ContextCompat.getColor(mContext, R.color.transparent))\n            } else if (v == relnine) {\n                v.setBackgroundColor(ContextCompat.getColor(mContext, R.color.transparent))\n                saveButtonBgColor(v, ContextCompat.getColor(mContext, R.color.transparent))\n            }\n        }\n\n        private fun saveButtonBgColor(v: View, color: Int) {\n            if (v == relone) {\n                PreferenceManager.setButtonOneGuestBg(mContext, color)\n            } else if (v == reltwo) {\n                PreferenceManager.setButtontwoGuestBg(mContext, color)\n            } else if (v == relthree) {\n                PreferenceManager.setButtonthreeGuestBg(mContext, color)\n            } else if (v == relfour) {\n                PreferenceManager.setButtonfourGuestBg(mContext, color)\n            } else if (v == relfive) {\n                PreferenceManager.setButtonfiveGuestBg(mContext, color)\n            } else if (v == relsix) {\n                PreferenceManager.setButtonsixGuestBg(mContext, color)\n            } else if (v == relseven) {\n                PreferenceManager.setButtonsevenGuestBg(mContext, color)\n            } else if (v == releight) {\n                PreferenceManager.setButtoneightGuestBg(mContext, color)\n            } else if (v == relnine) {\n                PreferenceManager.setButtonnineGuestBg(mContext, color)\n            }\n\n        }\n\n        private fun getTabId(textdata: String) {\n            when {\n\n\n                textdata.equals(ConstantWords.calendar, ignoreCase = true) -> {\n                    TAB_ID = ConstantWords.TAB_CALENDAR\n\n                }\n                textdata.equals(ConstantWords.notification, ignoreCase = true) -> {\n                    TAB_ID = ConstantWords.TAB_NOTIFICATIONS\n                }\n                textdata.equals(ConstantWords.lunchbox, ignoreCase = true) -> {\n                    TAB_ID = ConstantWords.TAB_LUNCH_BOX\n                }\n                textdata.equals(ConstantWords.payments, ignoreCase = true) -> {\n                    TAB_ID = ConstantWords.TAB_PAYMENTS\n                }\n                textdata.equals(ConstantWords.early_years, ignoreCase = true) -> {\n                    TAB_ID = ConstantWords.TAB_EARLY_YEARS\n                }\n                textdata.equals(ConstantWords.primary, ignoreCase = true) -> {\n                    TAB_ID = ConstantWords.TAB_PRIMARY\n                }\n                textdata.equals(ConstantWords.secondary, ignoreCase = true) -> {\n                    TAB_ID = ConstantWords.TAB_SECONDARY\n                }\n                textdata.equals(ConstantWords.gallery, ignoreCase = true) -> {\n                    TAB_ID = ConstantWords.TAB_GALLERY\n                }\n                textdata.equals(ConstantWords.about_us, ignoreCase = true) -> {\n                    TAB_ID = ConstantWords.TAB_ABOUT_US\n                }\n\n                textdata.equals(ConstantWords.contact_us, ignoreCase = true) -> {\n                    TAB_ID = ConstantWords.TAB_CONTACT_US\n\n                } textdata.equals(ConstantWords.parentessential, ignoreCase = true) -> {\n                    TAB_ID = ConstantWords.TAB_PARENT_ESSENTIAL\n\n                }\n\n            }\n\n        }\n\n        private fun getButtonViewTouched(centerX: Int, centerY: Int) {\n            val array1 = IntArray(2)\n            relone.getLocationInWindow(array1)\n            val x1: Int = array1[0]\n            val x2 = x1 + relone.width\n            val y1: Int = array1[1]\n            val y2 = y1 + relone.height\n\n            val array2 = IntArray(2)\n            reltwo.getLocationInWindow(array2)\n            val x3: Int = array2[0]\n            val x4 = x3 + reltwo.width\n            val y3: Int = array2[1]\n            val y4 = y3 + reltwo.height\n\n            val array3 = IntArray(2)\n            relthree.getLocationInWindow(array3)\n            val x5: Int = array3[0]\n            val x6 = x5 + relthree.width\n            val y5: Int = array3[1]\n            val y6 = y5 + relthree.height\n\n            val array4 = IntArray(2)\n            relfour.getLocationInWindow(array4)\n            val x7: Int = array4[0]\n            val x8 = x7 + relfour.width\n            val y7: Int = array4[1]\n            val y8 = y7 + relfour.height\n\n            val array5 = IntArray(2)\n            relfive.getLocationInWindow(array5)\n            val x9: Int = array5[0]\n            val x10 = x9 + relfive.width\n            val y9: Int = array5[1]\n            val y10 = y9 + relfive.height\n\n            val array6 = IntArray(2)\n            relsix.getLocationInWindow(array6)\n            val x11: Int = array6[0]\n            val x12 = x11 + relsix.width\n            val y11: Int = array6[1]\n            val y12 = y11 + relsix.height\n\n            val array7 = IntArray(2)\n            relseven.getLocationInWindow(array7)\n            val x13: Int = array7[0]\n            val x14 = x13 + relseven.width\n            val y13: Int = array7[1]\n            val y14 = y13 + relseven.height\n\n            val array8 = IntArray(2)\n            releight.getLocationInWindow(array8)\n            val x15: Int = array8[0]\n            val x16 = x15 + releight.width\n            val y15: Int = array8[1]\n            val y16 = y15 + releight.height\n\n            val array9 = IntArray(2)\n            relnine.getLocationInWindow(array9)\n            val x17: Int = array9[0]\n            val x18 = x17 + relnine.width\n            val y17: Int = array9[1]\n            val y18 = y17 + relnine.height\n\n            if (centerX in x1..x2 && y1 <= centerY && centerY <= y2) {\n                TouchedView = relone\n            } else if (centerX in x3..x4 && y3 <= centerY && centerY <= y4) {\n                TouchedView = reltwo\n            } else if (centerX in x5..x6 && y5 <= centerY && centerY <= y6) {\n                TouchedView = relthree\n            } else if (centerX in x7..x8 && y7 <= centerY && centerY <= y8) {\n                TouchedView = relfour\n            } else if (centerX in x9..x10 && y9 <= centerY && centerY <= y10) {\n                TouchedView = relfive\n            } else if (centerX in x11..x12 && y11 <= centerY && centerY <= y12) {\n                TouchedView = relsix\n            } else if (centerX in x13..x14 && y13 <= centerY && centerY <= y14) {\n                TouchedView = relseven\n            } else if (centerX in x15..x16 && y15 <= centerY && centerY <= y16) {\n                TouchedView = releight\n            } else if (centerX in x17..x18 && y17 <= centerY && centerY <= y18) {\n                TouchedView = relnine\n            }\n\n        }\n\n    }\n\n    @SuppressLint(\"UseRequireInsteadOfGet\")\n    private fun initializeUI() {\n        pager = view!!.findViewById<ViewPager>(R.id.bannerImagePager)\n        relone = view!!.findViewById(R.id.relOne) as RelativeLayout\n        reltwo = view!!.findViewById(R.id.relTwo) as RelativeLayout\n        relthree = view!!.findViewById(R.id.relThree) as RelativeLayout\n        relfour = view!!.findViewById(R.id.relFour) as RelativeLayout\n        relfive = view!!.findViewById(R.id.relFive) as RelativeLayout\n        relsix = view!!.findViewById(R.id.relSix) as RelativeLayout\n        relseven = view!!.findViewById(R.id.relSeven) as RelativeLayout\n        releight = view!!.findViewById(R.id.relEight) as RelativeLayout\n        relnine = view!!.findViewById(R.id.relNine) as RelativeLayout\n\n        relTxtone = view!!.findViewById(R.id.relTxtOne) as TextView\n        relTxttwo = view!!.findViewById(R.id.relTxtTwo) as TextView\n        relTxtthree = view!!.findViewById(R.id.relTxtThree) as TextView\n        relTxtfour = view!!.findViewById(R.id.relTxtFour) as TextView\n        relTxtfive = view!!.findViewById(R.id.relTxtFive) as TextView\n        relTxtsix = view!!.findViewById(R.id.relTxtSix) as TextView\n        relTxtseven = view!!.findViewById(R.id.relTxtSeven) as TextView\n        relTxteight = view!!.findViewById(R.id.relTxtEight) as TextView\n        reltxtnine = view!!.findViewById(R.id.relTxtNine) as TextView\n\n        relImgone = view!!.findViewById(R.id.relImgOne) as ImageView\n        relImgtwo = view!!.findViewById(R.id.relImgTwo) as ImageView\n        relImgthree = view!!.findViewById(R.id.relImgThree) as ImageView\n        relImgfour = view!!.findViewById(R.id.relImgFour) as ImageView\n        relImgfive = view!!.findViewById(R.id.relImgFive) as ImageView\n        relImgsix = view!!.findViewById(R.id.relImgSix) as ImageView\n        relImgseven = view!!.findViewById(R.id.relImgSeven) as ImageView\n        relImgeight = view!!.findViewById(R.id.relImgEight) as ImageView\n        relImgnine = view!!.findViewById(R.id.relImgNine) as ImageView\n        mSectionText = arrayOfNulls(9)\n\n        pager_rel=view!!.findViewById(R.id.pager_rel)\n        updatedata()\n\n\n        pager.addOnPageChangeListener(object : ViewPager.OnPageChangeListener {\n            override fun onPageScrollStateChanged(state: Int) {\n\n            }\n\n            override fun onPageScrolled(\n                position: Int,\n                positionOffset: Float,\n                positionOffsetPixels: Int\n            ) {\n            }\n\n            override fun onPageSelected(position: Int) {\n                  currentPage = position\n            }\n\n        })\n\n    }\n\n    fun updatedata() {\n        val handler = Handler()\n\n\n        val update = Runnable {\n            if (currentPage == bannerarray.size) {\n                currentPage = 0\n                pager.setCurrentItem(\n                    currentPage,\n                    true\n                )\n            } else {\n                pager\n                    .setCurrentItem(currentPage++, true)\n            }\n        }\n        val swipetimer = Timer()\n\n        swipetimer.schedule(object : TimerTask() {\n            override fun run() {\n                handler.post(update)\n            }\n        }, 100, 6000)\n\n    }\n\n\n    private fun CHECKINTENTVALUE(intentTabId: String) {\n        TAB_ID = intentTabId\n        var mFragment: Fragment? = null\n        if (PreferenceManager.getaccesstoken(mContext).equals(\"\")) {\n            when (intentTabId) {\n                ConstantWords.TAB_NOTIFICATIONS -> {\n                    DialogFunctions.commonErrorAlertDialog(mContext.resources.getString(R.string.alert),mContext.resources.getString(R.string.feature_only_for_registered_user),mContext)\n\n                }\n                ConstantWords.TAB_CALENDAR -> {\n                    DialogFunctions.commonErrorAlertDialog(mContext.resources.getString(R.string.alert),mContext.resources.getString(R.string.feature_only_for_registered_user),mContext)\n\n                }\n\n                ConstantWords.TAB_PAYMENTS -> {\n                    DialogFunctions.commonErrorAlertDialog(mContext.resources.getString(R.string.alert),mContext.resources.getString(R.string.feature_only_for_registered_user),mContext)\n\n                }\n                ConstantWords.TAB_EARLY_YEARS -> {\n                    mFragment = EarlyYearsFragment()\n                    fragmentIntent(mFragment)\n                }\n                ConstantWords.TAB_PRIMARY -> {\n                    mFragment = PrimaryFragment()\n                    fragmentIntent(mFragment)\n                }\n                ConstantWords.TAB_SECONDARY -> {\n                    mFragment = SecondaryFragment()\n                    fragmentIntent(mFragment)\n                }\n                ConstantWords.TAB_GALLERY -> {\n                    DialogFunctions.commonErrorAlertDialog(mContext.resources.getString(R.string.alert),mContext.resources.getString(R.string.feature_only_for_registered_user),mContext)\n\n                }\n                ConstantWords.TAB_LUNCH_BOX -> {\n                    DialogFunctions.commonErrorAlertDialog(mContext.resources.getString(R.string.alert),mContext.resources.getString(R.string.feature_only_for_registered_user),mContext)\n\n                }\n                ConstantWords.TAB_PARENT_ESSENTIAL -> {\n                    DialogFunctions.commonErrorAlertDialog(mContext.resources.getString(R.string.alert),mContext.resources.getString(R.string.feature_only_for_registered_user),mContext)\n\n                }\n                ConstantWords.TAB_ABOUT_US -> {\n                    mFragment = AboutUsFragment()\n                    fragmentIntent(mFragment)\n                }\n\n\n                ConstantWords.TAB_CONTACT_US -> {\n                    if (ActivityCompat.checkSelfPermission(\n                            mContext,\n                            Manifest.permission.ACCESS_FINE_LOCATION\n                        ) != PackageManager.PERMISSION_GRANTED && ActivityCompat.checkSelfPermission(\n                            mContext,\n                            Manifest.permission.ACCESS_COARSE_LOCATION\n                        ) != PackageManager.PERMISSION_GRANTED && ActivityCompat.checkSelfPermission(\n                            mContext,\n                            Manifest.permission.CALL_PHONE\n                        ) != PackageManager.PERMISSION_GRANTED\n                    ) {\n                        checkpermission()\n\n\n                    } else {\n                        mFragment = ContactUsFragment()\n                        fragmentIntent(mFragment)\n                    }\n                }\n                ConstantWords.TAB_LUNCH_BOX -> {\n//                    mFragment = CanteenFragment()\n//                    fragmentIntent(mFragment)\n\n                 DialogFunctions.commonErrorAlertDialog(\"Coming Soon!\",\"This Feature will be available shortly\",\n                     mContext)\n\n                }\n\n\n\n            }\n        } else {\n            when (intentTabId) {\n\n                ConstantWords.TAB_NOTIFICATIONS -> {\n                    mFragment = NotificationFragment()\n                    fragmentIntent(mFragment)\n                }\n                ConstantWords.TAB_CALENDAR -> {\n\n                    if (ActivityCompat.checkSelfPermission(mContext, Manifest.permission.READ_CALENDAR)\n                        != PackageManager.PERMISSION_GRANTED && ActivityCompat.checkSelfPermission(\n                            mContext, Manifest.permission.WRITE_CALENDAR)\n                        != PackageManager.PERMISSION_GRANTED && ActivityCompat.checkSelfPermission(\n                            mContext, Manifest.permission.READ_EXTERNAL_STORAGE) != PackageManager.PERMISSION_GRANTED\n                        && ActivityCompat.checkSelfPermission(\n                            mContext, Manifest.permission.WRITE_EXTERNAL_STORAGE) != PackageManager.PERMISSION_GRANTED\n                    )\n                    {\n                        checkpermissionCal()\n\n                    }\n                    else\n                    {\n                        mFragment = CalendarFragment()\n                        fragmentIntent(mFragment)\n                    }\n\n                }\n\n                ConstantWords.TAB_PAYMENTS -> {\n                    mFragment = PaymentFragment()\n                    fragmentIntent(mFragment)\n                }\n                ConstantWords.TAB_EARLY_YEARS -> {\n                    mFragment = EarlyYearsFragment()\n                    fragmentIntent(mFragment)\n                }\n                ConstantWords.TAB_PRIMARY -> {\n                    mFragment = PrimaryFragment()\n                    fragmentIntent(mFragment)\n                }\n                ConstantWords.TAB_SECONDARY -> {\n                    mFragment = SecondaryFragment()\n                    fragmentIntent(mFragment)\n                }\n                ConstantWords.TAB_PARENT_ESSENTIAL -> {\n                    mFragment = ParentsEssentialFragment()\n                    fragmentIntent(mFragment)\n                }\n                ConstantWords.TAB_GALLERY -> {\n//                    DialogFunctions.commonErrorAlertDialog(mContext.resources.getString(R.string.alert),mContext.resources.getString(R.string.feature_only_for_registered_user),context)\n                    mFragment = GalleryFragment()\n                    fragmentIntent(mFragment)\n                }\n                ConstantWords.TAB_ABOUT_US -> {\n                    mFragment = AboutUsFragment()\n                    fragmentIntent(mFragment)\n                }\n                ConstantWords.TAB_LUNCH_BOX -> {\n\n                    mFragment = CanteenFragment()\n                    fragmentIntent(mFragment)\n//                    DialogFunctions.commonErrorAlertDialog(\"Coming Soon!\",\"This Feature will be available shortly.\",mContext)\n\n                }\n\n                ConstantWords.TAB_CONTACT_US -> {\n                    if (ActivityCompat.checkSelfPermission(\n                            mContext,\n                            Manifest.permission.ACCESS_FINE_LOCATION\n                        ) != PackageManager.PERMISSION_GRANTED && ActivityCompat.checkSelfPermission(\n                            mContext,\n                            Manifest.permission.ACCESS_COARSE_LOCATION\n                        ) != PackageManager.PERMISSION_GRANTED && ActivityCompat.checkSelfPermission(\n                            mContext,\n                            Manifest.permission.CALL_PHONE\n                        ) != PackageManager.PERMISSION_GRANTED\n                    ) {\n                        checkpermission()\n\n\n                    } else {\n                        mFragment = ContactUsFragment()\n                        fragmentIntent(mFragment)\n                    }\n                }\n            }\n\n        }\n    }\n\n\n\n\n}\n\nprivate fun showPopUpImage(notice:String,context: Context)\n{\n    val dialog = Dialog(context)\n    dialog.requestWindowFeature(Window.FEATURE_NO_TITLE)\n    dialog.window!!.setBackgroundDrawable(ColorDrawable(Color.TRANSPARENT))\n    dialog.setCancelable(false)\n    dialog.setContentView(R.layout.dialog_notice)\n    var bannerImg = dialog.findViewById(R.id.bannerImg) as ImageView\n    var closeImg = dialog.findViewById(R.id.closeImg) as ImageView\n    Glide.with(context).load(notice).centerCrop().into(bannerImg)\n    closeImg.setOnClickListener()\n    {\n\n        if (PreferenceManager.getSurvey(mContext) === 1)\n        {\n            if (PreferenceManager.getIsSurveyHomeVisible(mContext))\n            {\n\n            }\n            else\n            {\n                Log.e(\"SURVEY VALUE\", \"API CALL\")\n                callSurveyApi()\n            }\n        }\n        else\n        {\n\n        }\n        dialog.dismiss()\n\n    }\n\n\n    Handler().postDelayed({\n        if (PreferenceManager.getSurvey(mContext) === 1) {\n            if (PreferenceManager.getIsSurveyHomeVisible(mContext))\n            {\n\n            }\n            else\n            {\n                Log.e(\"SURVEY VALUE\", \"API CALL\")\n                callSurveyApi()\n            }\n        }\n        else\n        {\n\n        }\n      dialog.dismiss()\n\n    }, NOTICE_TIME_OUT)\n\n\n    dialog.show()\n}\n\nfun callSurveyApi() {\n    surveyArrayList = ArrayList()\n    var model= SurveyApiModel(\"16\")\n\n    val call: Call<SurveyResponseModel> = ApiClient.getClient.survey(model,\"Bearer \"+ PreferenceManager.getaccesstoken(mContext))\n    call.enqueue(object : Callback<SurveyResponseModel> {\n        override fun onFailure(call: Call<SurveyResponseModel>, t: Throwable) {\n            Log.e(\"Failed\", t.localizedMessage)\n\n        }\n        override fun onResponse(call: Call<SurveyResponseModel>, response: Response<SurveyResponseModel>) {\n            val responsedata = response.body()\n\n            if (responsedata != null) {\n                try {\n\n                    if (response.body()!!.status==100)\n                    {\n                        PreferenceManager.setIsSurveyHomeVisible(mContext, true)\n\n                        if (response.body()!!.responseArray!!.data!!.size > 0) {\n                            surveySize = response.body()!!.responseArray!!.data!!.size\n                            for (i in response.body()!!.responseArray!!.data!!.indices) {\n                               // val dataObject = dataArray.getJSONObject(i)\n                                surveyEmail = response.body()!!.responseArray!!.data!!.get(i).contact_email\n                                val model = SurveyDetailDataModel()\n                                model.id=(response.body()!!.responseArray!!.data!!.get(i).id)\n                                model.survey_name=(response.body()!!.responseArray!!.data!!.get(i).survey_name)\n                                model.image=(response.body()!!.responseArray!!.data!!.get(i).image)\n                                model.title=(response.body()!!.responseArray!!.data!!.get(i).title)\n                                model.description=(response.body()!!.responseArray!!.data!!.get(i).description)\n                                model.created_at=(response.body()!!.responseArray!!.data!!.get(i).created_at)\n                                model.updated_at=(response.body()!!.responseArray!!.data!!.get(i).updated_at)\n\n                                surveyQuestionArrayList = ArrayList()\n                               // val questionsArray = dataObject.getJSONArray(\"questions\")\n                                if (response.body()!!.responseArray!!.data!!.get(i).questions!!.size > 0) {\n                                    for (j in  response.body()!!.responseArray!!.data!!.get(i).questions!!.indices) {\n                                       // val questionsObject = questionsArray.getJSONObject(j)\n                                        val mModel = SurveyQuestionsModel()\n                                        mModel.id=(response.body()!!.responseArray!!.data!!.get(i).questions!!.get(j).id)\n                                        mModel.question=(response.body()!!.responseArray!!.data!!.get(i).questions!!.get(j).question)\n                                        mModel.answer_type=(response.body()!!.responseArray!!.data!!.get(i).questions!!.get(j).answer_type)\n                                        mModel.answer=(\"\")\n                                        surveyAnswersArrayList = ArrayList()\n\n                                        if (response.body()!!.responseArray!!.data!!.get(i).questions!!.get(j).offered_answers!!.size>0) {\n                                            for (k in response.body()!!.responseArray!!.data!!.get(i).questions!!.get(j).offered_answers!!.indices) {\n\n                                                val nModel = SurveyOfferedAnswersModel()\n                                                nModel.id=(response.body()!!.responseArray!!.data!!.get(i).questions!!.get(j).offered_answers!!.get(k).id)\n                                                nModel.answer=(response.body()!!.responseArray!!.data!!.get(i).questions!!.get(j).offered_answers!!.get(k).answer)\n                                                nModel.label=(response.body()!!.responseArray!!.data!!.get(i).questions!!.get(j).offered_answers!!.get(k).label)\n                                                nModel.is_clicked=(false)\n                                                nModel.is_clicked0=(false)\n                                                surveyAnswersArrayList.add(nModel)\n                                            }\n                                        }\n                                        mModel.offered_answers=(surveyAnswersArrayList)\n                                        surveyQuestionArrayList.add(mModel)\n                                        Log.e(\"surveydata\", surveyQuestionArrayList.toString())\n\n\n                                    }\n                                }\n                                model.questions=(surveyQuestionArrayList)\n                                surveyArrayList.add(model)\n                            }\n                            //showSurvey(getActivity(),surveyArrayList);\n                            Log.e(\"data\", surveyArrayList.get(0).survey_name)\n                            showSurveyWelcomeDialogue(mContext, surveyArrayList, false)\n                        }\n                    }\n                    else\n                    {\n\n                        DialogFunctions.commonErrorAlertDialog(mContext.resources.getString(R.string.alert), ConstantFunctions.commonErrorString(response.body()!!.status), mContext)\n                    }\n\n\n                } catch (e: Exception) {\n                    e.printStackTrace()\n                }\n            }\n        }\n\n    })\n}\nfun showSurveyWelcomeDialogue(\n    activity: Context,\n    surveyArrayList: ArrayList<SurveyDetailDataModel>,\n    isThankyou: Boolean?\n\n) {\n//        final Dialog dialog = new Dialog(activity,android.R.style.Theme_Black_NoTitleBar_Fullscreen);\n//        dialog.requestWindowFeature(R.style.full_screen_dialog);\n    val dialog = Dialog(activity!!)\n    dialog.requestWindowFeature(Window.FEATURE_NO_TITLE)\n    dialog.window!!.setBackgroundDrawable(ColorDrawable(Color.TRANSPARENT))\n    dialog.setCancelable(false)\n    dialog.setContentView(R.layout.dialog_survey_wlcome)\n    val startNowBtn = dialog.findViewById<View>(R.id.startNowBtn) as Button\n    val imgClose = dialog.findViewById<View>(R.id.closeImg) as ImageView\n\n    val headingTxt = dialog.findViewById<View>(R.id.titleTxt) as TextView\n    val descriptionTxt = dialog.findViewById<View>(R.id.descriptionTxt) as TextView\n    //        if (isThankyou)\n//\t\t{\n//\t\t\tthankyouTxt.setVisibility(View.VISIBLE);\n//\t\t\tthankyouTxt.setText(\"Thank you For Submitting your Survey\");\n//\t\t}\n//        else {\n//\t\t\tthankyouTxt.setVisibility(View.GONE);\n//\t\t}\n    headingTxt.setText(surveyArrayList[pos + 1].title)\n    descriptionTxt.setText(surveyArrayList[pos + 1].description)\n    val bannerImg = dialog.findViewById<View>(R.id.bannerImg) as ImageView\n    if (!surveyArrayList[pos + 1].image.equals(\"\")) {\n        Glide.with(mContext).load(surveyArrayList[pos + 1].image).centerCrop().into(bannerImg)\n\n    } else {\n        bannerImg.setImageResource(R.drawable.survey)\n    }\n    startNowBtn.setOnClickListener {\n        dialog.dismiss()\n\n        if (surveyArrayList.size > 0) {\n            pos = pos + 1\n            if (pos < surveyArrayList.size) {\n                Log.e(\"insidewelcome\", surveyQuestionArrayList.size.toString())\n                if(surveyArrayList[pos].questions!!.size>0)\n                {\n                    showSurveyQuestionAnswerDialog(\n                        activity,\n                        surveyArrayList[pos].questions!!,\n                        surveyArrayList[pos].survey_name,\n                        surveyArrayList[pos].id.toString(),\n                        surveyArrayList[pos].contact_email\n                    )\n                    dialog.dismiss()\n                }\n                else{\n                    DialogFunctions.commonErrorAlertDialog(mContext.resources.getString(R.string.alert), \"No Survey Questions Available.\", mContext)\n                    dialog.dismiss()\n                }\n\n            }\n        }\n    }\n    imgClose.setOnClickListener {\n        showCloseSurveyDialog(dialog)\n    }\n    val skipBtn = dialog.findViewById<View>(R.id.skipBtn) as Button\n    skipBtn.setOnClickListener {\n        dialog.dismiss()\n       // showCloseSurveyDialog(dialog)\n    }\n    dialog.show()\n}\nfun showSurveyQuestionAnswerDialog(\n    activity: Context,\n    surveyQuestionArrayList: ArrayList<SurveyQuestionsModel>,\n    surveyname: String?,\n    surveyID: String?,\n    contactEmail: String?\n) {\n    val dialog = Dialog(activity!!)\n    dialog.requestWindowFeature(Window.FEATURE_NO_TITLE)\n    dialog.window!!.setBackgroundDrawable(ColorDrawable(Color.TRANSPARENT))\n    dialog.setCancelable(false)\n    dialog.setContentView(R.layout.dialog_question_answer_survey)\n    val surveyPager = dialog.findViewById<View>(R.id.surveyPager) as ViewPager\n    val questionCount = dialog.findViewById<View>(R.id.questionCount) as TextView\n    val nxtQnt = dialog.findViewById<View>(R.id.nxtQnt) as TextView\n    val currentQntTxt = dialog.findViewById<View>(R.id.currentQntTxt) as TextView\n    val surveyName = dialog.findViewById<View>(R.id.surveyName) as TextView\n    val previousBtn = dialog.findViewById<View>(R.id.previousBtn) as ImageView\n    val nextQuestionBtn = dialog.findViewById<View>(R.id.nextQuestionBtn) as ImageView\n    val closeImg = dialog.findViewById<View>(R.id.closeImg) as ImageView\n    val progressBar = dialog.findViewById<View>(R.id.progressBar) as ProgressBar\n    progressBar.max = surveyQuestionArrayList.size\n    progressBar.progressDrawable.setColorFilter(\n        mContext.resources.getColor(R.color.rel_one),\n        PorterDuff.Mode.SRC_IN\n    )\n    closeImg.setOnClickListener {\n        showCloseSurveyDialog(dialog)\n    }\n    if (surveyQuestionArrayList.size > 9) {\n        currentQntTxt.text = \"01\"\n        questionCount.text = \"/\" + surveyQuestionArrayList.size.toString()\n    } else {\n        currentQntTxt.text = \"01\"\n        questionCount.text = \"/0\" + surveyQuestionArrayList.size.toString()\n    }\n    surveyName.text = surveyname\n    //        if (contactEmail.equalsIgnoreCase(\"\"))\n//\t\t{\n//\t\t\temailImg.setVisibility(View.GONE);\n//\t\t}\n//        else {\n//\t\t\temailImg.setVisibility(View.GONE);\n//\t\t}\n    currentPageSurvey = 1\n    surveyPager.currentItem = currentPageSurvey - 1\n    progressBar.progress = currentPageSurvey\n    surveyPager.adapter = SurveyQuestionPagerAdapter(activity, surveyQuestionArrayList)\n    if (currentPageSurvey == surveyQuestionArrayList.size) {\n        previousBtn.visibility = View.INVISIBLE\n        nextQuestionBtn.visibility = View.INVISIBLE\n        nxtQnt.visibility = View.VISIBLE\n    } else {\n        if (currentPageSurvey == 1) {\n            previousBtn.visibility = View.INVISIBLE\n            nextQuestionBtn.visibility = View.VISIBLE\n            nxtQnt.visibility = View.INVISIBLE\n        } else {\n            previousBtn.visibility = View.INVISIBLE\n            nextQuestionBtn.visibility = View.VISIBLE\n            nxtQnt.visibility = View.INVISIBLE\n        }\n    }\n    nextQuestionBtn.setOnClickListener {\n        if (currentPageSurvey == surveyQuestionArrayList.size) {\n        } else {\n            currentPageSurvey++\n            progressBar.progress = currentPageSurvey\n            surveyPager.currentItem = currentPageSurvey - 1\n            if (currentPageSurvey == surveyQuestionArrayList.size) {\n                nextQuestionBtn.visibility = View.INVISIBLE\n                previousBtn.visibility = View.VISIBLE\n                nxtQnt.visibility = View.VISIBLE\n            } else {\n                nextQuestionBtn.visibility = View.VISIBLE\n                previousBtn.visibility = View.VISIBLE\n                nxtQnt.visibility = View.INVISIBLE\n            }\n        }\n        if (surveyQuestionArrayList.size > 9) {\n            if (currentPageSurvey < 9) {\n                currentQntTxt.text = \"0$currentPageSurvey\"\n                questionCount.text = \"/\" + surveyQuestionArrayList.size.toString()\n            } else {\n                currentQntTxt.setText(currentPageSurvey)\n                questionCount.text = \"/\" + surveyQuestionArrayList.size.toString()\n            }\n        } else {\n            if (currentPageSurvey < 9) {\n                currentQntTxt.text = \"0$currentPageSurvey\"\n                questionCount.text = \"/\" + \"0\" + surveyQuestionArrayList.size.toString()\n            } else {\n                currentQntTxt.setText(currentPageSurvey)\n                questionCount.text = \"/\" + \"0\" + surveyQuestionArrayList.size.toString()\n            }\n        }\n    }\n    previousBtn.setOnClickListener {\n        if (currentPageSurvey == 1) {\n            previousBtn.visibility = View.INVISIBLE\n            nxtQnt.visibility = View.INVISIBLE\n            if (currentPageSurvey == surveyQuestionArrayList.size) {\n                nxtQnt.visibility = View.VISIBLE\n            } else {\n                nxtQnt.visibility = View.INVISIBLE\n            }\n        } else {\n            currentPageSurvey--\n            progressBar.progress = currentPageSurvey\n            surveyPager.currentItem = currentPageSurvey - 1\n            if (currentPageSurvey == surveyQuestionArrayList.size) {\n                nextQuestionBtn.visibility = View.INVISIBLE\n                previousBtn.visibility = View.VISIBLE\n                nxtQnt.visibility = View.VISIBLE\n            } else {\n                if (currentPageSurvey == 1) {\n                    previousBtn.visibility = View.INVISIBLE\n                    nextQuestionBtn.visibility = View.VISIBLE\n                    nxtQnt.visibility = View.INVISIBLE\n                } else {\n                    nextQuestionBtn.visibility = View.VISIBLE\n                    previousBtn.visibility = View.VISIBLE\n                    nxtQnt.visibility = View.INVISIBLE\n                }\n            }\n        }\n        if (surveyQuestionArrayList.size > 9) {\n            if (currentPageSurvey < 9) {\n                currentQntTxt.text = \"0$currentPageSurvey\"\n                questionCount.text = \"/\" + surveyQuestionArrayList.size.toString()\n            } else {\n                currentQntTxt.setText(currentPageSurvey)\n                questionCount.text = \"/\" + surveyQuestionArrayList.size.toString()\n            }\n        } else {\n            if (currentPageSurvey < 9) {\n                currentQntTxt.text = \"0$currentPageSurvey\"\n                questionCount.text = \"/\" + \"0\" + surveyQuestionArrayList.size.toString()\n            } else {\n                currentQntTxt.setText(currentPageSurvey)\n                questionCount.text = \"/\" + \"0\" + surveyQuestionArrayList.size.toString()\n            }\n        }\n    }\n    nxtQnt.setOnClickListener {\n        var isFound = false\n        var pos = -1\n        var emptyvalue = 0\n        for (i in surveyQuestionArrayList.indices) {\n            if (surveyQuestionArrayList[i].answer.equals(\"\")) {\n                emptyvalue = emptyvalue + 1\n                if (!isFound) {\n                    isFound = true\n                    pos = i\n                }\n            }\n        }\n        if (isFound) {\n            mAnswerList = ArrayList()\n            for (k in surveyQuestionArrayList.indices) {\n                val model = SurveySubmitDataModel()\n                model.question_id=(surveyQuestionArrayList[k].id.toString())\n                model.answer_id=(surveyQuestionArrayList[k].answer)\n                mAnswerList.add(model)\n            }\n            val gson = Gson()\n            val PassportArray = ArrayList<String>()\n            for (i in mAnswerList.indices) {\n                val nmodel = SurveySubmitDataModel()\n                nmodel.answer_id=(mAnswerList.get(i).answer_id)\n                nmodel.question_id=(mAnswerList.get(i).question_id)\n                val json = gson.toJson(nmodel)\n                PassportArray.add(i, json)\n            }\n            val JSON_STRING = \"\" + PassportArray + \"\"\n            Log.e(\"JSON\", JSON_STRING)\n            if (emptyvalue == surveyQuestionArrayList.size) {\n                val isEmpty = true\n                showSurveyContinueDialog(\n                    activity,\n                    surveyID!!,\n                    JSON_STRING,\n                    surveyArrayList,\n                    progressBar,\n                    surveyPager,\n                    surveyQuestionArrayList,\n                    previousBtn,\n                    nextQuestionBtn,\n                    nxtQnt,\n                    currentQntTxt,\n                    questionCount,\n                    pos,\n                    dialog,\n                    isEmpty\n                )\n            } else {\n                val isEmpty = false\n                showSurveyContinueDialog(\n                    activity,\n                    surveyID!!,\n                    JSON_STRING,\n                    surveyArrayList,\n                    progressBar,\n                    surveyPager,\n                    surveyQuestionArrayList,\n                    previousBtn,\n                    nextQuestionBtn,\n                    nxtQnt,\n                    currentQntTxt,\n                    questionCount,\n                    pos,\n                    dialog,\n                    isEmpty\n                )\n            }\n        } else {\n            surveySize = surveySize - 1\n            if (surveySize <= 0) {\n                mAnswerList = ArrayList()\n                for (k in surveyQuestionArrayList.indices) {\n                    val model =SurveySubmitDataModel()\n                    model.question_id=(surveyQuestionArrayList[k].id.toString())\n                    model.answer_id=(surveyQuestionArrayList[k].answer)\n                    mAnswerList.add(model)\n                }\n                val gson = Gson()\n                val PassportArray = ArrayList<String>()\n                for (i in mAnswerList.indices) {\n                    val nmodel = SurveySubmitDataModel()\n                    nmodel.answer_id=(mAnswerList.get(i).answer_id)\n                    nmodel.question_id=(mAnswerList.get(i).question_id)\n                    val json = gson.toJson(nmodel)\n                    PassportArray.add(i, json)\n                }\n                val JSON_STRING = \"\" + PassportArray + \"\"\n                Log.e(\"JSON\", JSON_STRING)\n                dialog.dismiss()\n                callSurveySubmitApi(\n                    surveyID!!,\n                    JSON_STRING,\n                    false,\n                    1,mAnswerList,surveyArrayList)\n            } else {\n                mAnswerList = ArrayList()\n                for (k in surveyQuestionArrayList.indices) {\n                    val model = SurveySubmitDataModel()\n                    model.question_id=(surveyQuestionArrayList[k].id.toString())\n                    model.answer_id=(surveyQuestionArrayList[k].answer)\n                    mAnswerList.add(model)\n                }\n                val gson = Gson()\n                val PassportArray = ArrayList<String>()\n                for (i in mAnswerList.indices) {\n                    val nmodel =SurveySubmitDataModel()\n                    nmodel.answer_id=(mAnswerList.get(i).answer_id)\n                    nmodel.question_id=(mAnswerList.get(i).question_id)\n                    val json = gson.toJson(nmodel)\n                    PassportArray.add(i, json)\n                }\n                val JSON_STRING = \"\" + PassportArray + \"\"\n                Log.e(\"JSON\", JSON_STRING)\n                dialog.dismiss()\n                callSurveySubmitApi(\n                    surveyID!!,\n                    JSON_STRING,\n                    true,\n                    1, mAnswerList, surveyArrayList\n                )\n            }\n        }\n        Log.e(\"POS\", pos.toString())\n    }\n    dialog.show()\n}\n\nfun callSurveySubmitApi(\n    survey_ID: String,\n    JSON_STRING: String,\n    isThankyou: Boolean,\n    status: Int,\n    mAnswerList: ArrayList<SurveySubmitDataModel>,\n    surveyArrayList: ArrayList<SurveyDetailDataModel>\n)\n{\n    //surveyDetailQuestionsArrayList= ArrayList()\n    currentPageSurvey=0\n\n    val paramObject = JsonObject().apply {\n        addProperty(\"data\", JSON_STRING)\n        addProperty(\"survey_id\",survey_ID)\n        addProperty(\"survey_satisfaction_status\",status)\n\n    }\n\n    Log.e(\"paramobject\", paramObject.toString())\n    var model=SurveySubmitApiModel(survey_ID.toString(), status.toString(),mAnswerList)\n    Log.e(\"model\", model.toString())\n    Log.e(\"model\", model.id .toString())\n    Log.e(\"model\", model.survey_satisfaction_status.toString())\n    Log.e(\"model\", model.questions.toString())\n\n    val call: Call<SurveySubmitResponseModel> = ApiClient.getClient.surveysubmit(model,\"Bearer \"+ PreferenceManager.getaccesstoken(mContext))\n    call.enqueue(object : Callback<SurveySubmitResponseModel> {\n        override fun onFailure(call: Call<SurveySubmitResponseModel>, t: Throwable) {\n            Log.e(\"Failed\", t.localizedMessage)\n           // progressDialogAdd.visibility= View.GONE\n        }\n        override fun onResponse(call: Call<SurveySubmitResponseModel>, response: Response<SurveySubmitResponseModel>) {\n            val responsedata = response.body()\n           // progressDialogAdd.visibility= View.GONE\n            if (responsedata != null) {\n                try {\n\n                    if (response.body()!!.status==100)\n                    {\n\n                        showSurveyThankYouDialog(mContext as Activity, isThankyou,surveyArrayList)\n                    }\n                    else\n                    {\n\n                        DialogFunctions.commonErrorAlertDialog(mContext.resources.getString(R.string.alert), ConstantFunctions.commonErrorString(response.body()!!.status), mContext)\n                    }\n\n\n                } catch (e: Exception) {\n                    e.printStackTrace()\n                }\n            }\n        }\n\n    })\n}\n\nfun showSurveyThankYouDialog(\n    activity: Activity?,\n    //  surveyArrayList: ArrayList<SurveyModel?>?,\n    isThankyou: Boolean,\n    surveyArrayList: ArrayList<SurveyDetailDataModel>\n) {\n    val dialog = Dialog(activity!!)\n    dialog.requestWindowFeature(Window.FEATURE_NO_TITLE)\n    dialog.window!!.setBackgroundDrawable(ColorDrawable(Color.TRANSPARENT))\n    dialog.setCancelable(false)\n    dialog.setContentView(R.layout.dialog_survey_thank_you)\n    survey_satisfation_status = 0\n    //callSurveySubmitApi(URL_SURVEY_SUBMIT,surveyId,jsonData,getActivity(),surveyArrayList,isThankyou,survey_satisfation_status,dialog);\n    val btn_Ok = dialog.findViewById<View>(R.id.btn_Ok) as Button\n    btn_Ok.setOnClickListener {\n        if (isThankyou) {\n            showSurveyWelcomeDialogue(mContext, surveyArrayList, false)\n        } else {\n        }\n        dialog.dismiss()\n    }\n    val emailImg = dialog.findViewById<View>(R.id.emailImg) as ImageView\n    if (surveyEmail.equals(\"\", ignoreCase = true)) {\n        emailImg.visibility = View.GONE\n    } else {\n        emailImg.visibility = View.VISIBLE\n    }\n    emailImg.setOnClickListener {\n        showSendEmailDialog()\n    }\n    dialog.show()\n}\nprivate fun showSendEmailDialog()\n{\n    val dialog = Dialog(mContext)\n    dialog.requestWindowFeature(Window.FEATURE_NO_TITLE)\n    dialog.setCancelable(true)\n    dialog.setContentView(R.layout.dialog_send_email)\n    dialog.window!!.setBackgroundDrawableResource(android.R.color.transparent)\n    val btn_submit = dialog.findViewById<Button>(R.id.submitButton)\n    val btn_cancel = dialog.findViewById<Button>(R.id.cancelButton)\n    val text_dialog = dialog.findViewById<EditText?>(R.id.text_dialog)\n    val text_content = dialog.findViewById<EditText>(R.id.text_content)\n\n    btn_cancel.setOnClickListener(View.OnClickListener {\n        dialog.dismiss()\n    })\n\n    btn_submit.setOnClickListener {\n        if (text_dialog.text.toString().trim().equals(\"\")) {\n            DialogFunctions.commonErrorAlertDialog(mContext.resources.getString(R.string.alert), mContext.resources.getString(R.string.enter_subject), mContext)\n\n\n        } else {\n            if (text_content.text.toString().trim().equals(\"\")) {\n                DialogFunctions.commonErrorAlertDialog(mContext.resources.getString(R.string.alert), mContext.resources.getString(R.string.enter_content), mContext)\n\n            } else {\n                // progressDialog.visibility = View.VISIBLE\n\n                sendEmail(text_dialog.text.toString().trim(), text_content.text.toString().trim(), surveyEmail, dialog)\n            }\n        }\n    }\n    dialog.show()\n}\n\nfun sendEmail(title: String, message: String,  staffEmail: String, dialog: Dialog)\n{\n   // progressDialog.visibility = View.VISIBLE\n    val sendMailBody = SendEmailApiModel( staffEmail, title, message)\n    val call: Call<SignUpResponseModel> = ApiClient.getClient.sendEmailStaff(sendMailBody, \"Bearer \" + PreferenceManager.getaccesstoken(mContext))\n    call.enqueue(object : Callback<SignUpResponseModel> {\n        override fun onFailure(call: Call<SignUpResponseModel>, t: Throwable) {\n            Log.e(\"Failed\", t.localizedMessage)\n         //   progressDialog.visibility = View.GONE\n        }\n\n        override fun onResponse(call: Call<SignUpResponseModel>, response: Response<SignUpResponseModel>) {\n            val responsedata = response.body()\n         //   progressDialog.visibility = View.GONE\n            Log.e(\"Response Signup\", responsedata.toString())\n            if (responsedata != null) {\n                try {\n\n\n                    if (response.body()!!.status==100) {\n                        dialog.dismiss()\n                        showSuccessAlert(\n                            mContext,\n                            \"Email sent Successfully \",\n                            \"Success\",\n                            dialog\n                        )\n                    }else {\n                        DialogFunctions.commonErrorAlertDialog(\n                            mContext.resources.getString(R.string.alert),\n                            ConstantFunctions.commonErrorString(response.body()!!.status),\n                            mContext\n                        )\n\n                    }\n                } catch (e: Exception) {\n                    e.printStackTrace()\n                }\n            }\n        }\n\n    })\n}\nfun showCloseSurveyDialog(dialogW: Dialog)\n{\n    val dialog = Dialog(mContext)\n    dialog.requestWindowFeature(Window.FEATURE_NO_TITLE)\n    dialog.window!!.setBackgroundDrawable(ColorDrawable(Color.TRANSPARENT))\n    dialog.setCancelable(false)\n    dialog.setContentView(R.layout.dialog_survey_close)\n    var text_dialog = dialog.findViewById(R.id.text_dialog) as TextView\n    var btn_Ok = dialog.findViewById(R.id.btn_Ok) as Button\n    var btn_Cancel = dialog.findViewById(R.id.btn_Cancel) as Button\n    text_dialog.text=\"Are you sure you want to close this survey.\"\n\n    btn_Ok.setOnClickListener()\n    {\n        dialogW.dismiss()\n        dialog.dismiss()\n    }\n\n\n    btn_Cancel.setOnClickListener()\n    {\n        dialog.dismiss()\n    }\n    dialog.show()\n}\nfun showSurveyContinueDialog(\n    activity: Context,\n    surveyID: String,\n    JSON_STRING: String?,\n    surveyArrayList: ArrayList<SurveyDetailDataModel>,\n    progressBar: ProgressBar,\n    surveyPager: ViewPager,\n    surveyQuestionArrayList: ArrayList<SurveyQuestionsModel>,\n    previousBtn: ImageView,\n    nextQuestionBtn: ImageView,\n    nxtQnt: TextView,\n    currentQntTxt: TextView,\n    questionCount: TextView,\n    pos: Int,\n    nDialog: Dialog,\n    isEmpty: Boolean\n) {\n    val dialog = Dialog(activity!!)\n    dialog.requestWindowFeature(Window.FEATURE_NO_TITLE)\n    dialog.window!!.setBackgroundDrawable(ColorDrawable(Color.TRANSPARENT))\n    dialog.setCancelable(false)\n    dialog.setContentView(R.layout.dialog_continue_layout)\n    survey_satisfation_status = 0\n    //callSurveySubmitApi(URL_SURVEY_SUBMIT,surveyId,jsonData,getActivity(),surveyArrayList,isThankyou,survey_satisfation_status,dialog);\n    val btn_Ok = dialog.findViewById<View>(R.id.btn_Ok) as Button\n    val submit = dialog.findViewById<View>(R.id.submit) as Button\n    val thoughtsTxt = dialog.findViewById<View>(R.id.thoughtsTxt) as TextView\n    if (isEmpty) {\n        submit.isClickable = false\n        submit.alpha = 0.5f\n        thoughtsTxt.text = \"Appreciate atleast one feedback from you.\"\n    } else {\n        submit.isClickable = true\n        submit.alpha = 1.0f\n        thoughtsTxt.text =\n            \"There is an unanswered question on this survey. Would you like to continue?\"\n    }\n    submit.setOnClickListener {\n        if (!isEmpty) {\n            nDialog.dismiss()\n            Log.e(\"SURVEY SIZE\", surveySize.toString())\n            surveySize = surveySize - 1\n            if (surveySize <= 0) {\n                Log.e(\"SURVEY SIZE \", surveySize.toString())\n                callSurveySubmitApi(\n                    surveyID!!,\n                    JSON_STRING!!,\n                    false,\n                    1,\n                    mAnswerList,\n                    surveyArrayList\n                )\n            } else {\n                callSurveySubmitApi(\n                    surveyID!!,\n                    JSON_STRING!!,\n\n\n                    true,\n                    1,\n                    mAnswerList,\n                    surveyArrayList\n                )\n            }\n            dialog.dismiss()\n        }\n    }\n    btn_Ok.setOnClickListener {\n        currentPageSurvey = pos + 1\n        progressBar.progress = currentPageSurvey\n        surveyPager.currentItem = currentPageSurvey - 1\n        Log.e(\"WORKING\", \"SURVEY COUNT$currentPageSurvey\")\n        if (surveyQuestionArrayList.size > 1) {\n            if (currentPageSurvey != surveyQuestionArrayList.size) {\n                if (currentPageSurvey == 1) {\n                    previousBtn.visibility = View.INVISIBLE\n                    nextQuestionBtn.visibility = View.VISIBLE\n                    nxtQnt.visibility = View.INVISIBLE\n                } else {\n                    if (currentPageSurvey == 1) {\n                        previousBtn.visibility = View.INVISIBLE\n                        nextQuestionBtn.visibility = View.VISIBLE\n                        nxtQnt.visibility = View.INVISIBLE\n                    } else {\n                        previousBtn.visibility = View.VISIBLE\n                        nextQuestionBtn.visibility = View.VISIBLE\n                        nxtQnt.visibility = View.INVISIBLE\n                    }\n                }\n            } else {\n                previousBtn.visibility = View.VISIBLE\n                nextQuestionBtn.visibility = View.INVISIBLE\n                nxtQnt.visibility = View.VISIBLE\n            }\n        } else {\n            if (currentPageSurvey == 1) {\n                previousBtn.visibility = View.INVISIBLE\n                nextQuestionBtn.visibility = View.INVISIBLE\n                nxtQnt.visibility = View.VISIBLE\n            }\n        }\n        if (surveyQuestionArrayList.size > 9) {\n            if (currentPageSurvey < 9) {\n                currentQntTxt.text = \"0$currentPageSurvey\"\n                questionCount.text = \"/\" + surveyQuestionArrayList.size.toString()\n            } else {\n                currentQntTxt.setText(currentPageSurvey)\n                questionCount.text = \"/\" + surveyQuestionArrayList.size.toString()\n            }\n        } else {\n            if (currentPageSurvey < 9) {\n                currentQntTxt.text = \"0$currentPageSurvey\"\n                questionCount.text = \"/\" + \"0\" + surveyQuestionArrayList.size.toString()\n            } else {\n                currentQntTxt.setText(currentPageSurvey)\n                questionCount.text = \"/\" + \"0\" + surveyQuestionArrayList.size.toString()\n            }\n        }\n        dialog.dismiss()\n    }\n    dialog.show()\n}\nfun showSuccessAlert(context: Context, message: String, msgHead: String, mdialog: Dialog) {\n    val dialog = Dialog(context)\n    dialog.requestWindowFeature(Window.FEATURE_NO_TITLE)\n    dialog.window!!.setBackgroundDrawable(ColorDrawable(Color.TRANSPARENT))\n    dialog.setCancelable(false)\n    dialog.setContentView(R.layout.dialog_common_error_alert)\n    var iconImageView = dialog.findViewById(R.id.iconImageView) as ImageView\n    var alertHead = dialog.findViewById(R.id.alertHead) as TextView\n    var text_dialog = dialog.findViewById(R.id.messageTxt) as TextView\n    var btn_Ok = dialog.findViewById(R.id.btn_Ok) as Button\n    text_dialog.text = message\n    alertHead.text = msgHead\n    iconImageView.setImageResource(R.drawable.tick)\n    btn_Ok.setOnClickListener()\n    {\n        dialog.dismiss()\n        mdialog.dismiss()\n    }\n    dialog.show()\n}\nfun fragmentIntent(mFragment: Fragment?) {\n    if (mFragment != null) {\n\n        val fragmentManager = homeActivity.supportFragmentManager\n        fragmentManager.beginTransaction()\n            .add(R.id.fragment_holder, mFragment, \"\")\n            .addToBackStack(\"\").commitAllowingStateLoss() //commit\n        //.commit()\n    }\n}\n\n\nprivate fun checkpermission() {\n    if (ContextCompat.checkSelfPermission(\n            mContext,\n            Manifest.permission.ACCESS_FINE_LOCATION\n        ) != PackageManager.PERMISSION_GRANTED || ContextCompat.checkSelfPermission(\n            mContext,\n            Manifest.permission.ACCESS_COARSE_LOCATION\n        ) != PackageManager.PERMISSION_GRANTED || ContextCompat.checkSelfPermission(\n            mContext,\n            Manifest.permission.CALL_PHONE\n        ) != PackageManager.PERMISSION_GRANTED\n    ) {\n        ActivityCompat.requestPermissions(\n            homeActivity,\n            arrayOf(\n                Manifest.permission.ACCESS_FINE_LOCATION,\n                Manifest.permission.ACCESS_COARSE_LOCATION,\n                Manifest.permission.CALL_PHONE\n            ),\n            123\n        )\n    }\n}\n\nfun showforceupdate(mContext: Context) {\n    val dialog = Dialog(mContext)\n    dialog.requestWindowFeature(Window.FEATURE_NO_TITLE)\n    dialog.window!!.setBackgroundDrawable(ColorDrawable(Color.TRANSPARENT))\n    dialog.setCancelable(false)\n    dialog.setContentView(R.layout.dialog_updateversion)\n    val btnUpdate =\n        dialog.findViewById<View>(R.id.btnUpdate) as Button\n\n    btnUpdate.setOnClickListener {\n        dialog.dismiss()\n        val appPackageName =\n            mContext.packageName\n        try {\n            mContext.startActivity(\n                Intent(\n                    Intent.ACTION_VIEW,\n                    Uri.parse(\"market://details?id=$appPackageName\")\n                )\n            )\n\n        } catch (e: android.content.ActivityNotFoundException) {\n            mContext.startActivity(\n                Intent(\n                    Intent.ACTION_VIEW,\n                    Uri.parse(\"https://play.google.com/store/apps/details?id=$appPackageName\")\n                )\n            )\n        }\n\n    }\n    dialog.show()\n}\n\nprivate fun checkpermissionCal() {\n    if (ContextCompat.checkSelfPermission(\n            mContext,\n            Manifest.permission.READ_CALENDAR) != PackageManager.PERMISSION_GRANTED || ContextCompat.checkSelfPermission(\n            mContext,\n            Manifest.permission.WRITE_CALENDAR\n        ) != PackageManager.PERMISSION_GRANTED || ContextCompat.checkSelfPermission(\n            mContext,\n            Manifest.permission.READ_EXTERNAL_STORAGE\n        ) != PackageManager.PERMISSION_GRANTED || ContextCompat.checkSelfPermission(\n            mContext,\n            Manifest.permission.WRITE_EXTERNAL_STORAGE\n        ) != PackageManager.PERMISSION_GRANTED\n    )\n    {\n        ActivityCompat.requestPermissions(\n            homeActivity,\n            arrayOf(\n                Manifest.permission.READ_CALENDAR,\n                Manifest.permission.WRITE_CALENDAR,\n                Manifest.permission.READ_EXTERNAL_STORAGE,\n                Manifest.permission.WRITE_EXTERNAL_STORAGE\n            ),\n            123\n        )\n    }\n\n\n\n\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/nas/alreem/fragment/home/HomeFragment.kt b/app/src/main/java/com/nas/alreem/fragment/home/HomeFragment.kt
--- a/app/src/main/java/com/nas/alreem/fragment/home/HomeFragment.kt	(revision b2ad66f8612edd03349ffa4aaee582fd0005cdb4)
+++ b/app/src/main/java/com/nas/alreem/fragment/home/HomeFragment.kt	(date 1689328583402)
@@ -35,6 +35,7 @@
 import com.nas.alreem.constants.DialogFunctions
 import com.nas.alreem.constants.PreferenceManager
 import com.nas.alreem.fragment.about_us.AboutUsFragment
+import com.nas.alreem.fragment.absence.AbsenceFragment
 import com.nas.alreem.fragment.calendar.CalendarFragment
 import com.nas.alreem.fragment.canteen.CanteenFragment
 import com.nas.alreem.fragment.contact_us.ContactUsFragment
@@ -42,6 +43,7 @@
 import com.nas.alreem.fragment.gallery.GalleryFragment
 import com.nas.alreem.fragment.home.model.BannerResponseModel
 import com.nas.alreem.fragment.notifications.NotificationFragment
+import com.nas.alreem.fragment.parent_meetings.ParentMeetingsFragment
 import com.nas.alreem.fragment.parents_essentials.ParentsEssentialFragment
 import com.nas.alreem.fragment.payments.PaymentFragment
 import com.nas.alreem.fragment.payments.model.SendEmailApiModel
@@ -779,6 +781,18 @@
                     TAB_ID = ConstantWords.TAB_PARENT_ESSENTIAL
 
                 }
+                textdata.equals(ConstantWords.absence_earlypickup, ignoreCase = true) -> {
+                    TAB_ID = ConstantWords.TAB_ABSENCE
+                }
+                textdata.equals(ConstantWords.enrichment, ignoreCase = true) -> {
+                TAB_ID = ConstantWords.TAB_ENRICHMENT
+            }
+                textdata.equals(ConstantWords.parentmeetings, ignoreCase = true) -> {
+                    TAB_ID = ConstantWords.TAB_PARENT_MEETINGS
+                }
+                textdata.equals(ConstantWords.permission_forms, ignoreCase = true) -> {
+                    TAB_ID = ConstantWords.TAB_PERMISSION_FORMS
+                }
 
             }
 
@@ -973,6 +987,22 @@
 
                 ConstantWords.TAB_PAYMENTS -> {
                     DialogFunctions.commonErrorAlertDialog(mContext.resources.getString(R.string.alert),mContext.resources.getString(R.string.feature_only_for_registered_user),mContext)
+
+                }
+                ConstantWords.TAB_ABSENCE -> {
+                    DialogFunctions.commonErrorAlertDialog(mContext.resources.getString(R.string.alert),mContext.resources.getString(R.string.feature_only_for_registered_user),mContext)
+
+                }
+                ConstantWords.TAB_ENRICHMENT -> {
+                    DialogFunctions.commonErrorAlertDialog(mContext.resources.getString(R.string.alert),mContext.resources.getString(R.string.feature_only_for_registered_user),mContext)
+
+                }
+                ConstantWords.TAB_PARENT_MEETINGS -> {
+                    DialogFunctions.commonErrorAlertDialog(mContext.resources.getString(R.string.alert),mContext.resources.getString(R.string.feature_only_for_registered_user),mContext)
+
+                }
+                ConstantWords.TAB_PERMISSION_FORMS -> {
+                    DialogFunctions.commonErrorAlertDialog(mContext.resources.getString(R.string.alert),mContext.resources.getString(R.string.feature_only_for_registered_user),mContext)
 
                 }
                 ConstantWords.TAB_EARLY_YEARS -> {
@@ -1095,6 +1125,22 @@
                     mFragment = AboutUsFragment()
                     fragmentIntent(mFragment)
                 }
+                ConstantWords.TAB_ABSENCE -> {
+                    mFragment = AbsenceFragment()
+                    fragmentIntent(mFragment)
+                }
+                ConstantWords.TAB_ENRICHMENT -> {
+                   /* mFragment = AboutUsFragment()
+                    fragmentIntent(mFragment)*/
+                }
+                ConstantWords.TAB_PARENT_MEETINGS -> {
+                    mFragment = ParentMeetingsFragment()
+                    fragmentIntent(mFragment)
+                }
+                ConstantWords.TAB_PERMISSION_FORMS -> {
+                   /* mFragment = AboutUsFragment()
+                    fragmentIntent(mFragment)*/
+                }
                 ConstantWords.TAB_LUNCH_BOX -> {
 
                     mFragment = CanteenFragment()
Index: app/src/main/res/drawable-xxhdpi/slotcancelbyuser_curved_rel_layout.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/drawable-xxhdpi/slotcancelbyuser_curved_rel_layout.xml b/app/src/main/res/drawable-xxhdpi/slotcancelbyuser_curved_rel_layout.xml
new file mode 100644
--- /dev/null	(date 1686893738000)
+++ b/app/src/main/res/drawable-xxhdpi/slotcancelbyuser_curved_rel_layout.xml	(date 1686893738000)
@@ -0,0 +1,18 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<shape xmlns:android="http://schemas.android.com/apk/res/android" >
+
+    <solid android:color="@color/parents_association_titleclr" />
+
+    <stroke
+        android:width="1dp"
+        android:color="@color/parents_association_titleclr" />
+
+    <corners android:radius="5dp" />
+
+    <padding
+        android:bottom="0dp"
+        android:left="0dp"
+        android:right="0dp"
+        android:top="0dp" />
+
+</shape>
\ No newline at end of file
Index: app/src/main/res/drawable/border_grey.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/drawable/border_grey.xml b/app/src/main/res/drawable/border_grey.xml
new file mode 100644
--- /dev/null	(date 1686893732000)
+++ b/app/src/main/res/drawable/border_grey.xml	(date 1686893732000)
@@ -0,0 +1,18 @@
+<?xml version="1.0" encoding="utf-8"?>
+<shape xmlns:android="http://schemas.android.com/apk/res/android" >
+
+    <solid android:color="@color/white" />
+
+    <stroke
+        android:width="1dp"
+        android:color="@color/dark_grey1" />
+
+    <corners android:radius="5dp" />
+
+    <padding
+        android:bottom="0dp"
+        android:left="0dp"
+        android:right="0dp"
+        android:top="0dp" />
+
+</shape>
\ No newline at end of file
Index: app/src/main/res/layout/fragment_about_us.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><RelativeLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    xmlns:tools=\"http://schemas.android.com/tools\"\n    android:id=\"@+id/relMain\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    android:background=\"@color/white\">\n\n\n    <include\n        android:id=\"@+id/includeRel\"\n        layout=\"@layout/header_bar_fragment\" />\n    <LinearLayout\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"match_parent\"\n        android:layout_below=\"@+id/includeRel\"\n        android:orientation=\"vertical\"\n        android:weightSum=\"100\">\n        <ImageView\n            android:id=\"@+id/bannerImagePager\"\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"0dp\"\n            android:layout_weight=\"30\"\n            android:background=\"@drawable/default_banner\"/>\n\n        <androidx.recyclerview.widget.RecyclerView\n            android:id=\"@+id/aboutUsRecycler\"\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"0dp\"\n            android:layout_margin=\"10dp\"\n            android:layout_weight=\"70\"\n            android:background=\"@color/white\"\n            android:overScrollMode=\"never\"\n            android:scrollbars=\"vertical\"\n            android:visibility=\"visible\" />\n    </LinearLayout>\n\n    <ProgressBar\n        android:id=\"@+id/progressDialogAdd\"\n        android:layout_width=\"40dp\"\n        android:layout_height=\"40dp\"\n        android:layout_centerInParent=\"true\"\n        android:indeterminateDrawable=\"@anim/customspinner\"\n        android:visibility=\"gone\"\n\n        />\n</RelativeLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/fragment_about_us.xml b/app/src/main/res/layout/fragment_about_us.xml
--- a/app/src/main/res/layout/fragment_about_us.xml	(revision b2ad66f8612edd03349ffa4aaee582fd0005cdb4)
+++ b/app/src/main/res/layout/fragment_about_us.xml	(date 1688971116000)
@@ -21,12 +21,60 @@
             android:layout_height="0dp"
             android:layout_weight="30"
             android:background="@drawable/default_banner"/>
+        <RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:layout_marginTop="10dp"
+            android:layout_marginLeft="10dp"
+            android:layout_marginRight="10dp"
+            android:background="@color/term_button_bg">
+            <RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
+                android:layout_width="match_parent"
+                android:layout_height="wrap_content"
+                android:layout_marginLeft="7dp"
+                android:background="@color/list_bg">
+
+                <RelativeLayout
+                    android:id="@+id/relSub"
+                    android:visibility="gone"
+                    android:layout_width="match_parent"
+                    android:layout_height="wrap_content"
+                    android:paddingBottom="10dp">
+
+                    <com.nas.alreem.commonviews.CustomTextViewRegular
+                        android:id="@+id/listTxtTitle"
+                        android:layout_width="match_parent"
+                        android:layout_height="wrap_content"
+                        android:layout_alignParentLeft="true"
+                        android:layout_centerVertical="true"
+                        android:layout_marginLeft="5dp"
+                        android:layout_marginRight="5dp"
+                        android:text="Staff Directory"
+                        android:layout_toLeftOf="@+id/arrowImg"
+                        android:paddingTop="10dp"
+                        android:paddingBottom="10dp"
+                        android:singleLine="true"
+                        android:textColor="@color/white" />
+                    <ImageView
+                        android:id="@+id/arrowImg"
+                        android:layout_width="20dp"
+                        android:layout_height="25dp"
+                        android:layout_alignParentRight="true"
+                        android:layout_centerVertical="true"
+                        android:layout_marginRight="5dp"
+                        android:background="@drawable/arrow" />
+                </RelativeLayout>
+            </RelativeLayout>
+        </RelativeLayout>
+
 
         <androidx.recyclerview.widget.RecyclerView
             android:id="@+id/aboutUsRecycler"
             android:layout_width="match_parent"
             android:layout_height="0dp"
-            android:layout_margin="10dp"
+            android:layout_marginBottom="10dp"
+            android:layout_marginRight="10dp"
+            android:layout_marginLeft="10dp"
             android:layout_weight="70"
             android:background="@color/white"
             android:overScrollMode="never"
Index: app/src/main/java/com/nas/alreem/activity/absence/RequestabsenceActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/nas/alreem/activity/absence/RequestabsenceActivity.kt b/app/src/main/java/com/nas/alreem/activity/absence/RequestabsenceActivity.kt
new file mode 100644
--- /dev/null	(date 1689157473465)
+++ b/app/src/main/java/com/nas/alreem/activity/absence/RequestabsenceActivity.kt	(date 1689157473465)
@@ -0,0 +1,477 @@
+package com.nas.alreem.activity.absence
+
+import android.app.DatePickerDialog
+import android.app.Dialog
+import android.content.Context
+import android.content.Intent
+import android.graphics.Color
+import android.graphics.drawable.ColorDrawable
+import android.os.Build
+import android.os.Bundle
+import android.util.Log
+import android.view.View
+import android.view.Window
+import android.view.animation.Animation
+import android.view.animation.AnimationUtils
+import android.widget.Button
+import android.widget.DatePicker
+import android.widget.EditText
+import android.widget.ImageView
+import android.widget.LinearLayout
+import android.widget.ProgressBar
+import android.widget.RelativeLayout
+import android.widget.TextView
+import androidx.annotation.RequiresApi
+import androidx.appcompat.app.AppCompatActivity
+import androidx.recyclerview.widget.LinearLayoutManager
+import androidx.recyclerview.widget.RecyclerView
+import com.bumptech.glide.Glide
+import com.bumptech.glide.load.engine.DiskCacheStrategy
+import com.bumptech.glide.load.resource.bitmap.CircleCrop
+import com.nas.alreem.R
+import com.nas.alreem.activity.absence.model.AbsenceListModel
+import com.nas.alreem.activity.absence.model.EarlyPickupModel
+import com.nas.alreem.activity.absence.model.ListAbsenceApiModel
+import com.nas.alreem.activity.absence.model.RequestLeaveApiModel
+import com.nas.alreem.activity.absence.model.RequestLeaveModel
+import com.nas.alreem.activity.absence.model.RequestPickupApiModel
+import com.nas.alreem.activity.home.HomeActivity
+import com.nas.alreem.activity.payments.adapter.StudentListAdapter
+import com.nas.alreem.activity.payments.model.StudentList
+import com.nas.alreem.activity.payments.model.StudentListModel
+import com.nas.alreem.constants.ConstantFunctions
+import com.nas.alreem.constants.ConstantWords
+import com.nas.alreem.constants.DialogFunctions
+import com.nas.alreem.constants.OnItemClickListener
+import com.nas.alreem.constants.PreferenceManager
+import com.nas.alreem.constants.addOnItemClickListener
+import com.nas.alreem.rest.ApiClient
+import retrofit2.Call
+import retrofit2.Callback
+import retrofit2.Response
+import java.text.DateFormat
+import java.text.SimpleDateFormat
+import java.util.Calendar
+import java.util.Date
+
+class RequestabsenceActivity: AppCompatActivity() {
+    lateinit var mContext: Context
+    lateinit var backRelative: RelativeLayout
+    lateinit var heading: TextView
+    lateinit var logoClickImgView: ImageView
+    lateinit var progressDialogAdd: ProgressBar
+    var studentListArrayList = ArrayList<StudentList>()
+    lateinit var studentSpinner: LinearLayout
+    lateinit var studImg: ImageView
+    lateinit var studentName: String
+    lateinit var studentId: String
+    lateinit var studentImg: String
+    lateinit var studentClass: String
+    lateinit var studentNameTxt: TextView
+    lateinit var enterStratDate: TextView
+    lateinit var enterEndDate: TextView
+    lateinit var submitBtn: Button
+    lateinit var enterMessage: EditText
+    var fromDate: String=""
+    var toDate: String =""
+    lateinit var reasonAPI:String
+    lateinit var submitLayout: LinearLayout
+    lateinit var myCalendar : Calendar
+    lateinit var currentDate: Date
+    lateinit var sdate: Date
+    lateinit var edate: Date
+    var elapsedDays:Long = 0
+
+    @RequiresApi(Build.VERSION_CODES.N)
+    override fun onCreate(savedInstanceState: Bundle?) {
+        super.onCreate(savedInstanceState)
+        setContentView(R.layout.activity_leave_request)
+
+        mContext=this
+        initfn()
+        callStudentListApi()
+
+    }
+    @RequiresApi(Build.VERSION_CODES.N)
+    private fun initfn() {
+        progressDialogAdd=findViewById(R.id.progressDialogAdd)
+        studentSpinner = findViewById(R.id.studentSpinner)
+        heading=findViewById(R.id.heading)
+        heading.text= ConstantWords.absence
+        backRelative=findViewById(R.id.backRelative)
+        logoClickImgView=findViewById(R.id.logoClickImgView)
+        studImg = findViewById<ImageView>(R.id.studImg)
+        studentNameTxt = findViewById<TextView>(R.id.studentName)
+        myCalendar= Calendar.getInstance()
+        currentDate=Calendar.getInstance().time
+        studentNameTxt = findViewById<TextView>(R.id.studentName)
+        enterMessage = findViewById<EditText>(R.id.enterMessage)
+        enterStratDate = findViewById<TextView>(R.id.enterStratDate)
+        enterEndDate = findViewById<TextView>(R.id.enterEndDate)
+        submitLayout = findViewById<LinearLayout>(R.id.submitLayout)
+        submitBtn = findViewById<Button>(R.id.submitBtn)
+
+        studentSpinner.setOnClickListener(){
+            showStudentList(mContext,studentListArrayList)
+        }
+        backRelative.setOnClickListener(View.OnClickListener {
+            finish()
+        })
+        heading.text= ConstantWords.absence
+        logoClickImgView.setOnClickListener(View.OnClickListener {
+            val intent = Intent(mContext, HomeActivity::class.java)
+            intent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP)
+            startActivity(intent)
+        })
+        submitBtn.setOnClickListener(object : View.OnClickListener {
+            override fun onClick(v: View?) {
+
+                if(enterStratDate.text.equals(""))
+                {
+                    DialogFunctions.commonErrorAlertDialog("Alert","Please select First day of absence",mContext)
+
+                }
+                else{
+                    if (enterMessage.text.toString().trim().equals("")){
+                        DialogFunctions.commonErrorAlertDialog("Alert","Please enter reason for your absence",mContext)
+
+
+                    }
+                    else{
+
+                        reasonAPI=enterMessage.text.toString().trim()
+                        Log.e("Pass Value",fromDate+"  "+toDate+"   "+reasonAPI)
+
+                            val inputFormat2: DateFormat = SimpleDateFormat("d-m-yyyy")
+                            val outputFormat2: DateFormat = SimpleDateFormat("d-m-yyyy")
+                            val inputDateStr2 = fromDate
+                            val date2: Date = inputFormat2.parse(inputDateStr2)
+                            val f_date: String = outputFormat2.format(date2)
+                            Log.e("fd",f_date)
+
+                            val inputFormat3: DateFormat = SimpleDateFormat("d-m-yyyy")
+                            val outputFormat3: DateFormat = SimpleDateFormat("d-m-yyyy")
+                            val inputDateStr3 = toDate
+                            val date3: Date = inputFormat3.parse(inputDateStr3)
+                            val t_date: String = outputFormat3.format(date3)
+                            Log.e("fd",t_date)
+
+                            callAbsenceSubmitApi(f_date,t_date,reasonAPI)
+
+                    }
+                }
+            }
+        })
+        enterStratDate.setOnClickListener {
+            cal()
+
+        }
+
+        enterEndDate.setOnClickListener{
+            calToDate()
+
+
+        }
+    }
+    fun callAbsenceSubmitApi(from:String,toDate:String,reason:String)
+    {
+
+        var new_fromdate:String=""
+        val inputFormat: DateFormat = SimpleDateFormat("d-m-yyyy")
+        val outputFormat: DateFormat = SimpleDateFormat("yyyy-mm-dd")
+        val inputDateStr = from
+        val date: Date = inputFormat.parse(inputDateStr)
+        new_fromdate = outputFormat.format(date)
+        var new_todate:String=""
+        val inputFormat2: DateFormat = SimpleDateFormat("d-m-yyyy")
+        val outputFormat2: DateFormat = SimpleDateFormat("yyyy-mm-dd")
+        val inputDateStr2 = toDate
+        val date2: Date = inputFormat2.parse(inputDateStr2)
+        new_todate = outputFormat2.format(date2)
+        val token = PreferenceManager.getaccesstoken(mContext)
+        val absenceSuccessBody = RequestLeaveApiModel(PreferenceManager.getStudentID(mContext).toString(),new_fromdate,new_todate,reason)
+        val call: Call<RequestLeaveModel> =
+            ApiClient.getClient.leaveRequest(absenceSuccessBody, "Bearer " + token)
+        call.enqueue(object : Callback<RequestLeaveModel> {
+            override fun onFailure(call: Call<RequestLeaveModel>, t: Throwable) {
+                Log.e("Failed", t.localizedMessage)
+                //mProgressRelLayout.visibility=View.INVISIBLE
+            }
+
+            override fun onResponse(call: Call<RequestLeaveModel>, response: Response<RequestLeaveModel>) {
+                val responsedata = response.body()
+                //progressDialog.visibility = View.GONE
+                Log.e("Response Signup", responsedata.toString())
+                if (responsedata != null) {
+                    try {
+
+                        if (response.body()!!.status==100) {
+
+                            commonSuccessAlertDialog("Success","Successfully submitted your absence.",mContext)
+                            //Toast.makeText(nContext, "Transaction successfully completed", Toast.LENGTH_SHORT).show()
+
+                        }else if(response.body()!!.status==136){
+                            DialogFunctions.commonErrorAlertDialog("Alert","Date already Registered",mContext)
+                        }
+                        else
+                        {
+
+                            DialogFunctions.commonErrorAlertDialog(mContext.resources.getString(R.string.alert), ConstantFunctions.commonErrorString(response.body()!!.status), mContext)
+                        }
+
+                    } catch (e: Exception) {
+                        e.printStackTrace()
+                    }
+                }
+            }
+
+        })
+    }
+    @RequiresApi(Build.VERSION_CODES.N)
+    private fun cal(){
+        val mcurrentTime = android.icu.util.Calendar.getInstance()
+        val year = mcurrentTime.get(android.icu.util.Calendar.YEAR)
+        val month = mcurrentTime.get(android.icu.util.Calendar.MONTH)
+        val day = mcurrentTime.get(android.icu.util.Calendar.DAY_OF_MONTH)
+        val minDate = android.icu.util.Calendar.getInstance()
+        minDate.set(android.icu.util.Calendar.HOUR_OF_DAY, 0)
+        minDate.set(android.icu.util.Calendar.MINUTE, 0)
+        minDate.set(android.icu.util.Calendar.SECOND, 0)
+        val dpd1 = DatePickerDialog(this, R.style.MyDatePickerStyle,
+            object : DatePickerDialog.OnDateSetListener {
+                @RequiresApi(Build.VERSION_CODES.O)
+                override fun onDateSet(view: DatePicker?, year: Int, month: Int, dayOfMonth: Int) {
+                    var firstday: String? =String.format("%d/%d/%d", month + 1,dayOfMonth , year)
+                    var date_sel: String? = String.format("%d-%d-%d", dayOfMonth, month + 1, year)
+                    var date_temp = date_sel.toString()
+
+                    val inputFormat: DateFormat = SimpleDateFormat("dd-MM-yyyy")
+                    val outputFormat: DateFormat = SimpleDateFormat("dd MMM yyyy")
+                    val inputDateStr = date_temp
+                    val date: Date = inputFormat.parse(inputDateStr)
+                    val outputDateStr: String = outputFormat.format(date)
+                    Log.e("dt", outputDateStr)
+                    fromDate=date_sel.toString()
+                    enterStratDate.text = outputDateStr
+
+                }
+            }, year, month, day)
+
+        dpd1.datePicker.minDate = android.icu.util.Calendar.getInstance().timeInMillis
+        dpd1.show()
+
+    }
+    @RequiresApi(Build.VERSION_CODES.N)
+    private fun calToDate(){
+        val mcurrentTime = android.icu.util.Calendar.getInstance()
+        val year = mcurrentTime.get(android.icu.util.Calendar.YEAR)
+        val month = mcurrentTime.get(android.icu.util.Calendar.MONTH)
+        val day = mcurrentTime.get(android.icu.util.Calendar.DAY_OF_MONTH)
+        val minDate = android.icu.util.Calendar.getInstance()
+        minDate.set(android.icu.util.Calendar.HOUR_OF_DAY, 0)
+        minDate.set(android.icu.util.Calendar.MINUTE, 0)
+        minDate.set(android.icu.util.Calendar.SECOND, 0)
+        val dpd1 = DatePickerDialog(this, R.style.MyDatePickerStyle, object : DatePickerDialog.OnDateSetListener {
+            @RequiresApi(Build.VERSION_CODES.O)
+            override fun onDateSet(view: DatePicker?, year: Int, month: Int, dayOfMonth: Int) {
+                var firstday: String? =String.format("%d/%d/%d", month + 1,dayOfMonth , year)
+                var date_sel: String? = String.format("%d-%d-%d", dayOfMonth, month + 1, year)
+                var date_temp = date_sel.toString()
+
+                val inputFormat: DateFormat = SimpleDateFormat("dd-MM-yyyy")
+                val outputFormat: DateFormat = SimpleDateFormat("dd MMM yyyy")
+                val inputDateStr = date_temp
+                val date: Date = inputFormat.parse(inputDateStr)
+                val outputDateStr: String = outputFormat.format(date)
+                Log.e("dt", outputDateStr)
+                toDate=date_sel.toString()
+                enterEndDate.text = outputDateStr
+
+            }
+        }, year, month, day)
+
+        dpd1.datePicker.minDate = android.icu.util.Calendar.getInstance().timeInMillis
+        dpd1.show()
+
+    }
+    fun callStudentListApi()
+    {
+        progressDialogAdd.visibility=View.VISIBLE
+        studentListArrayList= ArrayList()
+        val call: Call<StudentListModel> = ApiClient.getClient.studentList("Bearer "+ PreferenceManager.getaccesstoken(mContext))
+        call.enqueue(object : Callback<StudentListModel> {
+            override fun onFailure(call: Call<StudentListModel>, t: Throwable) {
+                Log.e("Failed", t.localizedMessage)
+                progressDialogAdd.visibility=View.GONE
+            }
+            override fun onResponse(call: Call<StudentListModel>, response: Response<StudentListModel>) {
+                val responsedata = response.body()
+                progressDialogAdd.visibility=View.GONE
+                if (responsedata != null) {
+                    try {
+
+                        if (response.body()!!.status==100)
+                        {
+                            studentListArrayList=ArrayList()
+                            studentListArrayList.addAll(response.body()!!.responseArray.studentList)
+                            if (PreferenceManager.getStudentID(mContext).equals(""))
+                            {
+                                Log.e("Empty Img","Empty")
+                                studentName=studentListArrayList.get(0).name
+                                studentImg=studentListArrayList.get(0).photo
+                                studentId=studentListArrayList.get(0).id
+                                studentClass=studentListArrayList.get(0).section
+                                PreferenceManager.setStudentID(mContext,studentId)
+                                PreferenceManager.setStudentName(mContext,studentName)
+                                PreferenceManager.setStudentPhoto(mContext,studentImg)
+                                PreferenceManager.setStudentClass(mContext,studentClass)
+                                studentNameTxt.text=studentName
+                                Log.e("studid(0)", PreferenceManager.getStudentID(mContext).toString())
+                                if(!studentImg.equals(""))
+                                {
+                                    Glide.with(mContext) //1
+                                        .load(studentImg)
+                                        .placeholder(R.drawable.student)
+                                        .error(R.drawable.student)
+                                        .skipMemoryCache(true) //2
+                                        .diskCacheStrategy(DiskCacheStrategy.NONE) //3
+                                        .transform(CircleCrop()) //4
+                                        .into(studImg)
+                                }
+                                else{
+                                    studImg.setImageResource(R.drawable.student)
+                                }
+
+                            }
+                            else{
+                                studentName= PreferenceManager.getStudentName(mContext)!!
+                                studentImg= PreferenceManager.getStudentPhoto(mContext)!!
+                                studentId= PreferenceManager.getStudentID(mContext)!!
+                                studentClass= PreferenceManager.getStudentClass(mContext)!!
+                                studentNameTxt.text=studentName
+                                if(!studentImg.equals(""))
+                                {
+                                    Glide.with(mContext) //1
+                                        .load(studentImg)
+                                        .placeholder(R.drawable.student)
+                                        .error(R.drawable.student)
+                                        .skipMemoryCache(true) //2
+                                        .diskCacheStrategy(DiskCacheStrategy.NONE) //3
+                                        .transform(CircleCrop()) //4
+                                        .into(studImg)
+                                }
+                                else{
+                                    studImg.setImageResource(R.drawable.student)
+                                }
+                            }
+
+                        }
+                        else
+                        {
+
+                            DialogFunctions.commonErrorAlertDialog(mContext.resources.getString(R.string.alert), ConstantFunctions.commonErrorString(response.body()!!.status), mContext)
+                        }
+
+
+                    } catch (e: Exception) {
+                        e.printStackTrace()
+                    }
+                }
+            }
+
+        })
+    }
+    fun showStudentList(context: Context ,mStudentList : ArrayList<StudentList>)
+    {
+        val dialog = Dialog(context)
+        dialog.requestWindowFeature(Window.FEATURE_NO_TITLE)
+        dialog.window!!.setBackgroundDrawable(ColorDrawable(Color.TRANSPARENT))
+        dialog.setCancelable(false)
+        dialog.setContentView(R.layout.dialogue_student_list)
+        var iconImageView = dialog.findViewById(R.id.iconImageView) as ImageView
+        var btn_dismiss = dialog.findViewById(R.id.btn_dismiss) as Button
+        var studentListRecycler = dialog.findViewById(R.id.studentListRecycler) as RecyclerView
+        iconImageView.setImageResource(R.drawable.boy)
+        //if(mSocialMediaArray.get())
+        val sdk = Build.VERSION.SDK_INT
+        if (sdk < Build.VERSION_CODES.JELLY_BEAN) {
+            btn_dismiss.setBackgroundDrawable(
+                mContext.resources.getDrawable(R.drawable.button_new)
+            )
+        } else {
+            btn_dismiss.background = mContext.resources.getDrawable(R.drawable.button_new)
+        }
+
+        studentListRecycler.setHasFixedSize(true)
+        val llm = LinearLayoutManager(mContext)
+        llm.orientation = LinearLayoutManager.VERTICAL
+        studentListRecycler.layoutManager = llm
+        if(mStudentList.size>0)
+        {
+            val studentAdapter = StudentListAdapter(mContext,mStudentList)
+            studentListRecycler.adapter = studentAdapter
+        }
+
+        btn_dismiss.setOnClickListener()
+        {
+            dialog.dismiss()
+        }
+        studentListRecycler.addOnItemClickListener(object: OnItemClickListener {
+            override fun onItemClicked(position: Int, view: View) {
+                // Your logic
+                //progressDialogAdd.visibility=View.VISIBLE
+
+                studentName=studentListArrayList.get(position).name
+                studentImg=studentListArrayList.get(position).photo
+                studentId=studentListArrayList.get(position).id
+                studentClass=studentListArrayList.get(position).section
+                PreferenceManager.setStudentID(mContext,studentId)
+                PreferenceManager.setStudentName(mContext,studentName)
+                PreferenceManager.setStudentPhoto(mContext,studentImg)
+                PreferenceManager.setStudentClass(mContext,studentClass)
+                Log.e("studidclick", PreferenceManager.getStudentID(mContext).toString())
+                studentNameTxt.text=studentName
+                if(!studentImg.equals(""))
+                {
+                    Glide.with(mContext) //1
+                        .load(studentImg)
+                        .placeholder(R.drawable.student)
+                        .error(R.drawable.student)
+                        .skipMemoryCache(true) //2
+                        .diskCacheStrategy(DiskCacheStrategy.NONE) //3
+                        .transform(CircleCrop()) //4
+                        .into(studImg)
+                }
+                else
+                {
+                    studImg.setImageResource(R.drawable.student)
+                }
+                //progressDialogAdd.visibility = View.VISIBLE
+
+                dialog.dismiss()
+            }
+        })
+        dialog.show()
+    }
+    fun commonSuccessAlertDialog(heading:String,Message:String,context:Context)
+    {
+        val dialog = Dialog(context)
+        dialog.requestWindowFeature(Window.FEATURE_NO_TITLE)
+        dialog.window!!.setBackgroundDrawable(ColorDrawable(Color.TRANSPARENT))
+        dialog.setCancelable(false)
+        dialog.setContentView(R.layout.dialog_success_alert)
+        var iconImageView = dialog.findViewById(R.id.iconImageView) as ImageView
+        var alertHead = dialog.findViewById(R.id.alertHead) as TextView
+        var messageTxt = dialog.findViewById(R.id.messageTxt) as TextView
+        var btn_Ok = dialog.findViewById(R.id.btn_Ok) as Button
+        messageTxt.text = Message
+        alertHead.text = heading
+        btn_Ok.setOnClickListener()
+        {
+            dialog.dismiss()
+            finish()
+        }
+        dialog.show()
+
+    }
+}
Index: app/src/main/res/layout/adapter_paycattitle_list.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\n<RelativeLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n    xmlns:tools=\"http://schemas.android.com/tools\"\n    android:id=\"@+id/relativeMain\"\n    android:layout_width=\"fill_parent\"\n    android:layout_height=\"wrap_content\"\n    android:paddingTop=\"2dp\"\n    android:paddingBottom=\"10dp\">\n\n    <androidx.constraintlayout.widget.ConstraintLayout\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"40dp\"\n        android:id=\"@+id/titlelinear\"\n        android:background=\"@drawable/button_grey\">\n\n        <com.nas.alreem.commonviews.CustomTextViewRegular\n            android:id=\"@+id/title\"\n            android:layout_width=\"fill_parent\"\n            android:layout_height=\"match_parent\"\n            android:text=\"swewer\"\n            android:textAppearance=\"?android:attr/textAppearanceMedium\"\n            android:textColor=\"@color/black\"\n            android:textSize=\"16sp\"\n            android:paddingTop=\"8dp\"\n            android:paddingLeft=\"8dp\"\n            app:layout_constraintBottom_toBottomOf=\"parent\"\n            app:layout_constraintEnd_toEndOf=\"parent\"\n            app:layout_constraintHorizontal_bias=\"0.0\"\n            app:layout_constraintStart_toStartOf=\"parent\"\n            app:layout_constraintTop_toTopOf=\"parent\" />\n    </androidx.constraintlayout.widget.ConstraintLayout>\n\n    <androidx.recyclerview.widget.RecyclerView\n        android:id=\"@+id/reportRecycler\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\"\n        android:layout_below=\"@id/titlelinear\"\n        android:layout_marginTop=\"8dp\" />\n</RelativeLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/adapter_paycattitle_list.xml b/app/src/main/res/layout/adapter_paycattitle_list.xml
--- a/app/src/main/res/layout/adapter_paycattitle_list.xml	(revision b2ad66f8612edd03349ffa4aaee582fd0005cdb4)
+++ b/app/src/main/res/layout/adapter_paycattitle_list.xml	(date 1689330549235)
@@ -12,18 +12,18 @@
         android:layout_width="match_parent"
         android:layout_height="40dp"
         android:id="@+id/titlelinear"
-        android:background="@drawable/button_grey">
+        android:background="@color/grey">
 
-        <com.nas.alreem.commonviews.CustomTextViewRegular
+        <com.nas.alreem.commonviews.CustomTextViewSemiBold
             android:id="@+id/title"
-            android:layout_width="fill_parent"
+            android:layout_width="match_parent"
             android:layout_height="match_parent"
             android:text="swewer"
             android:textAppearance="?android:attr/textAppearanceMedium"
             android:textColor="@color/black"
             android:textSize="16sp"
             android:paddingTop="8dp"
-            android:paddingLeft="8dp"
+            android:paddingLeft="16dp"
             app:layout_constraintBottom_toBottomOf="parent"
             app:layout_constraintEnd_toEndOf="parent"
             app:layout_constraintHorizontal_bias="0.0"
@@ -36,5 +36,7 @@
         android:layout_width="match_parent"
         android:layout_height="wrap_content"
         android:layout_below="@id/titlelinear"
-        android:layout_marginTop="8dp" />
+        android:layout_marginTop="8dp"
+        android:layout_marginLeft="8dp"
+        android:layout_marginRight="8dp"/>
 </RelativeLayout>
\ No newline at end of file
Index: app/src/main/java/com/nas/alreem/activity/absence/model/AbsenceListModel.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/nas/alreem/activity/absence/model/AbsenceListModel.kt b/app/src/main/java/com/nas/alreem/activity/absence/model/AbsenceListModel.kt
new file mode 100644
--- /dev/null	(date 1688969920000)
+++ b/app/src/main/java/com/nas/alreem/activity/absence/model/AbsenceListModel.kt	(date 1688969920000)
@@ -0,0 +1,8 @@
+package com.nas.alreem.activity.absence.model
+
+import com.google.gson.annotations.SerializedName
+
+class AbsenceListModel (
+    @SerializedName("status")var status:Int,
+    @SerializedName("responseArray")var responseArray:AbsenceListResponseModel
+)
\ No newline at end of file
Index: app/src/main/java/com/nas/alreem/activity/absence/model/RequestLeaveModel.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/nas/alreem/activity/absence/model/RequestLeaveModel.kt b/app/src/main/java/com/nas/alreem/activity/absence/model/RequestLeaveModel.kt
new file mode 100644
--- /dev/null	(date 1688389050000)
+++ b/app/src/main/java/com/nas/alreem/activity/absence/model/RequestLeaveModel.kt	(date 1688389050000)
@@ -0,0 +1,7 @@
+package com.nas.alreem.activity.absence.model
+
+import com.google.gson.annotations.SerializedName
+
+class RequestLeaveModel (
+    @SerializedName("status")var status:Int
+)
\ No newline at end of file
Index: app/src/main/java/com/nas/alreem/activity/parent_meetings/model/PtaListModel.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/nas/alreem/activity/parent_meetings/model/PtaListModel.kt b/app/src/main/java/com/nas/alreem/activity/parent_meetings/model/PtaListModel.kt
new file mode 100644
--- /dev/null	(date 1688992560000)
+++ b/app/src/main/java/com/nas/alreem/activity/parent_meetings/model/PtaListModel.kt	(date 1688992560000)
@@ -0,0 +1,11 @@
+package com.nas.alreem.activity.parent_meetings.model
+
+import com.google.gson.annotations.SerializedName
+
+class PtaListModel (
+    @SerializedName("status") val status: Int,
+    @SerializedName("message") val message: String,
+    @SerializedName("data_count") val data_count: Int,
+    @SerializedName("data") val data: ArrayList<PtaTimeSlotList>
+
+)
\ No newline at end of file
Index: app/src/main/java/com/nas/alreem/activity/parent_meetings/model/PtaInsertApiModel.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/nas/alreem/activity/parent_meetings/model/PtaInsertApiModel.kt b/app/src/main/java/com/nas/alreem/activity/parent_meetings/model/PtaInsertApiModel.kt
new file mode 100644
--- /dev/null	(date 1688999116000)
+++ b/app/src/main/java/com/nas/alreem/activity/parent_meetings/model/PtaInsertApiModel.kt	(date 1688999116000)
@@ -0,0 +1,8 @@
+package com.nas.alreem.activity.parent_meetings.model
+
+import com.google.gson.annotations.SerializedName
+
+class PtaInsertApiModel (
+    @SerializedName("student_id")var student_id:String,
+    @SerializedName("pta_time_slot_id")var pta_time_slot_id:Int
+)
\ No newline at end of file
Index: app/src/main/java/com/nas/alreem/constants/ConstantWords.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.nas.alreem.constants\n\nimport com.nas.alreem.activity.survey.model.SurveySubmitApiModel\nimport com.nas.alreem.activity.survey.model.SurveySubmitDataModel\n\nclass ConstantWords {\n    companion object\n    {\n        var emailHelp:String=\"communications@alreem.com\"\n        var status_101=\"Some Error Occured.\"\n        var status_102=\"Internal Server Error.\"\n        var status_103=\"Validation Error.\"\n        var status_110=\"Invalid username and password.\"\n        var status_113=\"Verification code not match.\"\n        var status_114=\"This Email ID is not registered with our school. Kindly enter the school registered Email ID.\"\n        var status_116=\"Token expired.\"\n        var status_123=\"Invalid file access.\"\n        var status_124=\"Route not found.\"\n        var status_125=\"Student not found in our database.\"\n        var status_130=\"DecryptException Error.\"\n        var status_131=\"Url/Method not found.\"\n        var status_132=\"No Data Found.\"\n        var status_133=\"Restricted access.\"\n        var status_134=\"Method Not Allowed.\"\n        var status_135=\"User not triggered.\"\n        var status_121=\"The Email ID is already Registered.\"\n        var status_111=\"No Students are linked with this Email ID.\"\n        var status_100_signup=\"Successfully registered.Please check your email for further details.\"\n        var status_100_forget_password=\"New Password has send to your Email Id.Please check your email for further details.\"\n        var status_100_login=\"Successfully Logged in.\"\n        var status_100_change_password=\"Successfully Reset your password.\"\n        var no_notification_found=\"No Notification Found.\"\n\n\n\n        /*TAB_ID*/\n        var TAB_NOTIFICATIONS = \"1\"\n        var TAB_CALENDAR = \"2\"\n        var TAB_PAYMENTS = \"3\"\n        var TAB_LUNCH_BOX = \"4\"\n        var TAB_PARENT_ESSENTIAL = \"5\"\n        var TAB_EARLY_YEARS = \"6\"\n        var TAB_PRIMARY = \"7\"\n        var TAB_SECONDARY = \"8\"\n        var TAB_GALLERY = \"9\"\n        var TAB_ABOUT_US = \"10\"\n        var TAB_CONTACT_US = \"11\"\n\n\n\n        /*MODULE NAME*/\n        var notification=\"Notifications\"\n        var calendar=\"Calendar\"\n        var payments=\"Payments\"\n        var early_years=\"Early Years\"\n        var primary=\"Primary\"\n        var secondary=\"Secondary\"\n        var gallery=\"Gallery\"\n        var about_us=\"About Us\"\n        var contact_us=\"Contact Us\"\n        var settings=\"Settings\"\n        var lunchbox=\"Lunch Box\"\n        var communications=\"Communications\"\n        var social_media=\"Social Media\"\n        var information=\"Informations\"\n        var newsletters=\"Newsletters\"\n        var parentessential=\"Parent Essentials\"\n\n\n        var surveySubmitArrayList=ArrayList<SurveySubmitDataModel>()\n    }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/nas/alreem/constants/ConstantWords.kt b/app/src/main/java/com/nas/alreem/constants/ConstantWords.kt
--- a/app/src/main/java/com/nas/alreem/constants/ConstantWords.kt	(revision b2ad66f8612edd03349ffa4aaee582fd0005cdb4)
+++ b/app/src/main/java/com/nas/alreem/constants/ConstantWords.kt	(date 1689329669902)
@@ -36,15 +36,19 @@
         /*TAB_ID*/
         var TAB_NOTIFICATIONS = "1"
         var TAB_CALENDAR = "2"
-        var TAB_PAYMENTS = "3"
-        var TAB_LUNCH_BOX = "4"
-        var TAB_PARENT_ESSENTIAL = "5"
-        var TAB_EARLY_YEARS = "6"
-        var TAB_PRIMARY = "7"
-        var TAB_SECONDARY = "8"
-        var TAB_GALLERY = "9"
-        var TAB_ABOUT_US = "10"
-        var TAB_CONTACT_US = "11"
+        var TAB_ABSENCE = "3"
+        var TAB_PAYMENTS = "4"
+        var TAB_LUNCH_BOX = "5"
+        var TAB_PARENT_ESSENTIAL = "6"
+        var TAB_EARLY_YEARS = "7"
+        var TAB_PRIMARY = "8"
+        var TAB_SECONDARY = "9"
+        var TAB_ENRICHMENT = "10"
+        var TAB_PARENT_MEETINGS = "11"
+        var TAB_PERMISSION_FORMS = "12"
+        var TAB_GALLERY = "13"
+        var TAB_ABOUT_US = "14"
+        var TAB_CONTACT_US = "15"
 
 
 
@@ -65,6 +69,15 @@
         var information="Informations"
         var newsletters="Newsletters"
         var parentessential="Parent Essentials"
+        var parentmeetings="Parent Meetings"
+        var absence_earlypickup="Absence & Early Pickup"
+        var enrichment="Enrichment"
+        var permission_forms="Permission Forms"
+
+
+        var absence="Absence"
+        var earlypickup="Early Pickup"
+        var staff_directory="Staff Directory"
 
 
         var surveySubmitArrayList=ArrayList<SurveySubmitDataModel>()
Index: app/src/main/java/com/nas/alreem/fragment/parent_meetings/model/ListStaffPtaApiModel.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/nas/alreem/fragment/parent_meetings/model/ListStaffPtaApiModel.kt b/app/src/main/java/com/nas/alreem/fragment/parent_meetings/model/ListStaffPtaApiModel.kt
new file mode 100644
--- /dev/null	(date 1688966630000)
+++ b/app/src/main/java/com/nas/alreem/fragment/parent_meetings/model/ListStaffPtaApiModel.kt	(date 1688966630000)
@@ -0,0 +1,7 @@
+package com.nas.alreem.fragment.parent_meetings.model
+
+import com.google.gson.annotations.SerializedName
+
+class ListStaffPtaApiModel (
+    @SerializedName("student_id")var student_id:String
+)
\ No newline at end of file
Index: app/src/main/java/com/nas/alreem/fragment/permission_slip/PermissionSlipFragment.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.nas.alreem.fragment.permission_slip\n\nimport android.app.Dialog\nimport android.content.Context\nimport android.graphics.Color\nimport android.graphics.drawable.ColorDrawable\nimport android.os.Build\nimport android.os.Bundle\nimport android.util.Log\nimport android.view.LayoutInflater\nimport android.view.View\nimport android.view.ViewGroup\nimport android.view.Window\nimport android.view.animation.Animation\nimport android.view.animation.AnimationUtils\nimport android.widget.*\nimport androidx.fragment.app.Fragment\nimport androidx.recyclerview.widget.LinearLayoutManager\nimport androidx.recyclerview.widget.RecyclerView\nimport com.bumptech.glide.Glide\nimport com.bumptech.glide.load.engine.DiskCacheStrategy\nimport com.bumptech.glide.load.resource.bitmap.CircleCrop\nimport com.nas.alreem.R\nimport com.nas.alreem.activity.payments.adapter.StudentListAdapter\nimport com.nas.alreem.activity.payments.model.StudentList\nimport com.nas.alreem.activity.payments.model.StudentListModel\nimport com.nas.alreem.constants.ConstantFunctions\nimport com.nas.alreem.constants.OnItemClickListener\nimport com.nas.alreem.constants.PreferenceManager\nimport com.nas.alreem.constants.addOnItemClickListener\nimport com.nas.alreem.fragment.permission_slip.model.PermissionSlipListModel\nimport com.nas.alreem.rest.ApiClient\nimport retrofit2.Call\nimport retrofit2.Callback\nimport retrofit2.Response\n\nclass PermissionSlipFragment : Fragment(){\n    lateinit var progressDialog: RelativeLayout\n    lateinit var titleTextView: TextView\n    lateinit var mContext: Context\n    lateinit var sharedprefs: PreferenceManager\n    lateinit var studentSpinner: LinearLayout\n    var studentListArrayList = ArrayList<StudentList>()\n    lateinit var formslist:ArrayList<PermissionSlipListModel>\n    lateinit var studImg: ImageView\n    lateinit var studentName: String\n    lateinit var studentId: String\n    lateinit var studentImg: String\n    lateinit var studentClass: String\n    lateinit var studentNameTxt: TextView\n    lateinit var forms_recycler: RecyclerView\n    override fun onCreateView(\n        inflater: LayoutInflater, container: ViewGroup?,\n        savedInstanceState: Bundle?\n    ): View? {\n        return inflater.inflate(R.layout.fragment_permission_slip, container, false)\n    }\n    override fun onViewCreated(view: View, savedInstanceState: Bundle?) {\n        super.onViewCreated(view, savedInstanceState)\n        sharedprefs = PreferenceManager()\n        mContext = requireContext()\n\n        initializeUI()\n        var internetCheck = ConstantFunctions.internetCheck(mContext)\n        if (internetCheck) {\n            callStudentListApi()\n\n        } else {\n          //  InternetCheckClass.showSuccessInternetAlert(mContext)\n        }\n    }\n    private fun initializeUI(){\n        mContext=requireContext()\n        titleTextView = view!!.findViewById(R.id.titleTextView) as TextView\n        titleTextView.text = \"Permission Slips\"\n        formslist= ArrayList()\n        studentSpinner = view!!.findViewById<LinearLayout>(R.id.studentSpinner)\n        studImg = view!!.findViewById<ImageView>(R.id.studImg)\n        studentNameTxt = view!!.findViewById<TextView>(R.id.studentName)\n        forms_recycler=view!!.findViewById(R.id.forms_rec)\n        progressDialog = view!!.findViewById(R.id.progressDialog)\n        val aniRotate: Animation =\n            AnimationUtils.loadAnimation(mContext, R.anim.linear_interpolator)\n        progressDialog.startAnimation(aniRotate)\n\n\n\n        studentSpinner.setOnClickListener(object : View.OnClickListener {\n            override fun onClick(v: View?) {\n                showStudentList(mContext,studentListArrayList)\n\n            }\n        })\n    }\n    fun showStudentList(context: Context ,mStudentList : ArrayList<StudentList>)\n    {\n        val dialog = Dialog(context)\n        dialog.requestWindowFeature(Window.FEATURE_NO_TITLE)\n        dialog.window!!.setBackgroundDrawable(ColorDrawable(Color.TRANSPARENT))\n        dialog.setCancelable(false)\n        dialog.setContentView(R.layout.dialogue_student_list)\n        var iconImageView = dialog.findViewById(R.id.iconImageView) as ImageView\n        var btn_dismiss = dialog.findViewById(R.id.btn_dismiss) as Button\n        var studentListRecycler = dialog.findViewById(R.id.studentListRecycler) as RecyclerView\n        iconImageView.setImageResource(R.drawable.boy)\n        //if(mSocialMediaArray.get())\n        val sdk = Build.VERSION.SDK_INT\n        if (sdk < Build.VERSION_CODES.JELLY_BEAN) {\n            btn_dismiss.setBackgroundDrawable(\n                mContext.resources.getDrawable(R.drawable.button_new)\n            )\n        } else {\n            btn_dismiss.background = mContext.resources.getDrawable(R.drawable.button_new)\n        }\n\n        studentListRecycler.setHasFixedSize(true)\n        val llm = LinearLayoutManager(mContext)\n        llm.orientation = LinearLayoutManager.VERTICAL\n        studentListRecycler.layoutManager = llm\n        if(mStudentList.size>0)\n        {\n            val studentAdapter = StudentListAdapter(mContext,mStudentList)\n            studentListRecycler.adapter = studentAdapter\n        }\n\n        btn_dismiss.setOnClickListener()\n        {\n            dialog.dismiss()\n        }\n        studentListRecycler.addOnItemClickListener(object: OnItemClickListener {\n            override fun onItemClicked(position: Int, view: View) {\n                // Your logic\n                progressDialog.visibility=View.VISIBLE\n                val aniRotate: Animation =\n                    AnimationUtils.loadAnimation(mContext, R.anim.linear_interpolator)\n                progressDialog.startAnimation(aniRotate)\n\n                studentName=studentListArrayList.get(position).name\n                studentImg=studentListArrayList.get(position).photo\n                studentId=studentListArrayList.get(position).id\n                studentClass=studentListArrayList.get(position).section\n                PreferenceManager.setStudentID(mContext,studentId)\n                PreferenceManager.setStudentName(mContext,studentName)\n                PreferenceManager.setStudentPhoto(mContext,studentImg)\n                PreferenceManager.setStudentClass(mContext,studentClass)\n                Log.e(\"studidclick\", PreferenceManager.getStudentID(mContext).toString())\n                studentNameTxt.text=studentName\n                if(!studentImg.equals(\"\"))\n                {\n                    Glide.with(mContext) //1\n                        .load(studentImg)\n                        .placeholder(R.drawable.student)\n                        .error(R.drawable.student)\n                        .skipMemoryCache(true) //2\n                        .diskCacheStrategy(DiskCacheStrategy.NONE) //3\n                        .transform(CircleCrop()) //4\n                        .into(studImg)\n                }\n                else\n                {\n                    studImg.setImageResource(R.drawable.student)\n                }\n                progressDialog.visibility = View.VISIBLE\n               // formslistApi()\n                Log.e(\"TEST\",\"call 2\")\n\n                //  Toast.makeText(activity, mStudentList.get(position).name, Toast.LENGTH_SHORT).show()\n                dialog.dismiss()\n            }\n        })\n        dialog.show()\n    }\n    fun callStudentListApi()\n    {\n        progressDialog.visibility = View.VISIBLE\n        val token = PreferenceManager.getaccesstoken(mContext)\n        val call: Call<StudentListModel> = ApiClient.getClient.studentList(\"Bearer \"+token)\n        call.enqueue(object : Callback<StudentListModel> {\n            override fun onFailure(call: Call<StudentListModel>, t: Throwable) {\n                Log.e(\"Error\", t.localizedMessage)\n                progressDialog.visibility = View.GONE\n            }\n            override fun onResponse(call: Call<StudentListModel>, response: Response<StudentListModel>) {\n                progressDialog.visibility = View.GONE\n                //val arraySize :Int = response.body()!!.responseArray.studentList.size\n                if (response.body()!!.status==100)\n                {\n                    studentListArrayList.addAll(response.body()!!.responseArray.studentList)\n                    if (PreferenceManager.getStudentID(mContext).equals(\"\"))\n                    {\n                        studentName=studentListArrayList.get(0).name\n                        studentImg=studentListArrayList.get(0).photo\n                        studentId=studentListArrayList.get(0).id\n                        studentClass=studentListArrayList.get(0).section\n                        PreferenceManager.setStudentID(mContext,studentId)\n                        PreferenceManager.setStudentName(mContext,studentName)\n                        PreferenceManager.setStudentPhoto(mContext,studentImg)\n                        PreferenceManager.setStudentClass(mContext,studentClass)\n                        studentNameTxt.text=studentName\n                        if(!studentImg.equals(\"\"))\n                        {\n                            Glide.with(mContext) //1\n                                .load(studentImg)\n                                .placeholder(R.drawable.student)\n                                .error(R.drawable.student)\n                                .skipMemoryCache(true) //2\n                                .diskCacheStrategy(DiskCacheStrategy.NONE) //3\n                                .transform(CircleCrop()) //4\n                                .into(studImg)\n                        }\n                        else{\n                            studImg.setImageResource(R.drawable.student)\n                        }\n\n                    }\n                    else{\n                        studentName= PreferenceManager.getStudentName(mContext)!!\n                        studentImg= PreferenceManager.getStudentPhoto(mContext)!!\n                        studentId= PreferenceManager.getStudentID(mContext)!!\n                        studentClass= PreferenceManager.getStudentClass(mContext)!!\n                        studentNameTxt.text=studentName\n                        if(!studentImg.equals(\"\"))\n                        {\n                            Glide.with(mContext) //1\n                                .load(studentImg)\n                                .placeholder(R.drawable.student)\n                                .error(R.drawable.student)\n                                .skipMemoryCache(true) //2\n                                .diskCacheStrategy(DiskCacheStrategy.NONE) //3\n                                .transform(CircleCrop()) //4\n                                .into(studImg)\n                        }\n                        else{\n                            studImg.setImageResource(R.drawable.student)\n                        }\n                    }\n\n//                    var internetCheck = InternetCheckClass.isInternetAvailable(nContext)\n//                    if (internetCheck)\n//                    {\n//                        //callStudentLeaveInfo()\n//                    }\n//                    else{\n//                        InternetCheckClass.showSuccessInternetAlert(com.mobatia.bisad.fragment.home.mContext)\n//                    }\n\n                    //callStudentInfoApi()\n                }\n\n\n            }\n\n        })\n    }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/nas/alreem/fragment/permission_slip/PermissionSlipFragment.kt b/app/src/main/java/com/nas/alreem/fragment/permission_slip/PermissionSlipFragment.kt
--- a/app/src/main/java/com/nas/alreem/fragment/permission_slip/PermissionSlipFragment.kt	(revision b2ad66f8612edd03349ffa4aaee582fd0005cdb4)
+++ b/app/src/main/java/com/nas/alreem/fragment/permission_slip/PermissionSlipFragment.kt	(date 1687508378000)
@@ -252,4 +252,5 @@
 
         })
     }
+
 }
\ No newline at end of file
Index: app/src/main/res/drawable/search_bg_rounded.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/drawable/search_bg_rounded.xml b/app/src/main/res/drawable/search_bg_rounded.xml
new file mode 100644
--- /dev/null	(date 1686633254000)
+++ b/app/src/main/res/drawable/search_bg_rounded.xml	(date 1686633254000)
@@ -0,0 +1,12 @@
+<selector xmlns:android="http://schemas.android.com/apk/res/android">
+    <item>
+        <shape android:shape="rectangle">
+            <solid android:color="@color/light_grey"/>
+            <corners android:radius="10dp" />
+            <stroke
+                android:width="2dp"
+                android:color="#ffffff"
+                />
+        </shape>
+    </item>
+</selector>
\ No newline at end of file
Index: app/src/main/res/layout/activity_parent_meeting_review.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/activity_parent_meeting_review.xml b/app/src/main/res/layout/activity_parent_meeting_review.xml
new file mode 100644
--- /dev/null	(date 1689145754291)
+++ b/app/src/main/res/layout/activity_parent_meeting_review.xml	(date 1689145754291)
@@ -0,0 +1,53 @@
+<?xml version="1.0" encoding="utf-8"?>
+<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:background="@color/white">
+
+
+    <include
+        android:id="@+id/includeRel"
+        layout="@layout/layout_activity_header" />
+    <androidx.recyclerview.widget.RecyclerView
+        android:id="@+id/recycler_review"
+        android:layout_width="match_parent"
+        android:layout_height="match_parent"
+        android:layout_above="@+id/confirmTV"
+        android:layout_below="@+id/includeRel"
+        android:layout_marginStart="10dp"
+        android:layout_marginTop="10dp"
+        android:layout_marginEnd="10dp"
+        android:layout_marginBottom="10dp"
+        android:overScrollMode="never"
+        android:scrollbars="vertical" />
+
+    <com.nas.alreem.commonviews.CustomTextViewBold
+        android:id="@+id/confirmTV"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:layout_above="@+id/info"
+        android:gravity="center"
+        android:text="CONFIRM"
+        android:textSize="17dp"
+        android:textColor="@color/white"
+        android:padding="10dp"
+        android:background="@color/split_bg"
+        android:visibility="gone"/>
+
+    <ImageView
+        android:id="@+id/info"
+        android:layout_width="match_parent"
+        android:layout_height="40dp"
+        android:layout_alignParentBottom="true"
+        android:background="@drawable/infopta_review" />
+
+    <ProgressBar
+        android:id="@+id/progressDialogAdd"
+        android:layout_width="40dp"
+        android:layout_height="40dp"
+        android:layout_centerInParent="true"
+        android:indeterminateDrawable="@anim/customspinner"
+        android:visibility="gone"
+
+        />
+</RelativeLayout>
\ No newline at end of file
Index: app/src/main/java/com/nas/alreem/activity/absence/RequestearlypickupActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/nas/alreem/activity/absence/RequestearlypickupActivity.kt b/app/src/main/java/com/nas/alreem/activity/absence/RequestearlypickupActivity.kt
new file mode 100644
--- /dev/null	(date 1689158291191)
+++ b/app/src/main/java/com/nas/alreem/activity/absence/RequestearlypickupActivity.kt	(date 1689158291191)
@@ -0,0 +1,514 @@
+package com.nas.alreem.activity.absence
+
+import android.app.DatePickerDialog
+import android.app.Dialog
+import android.app.TimePickerDialog
+import android.content.Context
+import android.content.Intent
+import android.graphics.Color
+import android.graphics.drawable.ColorDrawable
+import android.os.Build
+import android.os.Bundle
+import android.util.Log
+import android.view.View
+import android.view.Window
+import android.widget.Button
+import android.widget.DatePicker
+import android.widget.EditText
+import android.widget.ImageView
+import android.widget.LinearLayout
+import android.widget.ProgressBar
+import android.widget.RelativeLayout
+import android.widget.TextView
+import android.widget.TimePicker
+import android.widget.Toast
+import androidx.annotation.RequiresApi
+import androidx.appcompat.app.AppCompatActivity
+import androidx.recyclerview.widget.LinearLayoutManager
+import androidx.recyclerview.widget.RecyclerView
+import com.bumptech.glide.Glide
+import com.bumptech.glide.load.engine.DiskCacheStrategy
+import com.bumptech.glide.load.resource.bitmap.CircleCrop
+import com.nas.alreem.R
+import com.nas.alreem.activity.absence.model.EarlyPickupModel
+import com.nas.alreem.activity.absence.model.RequestPickupApiModel
+import com.nas.alreem.activity.canteen.model.topup.WalletAmountModel
+import com.nas.alreem.activity.home.HomeActivity
+import com.nas.alreem.activity.payments.adapter.StudentListAdapter
+import com.nas.alreem.activity.payments.model.StudentList
+import com.nas.alreem.activity.payments.model.StudentListModel
+import com.nas.alreem.constants.ConstantFunctions
+import com.nas.alreem.constants.ConstantWords
+import com.nas.alreem.constants.DialogFunctions
+import com.nas.alreem.constants.OnItemClickListener
+import com.nas.alreem.constants.PreferenceManager
+import com.nas.alreem.constants.addOnItemClickListener
+import com.nas.alreem.rest.ApiClient
+import retrofit2.Call
+import retrofit2.Callback
+import retrofit2.Response
+import java.text.DateFormat
+import java.text.SimpleDateFormat
+import java.util.Calendar
+import java.util.Date
+
+class RequestearlypickupActivity:AppCompatActivity() {
+    lateinit var mContext:Context
+    var hour:Int=0
+    var min:String=""
+    var hour_new:String=""
+    var new_time:String=""
+    lateinit var backRelative: RelativeLayout
+    lateinit var heading: TextView
+    lateinit var logoClickImgView: ImageView
+    lateinit var progressDialogAdd: ProgressBar
+    var studentListArrayList = ArrayList<StudentList>()
+    lateinit var studentSpinner: LinearLayout
+    lateinit var studImg: ImageView
+    lateinit var studentName: String
+    lateinit var studentId: String
+    lateinit var studentImg: String
+    lateinit var studentClass: String
+    lateinit var studentNameTxt: TextView
+    lateinit var enterStratDate: TextView
+    lateinit var enterTime: TextView
+    lateinit var pickupName: TextView
+    lateinit var submitBtn: Button
+    lateinit var enterMessage: EditText
+    var fromDate: String=""
+    var toDate: String =""
+    var totime: String =""
+    lateinit var submitLayout: LinearLayout
+    lateinit var myCalendar : Calendar
+    lateinit var currentDate: Date
+    lateinit var sdate: Date
+    lateinit var edate: Date
+    var elapsedDays:Long = 0
+    @RequiresApi(Build.VERSION_CODES.N)
+    override fun onCreate(savedInstanceState: Bundle?) {
+        super.onCreate(savedInstanceState)
+        setContentView(R.layout.activity_request_earlypickup)
+
+        mContext=this
+        initfn()
+        callStudentListApi()
+
+    }
+    @RequiresApi(Build.VERSION_CODES.N)
+    private fun initfn() {
+        progressDialogAdd=findViewById(R.id.progressDialogAdd)
+        studentSpinner = findViewById(R.id.studentSpinner)
+        heading=findViewById(R.id.heading)
+        heading.text= ConstantWords.earlypickup
+        backRelative=findViewById(R.id.backRelative)
+        logoClickImgView=findViewById(R.id.logoClickImgView)
+        myCalendar= Calendar.getInstance()
+        currentDate= Calendar.getInstance().time
+        studentNameTxt = findViewById<TextView>(R.id.studentName)
+        enterStratDate = findViewById<TextView>(R.id.enterStratDate)
+        enterTime = findViewById<TextView>(R.id.enterEndDate)
+        pickupName=findViewById(R.id.enterPickupname)
+        studImg = findViewById<ImageView>(R.id.studImg)
+        enterMessage = findViewById<EditText>(R.id.enterMessage)
+        submitLayout = findViewById<LinearLayout>(R.id.submitLayout)
+        submitBtn = findViewById<Button>(R.id.submitBtn)
+        studentSpinner.setOnClickListener(){
+            showStudentList(mContext,studentListArrayList)
+        }
+        backRelative.setOnClickListener(View.OnClickListener {
+            finish()
+        })
+        heading.text= ConstantWords.earlypickup
+        logoClickImgView.setOnClickListener(View.OnClickListener {
+            val intent = Intent(mContext, HomeActivity::class.java)
+            intent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP)
+            startActivity(intent)
+        })
+
+        submitBtn.setOnClickListener(object : View.OnClickListener {
+            override fun onClick(v: View?) {
+
+                if(enterStratDate.text.equals(""))
+                {
+                    DialogFunctions.commonErrorAlertDialog("Alert","Please select Date of Early Pickup",mContext)
+                }
+                else{
+                    if (enterTime.text.equals("")){
+
+                        DialogFunctions.commonErrorAlertDialog("Alert","Please select your Pickup Time",mContext)
+                    }else{
+                        Log.e("error",pickupName.text.toString())
+                        if (pickupName.text.isEmpty()){
+                            DialogFunctions.commonErrorAlertDialog("Alert","Please enter pickup person name",mContext)
+
+                        }else{
+
+                            if (enterMessage.text.isEmpty()){
+                                DialogFunctions.commonErrorAlertDialog("Alert","Please enter reason for early pickup",mContext)
+
+                            } else{
+                                var date_entered=enterStratDate.text
+                                var date=toDate
+                                var time_entered=enterTime.text
+                                var time=totime
+                                var pickupname_entered=pickupName.text
+                                var reason_entered=enterMessage.text
+                                Log.e("date",date_entered.toString())
+                                Log.e("time",time.toString())
+                                Log.e("pickup",pickupname_entered.toString())
+                                Log.e("reason",reason_entered.toString())
+                                /*callPickupSubmitApi(date,time.toString(),pickupname_entered.toString(),
+                                    reason_entered.toString()
+                                )*/
+                                callPickupSubmitApi(date,new_time,pickupname_entered.toString(),
+                                    reason_entered.toString()
+                                )
+                            }
+                        }
+                    }
+
+
+                }
+
+
+            }
+        })
+        enterStratDate.setOnClickListener{
+            cal()
+        }
+        enterTime.setOnClickListener(object : View.OnClickListener {
+            override fun onClick(v: View?) {
+                if (enterStratDate.text.equals("")){
+                    DialogFunctions.commonErrorAlertDialog("Alert","Please select Date of Early Pickup",mContext)
+
+                }
+                else{
+                    val mTimePicker: TimePickerDialog
+                    val mcurrentTime = Calendar.getInstance()
+                    val hours = mcurrentTime.get(Calendar.HOUR_OF_DAY)
+                    val minute = mcurrentTime.get(Calendar.MINUTE)
+                    //var am_pm = mcurrentTime.get(Calendar.AM_PM)
+                    var am_pm:String=""
+
+                    mTimePicker = TimePickerDialog(mContext, object : TimePickerDialog.OnTimeSetListener {
+                        override fun onTimeSet(view: TimePicker?, hourOfDay: Int, minute: Int) {
+                            var AM_PM: String
+                            hour=hourOfDay
+                            min=minute.toString()
+                            var hour_n=hour.toString()
+
+                            if (minute<10){
+                                min="0"+min
+                            }
+                            if (hourOfDay<10){
+                                hour_n="0"+hour.toString()
+
+                            }
+                            Log.e("nhour",hour_n.toString())
+                            new_time=hour_n + ":" + min + ":" + "00"
+                            Log.e("ntime",new_time.toString())
+                            if(hour ==0) {
+                                Log.e("h","0")
+                                hour = 12
+                                AM_PM="AM"
+                            } else if(hour<12){
+                                hour = hourOfDay
+                                AM_PM = "AM"
+                            }
+                            else if (hour >12) {
+                                hour -= 12
+                                AM_PM = "PM"
+                            } else if (hour == 12) {
+                                Log.e("h","12")
+                                hour = 12
+                                AM_PM = "PM"
+                            } else
+                                AM_PM = "AM"
+                            enterTime.text = hour.toString() + ":" + min + ":" + "00"+ AM_PM
+                            totime=hour.toString() + ":" + min + ":" + "00"
+                        }
+                    }, hour, minute,false)
+
+                    enterTime.setOnClickListener({ v ->
+                        mTimePicker.show()
+                    })
+
+                }
+            }
+        })
+    }
+    @RequiresApi(Build.VERSION_CODES.N)
+    private fun cal() {
+        val mcurrentTime = android.icu.util.Calendar.getInstance()
+        val year = mcurrentTime.get(android.icu.util.Calendar.YEAR)
+        val month = mcurrentTime.get(android.icu.util.Calendar.MONTH)
+        val day = mcurrentTime.get(android.icu.util.Calendar.DAY_OF_MONTH)
+        val minDate = android.icu.util.Calendar.getInstance()
+        minDate.set(android.icu.util.Calendar.HOUR_OF_DAY, 0)
+        minDate.set(android.icu.util.Calendar.MINUTE, 0)
+        minDate.set(android.icu.util.Calendar.SECOND, 0)
+        val dpd1 = DatePickerDialog(
+            this,
+            R.style.MyDatePickerStyle,
+            object : DatePickerDialog.OnDateSetListener {
+                @RequiresApi(Build.VERSION_CODES.O)
+                override fun onDateSet(view: DatePicker?, year: Int, month: Int, dayOfMonth: Int) {
+                    var firstday:String? = String.format("%d-%d-%d", month + 1, dayOfMonth, year)
+
+
+                    var date_sel: String? = String.format("%d-%d-%d", dayOfMonth, month + 1, year)
+                    var date_temp = date_sel.toString()
+
+                    val inputFormat: DateFormat = SimpleDateFormat("dd-MM-yyyy")
+                    val outputFormat: DateFormat = SimpleDateFormat("dd MMM yyyy")
+                    val inputDateStr = date_temp
+                    val date: Date = inputFormat.parse(inputDateStr)
+                    val outputDateStr: String = outputFormat.format(date)
+                    Log.e("dt", outputDateStr)
+                    toDate = date_sel.toString()
+                    enterStratDate.text = outputDateStr
+
+                }
+            },
+            year,
+            month,
+            day
+        )
+        //enterStratDate.setOnClickListener{
+        dpd1.datePicker.minDate = android.icu.util.Calendar.getInstance().timeInMillis
+        dpd1.show()
+//}
+    }
+    fun callPickupSubmitApi(date:String,time:String,pickupby:String,reason:String) {
+        var devicename:String= (Build.MANUFACTURER
+                + " " + Build.MODEL + " " + Build.VERSION.RELEASE
+                + " " + Build.VERSION_CODES::class.java.fields[Build.VERSION.SDK_INT]
+            .name)
+        var new_date:String=""
+        val inputFormat: DateFormat = SimpleDateFormat("d-m-yyyy")
+        val outputFormat: DateFormat = SimpleDateFormat("yyyy-mm-dd")
+        val inputDateStr = date
+        val date: Date = inputFormat.parse(inputDateStr)
+        new_date = outputFormat.format(date)
+        val token = PreferenceManager.getaccesstoken(mContext)
+        val pickupSuccessBody = RequestPickupApiModel(PreferenceManager.getStudentID(mContext).toString(),new_date,
+            time,reason,pickupby,2,devicename,"1.0")
+        val call: Call<EarlyPickupModel> =
+            ApiClient.getClient.pickupRequest(pickupSuccessBody, "Bearer " + token)
+        call.enqueue(object : Callback<EarlyPickupModel> {
+            override fun onFailure(call: Call<EarlyPickupModel>, t: Throwable) {
+                Log.e("Failed", t.localizedMessage)
+                //mProgressRelLayout.visibility=View.INVISIBLE
+            }
+
+            override fun onResponse(call: Call<EarlyPickupModel>, response: Response<EarlyPickupModel>) {
+                val responsedata = response.body()
+                //progressDialog.visibility = View.GONE
+                Log.e("Response Signup", responsedata.toString())
+                if (responsedata != null) {
+                    try {
+
+                        if (response.body()!!.status==100) {
+
+                            commonSuccessAlertDialog("Success","Successfully submitted your earlypickup request.Please wait for Approval",mContext)
+                            //Toast.makeText(nContext, "Transaction successfully completed", Toast.LENGTH_SHORT).show()
+
+                        }else if(response.body()!!.status==136){
+                            DialogFunctions.commonErrorAlertDialog("Alert","Date already Registered",mContext)
+                        }
+                        else
+                        {
+
+                            DialogFunctions.commonErrorAlertDialog(mContext.resources.getString(R.string.alert), ConstantFunctions.commonErrorString(response.body()!!.status), mContext)
+                        }
+
+                    } catch (e: Exception) {
+                        e.printStackTrace()
+                    }
+                }
+            }
+
+        })
+
+    }
+    fun callStudentListApi()
+    {
+        progressDialogAdd.visibility=View.VISIBLE
+        studentListArrayList= ArrayList()
+        val call: Call<StudentListModel> = ApiClient.getClient.studentList("Bearer "+ PreferenceManager.getaccesstoken(mContext))
+        call.enqueue(object : Callback<StudentListModel> {
+            override fun onFailure(call: Call<StudentListModel>, t: Throwable) {
+                Log.e("Failed", t.localizedMessage)
+                progressDialogAdd.visibility=View.GONE
+            }
+            override fun onResponse(call: Call<StudentListModel>, response: Response<StudentListModel>) {
+                val responsedata = response.body()
+                progressDialogAdd.visibility=View.GONE
+                if (responsedata != null) {
+                    try {
+
+                        if (response.body()!!.status==100)
+                        {
+                            studentListArrayList=ArrayList()
+                            studentListArrayList.addAll(response.body()!!.responseArray.studentList)
+                            if (PreferenceManager.getStudentID(mContext).equals(""))
+                            {
+                                Log.e("Empty Img","Empty")
+                                studentName=studentListArrayList.get(0).name
+                                studentImg=studentListArrayList.get(0).photo
+                                studentId=studentListArrayList.get(0).id
+                                studentClass=studentListArrayList.get(0).section
+                                PreferenceManager.setStudentID(mContext,studentId)
+                                PreferenceManager.setStudentName(mContext,studentName)
+                                PreferenceManager.setStudentPhoto(mContext,studentImg)
+                                PreferenceManager.setStudentClass(mContext,studentClass)
+                                studentNameTxt.text=studentName
+                                Log.e("studid(0)", PreferenceManager.getStudentID(mContext).toString())
+                                if(!studentImg.equals(""))
+                                {
+                                    Glide.with(mContext) //1
+                                        .load(studentImg)
+                                        .placeholder(R.drawable.student)
+                                        .error(R.drawable.student)
+                                        .skipMemoryCache(true) //2
+                                        .diskCacheStrategy(DiskCacheStrategy.NONE) //3
+                                        .transform(CircleCrop()) //4
+                                        .into(studImg)
+                                }
+                                else{
+                                    studImg.setImageResource(R.drawable.student)
+                                }
+
+                            }
+                            else{
+                                studentName= PreferenceManager.getStudentName(mContext)!!
+                                studentImg= PreferenceManager.getStudentPhoto(mContext)!!
+                                studentId= PreferenceManager.getStudentID(mContext)!!
+                                studentClass= PreferenceManager.getStudentClass(mContext)!!
+                                studentNameTxt.text=studentName
+                                if(!studentImg.equals(""))
+                                {
+                                    Glide.with(mContext) //1
+                                        .load(studentImg)
+                                        .placeholder(R.drawable.student)
+                                        .error(R.drawable.student)
+                                        .skipMemoryCache(true) //2
+                                        .diskCacheStrategy(DiskCacheStrategy.NONE) //3
+                                        .transform(CircleCrop()) //4
+                                        .into(studImg)
+                                }
+                                else{
+                                    studImg.setImageResource(R.drawable.student)
+                                }
+                            }
+
+                        }
+                        else
+                        {
+
+                            DialogFunctions.commonErrorAlertDialog(mContext.resources.getString(R.string.alert), ConstantFunctions.commonErrorString(response.body()!!.status), mContext)
+                        }
+
+
+                    } catch (e: Exception) {
+                        e.printStackTrace()
+                    }
+                }
+            }
+
+        })
+    }
+    fun showStudentList(context: Context ,mStudentList : ArrayList<StudentList>)
+    {
+        val dialog = Dialog(context)
+        dialog.requestWindowFeature(Window.FEATURE_NO_TITLE)
+        dialog.window!!.setBackgroundDrawable(ColorDrawable(Color.TRANSPARENT))
+        dialog.setCancelable(false)
+        dialog.setContentView(R.layout.dialogue_student_list)
+        var iconImageView = dialog.findViewById(R.id.iconImageView) as ImageView
+        var btn_dismiss = dialog.findViewById(R.id.btn_dismiss) as Button
+        var studentListRecycler = dialog.findViewById(R.id.studentListRecycler) as RecyclerView
+        iconImageView.setImageResource(R.drawable.boy)
+        //if(mSocialMediaArray.get())
+        val sdk = Build.VERSION.SDK_INT
+        if (sdk < Build.VERSION_CODES.JELLY_BEAN) {
+            btn_dismiss.setBackgroundDrawable(
+                mContext.resources.getDrawable(R.drawable.button_new)
+            )
+        } else {
+            btn_dismiss.background = mContext.resources.getDrawable(R.drawable.button_new)
+        }
+
+        studentListRecycler.setHasFixedSize(true)
+        val llm = LinearLayoutManager(mContext)
+        llm.orientation = LinearLayoutManager.VERTICAL
+        studentListRecycler.layoutManager = llm
+        if(mStudentList.size>0)
+        {
+            val studentAdapter = StudentListAdapter(mContext,mStudentList)
+            studentListRecycler.adapter = studentAdapter
+        }
+
+        btn_dismiss.setOnClickListener()
+        {
+            dialog.dismiss()
+        }
+        studentListRecycler.addOnItemClickListener(object: OnItemClickListener {
+            override fun onItemClicked(position: Int, view: View) {
+                // Your logic
+                //progressDialogAdd.visibility=View.VISIBLE
+
+                studentName=studentListArrayList.get(position).name
+                studentImg=studentListArrayList.get(position).photo
+                studentId=studentListArrayList.get(position).id
+                studentClass=studentListArrayList.get(position).section
+                PreferenceManager.setStudentID(mContext,studentId)
+                PreferenceManager.setStudentName(mContext,studentName)
+                PreferenceManager.setStudentPhoto(mContext,studentImg)
+                PreferenceManager.setStudentClass(mContext,studentClass)
+                Log.e("studidclick", PreferenceManager.getStudentID(mContext).toString())
+                studentNameTxt.text=studentName
+                if(!studentImg.equals(""))
+                {
+                    Glide.with(mContext) //1
+                        .load(studentImg)
+                        .placeholder(R.drawable.student)
+                        .error(R.drawable.student)
+                        .skipMemoryCache(true) //2
+                        .diskCacheStrategy(DiskCacheStrategy.NONE) //3
+                        .transform(CircleCrop()) //4
+                        .into(studImg)
+                }
+                else
+                {
+                    studImg.setImageResource(R.drawable.student)
+                }
+                //progressDialogAdd.visibility = View.VISIBLE
+
+                dialog.dismiss()
+            }
+        })
+        dialog.show()
+    }
+    fun commonSuccessAlertDialog(heading:String,Message:String,context:Context)
+    {
+        val dialog = Dialog(context)
+        dialog.requestWindowFeature(Window.FEATURE_NO_TITLE)
+        dialog.window!!.setBackgroundDrawable(ColorDrawable(Color.TRANSPARENT))
+        dialog.setCancelable(false)
+        dialog.setContentView(R.layout.dialog_success_alert)
+        var iconImageView = dialog.findViewById(R.id.iconImageView) as ImageView
+        var alertHead = dialog.findViewById(R.id.alertHead) as TextView
+        var messageTxt = dialog.findViewById(R.id.messageTxt) as TextView
+        var btn_Ok = dialog.findViewById(R.id.btn_Ok) as Button
+        messageTxt.text = Message
+        alertHead.text = heading
+        btn_Ok.setOnClickListener()
+        {
+            dialog.dismiss()
+            finish()
+        }
+        dialog.show()
+
+    }
+    }
Index: app/src/main/java/com/nas/alreem/activity/parent_meetings/model/PtaDatesModel.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/nas/alreem/activity/parent_meetings/model/PtaDatesModel.kt b/app/src/main/java/com/nas/alreem/activity/parent_meetings/model/PtaDatesModel.kt
new file mode 100644
--- /dev/null	(date 1688982332000)
+++ b/app/src/main/java/com/nas/alreem/activity/parent_meetings/model/PtaDatesModel.kt	(date 1688982332000)
@@ -0,0 +1,10 @@
+package com.nas.alreem.activity.parent_meetings.model
+
+import com.google.gson.annotations.SerializedName
+
+class PtaDatesModel  (
+    @SerializedName("status") val status: Int,
+    @SerializedName("message") val message: String,
+    @SerializedName("data") val data: ArrayList<String>
+
+)
\ No newline at end of file
Index: app/src/main/java/com/nas/alreem/activity/staff_directory/model/ListStaffDetailApiModel.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/nas/alreem/activity/staff_directory/model/ListStaffDetailApiModel.kt b/app/src/main/java/com/nas/alreem/activity/staff_directory/model/ListStaffDetailApiModel.kt
new file mode 100644
--- /dev/null	(date 1688540712000)
+++ b/app/src/main/java/com/nas/alreem/activity/staff_directory/model/ListStaffDetailApiModel.kt	(date 1688540712000)
@@ -0,0 +1,7 @@
+package com.nas.alreem.activity.staff_directory.model
+
+import com.google.gson.annotations.SerializedName
+
+class ListStaffDetailApiModel (
+    @SerializedName("staff_department_id")var staff_department_id:Int
+)
\ No newline at end of file
Index: app/src/main/java/com/nas/alreem/activity/staff_directory/StaffDetailActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/nas/alreem/activity/staff_directory/StaffDetailActivity.kt b/app/src/main/java/com/nas/alreem/activity/staff_directory/StaffDetailActivity.kt
new file mode 100644
--- /dev/null	(date 1688972342000)
+++ b/app/src/main/java/com/nas/alreem/activity/staff_directory/StaffDetailActivity.kt	(date 1688972342000)
@@ -0,0 +1,187 @@
+package com.nas.alreem.activity.staff_directory
+
+import android.content.Context
+import android.content.Intent
+import android.os.Bundle
+import android.text.Editable
+import android.text.TextWatcher
+import android.util.Log
+import android.view.View
+import android.widget.EditText
+import android.widget.ImageView
+import android.widget.ProgressBar
+import android.widget.RelativeLayout
+import android.widget.TextView
+import android.widget.Toast
+import androidx.appcompat.app.AppCompatActivity
+import androidx.recyclerview.widget.LinearLayoutManager
+import androidx.recyclerview.widget.RecyclerView
+import com.nas.alreem.R
+
+import com.nas.alreem.activity.home.HomeActivity
+import com.nas.alreem.activity.staff_directory.adapter.StaffCategoryAdapter
+import com.nas.alreem.activity.staff_directory.adapter.StaffDetailAdapter
+import com.nas.alreem.activity.staff_directory.model.DepartmentStaffsModel
+import com.nas.alreem.activity.staff_directory.model.ListStaffDetailApiModel
+import com.nas.alreem.activity.staff_directory.model.ListStaffDetailModel
+import com.nas.alreem.activity.staff_directory.model.StaffDeptListModel
+import com.nas.alreem.constants.ConstantFunctions
+import com.nas.alreem.constants.ConstantWords
+import com.nas.alreem.constants.DialogFunctions
+import com.nas.alreem.constants.PreferenceManager
+import com.nas.alreem.fragment.parent_meetings.adapter.RequestAbsenceRecyclerAdapter
+import com.nas.alreem.rest.ApiClient
+import retrofit2.Call
+import retrofit2.Callback
+import retrofit2.Response
+import java.util.Locale
+
+class StaffDetailActivity : AppCompatActivity() {
+    lateinit var mContext: Context
+    lateinit var backRelative: RelativeLayout
+    lateinit var heading: TextView
+    lateinit var logoClickImgView: ImageView
+    lateinit var progressDialogAdd: ProgressBar
+    lateinit var staff_detail_rec: RecyclerView
+    lateinit var searchtxt: EditText
+    lateinit var searchbtn: ImageView
+
+    lateinit var staffDetailList:ArrayList<DepartmentStaffsModel>
+    lateinit var filtered:ArrayList<DepartmentStaffsModel>
+    var cat_id:Int=0
+    var cat_name:String=""
+
+    override fun onCreate(savedInstanceState: Bundle?) {
+        super.onCreate(savedInstanceState)
+        setContentView(R.layout.activity_staff_directory_detail)
+
+        mContext=this
+        initfn()
+        callStaffDetailListApi()
+
+    }
+    private fun initfn() {
+        staffDetailList= ArrayList()
+        filtered= ArrayList()
+        heading = findViewById(R.id.heading)
+        heading.text = ConstantWords.earlypickup
+        backRelative = findViewById(R.id.backRelative)
+        logoClickImgView = findViewById(R.id.logoClickImgView)
+        progressDialogAdd = findViewById(R.id.progressDialogAdd)
+        staff_detail_rec=findViewById(R.id.mStaffListView)
+        searchbtn = findViewById(R.id.btnImgsearch)
+        searchtxt =findViewById(R.id.searchEditText)
+        cat_id=intent.getIntExtra("cat_id",0)
+        cat_name= intent.getStringExtra("cat_name").toString()
+
+        searchbtn.setOnClickListener(View.OnClickListener {
+            if (staffDetailList.size > 0) {
+                filtered = ArrayList<DepartmentStaffsModel>()
+                for (i in staffDetailList.indices) {
+                    if (staffDetailList.get(i).name
+                            .lowercase(Locale.getDefault())
+                            .contains(searchtxt.text.toString().lowercase(Locale.getDefault())))
+                    {
+                        filtered.add(staffDetailList.get(i))
+                    }
+                }
+                staff_detail_rec.visibility=View.VISIBLE
+                staff_detail_rec.layoutManager= LinearLayoutManager(mContext)
+                var staff_detail_adapter= StaffDetailAdapter(mContext,filtered)
+                staff_detail_rec.adapter=staff_detail_adapter
+
+            }
+            // AppUtils.hideKeyBoard(mContext)
+        })
+        searchtxt.addTextChangedListener(object : TextWatcher {
+            override fun onTextChanged(
+                s: CharSequence, start: Int,
+                before: Int, count: Int
+            ) {
+                // TODO Auto-generated method stub
+                if (staffDetailList.size > 0) {
+                    filtered = ArrayList<DepartmentStaffsModel>()
+                    for (i in staffDetailList.indices) {
+                        if ((staffDetailList.get(i).name
+                                .lowercase(Locale.getDefault()).contains(s.toString().lowercase(
+                                    Locale.getDefault()))
+                                    ))
+                        {
+                            filtered.add(staffDetailList.get(i))
+                        }
+                    }
+                    staff_detail_rec.visibility=View.VISIBLE
+                    staff_detail_rec.layoutManager= LinearLayoutManager(mContext)
+                    var staff_detail_adapter= StaffDetailAdapter(mContext,filtered)
+                    staff_detail_rec.adapter=staff_detail_adapter
+
+                }
+            }
+
+            override fun beforeTextChanged(
+                s: CharSequence, start: Int,
+                count: Int, after: Int
+            ) {
+                // TODO Auto-generated method stub
+            }
+
+            override fun afterTextChanged(s: Editable) {
+                // TODO Auto-generated method stub
+            }
+        })
+
+        backRelative.setOnClickListener(View.OnClickListener {
+            finish()
+        })
+        heading.text= ConstantWords.staff_directory
+        logoClickImgView.setOnClickListener(View.OnClickListener {
+            val intent = Intent(mContext, HomeActivity::class.java)
+            intent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP)
+            startActivity(intent)
+        })
+    }
+    private fun callStaffDetailListApi(){
+        staffDetailList=ArrayList()
+        val token = PreferenceManager.getaccesstoken(mContext)
+        progressDialogAdd.visibility=View.VISIBLE
+        val staffDetailSuccessBody = ListStaffDetailApiModel(cat_id)
+        val call: Call<ListStaffDetailModel> =
+            ApiClient.getClient.staff_detail_list(staffDetailSuccessBody, "Bearer " + token)
+        call.enqueue(object : Callback<ListStaffDetailModel> {
+            override fun onFailure(call: Call<ListStaffDetailModel>, t: Throwable) {
+                Log.e("Failed", t.localizedMessage)
+                progressDialogAdd.visibility=View.GONE
+                //mProgressRelLayout.visibility=View.INVISIBLE
+            }
+
+            override fun onResponse(call: Call<ListStaffDetailModel>, response: Response<ListStaffDetailModel>) {
+                val responsedata = response.body()
+                progressDialogAdd.visibility=View.GONE
+                staff_detail_rec.visibility=View.VISIBLE
+                //progressDialog.visibility = View.GONE
+                Log.e("Response Signup", responsedata.toString())
+                if (responsedata != null) {
+                        if (response.body()!!.status==100) {
+                            Log.e("st",responsedata.responseArray.department_staffs.size.toString())
+                            staffDetailList=responsedata.responseArray.department_staffs
+                            //staffDetailList.addAll(responsedata.responseArray.department_staffs)
+
+                            Log.e("listsize",staffDetailList.size.toString())
+                            staff_detail_rec.layoutManager= LinearLayoutManager(mContext)
+                            var staff_detail_adapter= StaffDetailAdapter(mContext,staffDetailList)
+                            staff_detail_rec.adapter=staff_detail_adapter
+
+                        }
+                        else
+                        {
+
+                            DialogFunctions.commonErrorAlertDialog(mContext.resources.getString(R.string.alert), ConstantFunctions.commonErrorString(response.body()!!.status), mContext)
+                        }
+
+
+                }
+            }
+
+        })
+    }
+}
\ No newline at end of file
Index: app/src/main/res/layout/activity_request_earlypickup.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/activity_request_earlypickup.xml b/app/src/main/res/layout/activity_request_earlypickup.xml
new file mode 100644
--- /dev/null	(date 1688365464000)
+++ b/app/src/main/res/layout/activity_request_earlypickup.xml	(date 1688365464000)
@@ -0,0 +1,192 @@
+<?xml version="1.0" encoding="utf-8"?>
+<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    android:orientation="vertical"
+    android:background="@color/white">
+
+    <include
+        android:id="@+id/includeRel"
+        layout="@layout/layout_activity_header" />
+
+    <ScrollView
+        android:layout_width="match_parent"
+        android:layout_height="match_parent"
+        android:layout_below="@+id/includeRel"
+        android:overScrollMode="never"
+        android:scrollbars="none">
+
+        <LinearLayout
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:orientation="vertical">
+
+            <LinearLayout
+                android:id="@+id/studentSpinner"
+                android:layout_width="match_parent"
+                android:layout_height="45dp"
+                android:layout_gravity="center"
+                android:layout_marginLeft="10dp"
+                android:layout_marginTop="10dp"
+                android:layout_marginRight="10dp"
+                android:layout_marginBottom="10dp"
+                android:background="@drawable/event_spinnerbg"
+                android:gravity="center"
+                android:orientation="horizontal"
+                android:weightSum="100">
+
+                <ImageView
+                    android:id="@+id/studImg"
+                    android:layout_width="35dp"
+                    android:layout_height="35dp"
+                    android:layout_margin="5dp"
+                    android:gravity="center"
+                    android:padding="5dp"
+                    android:scaleType="fitCenter"
+                    android:src="@drawable/boy"
+                    app:siBorderColor="#A0DAE5"
+                    app:siBorderWidth="1dp" />
+
+                <com.nas.alreem.commonviews.CustomFontSansProTextBlack
+                    android:id="@+id/studentName"
+                    android:layout_width="0dp"
+                    android:layout_height="match_parent"
+                    android:layout_weight="80"
+                    android:gravity="left|center"
+                    android:paddingLeft="10dp"
+                    android:text="Select a child"
+                    android:textSize="14sp" />
+
+                <View
+                    android:layout_width="0dp"
+                    android:layout_height="match_parent"
+                    android:layout_weight="8"></View>
+
+                <ImageView
+                    android:layout_width="0dp"
+                    android:layout_height="30dp"
+                    android:layout_gravity="right|center"
+                    android:layout_weight="12"
+                    android:src="@drawable/arrowdownnew"
+                    android:visibility="visible" />
+
+            </LinearLayout>
+
+            <com.nas.alreem.commonviews.CustomFontSansProTextBlack
+                android:id="@+id/enterStratDate"
+                android:layout_width="match_parent"
+                android:layout_height="45dp"
+                android:layout_below="@+id/studentSpinner"
+                android:layout_marginLeft="10dp"
+                android:layout_marginTop="10dp"
+                android:layout_marginRight="10dp"
+                android:background="@drawable/edittext_greybg"
+                android:clickable="true"
+                android:editable="false"
+                android:gravity="left|center"
+                android:hint="Date"
+                android:imeOptions="actionNext"
+                android:paddingLeft="20dp"
+
+                android:singleLine="true"
+                android:textColor="@color/black"
+                android:textColorHint="@color/dark_grey1"
+                android:textSize="15sp" />
+
+            <com.nas.alreem.commonviews.CustomFontSansProTextBlack
+                android:id="@+id/enterEndDate"
+                android:layout_width="match_parent"
+                android:layout_height="45dp"
+                android:layout_below="@+id/enterStratDate"
+                android:layout_marginLeft="10dp"
+                android:layout_marginTop="10dp"
+                android:layout_marginRight="10dp"
+                android:background="@drawable/edittext_greybg"
+                android:clickable="true"
+                android:editable="false"
+                android:gravity="left|center"
+                android:hint="Time"
+                android:imeOptions="actionNext"
+                android:paddingLeft="20dp"
+                android:singleLine="true"
+                android:textColor="@color/black"
+                android:textColorHint="@color/dark_grey1"
+                android:textSize="15sp" />
+
+            <com.nas.alreem.commonviews.CustomFontSansProEditTextNoColor
+                android:id="@+id/enterPickupname"
+                android:layout_width="match_parent"
+                android:layout_height="45dp"
+                android:layout_below="@+id/enterEndDate"
+                android:layout_centerInParent="true"
+                android:layout_marginLeft="10dp"
+                android:layout_marginRight="10dp"
+                android:layout_marginTop="10dp"
+                android:background="@drawable/edittext_greybg"
+                android:focusableInTouchMode="true"
+                android:gravity="left|center"
+                android:hint="Pick up by"
+                android:imeOptions="actionDone"
+                android:paddingLeft="20dp"
+                android:textColor="@color/black"
+                android:textColorHint="@color/dark_grey1"
+                android:textSize="15sp" />
+
+            <com.nas.alreem.commonviews.CustomFontSansProEditTextNoColor
+
+                android:id="@+id/enterMessage"
+                android:layout_width="match_parent"
+                android:layout_height="wrap_content"
+                android:layout_below="@+id/enterPickupname"
+                android:layout_marginLeft="10dp"
+                android:layout_marginTop="10dp"
+                android:layout_marginRight="10dp"
+                android:background="@drawable/edittext_greybg"
+                android:focusableInTouchMode="true"
+                android:gravity="top"
+                android:hint="Reason for early pickup"
+                android:imeOptions="actionDone"
+                android:inputType="textMultiLine"
+                android:lines="5"
+                android:paddingLeft="20dp"
+                android:paddingTop="20dp"
+                android:singleLine="true"
+                android:textColor="@color/black"
+                android:textColorHint="@color/dark_grey1"
+                android:textSize="15sp" />
+
+            <LinearLayout
+                android:id="@+id/submitLayout"
+                android:layout_width="match_parent"
+                android:layout_height="45dp"
+                android:layout_below="@+id/enterMessage"
+                android:layout_margin="10dp"
+                android:clickable="true">
+
+                <Button
+                    android:id="@+id/submitBtn"
+                    android:layout_width="match_parent"
+                    android:layout_height="match_parent"
+                    android:background="@drawable/button_new"
+                    android:gravity="center"
+                    android:text="@string/submit"
+                    android:textColor="@color/white"
+                    android:textSize="18sp"
+                    android:visibility="visible" />
+
+            </LinearLayout>
+
+        </LinearLayout>
+
+    </ScrollView>
+    <ProgressBar
+        android:id="@+id/progressDialogAdd"
+        android:layout_width="40dp"
+        android:layout_height="40dp"
+        android:layout_centerInParent="true"
+        android:indeterminateDrawable="@anim/customspinner"
+        android:visibility="gone"
+
+        />
+</RelativeLayout>
\ No newline at end of file
Index: app/src/main/java/com/nas/alreem/activity/absence/model/AbsenceRequestListModel.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/nas/alreem/activity/absence/model/AbsenceRequestListModel.kt b/app/src/main/java/com/nas/alreem/activity/absence/model/AbsenceRequestListModel.kt
new file mode 100644
--- /dev/null	(date 1688446748000)
+++ b/app/src/main/java/com/nas/alreem/activity/absence/model/AbsenceRequestListModel.kt	(date 1688446748000)
@@ -0,0 +1,10 @@
+package com.nas.alreem.activity.absence.model
+
+import com.google.gson.annotations.SerializedName
+
+class AbsenceRequestListModel (
+    @SerializedName("id")var id:String,
+    @SerializedName("from_date")var from_date:String,
+    @SerializedName("to_date")var to_date:String,
+    @SerializedName("reason")var reason:String
+)
\ No newline at end of file
Index: app/src/main/java/com/nas/alreem/activity/absence/model/RequestLeaveApiModel.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/nas/alreem/activity/absence/model/RequestLeaveApiModel.kt b/app/src/main/java/com/nas/alreem/activity/absence/model/RequestLeaveApiModel.kt
new file mode 100644
--- /dev/null	(date 1688389074000)
+++ b/app/src/main/java/com/nas/alreem/activity/absence/model/RequestLeaveApiModel.kt	(date 1688389074000)
@@ -0,0 +1,12 @@
+package com.nas.alreem.activity.absence.model
+
+import com.google.gson.annotations.SerializedName
+
+class RequestLeaveApiModel(
+
+    @SerializedName("student_id") val student_id: String,
+    @SerializedName("from_date") val from_date: String,
+    @SerializedName("to_date") val to_date: String,
+    @SerializedName("reason") val reason: String
+
+)
\ No newline at end of file
Index: app/src/main/java/com/nas/alreem/fragment/absence/adapter/PickuplistAdapter.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/nas/alreem/fragment/absence/adapter/PickuplistAdapter.kt b/app/src/main/java/com/nas/alreem/fragment/absence/adapter/PickuplistAdapter.kt
new file mode 100644
--- /dev/null	(date 1688386330000)
+++ b/app/src/main/java/com/nas/alreem/fragment/absence/adapter/PickuplistAdapter.kt	(date 1688386330000)
@@ -0,0 +1,61 @@
+package com.nas.alreem.fragment.absence.adapter
+
+import android.content.Context
+import android.view.LayoutInflater
+import android.view.View
+import android.view.ViewGroup
+import android.widget.TextView
+import androidx.annotation.NonNull
+import androidx.recyclerview.widget.RecyclerView
+import com.nas.alreem.R
+import com.nas.alreem.activity.absence.model.EarlyPickupListArray
+import com.nas.alreem.fragment.absence.model.EarlyPickupListModel
+import java.text.DateFormat
+import java.text.SimpleDateFormat
+import java.util.Date
+
+internal class PickuplistAdapter (private var Context: Context, var pickup_list:ArrayList<EarlyPickupListArray>) :
+    RecyclerView.Adapter<PickuplistAdapter.MyViewHolder>() {
+    internal inner class MyViewHolder(view: View) : RecyclerView.ViewHolder(view) {
+        var listDate: TextView = view.findViewById(R.id.listDate)
+        var listStatus: TextView =view.findViewById(R.id.listStatus)
+    }
+    @NonNull
+    override fun onCreateViewHolder(parent: ViewGroup, viewType: Int): MyViewHolder {
+        val itemView = LayoutInflater.from(parent.context)
+            .inflate(R.layout.adapter_absence_leave_recycelr, parent, false)
+        return MyViewHolder(itemView)
+    }
+    override fun onBindViewHolder(holder: MyViewHolder, position: Int) {
+        val list = pickup_list[position]
+
+        val fromDate=list.pickup_date
+        val inputFormat: DateFormat = SimpleDateFormat("yyyy-MM-dd")
+        val outputFormat: DateFormat = SimpleDateFormat("dd MMM yyyy")
+        val inputDateStr = fromDate
+        val date: Date = inputFormat.parse(inputDateStr)
+        val outputDateStr: String = outputFormat.format(date)
+        holder.listDate.text = outputDateStr
+
+        var status=list.status
+        if (status==1){
+            holder.listStatus.visibility = View.VISIBLE
+            holder.listStatus.text = "PENDING"
+            //label pending
+        }
+        else if (status==2){
+            holder.listStatus.visibility = View.VISIBLE
+            holder.listStatus.text = "APPROVED"
+            //label approved
+        }
+        else{
+            holder.listStatus.visibility = View.VISIBLE
+            holder.listStatus.text = "REJECTED"
+            //label rejected
+        }
+
+    }
+    override fun getItemCount(): Int {
+        return pickup_list.size
+    }
+}
\ No newline at end of file
Index: app/src/main/java/com/nas/alreem/fragment/parent_meetings/model/StaffInfoDetail.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/nas/alreem/fragment/parent_meetings/model/StaffInfoDetail.kt b/app/src/main/java/com/nas/alreem/fragment/parent_meetings/model/StaffInfoDetail.kt
new file mode 100644
--- /dev/null	(date 1688972972000)
+++ b/app/src/main/java/com/nas/alreem/fragment/parent_meetings/model/StaffInfoDetail.kt	(date 1688972972000)
@@ -0,0 +1,9 @@
+package com.nas.alreem.fragment.parent_meetings.model
+
+import com.google.gson.annotations.SerializedName
+
+class StaffInfoDetail (
+    @SerializedName("name")var name:String,
+    @SerializedName("image_url")var staff_photo:String,
+    @SerializedName("id")var id:Int
+)
\ No newline at end of file
Index: app/src/main/java/com/nas/alreem/fragment/parent_meetings/ParentMeetingsFragment.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/nas/alreem/fragment/parent_meetings/ParentMeetingsFragment.kt b/app/src/main/java/com/nas/alreem/fragment/parent_meetings/ParentMeetingsFragment.kt
new file mode 100644
--- /dev/null	(date 1688981954000)
+++ b/app/src/main/java/com/nas/alreem/fragment/parent_meetings/ParentMeetingsFragment.kt	(date 1688981954000)
@@ -0,0 +1,330 @@
+package com.nas.alreem.fragment.parent_meetings
+
+import android.app.Dialog
+import android.content.Context
+import android.content.Intent
+import android.graphics.Color
+import android.graphics.drawable.ColorDrawable
+import android.os.Build
+import android.os.Bundle
+import android.util.Log
+import android.view.LayoutInflater
+import android.view.View
+import android.view.ViewGroup
+import android.view.Window
+import android.widget.Button
+import android.widget.ImageView
+import android.widget.ProgressBar
+import android.widget.RelativeLayout
+import android.widget.TextView
+import androidx.fragment.app.Fragment
+import androidx.recyclerview.widget.LinearLayoutManager
+import androidx.recyclerview.widget.RecyclerView
+import com.bumptech.glide.Glide
+import com.bumptech.glide.load.engine.DiskCacheStrategy
+import com.bumptech.glide.load.resource.bitmap.CircleCrop
+import com.nas.alreem.R
+import com.nas.alreem.activity.absence.model.ListAbsenceApiModel
+import com.nas.alreem.activity.parent_meetings.ParentsEveningCalendarActivity
+import com.nas.alreem.activity.parent_meetings.ParentsEveninginfoActivity
+import com.nas.alreem.activity.parent_meetings.ReviewAppointmentsRecyclerViewActivity
+import com.nas.alreem.activity.payments.adapter.StudentListAdapter
+import com.nas.alreem.activity.payments.model.StudentList
+import com.nas.alreem.activity.payments.model.StudentListModel
+import com.nas.alreem.constants.ConstantFunctions
+import com.nas.alreem.constants.ConstantWords
+import com.nas.alreem.constants.DialogFunctions
+import com.nas.alreem.constants.OnItemClickListener
+import com.nas.alreem.constants.PreferenceManager
+import com.nas.alreem.constants.addOnItemClickListener
+import com.nas.alreem.fragment.parent_meetings.adapter.StaffListAdapter
+import com.nas.alreem.fragment.parent_meetings.model.ListStaffPtaApiModel
+import com.nas.alreem.fragment.parent_meetings.model.ListStaffPtaModel
+import com.nas.alreem.fragment.parent_meetings.model.StaffInfoDetail
+import com.nas.alreem.rest.ApiClient
+import retrofit2.Call
+import retrofit2.Callback
+import retrofit2.Response
+
+class ParentMeetingsFragment:Fragment() {
+    lateinit var mContext: Context
+    lateinit var titleTextView: TextView
+    lateinit var progressDialogAdd: ProgressBar
+    lateinit var infoImg:ImageView
+    lateinit var studentName: String
+    lateinit var studentrelatv: RelativeLayout
+    lateinit var student_image: ImageView
+    //lateinit var studImg: ImageView
+    lateinit var studentImg: String
+    var student_class:String=""
+    var staffName: String=""
+    var staffrole: String=""
+    var staffId: String=""
+    var staffImg: String=""
+    var staffEmail: String=""
+    lateinit var staffRelative: RelativeLayout
+    lateinit var staff_image: ImageView
+    lateinit var staffNameTV: TextView
+    lateinit var studentname:TextView
+    var studentListArrayList = ArrayList<StudentList>()
+    lateinit var staffListArray: ArrayList<StaffInfoDetail>
+    lateinit var nxtbtn: ImageView
+    lateinit var review_img: ImageView
+    var studentId: String=""
+    var apiCall:Int=0
+
+
+    override fun onCreateView(
+        inflater: LayoutInflater, container: ViewGroup?,
+        savedInstanceState: Bundle?
+    ): View? {
+        return inflater.inflate(R.layout.frament_parent_meetings, container, false)
+    }
+
+    override fun onViewCreated(view: View, savedInstanceState: Bundle?) {
+        super.onViewCreated(view, savedInstanceState)
+        mContext=requireContext()
+        Log.e("frag","PM")
+        initializeUI()
+    }
+
+    private fun initializeUI(){
+        progressDialogAdd=requireView().findViewById(R.id.progressDialogAdd)
+        titleTextView=requireView().findViewById(R.id.titleTextView)
+        titleTextView.text= ConstantWords.parentmeetings
+        infoImg = requireView().findViewById(R.id.infoImg)
+        studentrelatv=requireView().findViewById(R.id.studentRelative)
+        student_image=requireView().findViewById(R.id.selectStudentImgView)
+        staff_image=requireView().findViewById(R.id.selectStaffImgView)
+        studentname=requireView().findViewById(R.id.studentNameTV)
+        staffRelative=requireView().findViewById(R.id.staffRelative)
+        staffListArray= ArrayList()
+        staffNameTV=requireView().findViewById(R.id.staffNameTV)
+        nxtbtn=requireView().findViewById(R.id.next)
+        review_img=requireView().findViewById(R.id.reviewImageView)
+        onclick()
+        callStudentListApi()
+
+        Log.e("time", PreferenceManager.getIsFirstTimeInPE(mContext).toString())
+        if (PreferenceManager.getIsFirstTimeInPE(mContext)) {
+            PreferenceManager.setIsFirstTimeInPE(mContext, false)
+            val mintent = Intent(mContext, ParentsEveninginfoActivity::class.java)
+            mintent.putExtra("type", 1)
+            mContext.startActivity(mintent)
+            Log.e("timeafter",PreferenceManager.getIsFirstTimeInPE(mContext).toString())
+        }
+    }
+    private fun onclick(){
+
+        infoImg.setOnClickListener(View.OnClickListener {
+            val mIntent = Intent(mContext, ParentsEveninginfoActivity::class.java)
+            mContext.startActivity(mIntent)
+        })
+        student_image.setOnClickListener {
+            showStudentList(mContext, studentListArrayList)
+
+        }
+        staff_image.setOnClickListener {
+            showStaffList(mContext, staffListArray)
+        }
+        nxtbtn.setOnClickListener {
+            val mIntent = Intent(mContext, ParentsEveningCalendarActivity::class.java)
+            mIntent.putExtra("studId",studentId)
+            mIntent.putExtra("studName",studentName)
+            mIntent.putExtra("studClass",student_class)
+            mIntent.putExtra("staffId",staffId)
+            mIntent.putExtra("staffName",staffName)
+            mContext.startActivity(mIntent)
+        }
+        review_img.setOnClickListener {
+            val mIntent = Intent(mContext, ReviewAppointmentsRecyclerViewActivity::class.java)
+            mContext.startActivity(mIntent)
+        }
+    }
+    private fun callStudentListApi(){
+        progressDialogAdd.visibility = View.VISIBLE
+        val token = PreferenceManager.getaccesstoken(mContext)
+        val call: Call<StudentListModel> = ApiClient.getClient.studentList("Bearer "+token)
+        call.enqueue(object : Callback<StudentListModel> {
+            override fun onFailure(call: Call<StudentListModel>, t: Throwable) {
+                Log.e("Error", t.localizedMessage)
+                progressDialogAdd.visibility = View.GONE
+            }
+            override fun onResponse(call: Call<StudentListModel>, response: Response<StudentListModel>) {
+                progressDialogAdd.visibility = View.GONE
+                //val arraySize :Int = response.body()!!.responseArray.studentList.size
+                if (response.body()!!.status==100)
+                {
+                    studentListArrayList.addAll(response.body()!!.responseArray.studentList)
+
+
+                }
+                else
+                {
+
+                    DialogFunctions.commonErrorAlertDialog(mContext.resources.getString(R.string.alert), ConstantFunctions.commonErrorString(response.body()!!.status), mContext)
+                }
+
+            }
+
+        })
+    }
+    fun showStudentList(context: Context ,mStudentList : ArrayList<StudentList>)
+    {
+        val dialog = Dialog(context)
+        dialog.requestWindowFeature(Window.FEATURE_NO_TITLE)
+        dialog.window!!.setBackgroundDrawable(ColorDrawable(Color.TRANSPARENT))
+        dialog.setCancelable(false)
+        dialog.setContentView(R.layout.dialogue_student_list)
+        var iconImageView = dialog.findViewById(R.id.iconImageView) as ImageView
+        var btn_dismiss = dialog.findViewById(R.id.btn_dismiss) as Button
+        var studentListRecycler = dialog.findViewById(R.id.studentListRecycler) as RecyclerView
+        iconImageView.setImageResource(R.drawable.boy)
+        //if(mSocialMediaArray.get())
+        val sdk = Build.VERSION.SDK_INT
+        if (sdk < Build.VERSION_CODES.JELLY_BEAN) {
+            btn_dismiss.setBackgroundDrawable(
+                mContext.resources.getDrawable(R.drawable.button_new)
+            )
+        } else {
+            btn_dismiss.background = mContext.resources.getDrawable(R.drawable.button_new)
+        }
+
+        studentListRecycler.setHasFixedSize(true)
+        val llm = LinearLayoutManager(mContext)
+        llm.orientation = LinearLayoutManager.VERTICAL
+        studentListRecycler.layoutManager = llm
+        if(mStudentList.size>0)
+        {
+            val llm = LinearLayoutManager(mContext)
+            llm.orientation = LinearLayoutManager.VERTICAL
+            studentListRecycler.layoutManager = llm
+            val studentAdapter = StudentListAdapter(mContext,mStudentList)
+            studentListRecycler.adapter = studentAdapter
+        }
+
+        btn_dismiss.setOnClickListener()
+        {
+            dialog.dismiss()
+        }
+        studentListRecycler.addOnItemClickListener(object: OnItemClickListener {
+            override fun onItemClicked(position: Int, view: View) {
+                // Your logic
+                studentName = studentListArrayList[position].name
+                studentId = studentListArrayList[position].id
+                studentImg = studentListArrayList[position].photo
+                student_class=studentListArrayList[position].studentClass
+                studentname.text = studentName
+                staffRelative.visibility = View.VISIBLE
+                staff_image.setImageResource(R.drawable.addiconinparentsevng)
+                staffNameTV.text = "Staff Name:-"
+                nxtbtn.visibility = View.GONE
+                stafflistcall(studentId)
+                if (studentImg != "") {
+                    Glide.with(mContext) //1
+                        .load(studentImg)
+                        .placeholder(R.drawable.student)
+                        .error(R.drawable.student)
+                        .skipMemoryCache(true) //2
+                        .diskCacheStrategy(DiskCacheStrategy.NONE) //3
+                        .transform(CircleCrop()) //4
+                        .into(student_image)
+                } else {
+                    student_image.setImageResource(R.drawable.student)
+                }
+                dialog.dismiss()
+            }
+        })
+        dialog.show()
+    }
+    private fun stafflistcall(studentId:String){
+
+        progressDialogAdd.visibility = View.VISIBLE
+        val token = PreferenceManager.getaccesstoken(mContext)
+        val stafflist5SuccessBody = ListStaffPtaApiModel(studentId.toString())
+        val call: Call<ListStaffPtaModel> = ApiClient.getClient.staff_list_pta(stafflist5SuccessBody,"Bearer "+token)
+        call.enqueue(object : Callback<ListStaffPtaModel> {
+            override fun onFailure(call: Call<ListStaffPtaModel>, t: Throwable) {
+                Log.e("Error", t.localizedMessage)
+                progressDialogAdd.visibility = View.GONE
+            }
+            override fun onResponse(call: Call<ListStaffPtaModel>, response: Response<ListStaffPtaModel>) {
+                progressDialogAdd.visibility = View.GONE
+                //val arraySize :Int = response.body()!!.responseArray.studentList.size
+                if (response.body()!!.status==100)
+                {
+                    staffListArray.addAll(response.body()!!.data)
+
+
+                } else
+                {
+
+                    DialogFunctions.commonErrorAlertDialog(mContext.resources.getString(R.string.alert), ConstantFunctions.commonErrorString(response.body()!!.status), mContext)
+                }
+
+
+            }
+
+        })
+    }
+    fun showStaffList(context: Context, mStaffList: ArrayList<StaffInfoDetail>) {
+        val dialog = Dialog(context)
+        dialog.requestWindowFeature(Window.FEATURE_NO_TITLE)
+        dialog.window!!.setBackgroundDrawable(ColorDrawable(Color.TRANSPARENT))
+        dialog.setCancelable(false)
+        dialog.setContentView(R.layout.dialogue_student_list)
+        var iconImageView = dialog.findViewById(R.id.iconImageView) as ImageView
+        var btn_dismiss = dialog.findViewById(R.id.btn_dismiss) as Button
+        var studentListRecycler = dialog.findViewById(R.id.studentListRecycler) as RecyclerView
+        iconImageView.setImageResource(R.drawable.staff)
+        //if(mSocialMediaArray.get())
+        val sdk = Build.VERSION.SDK_INT
+        if (sdk < Build.VERSION_CODES.JELLY_BEAN) {
+            btn_dismiss.setBackgroundDrawable(
+                mContext.resources.getDrawable(R.drawable.button_new)
+            )
+        } else {
+            btn_dismiss.background = mContext.resources.getDrawable(R.drawable.button_new)
+        }
+
+        studentListRecycler.setHasFixedSize(true)
+        val llm = LinearLayoutManager(mContext)
+        llm.orientation = LinearLayoutManager.VERTICAL
+        studentListRecycler.layoutManager = llm
+        val staffAdapter = StaffListAdapter(mStaffList, mContext)
+        studentListRecycler.adapter = staffAdapter
+        btn_dismiss.setOnClickListener()
+        {
+            dialog.dismiss()
+        }
+        studentListRecycler.addOnItemClickListener(object : OnItemClickListener {
+            override fun onItemClicked(position: Int, view: View) {
+                // Your logic
+                dialog.dismiss()
+                staffName = mStaffList.get(position).name
+                //staffrole = mStaffList.get(position).role
+                staffImg = mStaffList.get(position).staff_photo
+                staffId = mStaffList.get(position).id.toString()
+               // staffEmail = mStaffList.get(position).email
+                staffNameTV.text = staffName
+                nxtbtn.visibility = View.VISIBLE
+                if (!staffImg.equals("")) {
+                    Glide.with(mContext) //1
+                        .load(staffImg)
+                        .placeholder(R.drawable.staff)
+                        .error(R.drawable.staff)
+                        .skipMemoryCache(true) //2
+                        .diskCacheStrategy(DiskCacheStrategy.NONE) //3
+                        .transform(CircleCrop()) //4
+                        .into(staff_image)
+                    dialog.dismiss()
+                } else {
+                    staff_image.setImageResource(R.drawable.staff)
+                    dialog.dismiss()
+                }
+                dialog.dismiss()
+            }
+        })
+        dialog.show()
+    }
+}
\ No newline at end of file
Index: app/src/main/java/com/nas/alreem/activity/parent_meetings/adapter/TimeslotAdapter.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/nas/alreem/activity/parent_meetings/adapter/TimeslotAdapter.kt b/app/src/main/java/com/nas/alreem/activity/parent_meetings/adapter/TimeslotAdapter.kt
new file mode 100644
--- /dev/null	(date 1688992910000)
+++ b/app/src/main/java/com/nas/alreem/activity/parent_meetings/adapter/TimeslotAdapter.kt	(date 1688992910000)
@@ -0,0 +1,99 @@
+package com.nas.alreem.activity.parent_meetings.adapter
+
+import android.content.Context
+import android.util.Log
+import android.view.LayoutInflater
+import android.view.View
+import android.view.ViewGroup
+import android.widget.LinearLayout
+import android.widget.TextView
+import androidx.annotation.NonNull
+import androidx.cardview.widget.CardView
+import androidx.recyclerview.widget.RecyclerView
+import com.nas.alreem.R
+import com.nas.alreem.activity.parent_meetings.model.PtaTimeSlotList
+import java.text.DateFormat
+import java.text.SimpleDateFormat
+import java.util.ArrayList
+import java.util.Date
+
+internal class TimeslotAdapter(var context: Context, var timeSlotList: ArrayList<PtaTimeSlotList>,
+                               var confirm: TextView, var cancel: TextView
+) :
+    RecyclerView.Adapter<TimeslotAdapter.MyViewHolder>() {
+    internal inner class MyViewHolder(view: View) : RecyclerView.ViewHolder(view) {
+        var time_from: TextView =view.findViewById(R.id.timeFrom)
+        var time_to: TextView =view.findViewById(R.id.timeTo)
+        var gridClickRelative: LinearLayout =view.findViewById(R.id.gridClickRelative)
+        var card_view: CardView =view.findViewById(R.id.card_view)
+        var txt_colon: TextView =view.findViewById(R.id.textViewTo)
+
+        var startTimeAm = true
+        var select_bool = true
+        var startTime = ""
+        var alreadyslotBookedByUser:Boolean=false
+        var confirmedslotBookedByUser:Boolean=false
+
+    }
+    @NonNull
+    override fun onCreateViewHolder(parent: ViewGroup, viewType: Int): MyViewHolder {
+        val itemView = LayoutInflater.from(parent.context)
+            .inflate(R.layout.adapter_timeslot, parent, false)
+        return MyViewHolder(itemView)
+    }
+    override fun onBindViewHolder(holder: MyViewHolder, position: Int) {
+        Log.e("stst",timeSlotList.get(position).status)
+        if (timeSlotList.get(position).status.equals("0")) {
+            holder.gridClickRelative.setBackgroundResource(R.drawable.time_curved_rel_layout)
+            holder.time_from.setTextColor(context.resources.getColor(R.color.black))
+            holder.txt_colon.setTextColor(context.resources.getColor(R.color.black))
+            holder.time_to.setTextColor(context.resources.getColor(R.color.black))
+        }
+        else  if (timeSlotList.get(position).status.equals("1")) {
+            holder.gridClickRelative.setBackgroundResource(R.drawable.slotbooked_curved_rel_layout)
+            holder.time_from.setTextColor(context.resources.getColor(R.color.black))
+            holder.txt_colon.setTextColor(context.resources.getColor(R.color.black))
+            holder.time_to.setTextColor(context.resources.getColor(R.color.black))
+        }
+        else if (timeSlotList.get(position).status.equals("2")) {
+            Log.e("stst pos",position.toString())
+
+            Log.e("status","2")
+            holder.gridClickRelative.background=context.resources.getDrawable(R.drawable.slotbookedbyuser_curved_rel_layout)
+            holder.time_from.setTextColor(context.resources.getColor(R.color.black))
+            holder.txt_colon.setTextColor(context.resources.getColor(R.color.black))
+            holder.time_to.setTextColor(context.resources.getColor(R.color.black))
+
+        }
+        else if (timeSlotList.get(position).status.equals("3")) {
+            holder.gridClickRelative.setBackgroundResource(R.drawable.parent_slot_new)
+            holder.time_from.setTextColor(context.resources.getColor(R.color.white))
+            holder.txt_colon.setTextColor(context.resources.getColor(R.color.white))
+            holder.time_to.setTextColor(context.resources.getColor(R.color.white))
+
+        }
+        var from_time=timeSlotList[position].start_time
+        val inputFormat: DateFormat = SimpleDateFormat("hh:mm:ss")
+        val outputFormat: DateFormat = SimpleDateFormat("hh:mm aa")
+        val inputDateStr = from_time
+        val date: Date = inputFormat.parse(inputDateStr)
+        val formt_fromtime= outputFormat.format(date)
+        Log.e("dt",holder.startTime)
+        var to_time=timeSlotList[position].end_time
+        val inputFormat2: DateFormat = SimpleDateFormat("hh:mm:ss")
+        val outputFormat2: DateFormat = SimpleDateFormat("hh:mm aa")
+        val inputDateStr2 = to_time
+        val date2: Date = inputFormat2.parse(inputDateStr2)
+        val formt_totime: String = outputFormat2.format(date2)
+        Log.e("dt",formt_totime)
+
+        holder.time_from.text = formt_fromtime
+        holder.time_to.text = formt_totime
+
+    }
+    override fun getItemCount(): Int {
+
+        return timeSlotList.size
+
+    }
+}
\ No newline at end of file
Index: app/src/main/res/layout/adapter_staff_detail.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/adapter_staff_detail.xml b/app/src/main/res/layout/adapter_staff_detail.xml
new file mode 100644
--- /dev/null	(date 1688558970000)
+++ b/app/src/main/res/layout/adapter_staff_detail.xml	(date 1688558970000)
@@ -0,0 +1,97 @@
+<?xml version="1.0" encoding="utf-8"?>
+<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_width="match_parent"
+    android:layout_height="wrap_content"
+    android:orientation="vertical"
+    android:background="@color/white">
+    <!--<LinearLayout
+        android:id="@+id/deptLayout"
+        android:layout_width="match_parent"
+        android:layout_height="45dp"
+        android:background="@color/split_bg"
+        android:layout_marginTop="5dp">
+        <com.mobatia.naisapp.manager.CustomFontSansProTextWhite
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:id="@+id/departmentName"
+            android:layout_gravity="center"
+            android:text="hh"
+            android:layout_marginLeft="10dp"
+            android:textSize="20sp"/>
+    </LinearLayout>-->
+    <LinearLayout
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:orientation="horizontal"
+        android:layout_marginTop="10dp"
+        android:background="@color/term_button_bg"
+        android:layout_marginBottom="10dp"
+        android:weightSum="20">
+        <RelativeLayout
+            android:id="@+id/rel_main"
+            android:layout_width="0dp"
+            android:layout_height="match_parent"
+            android:layout_weight="15"
+            android:layout_marginLeft="7dp"
+            android:background="@color/list_bg">
+            <ImageView
+                android:id="@+id/staffImg"
+                android:layout_width="80dp"
+                android:layout_height="80dp"
+                android:layout_marginLeft="10dp"
+                android:layout_marginRight="10dp"
+                android:layout_marginTop="10dp"
+                android:layout_marginBottom="10dp"
+                android:background="@color/grey"
+                />
+            <com.nas.alreem.commonviews.CustomTextViewRegular
+                android:id="@+id/staffName"
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:layout_marginLeft="5dp"
+                android:textColor="@color/white"
+                android:layout_toRightOf="@+id/staffImg"
+                android:text="Eve"
+                android:layout_marginTop="10dp"
+                android:textSize="18sp"/>
+            <com.nas.alreem.commonviews.CustomTextViewRegular                android:id="@+id/staffRole"
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:layout_marginLeft="5dp"
+                android:layout_toRightOf="@+id/staffImg"
+                android:layout_below="@+id/staffName"
+                android:text="Teacher"
+                android:textSize="16sp"
+                android:layout_marginTop="10dp"
+                android:textColor="@color/grey"
+                android:layout_centerHorizontal="true"
+                android:layout_centerInParent="true"
+                />
+        </RelativeLayout>
+        <LinearLayout
+            android:id="@+id/linear_mail"
+            android:layout_width="0dp"
+            android:layout_height="match_parent"
+            android:layout_weight="5"
+            android:gravity="right|center"
+            android:background="@color/list_bg">
+            <ImageView
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:id="@+id/mailImage"
+                android:src="@drawable/mailiconpe_white"
+                android:gravity="right"
+                android:layout_marginRight="10dp"/>
+        </LinearLayout>
+
+    </LinearLayout>
+    <View
+        android:id="@+id/separator"
+        android:layout_width="match_parent"
+        android:layout_height="1dp"
+        android:background="@drawable/list_divider"
+        android:layout_marginTop="5dp"
+
+        ></View>
+
+</LinearLayout>
Index: app/src/main/res/drawable/event_greyfill.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/drawable/event_greyfill.xml b/app/src/main/res/drawable/event_greyfill.xml
new file mode 100644
--- /dev/null	(date 1686893734000)
+++ b/app/src/main/res/drawable/event_greyfill.xml	(date 1686893734000)
@@ -0,0 +1,18 @@
+<?xml version="1.0" encoding="utf-8"?>
+<shape xmlns:android="http://schemas.android.com/apk/res/android" >
+
+    <solid android:color="@color/grey" />
+
+    <stroke
+        android:width="3dp"
+        android:color="@color/grey" />
+
+    <corners android:radius="5dp" />
+
+    <padding
+        android:bottom="0dp"
+        android:left="0dp"
+        android:right="0dp"
+        android:top="0dp" />
+
+</shape>
\ No newline at end of file
Index: app/src/main/java/com/nas/alreem/activity/parent_meetings/ReviewAppointmentsRecyclerViewActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/nas/alreem/activity/parent_meetings/ReviewAppointmentsRecyclerViewActivity.kt b/app/src/main/java/com/nas/alreem/activity/parent_meetings/ReviewAppointmentsRecyclerViewActivity.kt
new file mode 100644
--- /dev/null	(date 1689145702068)
+++ b/app/src/main/java/com/nas/alreem/activity/parent_meetings/ReviewAppointmentsRecyclerViewActivity.kt	(date 1689145702068)
@@ -0,0 +1,195 @@
+package com.nas.alreem.activity.parent_meetings
+
+import android.app.Dialog
+import android.content.Context
+import android.content.Intent
+import android.graphics.Color
+import android.graphics.drawable.ColorDrawable
+import android.os.Bundle
+import android.util.Log
+import android.view.View
+import android.view.Window
+import android.widget.Button
+import android.widget.ImageView
+import android.widget.ProgressBar
+import android.widget.RelativeLayout
+import android.widget.TextView
+import androidx.appcompat.app.AppCompatActivity
+import androidx.recyclerview.widget.LinearLayoutManager
+import androidx.recyclerview.widget.RecyclerView
+import com.nas.alreem.R
+import com.nas.alreem.activity.home.HomeActivity
+import com.nas.alreem.activity.parent_meetings.adapter.ReviewAdapter
+import com.nas.alreem.activity.parent_meetings.model.PtaConfirmApiModel
+import com.nas.alreem.activity.parent_meetings.model.PtaConfirmModel
+import com.nas.alreem.activity.parent_meetings.model.PtaDatesApiModel
+import com.nas.alreem.activity.parent_meetings.model.PtaDatesModel
+import com.nas.alreem.activity.parent_meetings.model.PtaReviewListResponseModel
+import com.nas.alreem.activity.parent_meetings.model.ReviewListModel
+import com.nas.alreem.constants.ConstantFunctions
+import com.nas.alreem.constants.ConstantWords
+import com.nas.alreem.constants.DialogFunctions
+import com.nas.alreem.constants.PreferenceManager
+import com.nas.alreem.rest.ApiClient
+import retrofit2.Call
+import retrofit2.Callback
+import retrofit2.Response
+import java.text.DateFormat
+import java.text.SimpleDateFormat
+import java.util.Date
+
+class ReviewAppointmentsRecyclerViewActivity:AppCompatActivity() {
+    lateinit var mContext: Context
+    lateinit var backRelative: RelativeLayout
+    lateinit var heading: TextView
+    lateinit var logoClickImgView: ImageView
+    lateinit var progressDialogAdd: ProgressBar
+    lateinit var review_rec: RecyclerView
+    lateinit var review_list: ArrayList<ReviewListModel>
+    lateinit var idList:ArrayList<Int>
+    lateinit var home_icon: ImageView
+    lateinit var confirm_tv: TextView
+    var confimVisibility:Boolean=false
+
+    override fun onCreate(savedInstanceState: Bundle?) {
+        super.onCreate(savedInstanceState)
+        setContentView(R.layout.activity_parent_meeting_review)
+
+        mContext=this
+        initfn()
+
+    }
+    private fun initfn(){
+        progressDialogAdd=findViewById(R.id.progressDialogAdd)
+        heading=findViewById(R.id.heading)
+        backRelative=findViewById(R.id.backRelative)
+        logoClickImgView=findViewById(R.id.logoClickImgView)
+        confirm_tv=findViewById(R.id.confirmTV)
+        review_list = ArrayList()
+        review_rec = findViewById(R.id.recycler_review)
+        idList= ArrayList()
+        reviewlistcall()
+        backRelative.setOnClickListener(View.OnClickListener {
+            finish()
+        })
+        heading.text= ConstantWords.parentmeetings
+        logoClickImgView.setOnClickListener(View.OnClickListener {
+            val intent = Intent(mContext, HomeActivity::class.java)
+            intent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP)
+            startActivity(intent)
+        })
+        confirm_tv.setOnClickListener {
+            showerrorConfirm(mContext,"Do you want to confirm appointment?","Alert")
+            //callConfirmPta()
+        }
+    }
+    private fun reviewlistcall(){
+        progressDialogAdd.visibility = View.VISIBLE
+        val token = PreferenceManager.getaccesstoken(mContext)
+
+        val call: Call<PtaReviewListResponseModel> = ApiClient.getClient.ptaReviewList("Bearer "+token)
+        call.enqueue(object : Callback<PtaReviewListResponseModel> {
+            override fun onFailure(call: Call<PtaReviewListResponseModel>, t: Throwable) {
+                Log.e("Error", t.localizedMessage)
+                progressDialogAdd.visibility = View.GONE
+            }
+            override fun onResponse(call: Call<PtaReviewListResponseModel>, response: Response<PtaReviewListResponseModel>) {
+                progressDialogAdd.visibility = View.GONE
+                //val arraySize :Int = response.body()!!.responseArray.studentList.size
+                if (response.body()!!.status==100)
+                {
+                    review_list.addAll(response.body()!!.data)
+                    if (review_list.size>0){
+                        progressDialogAdd.visibility = View.GONE
+                        review_rec.layoutManager= LinearLayoutManager(mContext)
+                        var review_adapter= ReviewAdapter(mContext,review_list,ReviewAppointmentsRecyclerViewActivity(),
+                            progressDialogAdd,review_rec,idList,confirm_tv)
+                        review_rec.adapter=review_adapter
+                    }else{
+                        DialogFunctions.commonErrorAlertDialog("Alert","No Appointments Available.",mContext)
+                    }
+
+                    for (i in review_list.indices){
+                        if (review_list[i].status.equals("2")&&review_list[i].booking_open.equals("y")){
+                            idList.add(review_list[i].id.toInt())
+                            // confirm_tv.visibility=View.VISIBLE
+                            confimVisibility=true
+
+                        }/*else{
+                            confirm_tv.visibility=View.GONE
+                        }*/
+                    }
+                    if (confimVisibility==true){
+                        confirm_tv.visibility=View.VISIBLE
+                    }else{
+                        confirm_tv.visibility=View.GONE
+                    }
+                } else
+                {
+
+                    DialogFunctions.commonErrorAlertDialog(mContext.resources.getString(R.string.alert), ConstantFunctions.commonErrorString(response.body()!!.status), mContext)
+                }
+
+
+            }
+
+        })
+
+    }
+    private fun showerrorConfirm(context: Context,message : String,msgHead : String)
+    {
+        val dialog = Dialog(context)
+        dialog.requestWindowFeature(Window.FEATURE_NO_TITLE)
+        dialog.window!!.setBackgroundDrawable(ColorDrawable(Color.TRANSPARENT))
+        dialog.setCancelable(false)
+        dialog.setContentView(R.layout.dialog_ok_cancel)
+        var iconImageView = dialog.findViewById(R.id.iconImageView) as ImageView
+        iconImageView.setImageResource(R.drawable.questionmark_icon)
+        var alertHead = dialog.findViewById(R.id.alertHead) as TextView
+        var text_dialog = dialog.findViewById(R.id.text_dialog) as TextView
+        var btn_Ok = dialog.findViewById(R.id.btn_Ok) as Button
+        var btn_Cancel = dialog.findViewById(R.id.btn_Cancel) as Button
+        text_dialog.text = message
+        alertHead.text = msgHead
+        btn_Ok.setOnClickListener()
+        {
+            dialog.dismiss()
+            callConfirmPta()
+
+        }
+        btn_Cancel.setOnClickListener {
+            dialog.dismiss()
+        }
+        dialog.show()
+    }
+    private fun callConfirmPta(){
+        progressDialogAdd.visibility = View.VISIBLE
+        val token = PreferenceManager.getaccesstoken(mContext)
+        var idString:String=idList.toString()
+        val ptaconfirmSuccessBody = PtaConfirmApiModel(idString)
+        val call: Call<PtaConfirmModel> = ApiClient.getClient.pta_confirm(ptaconfirmSuccessBody,"Bearer "+token)
+        call.enqueue(object : Callback<PtaConfirmModel> {
+            override fun onFailure(call: Call<PtaConfirmModel>, t: Throwable) {
+                Log.e("Error", t.localizedMessage)
+                progressDialogAdd.visibility = View.GONE
+            }
+            override fun onResponse(call: Call<PtaConfirmModel>, response: Response<PtaConfirmModel>) {
+                progressDialogAdd.visibility = View.GONE
+                //val arraySize :Int = response.body()!!.responseArray.studentList.size
+                if (response.body()!!.status==100)
+                {
+                    DialogFunctions.commonSuccessAlertDialog("Success","Successfully confirmed appointment.",mContext)
+
+                } else
+                {
+
+                    DialogFunctions.commonErrorAlertDialog(mContext.resources.getString(R.string.alert), ConstantFunctions.commonErrorString(response.body()!!.status), mContext)
+                }
+
+
+            }
+
+        })
+
+    }
+}
\ No newline at end of file
Index: app/src/main/res/layout/activity_payment_category.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\n<androidx.constraintlayout.widget.ConstraintLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\">\n\n    <include\n        android:id=\"@+id/includeRel\"\n        layout=\"@layout/layout_activity_header\"\n        />\n\n    <LinearLayout\n        android:id=\"@+id/linearLayout4\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"0dp\"\n        android:layout_alignParentStart=\"true\"\n        android:layout_alignParentTop=\"true\"\n        android:orientation=\"vertical\"\n        app:layout_constraintBottom_toBottomOf=\"parent\"\n        app:layout_constraintEnd_toEndOf=\"parent\"\n        app:layout_constraintStart_toStartOf=\"parent\"\n        app:layout_constraintTop_toBottomOf=\"@+id/includeRel\">\n\n        <RelativeLayout\n            android:id=\"@+id/relative\"\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"wrap_content\"\n            android:layout_alignParentTop=\"true\" />\n\n        <LinearLayout\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"match_parent\"\n            android:orientation=\"vertical\">\n\n            <com.nas.alreem.commonviews.CustomTextViewRegular\n                android:id=\"@+id/select\"\n                android:layout_width=\"wrap_content\"\n                android:layout_height=\"wrap_content\"\n                android:layout_marginLeft=\"10dp\"\n                android:layout_marginTop=\"10dp\"\n                android:layout_marginRight=\"10dp\"\n                android:gravity=\"left|center\"\n                android:text=\"Select your child:\"\n                android:textSize=\"16sp\" />\n\n            <LinearLayout\n                android:id=\"@+id/studentSpinner\"\n                android:layout_width=\"match_parent\"\n                android:layout_height=\"45dp\"\n                android:layout_gravity=\"center\"\n                android:layout_marginLeft=\"10dp\"\n                android:layout_marginTop=\"10dp\"\n                android:layout_marginRight=\"10dp\"\n                android:layout_marginBottom=\"10dp\"\n                android:background=\"@drawable/event_spinnerbg\"\n                android:gravity=\"center\"\n                android:orientation=\"horizontal\"\n                android:weightSum=\"100\">\n\n                <ImageView\n                    android:id=\"@+id/imagicon\"\n                    android:layout_width=\"35dp\"\n                    android:layout_height=\"35dp\"\n                    android:layout_margin=\"5dp\"\n                    android:gravity=\"center\"\n                    android:padding=\"5dp\"\n                    android:scaleType=\"fitCenter\"\n                    android:src=\"@drawable/boy\" />\n\n                <com.nas.alreem.commonviews.CustomTextViewRegular\n                    android:id=\"@+id/studentName\"\n                    android:layout_width=\"0dp\"\n                    android:layout_height=\"match_parent\"\n                    android:layout_weight=\"80\"\n                    android:gravity=\"left|center\"\n                    android:paddingLeft=\"10dp\"\n                    android:text=\"Select a child\"\n                    android:textSize=\"16sp\" />\n\n                <View\n                    android:layout_width=\"0dp\"\n                    android:layout_height=\"match_parent\"\n                    android:layout_weight=\"8\" />\n\n                <ImageView\n                    android:layout_width=\"0dp\"\n                    android:layout_height=\"30dp\"\n                    android:layout_gravity=\"right|center\"\n                    android:layout_weight=\"12\"\n                    android:src=\"@drawable/arrowdownnew\"\n                    android:visibility=\"visible\" />\n\n            </LinearLayout>\n\n            <com.nas.alreem.commonviews.CustomTextViewRegular\n\n                android:id=\"@+id/textViewYear\"\n                android:layout_width=\"wrap_content\"\n                android:layout_height=\"wrap_content\"\n                android:layout_marginLeft=\"10dp\"\n                android:layout_marginTop=\"5dp\"\n                android:layout_marginRight=\"10dp\"\n                android:layout_marginBottom=\"5dp\"\n                android:text=\"Class:\"\n                android:textColor=\"#ff000000\"\n                android:textSize=\"16sp\"\n                android:visibility=\"gone\" />\n\n            <View\n                android:layout_width=\"match_parent\"\n                android:layout_height=\"2dp\"\n                android:layout_marginLeft=\"10dp\"\n                android:layout_marginRight=\"10dp\"\n                android:background=\"@color/light_grey\"\n\n                android:visibility=\"gone\" />\n\n            <com.nas.alreem.commonviews.CustomTextViewRegular\n                android:id=\"@+id/enterTextView\"\n                android:layout_width=\"wrap_content\"\n                android:layout_height=\"wrap_content\"\n                android:layout_marginLeft=\"10dp\"\n                android:layout_marginTop=\"5dp\"\n                android:layout_marginRight=\"10dp\"\n                android:text=\"Enter CCA Choices:\"\n                android:textColor=\"#ff000000\"\n                android:textSize=\"16sp\"\n                android:visibility=\"gone\" />\n\n\n            <androidx.recyclerview.widget.RecyclerView\n                android:id=\"@+id/mListView\"\n                android:layout_width=\"match_parent\"\n                android:layout_height=\"match_parent\"\n                android:layout_margin=\"10dp\"\n                android:background=\"@color/white\"\n                android:overScrollMode=\"never\"\n                android:scrollbars=\"vertical\"\n                android:visibility=\"visible\" />\n\n\n        </LinearLayout>\n\n\n    </LinearLayout>\n\n    <LinearLayout\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:layout_centerInParent=\"true\"\n        android:gravity=\"center\"\n        app:layout_constraintBottom_toBottomOf=\"parent\"\n        app:layout_constraintEnd_toEndOf=\"parent\"\n        app:layout_constraintStart_toStartOf=\"@+id/linearLayout4\"\n        app:layout_constraintTop_toBottomOf=\"@+id/includeRel\">\n\n        <ProgressBar\n            android:id=\"@+id/progressDialogAdd\"\n            android:layout_width=\"40dp\"\n            android:layout_height=\"40dp\"\n            android:layout_centerInParent=\"true\"\n            android:indeterminateDrawable=\"@anim/customspinner\"\n            android:visibility=\"gone\"\n\n            />\n\n    </LinearLayout>\n</androidx.constraintlayout.widget.ConstraintLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/activity_payment_category.xml b/app/src/main/res/layout/activity_payment_category.xml
--- a/app/src/main/res/layout/activity_payment_category.xml	(revision b2ad66f8612edd03349ffa4aaee582fd0005cdb4)
+++ b/app/src/main/res/layout/activity_payment_category.xml	(date 1689330690002)
@@ -132,11 +132,10 @@
                 android:id="@+id/mListView"
                 android:layout_width="match_parent"
                 android:layout_height="match_parent"
-                android:layout_margin="10dp"
                 android:background="@color/white"
                 android:overScrollMode="never"
                 android:scrollbars="vertical"
-                android:visibility="visible" />
+                android:visibility="gone" />
 
 
         </LinearLayout>
Index: app/src/main/java/com/nas/alreem/activity/staff_directory/model/ListStaffDetailModel.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/nas/alreem/activity/staff_directory/model/ListStaffDetailModel.kt b/app/src/main/java/com/nas/alreem/activity/staff_directory/model/ListStaffDetailModel.kt
new file mode 100644
--- /dev/null	(date 1688542276000)
+++ b/app/src/main/java/com/nas/alreem/activity/staff_directory/model/ListStaffDetailModel.kt	(date 1688542276000)
@@ -0,0 +1,8 @@
+package com.nas.alreem.activity.staff_directory.model
+
+import com.google.gson.annotations.SerializedName
+
+class ListStaffDetailModel (
+    @SerializedName("status")var status:Int,
+    @SerializedName("responseArray")var responseArray:StaffDetailResponseArrayModel
+)
\ No newline at end of file
Index: app/src/main/res/drawable-xxhdpi/time_curved_rel_layout.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/drawable-xxhdpi/time_curved_rel_layout.xml b/app/src/main/res/drawable-xxhdpi/time_curved_rel_layout.xml
new file mode 100644
--- /dev/null	(date 1686893738000)
+++ b/app/src/main/res/drawable-xxhdpi/time_curved_rel_layout.xml	(date 1686893738000)
@@ -0,0 +1,18 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<shape xmlns:android="http://schemas.android.com/apk/res/android" >
+
+    <solid android:color="@color/white" />
+
+    <stroke
+        android:width="2dp"
+        android:color="@color/split_bg" />
+
+    <corners android:radius="5dp" />
+
+    <padding
+        android:bottom="0dp"
+        android:left="0dp"
+        android:right="0dp"
+        android:top="0dp" />
+
+</shape>
\ No newline at end of file
Index: app/src/main/java/com/nas/alreem/activity/absence/AbsenceDetailActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/nas/alreem/activity/absence/AbsenceDetailActivity.kt b/app/src/main/java/com/nas/alreem/activity/absence/AbsenceDetailActivity.kt
new file mode 100644
--- /dev/null	(date 1688462260000)
+++ b/app/src/main/java/com/nas/alreem/activity/absence/AbsenceDetailActivity.kt	(date 1688462260000)
@@ -0,0 +1,97 @@
+package com.nas.alreem.activity.absence
+
+import android.content.Context
+import android.content.Intent
+import android.os.Bundle
+import android.view.View
+import android.widget.ImageView
+import android.widget.RelativeLayout
+import android.widget.TextView
+import androidx.appcompat.app.AppCompatActivity
+import com.nas.alreem.R
+import com.nas.alreem.activity.home.HomeActivity
+import com.nas.alreem.constants.ConstantWords
+import java.text.DateFormat
+import java.text.SimpleDateFormat
+import java.util.Date
+
+class AbsenceDetailActivity: AppCompatActivity() {
+    lateinit var mContext: Context
+    lateinit var backRelative: RelativeLayout
+    lateinit var heading: TextView
+    lateinit var logoClickImgView: ImageView
+    lateinit var stnameValue: TextView
+    lateinit var studClassValue: TextView
+    lateinit var leaveDateFromValue: TextView
+    lateinit var leaveDateToValue: TextView
+    lateinit var reasonValue: TextView
+    var reason:String?=""
+    var studentName:String?=""
+    var studentClass:String?=""
+    var fromDate:String?=""
+    var toDate:String?=""
+    override fun onCreate(savedInstanceState: Bundle?) {
+        super.onCreate(savedInstanceState)
+        setContentView(R.layout.activity_absence_detail)
+
+        mContext=this
+        initfn()
+
+    }
+    private fun initfn() {
+        heading=findViewById(R.id.heading)
+        heading.text= ConstantWords.earlypickup
+        backRelative=findViewById(R.id.backRelative)
+        logoClickImgView=findViewById(R.id.logoClickImgView)
+        reason=intent.getStringExtra("reason")
+        studentName=intent.getStringExtra("studentName")
+        studentClass=intent.getStringExtra("studentClass")
+        fromDate=intent.getStringExtra("fromDate")
+        toDate=intent.getStringExtra("toDate")
+        stnameValue = findViewById<TextView>(R.id.stnameValue)
+        studClassValue = findViewById<TextView>(R.id.studClassValue)
+        leaveDateFromValue = findViewById<TextView>(R.id.leaveDateFromValue)
+        leaveDateToValue = findViewById<TextView>(R.id.leaveDateToValue)
+        reasonValue = findViewById<TextView>(R.id.reasonValue)
+        stnameValue.text = studentName
+        studClassValue.text = studentClass
+        val fromdate=fromDate
+        val todate=toDate
+        val inputFormat: DateFormat = SimpleDateFormat("yyyy-MM-dd")
+        val outputFormat: DateFormat = SimpleDateFormat("dd MMMM yyyy")
+        val inputDateStr = fromdate
+        val date: Date = inputFormat.parse(inputDateStr)
+        val outputDateStr: String = outputFormat.format(date)
+
+
+
+
+        if (todate!=""){
+            val inputFormat1: DateFormat = SimpleDateFormat("yyyy-MM-dd")
+            val outputFormat1: DateFormat = SimpleDateFormat("dd MMMM yyyy")
+            val inputDateStr1 = todate
+            val date1: Date = inputFormat1.parse(inputDateStr1)
+            val outputDateStr1: String = outputFormat1.format(date1)
+            leaveDateToValue.text = outputDateStr1
+            leaveDateFromValue.text = outputDateStr
+            reasonValue.text = reason
+
+        }else{
+            leaveDateFromValue.text = outputDateStr
+            reasonValue.text = reason
+            leaveDateToValue.text = "-"
+
+        }
+
+
+        backRelative.setOnClickListener(View.OnClickListener {
+            finish()
+        })
+        heading.text= ConstantWords.absence
+        logoClickImgView.setOnClickListener(View.OnClickListener {
+            val intent = Intent(mContext, HomeActivity::class.java)
+            intent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP)
+            startActivity(intent)
+        })
+    }
+}
\ No newline at end of file
Index: app/src/main/java/com/nas/alreem/activity/absence/model/AbsenceListResponseModel.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/nas/alreem/activity/absence/model/AbsenceListResponseModel.kt b/app/src/main/java/com/nas/alreem/activity/absence/model/AbsenceListResponseModel.kt
new file mode 100644
--- /dev/null	(date 1688446748000)
+++ b/app/src/main/java/com/nas/alreem/activity/absence/model/AbsenceListResponseModel.kt	(date 1688446748000)
@@ -0,0 +1,7 @@
+package com.nas.alreem.activity.absence.model
+
+import com.google.gson.annotations.SerializedName
+
+class AbsenceListResponseModel(
+    @SerializedName("request")var request:ArrayList<AbsenceRequestListModel>
+            )
\ No newline at end of file
Index: app/src/main/res/layout/adapter_staff_list.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/adapter_staff_list.xml b/app/src/main/res/layout/adapter_staff_list.xml
new file mode 100644
--- /dev/null	(date 1688974398000)
+++ b/app/src/main/res/layout/adapter_staff_list.xml	(date 1688974398000)
@@ -0,0 +1,58 @@
+<?xml version="1.0" encoding="utf-8"?>
+<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:layout_width="match_parent"
+    android:layout_height="wrap_content"
+    xmlns:app="http://schemas.android.com/apk/res-auto">
+
+    <androidx.constraintlayout.widget.ConstraintLayout
+        android:id="@+id/relSub"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:padding="5dp" >
+
+        <ImageView
+            android:id="@+id/imagicon"
+            android:layout_width="50dp"
+            android:layout_height="50dp"
+            android:layout_alignParentLeft="true"
+            android:layout_centerHorizontal="true"
+            android:src="@drawable/student"
+            app:layout_constraintBottom_toBottomOf="parent"
+            app:layout_constraintStart_toStartOf="parent"
+            app:layout_constraintTop_toTopOf="parent"
+            app:siBorderColor="#A0DAE5"
+            app:siBorderWidth="1dp" />
+
+        <com.nas.alreem.commonviews.CustomTextViewRegular
+            android:id="@+id/listTxtTitle"
+            style="@style/textstyleblack"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:layout_marginRight="5dp"
+            android:layout_marginLeft="5dp"
+            android:singleLine="true"
+            android:text="BISAD ABHUDHABI"
+            app:layout_constraintBottom_toBottomOf="parent"
+            app:layout_constraintRight_toLeftOf="@+id/arrowImg"
+            app:layout_constraintStart_toEndOf="@+id/imagicon"
+            app:layout_constraintTop_toTopOf="parent" />
+
+
+        <ImageView
+            android:id="@+id/arrowImg"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:layout_alignParentRight="true"
+            android:layout_centerVertical="true"
+            android:background="@drawable/arrow"
+            app:layout_constraintBottom_toBottomOf="parent"
+            app:layout_constraintEnd_toEndOf="parent"
+            app:layout_constraintTop_toTopOf="parent" />
+    </androidx.constraintlayout.widget.ConstraintLayout>
+    <View
+        android:layout_width="match_parent"
+        android:layout_height="1dp"
+        android:background="@color/split_bg"
+        android:layout_below="@+id/relSub"/>
+</RelativeLayout>
\ No newline at end of file
Index: app/src/main/java/com/nas/alreem/activity/parent_meetings/model/ReviewListModel.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/nas/alreem/activity/parent_meetings/model/ReviewListModel.kt b/app/src/main/java/com/nas/alreem/activity/parent_meetings/model/ReviewListModel.kt
new file mode 100644
--- /dev/null	(date 1689059454000)
+++ b/app/src/main/java/com/nas/alreem/activity/parent_meetings/model/ReviewListModel.kt	(date 1689059454000)
@@ -0,0 +1,22 @@
+package com.nas.alreem.activity.parent_meetings.model
+
+import com.google.gson.annotations.SerializedName
+
+class ReviewListModel (
+    @SerializedName("id") val id: Int,
+    @SerializedName("pta_time_slot_id") val pta_time_slot_id: Int,
+    @SerializedName("student_id") val student_id: String,
+    @SerializedName("student") val student: String,
+    @SerializedName("student_photo") val student_photo: String,
+    @SerializedName("staff") val staff: String,
+    @SerializedName("staff_id") val staff_id: String,
+    @SerializedName("date") val date: String,
+    @SerializedName("start_time") val start_time: String,
+    @SerializedName("end_time") val end_time: String,
+    @SerializedName("room") val room: String,
+    @SerializedName("vpml") val vpml: String,
+    @SerializedName("student_class") val class_name: String,
+    @SerializedName("status") val status: Int,
+    @SerializedName("book_end_date") val book_end_date: String,
+    @SerializedName("booking_open") val booking_open: String
+)
\ No newline at end of file
Index: app/src/main/java/com/nas/alreem/fragment/absence/AbsenceFragment.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.nas.alreem.fragment.absence\n\nimport android.content.Context\nimport android.os.Bundle\nimport android.view.LayoutInflater\nimport android.view.View\nimport android.view.ViewGroup\nimport android.widget.ProgressBar\nimport android.widget.TextView\nimport androidx.fragment.app.Fragment\nimport androidx.recyclerview.widget.DefaultItemAnimator\nimport androidx.recyclerview.widget.LinearLayoutManager\nimport androidx.recyclerview.widget.RecyclerView\nimport com.nas.alreem.R\nimport com.nas.alreem.constants.*\n\n\nclass AbsenceFragment  : Fragment() {\n\n    lateinit var mContext: Context\n    lateinit var mEarlyYearsRecycler: RecyclerView\n    lateinit var titleTextView: TextView\n    lateinit var progressDialogAdd: ProgressBar\n\n    override fun onCreateView(\n        inflater: LayoutInflater, container: ViewGroup?,\n        savedInstanceState: Bundle?\n    ): View? {\n        return inflater.inflate(R.layout.frament_early_years, container, false)\n    }\n\n    override fun onViewCreated(view: View, savedInstanceState: Bundle?) {\n        super.onViewCreated(view, savedInstanceState)\n        mContext=requireContext()\n        initializeUI()\n    }\n    private fun initializeUI()\n    {\n        mEarlyYearsRecycler=requireView().findViewById(R.id.mEarlyYearsRecycler)\n        progressDialogAdd=requireView().findViewById(R.id.progressDialogAdd)\n        titleTextView=requireView().findViewById(R.id.titleTextView)\n        titleTextView.text= ConstantWords.early_years\n        var linearLayoutManager = LinearLayoutManager(mContext)\n        mEarlyYearsRecycler.layoutManager = linearLayoutManager\n        mEarlyYearsRecycler.itemAnimator = DefaultItemAnimator()\n\n\n\n    }\n\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/nas/alreem/fragment/absence/AbsenceFragment.kt b/app/src/main/java/com/nas/alreem/fragment/absence/AbsenceFragment.kt
--- a/app/src/main/java/com/nas/alreem/fragment/absence/AbsenceFragment.kt	(revision b2ad66f8612edd03349ffa4aaee582fd0005cdb4)
+++ b/app/src/main/java/com/nas/alreem/fragment/absence/AbsenceFragment.kt	(date 1689156289700)
@@ -1,51 +1,549 @@
 package com.nas.alreem.fragment.absence
 
+import android.app.Dialog
 import android.content.Context
+import android.content.Intent
+import android.graphics.Color
+import android.graphics.drawable.ColorDrawable
+import android.os.Build
 import android.os.Bundle
+import android.util.Log
 import android.view.LayoutInflater
 import android.view.View
 import android.view.ViewGroup
+import android.view.Window
+import android.widget.Button
+import android.widget.ImageView
+import android.widget.LinearLayout
 import android.widget.ProgressBar
+import android.widget.RelativeLayout
 import android.widget.TextView
+import android.widget.Toast
 import androidx.fragment.app.Fragment
 import androidx.recyclerview.widget.DefaultItemAnimator
 import androidx.recyclerview.widget.LinearLayoutManager
 import androidx.recyclerview.widget.RecyclerView
+import com.bumptech.glide.Glide
+import com.bumptech.glide.load.engine.DiskCacheStrategy
+import com.bumptech.glide.load.resource.bitmap.CircleCrop
 import com.nas.alreem.R
+import com.nas.alreem.activity.absence.AbsenceDetailActivity
+import com.nas.alreem.activity.absence.EarlyPickupDetailActivity
+import com.nas.alreem.activity.absence.RequestabsenceActivity
+import com.nas.alreem.activity.absence.RequestearlypickupActivity
+import com.nas.alreem.activity.absence.model.AbsenceListModel
+import com.nas.alreem.activity.absence.model.AbsenceRequestListModel
+import com.nas.alreem.activity.absence.model.EarlyPickupListArray
+import com.nas.alreem.activity.absence.model.EarlyPickupModel
+import com.nas.alreem.activity.absence.model.ListAbsenceApiModel
+import com.nas.alreem.activity.absence.model.ListPickupApiModel
+import com.nas.alreem.activity.absence.model.PickupListModel
+import com.nas.alreem.activity.absence.model.RequestPickupApiModel
+import com.nas.alreem.activity.payments.adapter.StudentListAdapter
+import com.nas.alreem.activity.payments.model.StudentList
+import com.nas.alreem.activity.payments.model.StudentListModel
 import com.nas.alreem.constants.*
+import com.nas.alreem.fragment.absence.adapter.PickuplistAdapter
+import com.nas.alreem.fragment.absence.model.AbsenceRequestListDetailModel
+import com.nas.alreem.fragment.absence.model.EarlyPickupListModel
+import com.nas.alreem.fragment.parent_meetings.adapter.RequestAbsenceRecyclerAdapter
+import com.nas.alreem.rest.ApiClient
+import retrofit2.Call
+import retrofit2.Callback
+import retrofit2.Response
 
 
 class AbsenceFragment  : Fragment() {
 
     lateinit var mContext: Context
-    lateinit var mEarlyYearsRecycler: RecyclerView
-    lateinit var titleTextView: TextView
+    private lateinit var linearLayoutManager: LinearLayoutManager
     lateinit var progressDialogAdd: ProgressBar
+    lateinit var studentSpinner: LinearLayout
+    var studentListArrayList = ArrayList<StudentList>()
+    lateinit var studImg: ImageView
+    lateinit var studentName: String
+    lateinit var studentId: String
+    lateinit var studentImg: String
+    lateinit var studentClass: String
+    lateinit var studentNameTxt: TextView
+    lateinit var newRequestAbsence: TextView
+    lateinit var newRequestPickup: TextView
+    lateinit var mAbsenceListView: RecyclerView
+    lateinit var mPickupListView: RecyclerView
+    lateinit var pickup_list:ArrayList<EarlyPickupListArray>
+    lateinit var pickupListSort:ArrayList<EarlyPickupListArray>
+    lateinit var studentAbsenceCopy :ArrayList<AbsenceRequestListModel>
+    var studentAbsenceArrayList = ArrayList<AbsenceRequestListModel>()
+
+    lateinit var absence_btn:TextView
+    lateinit var pickup_btn:TextView
+    lateinit var heading:TextView
+    lateinit var titleTextView:TextView
+
+    var select_val:Int=0
 
     override fun onCreateView(
         inflater: LayoutInflater, container: ViewGroup?,
         savedInstanceState: Bundle?
     ): View? {
-        return inflater.inflate(R.layout.frament_early_years, container, false)
+        return inflater.inflate(R.layout.fragment_absence_earlypickup, container, false)
     }
 
     override fun onViewCreated(view: View, savedInstanceState: Bundle?) {
         super.onViewCreated(view, savedInstanceState)
         mContext=requireContext()
         initializeUI()
+        callStudentListApi()
+        selectCategory()
+        callStudentListApi()
     }
     private fun initializeUI()
     {
-        mEarlyYearsRecycler=requireView().findViewById(R.id.mEarlyYearsRecycler)
-        progressDialogAdd=requireView().findViewById(R.id.progressDialogAdd)
+        progressDialogAdd = requireView().findViewById(R.id.progressDialogAdd)
+        studentSpinner = requireView().findViewById<LinearLayout>(R.id.studentSpinner)
+        studImg = requireView().findViewById<ImageView>(R.id.imagicon)
+        studentNameTxt =requireView().findViewById<TextView>(R.id.studentName)
         titleTextView=requireView().findViewById(R.id.titleTextView)
-        titleTextView.text= ConstantWords.early_years
-        var linearLayoutManager = LinearLayoutManager(mContext)
-        mEarlyYearsRecycler.layoutManager = linearLayoutManager
-        mEarlyYearsRecycler.itemAnimator = DefaultItemAnimator()
+        titleTextView.text= ConstantWords.absence_earlypickup
+        newRequestAbsence = requireView().findViewById(R.id.newRequestAbsence)
+        newRequestPickup = requireView().findViewById(R.id.newRequestEarly)
+        mAbsenceListView = requireView().findViewById(R.id.mAbsenceListView) as RecyclerView
+        mPickupListView=requireView().findViewById(R.id.mPickupListView)
+        pickup_list= ArrayList()
+        pickupListSort=ArrayList()
+        heading=requireView().findViewById(R.id.appregisteredHint)
+        absence_btn=requireView().findViewById(R.id.absenc_btn)
+        absence_btn.setBackgroundResource(R.color.colorAccent)
+        pickup_btn=requireView().findViewById(R.id.earlypickup_btn)
+        linearLayoutManager = LinearLayoutManager(mContext)
+        mAbsenceListView.layoutManager = linearLayoutManager
+        mAbsenceListView.itemAnimator = DefaultItemAnimator()
+        absence_btn.setBackgroundResource(R.drawable.event_spinnerfill)
+        studentSpinner.setOnClickListener(){
+            showStudentList(mContext,studentListArrayList)
+        }
+        mAbsenceListView.addOnItemClickListener(object: OnItemClickListener {
+            override fun onItemClicked(position: Int, view: View) {
+                // Your logic
+                val intent =Intent(activity, AbsenceDetailActivity::class.java)
+                intent.putExtra("studentName",PreferenceManager.getStudentName(mContext))
+                intent.putExtra("studentClass",PreferenceManager.getStudentClass(mContext))
+                intent.putExtra("fromDate",studentAbsenceArrayList.get(position).from_date)
+                intent.putExtra("toDate",studentAbsenceArrayList.get(position).to_date)
+                intent.putExtra("reason",studentAbsenceArrayList.get(position).reason)
+                activity?.startActivity(intent)
+            }
+        })
+        mPickupListView.addOnItemClickListener(object: OnItemClickListener {
+            override fun onItemClicked(position: Int, view: View) {
+                // Your logic
+                val intent =Intent(activity, EarlyPickupDetailActivity::class.java)
+                intent.putExtra("studentName",PreferenceManager.getStudentName(mContext))
+                intent.putExtra("studentClass",PreferenceManager.getStudentClass(mContext))
+                intent.putExtra("date",pickupListSort.get(position).pickup_date)
+                intent.putExtra("time",pickupListSort.get(position).pickup_time)
+                intent.putExtra("pickupby",pickupListSort.get(position).pickup_by_whom)
+                intent.putExtra("reason",pickupListSort.get(position).reason)
+                intent.putExtra("status",pickupListSort.get(position).status)
+                intent.putExtra("reason_for_rejection",pickupListSort.get(position).reason_for_rejection)
+                activity?.startActivity(intent)
+            }
+        })
+        newRequestAbsence.setOnClickListener(View.OnClickListener {
+            showSuccessmailAlert(mContext,
+                "For planned absences please email your head of school","Alert")
+
+
+        })
+    }
+    fun callStudentListApi()
+    {
+        progressDialogAdd.visibility=View.VISIBLE
+        studentListArrayList= ArrayList()
+        val call: Call<StudentListModel> = ApiClient.getClient.studentList("Bearer "+PreferenceManager.getaccesstoken(mContext))
+        call.enqueue(object : Callback<StudentListModel> {
+            override fun onFailure(call: Call<StudentListModel>, t: Throwable) {
+                Log.e("Failed", t.localizedMessage)
+                progressDialogAdd.visibility=View.GONE
+            }
+            override fun onResponse(call: Call<StudentListModel>, response: Response<StudentListModel>) {
+                val responsedata = response.body()
+                progressDialogAdd.visibility=View.GONE
+                if (responsedata != null) {
+                    try {
+
+                        if (response.body()!!.status==100)
+                        {
+                            studentListArrayList=ArrayList()
+                            studentListArrayList.addAll(response.body()!!.responseArray.studentList)
+                            if (PreferenceManager.getStudentID(mContext).equals(""))
+                            {
+                                Log.e("Empty Img","Empty")
+                                studentName=studentListArrayList.get(0).name
+                                studentImg=studentListArrayList.get(0).photo
+                                studentId=studentListArrayList.get(0).id
+                                studentClass=studentListArrayList.get(0).section
+                                PreferenceManager.setStudentID(mContext,studentId)
+                                PreferenceManager.setStudentName(mContext,studentName)
+                                PreferenceManager.setStudentPhoto(mContext,studentImg)
+                                PreferenceManager.setStudentClass(mContext,studentClass)
+                                studentNameTxt.text=studentName
+                                Log.e("studid(0)", PreferenceManager.getStudentID(mContext).toString())
+                                if(!studentImg.equals(""))
+                                {
+                                    Glide.with(mContext) //1
+                                        .load(studentImg)
+                                        .placeholder(R.drawable.student)
+                                        .error(R.drawable.student)
+                                        .skipMemoryCache(true) //2
+                                        .diskCacheStrategy(DiskCacheStrategy.NONE) //3
+                                        .transform(CircleCrop()) //4
+                                        .into(studImg)
+                                }
+                                else{
+                                    studImg.setImageResource(R.drawable.student)
+                                }
+
+                            }
+                            else{
+                                studentName= PreferenceManager.getStudentName(mContext)!!
+                                studentImg= PreferenceManager.getStudentPhoto(mContext)!!
+                                studentId= PreferenceManager.getStudentID(mContext)!!
+                                studentClass= PreferenceManager.getStudentClass(mContext)!!
+                                studentNameTxt.text=studentName
+                                if(!studentImg.equals(""))
+                                {
+                                    Glide.with(mContext) //1
+                                        .load(studentImg)
+                                        .placeholder(R.drawable.student)
+                                        .error(R.drawable.student)
+                                        .skipMemoryCache(true) //2
+                                        .diskCacheStrategy(DiskCacheStrategy.NONE) //3
+                                        .transform(CircleCrop()) //4
+                                        .into(studImg)
+                                }
+                                else{
+                                    studImg.setImageResource(R.drawable.student)
+                                }
+                            }
+
+                        }
+                        else
+                        {
+
+                            DialogFunctions.commonErrorAlertDialog(mContext.resources.getString(R.string.alert), ConstantFunctions.commonErrorString(response.body()!!.status), mContext)
+                        }
+
+
+                    } catch (e: Exception) {
+                        e.printStackTrace()
+                    }
+                }
+            }
+
+        })
+    }
+    fun showStudentList(context: Context ,mStudentList : ArrayList<StudentList>)
+    {
+        val dialog = Dialog(context)
+        dialog.requestWindowFeature(Window.FEATURE_NO_TITLE)
+        dialog.window!!.setBackgroundDrawable(ColorDrawable(Color.TRANSPARENT))
+        dialog.setCancelable(false)
+        dialog.setContentView(R.layout.dialogue_student_list)
+        var iconImageView = dialog.findViewById(R.id.iconImageView) as ImageView
+        var btn_dismiss = dialog.findViewById(R.id.btn_dismiss) as Button
+        var studentListRecycler = dialog.findViewById(R.id.studentListRecycler) as RecyclerView
+        iconImageView.setImageResource(R.drawable.boy)
+        //if(mSocialMediaArray.get())
+        val sdk = Build.VERSION.SDK_INT
+        if (sdk < Build.VERSION_CODES.JELLY_BEAN) {
+            btn_dismiss.setBackgroundDrawable(
+                mContext.resources.getDrawable(R.drawable.button_new)
+            )
+        } else {
+            btn_dismiss.background = mContext.resources.getDrawable(R.drawable.button_new)
+        }
+
+        studentListRecycler.setHasFixedSize(true)
+        val llm = LinearLayoutManager(mContext)
+        llm.orientation = LinearLayoutManager.VERTICAL
+        studentListRecycler.layoutManager = llm
+        if(mStudentList.size>0)
+        {
+            val studentAdapter = StudentListAdapter(mContext,mStudentList)
+            studentListRecycler.adapter = studentAdapter
+        }
+
+        btn_dismiss.setOnClickListener()
+        {
+            dialog.dismiss()
+        }
+        studentListRecycler.addOnItemClickListener(object: OnItemClickListener {
+            override fun onItemClicked(position: Int, view: View) {
+                // Your logic
+                progressDialogAdd.visibility=View.VISIBLE
+
+                studentName=studentListArrayList.get(position).name
+                studentImg=studentListArrayList.get(position).photo
+                studentId=studentListArrayList.get(position).id
+                studentClass=studentListArrayList.get(position).section
+                PreferenceManager.setStudentID(mContext,studentId)
+                PreferenceManager.setStudentName(mContext,studentName)
+                PreferenceManager.setStudentPhoto(mContext,studentImg)
+                PreferenceManager.setStudentClass(mContext,studentClass)
+                Log.e("studidclick",PreferenceManager.getStudentID(mContext).toString())
+                studentNameTxt.text=studentName
+                studentAbsenceArrayList.clear()
+                pickupListSort.clear()
+                if(!studentImg.equals(""))
+                {
+                    Glide.with(mContext) //1
+                        .load(studentImg)
+                        .placeholder(R.drawable.student)
+                        .error(R.drawable.student)
+                        .skipMemoryCache(true) //2
+                        .diskCacheStrategy(DiskCacheStrategy.NONE) //3
+                        .transform(CircleCrop()) //4
+                        .into(studImg)
+                }
+                else
+                {
+                    studImg.setImageResource(R.drawable.student)
+                }
+                progressDialogAdd.visibility = View.VISIBLE
+                if (select_val==0){
+                    callStudentLeaveInfo()
+                }
+                else if (select_val==1) {
+                    callpickuplist_api()
+                }
+                dialog.dismiss()
+            }
+        })
+        dialog.show()
+    }
+    private fun  selectCategory(){
+        absence_btn.setOnClickListener {
+            select_val=0
+            callStudentLeaveInfo()
+            absence_btn.setBackgroundResource(R.drawable.event_spinnerfill)
+            absence_btn.setTextColor(Color.BLACK)
+            pickup_btn.setBackgroundResource(R.drawable.event_greyfill)
+            pickup_btn.setTextColor(Color.BLACK)
+            heading.text = "App Registered Absences"
+            mAbsenceListView.visibility = View.VISIBLE
+            newRequestAbsence.visibility = View.VISIBLE
+            mPickupListView.visibility = View.GONE
+            newRequestPickup.visibility = View.GONE
+
+        }
+        pickup_btn.setOnClickListener {
+            select_val=1
+            callpickuplist_api()
+            absence_btn.setBackgroundResource(R.drawable.event_greyfill)
+            absence_btn.setTextColor(Color.BLACK)
+            pickup_btn.setBackgroundResource(R.drawable.event_spinnerfill)
+            pickup_btn.setTextColor(Color.BLACK)
+            heading.text = "App Registered Early Pickup"
+            mAbsenceListView.visibility = View.GONE
+            newRequestAbsence.visibility = View.GONE
+            mPickupListView.visibility = View.VISIBLE
+            newRequestPickup.visibility = View.VISIBLE
+            mPickupListView.layoutManager=LinearLayoutManager(mContext)
+            var pickuplistAdapter= PickuplistAdapter(mContext,pickup_list)
+            mPickupListView.adapter=pickuplistAdapter
+        }
+        newRequestPickup.setOnClickListener {
+            val intent = Intent(activity, RequestearlypickupActivity::class.java)
+            activity?.startActivity(intent)
+        }
+    }
+    private fun callStudentLeaveInfo(){
+        studentAbsenceCopy=ArrayList<AbsenceRequestListModel>()
+        studentAbsenceArrayList.clear()
+        mAbsenceListView.visibility=View.GONE
+        progressDialogAdd.visibility=View.VISIBLE
+        val studentInfoAdapter = RequestAbsenceRecyclerAdapter(studentAbsenceArrayList)
+        mAbsenceListView.adapter = studentInfoAdapter
+        val token = PreferenceManager.getaccesstoken(mContext)
+        val pickupSuccessBody = ListAbsenceApiModel(PreferenceManager.getStudentID(mContext).toString(),0,20)
+        val call: Call<AbsenceListModel> =
+            ApiClient.getClient.absencelist(pickupSuccessBody, "Bearer " + token)
+        call.enqueue(object : Callback<AbsenceListModel> {
+            override fun onFailure(call: Call<AbsenceListModel>, t: Throwable) {
+                Log.e("Failed", t.localizedMessage)
+                progressDialogAdd.visibility=View.GONE
+                //mProgressRelLayout.visibility=View.INVISIBLE
+            }
+
+            override fun onResponse(call: Call<AbsenceListModel>, response: Response<AbsenceListModel>) {
+                val responsedata = response.body()
+                //progressDialog.visibility = View.GONE
+                Log.e("Response Signup", responsedata.toString())
+                progressDialogAdd.visibility=View.GONE
+                if (responsedata != null) {
+                    try {
+
+                        if (response.body()!!.status==100) {
+                            studentAbsenceCopy.addAll(response.body()!!.responseArray.request)
+                            studentAbsenceArrayList=studentAbsenceCopy
+
+                            if (studentAbsenceArrayList.size>0)
+                            {
+                                mAbsenceListView.visibility=View.VISIBLE
+                                val studentInfoAdapter = RequestAbsenceRecyclerAdapter(studentAbsenceArrayList)
+                                mAbsenceListView.adapter = studentInfoAdapter
+                            }
+                            else{
+                                Toast.makeText(mContext, "No Registered Absence Found", Toast.LENGTH_SHORT).show()
+                                mAbsenceListView.visibility=View.GONE
+                            }
+
+
+                        }
+                        else
+                        {
+
+                            DialogFunctions.commonErrorAlertDialog(mContext.resources.getString(R.string.alert), ConstantFunctions.commonErrorString(response.body()!!.status), mContext)
+                        }
+
+                    } catch (e: Exception) {
+                        e.printStackTrace()
+                    }
+                }
+            }
+
+        })
+
+       /* studentAbsenceArrayList= ArrayList()
+        var nmodel=AbsenceRequestListDetailModel("1","2023-07-30","2023-07-31","fever")
+        studentAbsenceArrayList.add(nmodel)
+        mAbsenceListView.visibility=View.VISIBLE
+        val studentAbsenceAdapter = RequestAbsenceRecyclerAdapter(studentAbsenceArrayList)
+        mAbsenceListView.adapter = studentAbsenceAdapter*/
+
+
+    }
+    private fun callpickuplist_api(){
+        pickupListSort= ArrayList()
+        pickup_list= ArrayList()
+        progressDialogAdd.visibility=View.VISIBLE
+        val token = PreferenceManager.getaccesstoken(mContext)
+        val pickupSuccessBody = ListPickupApiModel(PreferenceManager.getStudentID(mContext).toString(),"0","20")
+        val call: Call<PickupListModel> =
+            ApiClient.getClient.pickuplist(pickupSuccessBody, "Bearer " + token)
+        call.enqueue(object : Callback<PickupListModel> {
+            override fun onFailure(call: Call<PickupListModel>, t: Throwable) {
+                Log.e("Failed", t.localizedMessage)
+                progressDialogAdd.visibility=View.GONE
+                //mProgressRelLayout.visibility=View.INVISIBLE
+            }
+
+            override fun onResponse(call: Call<PickupListModel>, response: Response<PickupListModel>) {
+                val responsedata = response.body()
+                //progressDialog.visibility = View.GONE
+                Log.e("Response Signup", responsedata.toString())
+                progressDialogAdd.visibility=View.GONE
+                if (responsedata != null) {
+                    try {
+
+                        if (response.body()!!.status==100) {
 
+                            pickup_list.addAll(response.body()!!.pickupListArray)
+                            mPickupListView.visibility = View.VISIBLE
+                            var list_size=pickup_list.size-1
+                            pickupListSort=ArrayList()
+                            for (i in pickup_list.indices){
+                                pickupListSort.add(pickup_list[list_size-i])
+                            }
+                            if (pickupListSort.size>0){
+                                mPickupListView.layoutManager=LinearLayoutManager(mContext)
+                                var pickuplistAdapter= PickuplistAdapter(mContext,pickupListSort)
+                                mPickupListView.adapter=pickuplistAdapter
+                            }else{
+                                mPickupListView.layoutManager=LinearLayoutManager(mContext)
+                                var pickuplistAdapter= PickuplistAdapter(mContext,pickupListSort)
+                                mPickupListView.adapter=pickuplistAdapter
+                                Toast.makeText(mContext, "No Registered Early Pickup Found", Toast.LENGTH_SHORT).show()
+                            }
 
+                        }
+                        else
+                        {
 
-    }
+                            DialogFunctions.commonErrorAlertDialog(mContext.resources.getString(R.string.alert), ConstantFunctions.commonErrorString(response.body()!!.status), mContext)
+                        }
 
+                    } catch (e: Exception) {
+                        e.printStackTrace()
+                    }
+                }
+            }
+
+        })
+        /*pickupListSort= ArrayList()
+        pickup_list= ArrayList()
+        var nmoddel=EarlyPickupListModel(1,"2023-07-17","13:30:00","father","visit hospital",
+        1,"3C","")
+        pickupListSort.add(nmoddel)
+        pickup_list.add(nmoddel)
+
+        mPickupListView.visibility=View.VISIBLE
+        mPickupListView.layoutManager=LinearLayoutManager(mContext)
+        var pickuplistAdapter= PickuplistAdapter(mContext,pickupListSort)
+        mPickupListView.adapter=pickuplistAdapter*/
+
+    }
+    fun showSuccessmailAlert(context: Context, message: String, msgHead: String) {
+        val dialog = Dialog(context)
+        dialog.requestWindowFeature(Window.FEATURE_NO_TITLE)
+        dialog.window!!.setBackgroundDrawable(ColorDrawable(Color.TRANSPARENT))
+        dialog.setCancelable(false)
+        dialog.setContentView(R.layout.dialog_ok_cancel)
+        var iconImageView = dialog.findViewById(R.id.iconImageView) as ImageView
+        var alertHead = dialog.findViewById(R.id.alertHead) as TextView
+        var text_dialog = dialog.findViewById(R.id.text_dialog) as TextView
+        var btn_Ok = dialog.findViewById(R.id.btn_Ok) as Button
+        var btn_Cancel = dialog.findViewById(R.id.btn_Cancel) as Button
+        text_dialog.text = message
+        alertHead.text = msgHead
+        iconImageView.setImageResource(R.drawable.exclamationicon)
+        btn_Ok.setOnClickListener()
+        {
+            dialog.dismiss()
+            val intent =Intent(activity, RequestabsenceActivity::class.java)
+            activity?.startActivity(intent)
+        }
+        btn_Cancel.setOnClickListener {
+            dialog.dismiss()
+        }
+        dialog.show()
+    }
+    override fun onResume() {
+        super.onResume()
+        studentNameTxt.text = PreferenceManager.getStudentName(mContext)
+        studentId= PreferenceManager.getStudentID(mContext).toString()
+        studentImg= PreferenceManager.getStudentPhoto(mContext)!!
+        if(!studentImg.equals(""))
+        {
+            Glide.with(mContext) //1
+                .load(studentImg)
+                .placeholder(R.drawable.student)
+                .error(R.drawable.student)
+                .skipMemoryCache(true) //2
+                .diskCacheStrategy(DiskCacheStrategy.NONE) //3
+                .transform(CircleCrop()) //4
+                .into(studImg)
+        }
+        else
+        {
+            studImg.setImageResource(R.drawable.student)
+        }
+        if (select_val==0){
+            callStudentLeaveInfo()
+        }
+        else if (select_val==1){
+            callpickuplist_api()
+        }
+    }
 }
\ No newline at end of file
Index: app/src/main/java/com/nas/alreem/activity/staff_directory/model/StaffDeptListModel.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/nas/alreem/activity/staff_directory/model/StaffDeptListModel.kt b/app/src/main/java/com/nas/alreem/activity/staff_directory/model/StaffDeptListModel.kt
new file mode 100644
--- /dev/null	(date 1688538880000)
+++ b/app/src/main/java/com/nas/alreem/activity/staff_directory/model/StaffDeptListModel.kt	(date 1688538880000)
@@ -0,0 +1,8 @@
+package com.nas.alreem.activity.staff_directory.model
+
+import com.google.gson.annotations.SerializedName
+
+class StaffDeptListModel (
+    @SerializedName("id")var id:Int,
+    @SerializedName("department_name")var department_name:String
+)
\ No newline at end of file
Index: app/src/main/res/layout/activity_staff_directory_detail.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/activity_staff_directory_detail.xml b/app/src/main/res/layout/activity_staff_directory_detail.xml
new file mode 100644
--- /dev/null	(date 1688561560000)
+++ b/app/src/main/res/layout/activity_staff_directory_detail.xml	(date 1688561560000)
@@ -0,0 +1,112 @@
+<?xml version="1.0" encoding="utf-8"?>
+<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:orientation="vertical"
+    android:background="@color/white">
+    <include
+        android:id="@+id/includeRel"
+        layout="@layout/layout_activity_header" />
+    <LinearLayout
+        android:id="@+id/linearSearch"
+        android:layout_width="match_parent"
+        android:layout_height="40dp"
+        android:layout_gravity="center"
+        android:layout_below="@+id/includeRel"
+        android:paddingLeft="5dp"
+        android:layout_marginLeft="5dp"
+        android:layout_marginRight="5dp"
+        android:layout_marginTop="5dp"
+        android:background="@drawable/search_bg_rounded"
+        android:orientation="horizontal"
+        android:weightSum="100">
+
+        <com.nas.alreem.commonviews.CustomFontSansProEditTextNoColor
+            android:id="@+id/searchEditText"
+            android:layout_width="0dp"
+            android:layout_height="match_parent"
+            android:layout_weight="90"
+            android:background="@android:color/transparent"
+            android:completionThreshold="1"
+            android:imeOptions="actionDone"
+            android:layout_marginRight="2dp"
+            android:hint="Search..."
+            android:gravity="left|center_vertical"
+            android:paddingLeft="10dp"
+            android:paddingRight="5dp"
+            android:textColor="@color/black"
+            android:inputType="text" />
+        <View
+            android:layout_width="0dp"
+            android:layout_height="35dp"
+            android:layout_weight="0.5"
+            android:layout_marginRight="2dp"
+            android:layout_marginTop="2dp"
+            android:background="@color/light_grey" />
+
+        <ImageView
+            android:id="@+id/btnImgsearch"
+            android:layout_width="0dp"
+            android:layout_height="match_parent"
+            android:layout_gravity="center"
+            android:layout_weight="9.5"
+            android:layout_marginRight="2dp"
+            android:src="@drawable/searchiconsmall" />
+
+    </LinearLayout>
+    <LinearLayout
+        android:layout_width="match_parent"
+        android:layout_below="@+id/linearSearch"
+        android:layout_height="match_parent"
+        android:orientation="vertical"
+        android:layout_marginLeft="10dp"
+        android:layout_marginTop="5dp"
+        android:layout_marginRight="10dp"
+        android:background="@color/white"
+        >
+        <!-- <ListView
+             android:id="@+id/mStaffListView"
+             android:layout_width="match_parent"
+             android:layout_height="match_parent"
+             android:divider="@null"
+             android:overScrollMode="never"
+             android:scrollbars="none"
+             android:listSelector="@android:color/transparent"
+             android:cacheColorHint="@android:color/transparent"
+              />-->
+        <!-- <android.support.v4.widget.SwipeRefreshLayout
+             android:id="@+id/swipeRefreshLayout"
+             android:layout_width="match_parent"
+             android:layout_below="@+id/re2"
+             android:layout_height="match_parent">-->
+        <androidx.recyclerview.widget.RecyclerView
+            android:id="@+id/mStaffListView"
+            android:layout_width="match_parent"
+            android:layout_height="match_parent"
+            android:overScrollMode="never"
+
+            android:clipToPadding="false"
+            android:scrollbars="vertical"
+            android:background="@color/white"/>
+        <!-- </android.support.v4.widget.SwipeRefreshLayout>-->
+    </LinearLayout>
+
+    <androidx.core.widget.NestedScrollView
+        android:id="@+id/scrollView"
+        android:layout_width="match_parent"
+        android:layout_height="match_parent"
+        android:layout_below="@+id/linearSearch"
+        android:visibility="gone"
+
+        android:scrollbars="none">
+    </androidx.core.widget.NestedScrollView>
+    <ProgressBar
+        android:id="@+id/progressDialogAdd"
+        android:layout_width="40dp"
+        android:layout_height="40dp"
+        android:layout_centerInParent="true"
+        android:indeterminateDrawable="@anim/customspinner"
+        android:visibility="gone"
+
+        />
+</RelativeLayout>
Index: .idea/gradle.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"GradleMigrationSettings\" migrationVersion=\"1\" />\n  <component name=\"GradleSettings\">\n    <option name=\"linkedExternalProjectsSettings\">\n      <GradleProjectSettings>\n        <option name=\"testRunner\" value=\"GRADLE\" />\n        <option name=\"distributionType\" value=\"DEFAULT_WRAPPED\" />\n        <option name=\"externalProjectPath\" value=\"$PROJECT_DIR$\" />\n        <option name=\"gradleJvm\" value=\"11\" />\n        <option name=\"modules\">\n          <set>\n            <option value=\"$PROJECT_DIR$\" />\n            <option value=\"$PROJECT_DIR$/app\" />\n            <option value=\"$PROJECT_DIR$/giraffeplayer\" />\n            <option value=\"$PROJECT_DIR$/ijkplayer-java\" />\n          </set>\n        </option>\n      </GradleProjectSettings>\n    </option>\n    <option name=\"offlineMode\" value=\"true\" />\n  </component>\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/gradle.xml b/.idea/gradle.xml
--- a/.idea/gradle.xml	(revision b2ad66f8612edd03349ffa4aaee582fd0005cdb4)
+++ b/.idea/gradle.xml	(date 1689078797580)
@@ -7,7 +7,6 @@
         <option name="testRunner" value="GRADLE" />
         <option name="distributionType" value="DEFAULT_WRAPPED" />
         <option name="externalProjectPath" value="$PROJECT_DIR$" />
-        <option name="gradleJvm" value="11" />
         <option name="modules">
           <set>
             <option value="$PROJECT_DIR$" />
@@ -18,6 +17,5 @@
         </option>
       </GradleProjectSettings>
     </option>
-    <option name="offlineMode" value="true" />
   </component>
 </project>
\ No newline at end of file
Index: app/src/main/java/com/nas/alreem/activity/absence/model/EarlyPickupModel.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/nas/alreem/activity/absence/model/EarlyPickupModel.kt b/app/src/main/java/com/nas/alreem/activity/absence/model/EarlyPickupModel.kt
new file mode 100644
--- /dev/null	(date 1688366822000)
+++ b/app/src/main/java/com/nas/alreem/activity/absence/model/EarlyPickupModel.kt	(date 1688366822000)
@@ -0,0 +1,8 @@
+package com.nas.alreem.activity.absence.model
+
+import com.google.gson.annotations.SerializedName
+
+class EarlyPickupModel  (
+    @SerializedName("status") val status: Int
+
+)
\ No newline at end of file
Index: app/src/main/res/layout/adapter_staff_category.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/adapter_staff_category.xml b/app/src/main/res/layout/adapter_staff_category.xml
new file mode 100644
--- /dev/null	(date 1688541498000)
+++ b/app/src/main/res/layout/adapter_staff_category.xml	(date 1688541498000)
@@ -0,0 +1,65 @@
+<?xml version="1.0" encoding="utf-8"?>
+<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_width="match_parent"
+    android:layout_height="wrap_content"
+    android:background="@color/transparent">
+    <RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:layout_marginTop="10dp"
+        android:background="@color/term_button_bg">
+        <RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:layout_marginLeft="7dp"
+            android:background="@color/list_bg">
+            <ImageView
+                android:id="@+id/statusImg"
+                android:layout_width="12dp"
+                android:layout_height="12dp"
+                android:layout_gravity="center"
+                android:layout_marginLeft="5dp"
+                android:visibility="gone"
+                android:layout_centerVertical="true" />
+            <RelativeLayout
+                android:id="@+id/relSub"
+                android:layout_width="match_parent"
+                android:layout_height="wrap_content"
+                android:layout_toRightOf="@+id/statusImg"
+                android:paddingBottom="10dp">
+                <com.nas.alreem.commonviews.CustomTextViewRegular
+                    android:id="@+id/listTxtTitle"
+                    android:layout_width="match_parent"
+                    android:layout_height="wrap_content"
+                    android:layout_alignParentLeft="true"
+                    android:layout_centerVertical="true"
+                    android:layout_marginRight="5dp"
+                    android:layout_marginLeft="5dp"
+                    android:paddingTop="10dp"
+                    android:paddingBottom="10dp"
+                    android:textColor="@color/white"
+                    android:layout_toLeftOf="@+id/arrowImg"
+                    android:singleLine="true" />
+                <ImageView
+                    android:id="@+id/arrowImg"
+                    android:layout_width="wrap_content"
+                    android:layout_height="wrap_content"
+                    android:layout_alignParentRight="true"
+                    android:layout_centerVertical="true"
+                    android:layout_marginRight="5dp"
+                    android:background="@drawable/arrow_list" />
+            </RelativeLayout>
+        </RelativeLayout>
+    </RelativeLayout>
+</RelativeLayout>
+
+
+    <!--   <ImageView
+                    android:id="@+id/statusImg"
+                    android:layout_width="15dp"
+                    android:layout_height="15dp"
+                    android:layout_gravity="center"
+                    android:layout_marginLeft="5dp"
+                    android:visibility="gone"
+                    android:layout_centerVertical="true"
+                    android:src="@drawable/shape_circle_red"/>-->
\ No newline at end of file
Index: app/src/main/java/com/nas/alreem/activity/staff_directory/model/StaffCatListResponseModel.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/nas/alreem/activity/staff_directory/model/StaffCatListResponseModel.kt b/app/src/main/java/com/nas/alreem/activity/staff_directory/model/StaffCatListResponseModel.kt
new file mode 100644
--- /dev/null	(date 1688538880000)
+++ b/app/src/main/java/com/nas/alreem/activity/staff_directory/model/StaffCatListResponseModel.kt	(date 1688538880000)
@@ -0,0 +1,8 @@
+package com.nas.alreem.activity.staff_directory.model
+
+import com.google.gson.annotations.SerializedName
+
+class StaffCatListResponseModel (
+    @SerializedName("status")var status:Int,
+    @SerializedName("responseArray")var responseArray:StaffCatResponseArrayModel
+)
\ No newline at end of file
